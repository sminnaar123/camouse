
display.elf:     file format elf32-littlenios2
display.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00200224

Program Header:
    LOAD off    0x00001000 vaddr 0x00200000 paddr 0x00200000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00200020 paddr 0x00200020 align 2**12
         filesz 0x00010300 memsz 0x00010300 flags r-x
    LOAD off    0x00011320 vaddr 0x00210320 paddr 0x00211ef8 align 2**12
         filesz 0x00001bd8 memsz 0x00001bd8 flags rw-
    LOAD off    0x00000ad0 vaddr 0x00213ad0 paddr 0x00213ad0 align 2**12
         filesz 0x00000000 memsz 0x0000015c flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00200000  00200000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000204  00200020  00200020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         0000fa64  00200224  00200224  00001224  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000698  0020fc88  0020fc88  00010c88  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001bd8  00210320  00211ef8  00011320  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          0000015c  00213ad0  00213ad0  00013ad0  2**2
                  ALLOC, SMALL_DATA
  6 .onchip_memory2_0 00000000  00213c2c  00213c2c  00012ef8  2**0
                  CONTENTS
  7 .comment      0000002d  00000000  00000000  00012ef8  2**0
                  CONTENTS, READONLY
  8 .debug_aranges 000010a0  00000000  00000000  00012f28  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_info   0002e510  00000000  00000000  00013fc8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_abbrev 0000b665  00000000  00000000  000424d8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_line   00016e4c  00000000  00000000  0004db3d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_frame  00002454  00000000  00000000  0006498c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_str    00003f20  00000000  00000000  00066de0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_loc    0001e152  00000000  00000000  0006ad00  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_alt_sim_info 00000040  00000000  00000000  00088e54  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 00002470  00000000  00000000  00088e98  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .thread_model 00000003  00000000  00000000  0008e5f2  2**0
                  CONTENTS, READONLY
 18 .cpu          0000000c  00000000  00000000  0008e5f5  2**0
                  CONTENTS, READONLY
 19 .qsys         00000001  00000000  00000000  0008e601  2**0
                  CONTENTS, READONLY
 20 .simulation_enabled 00000001  00000000  00000000  0008e602  2**0
                  CONTENTS, READONLY
 21 .stderr_dev   0000000b  00000000  00000000  0008e603  2**0
                  CONTENTS, READONLY
 22 .stdin_dev    0000000b  00000000  00000000  0008e60e  2**0
                  CONTENTS, READONLY
 23 .stdout_dev   0000000b  00000000  00000000  0008e619  2**0
                  CONTENTS, READONLY
 24 .sopc_system_name 00000007  00000000  00000000  0008e624  2**0
                  CONTENTS, READONLY
 25 .quartus_project_dir 00000013  00000000  00000000  0008e62b  2**0
                  CONTENTS, READONLY
 26 .jdi          0000672f  00000000  00000000  0008e63e  2**0
                  CONTENTS, READONLY
 27 .sopcinfo     00032681  00000000  00000000  00094d6d  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00200000 l    d  .entry	00000000 .entry
00200020 l    d  .exceptions	00000000 .exceptions
00200224 l    d  .text	00000000 .text
0020fc88 l    d  .rodata	00000000 .rodata
00210320 l    d  .rwdata	00000000 .rwdata
00213ad0 l    d  .bss	00000000 .bss
00213c2c l    d  .onchip_memory2_0	00000000 .onchip_memory2_0
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 d:/Vcs/camouse/fpga/software/display_bsp//obj/HAL/src/crt0.o
0020025c l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 hello_world.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
002024cc l     F .text	000000c0 __sbprintf
0020fd20 l     O .rodata	00000010 blanks.1
0020fd10 l     O .rodata	00000010 zeroes.0
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
002026f0 l     F .text	00000220 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
00204364 l     F .text	00000008 __fp_lock
00204378 l     F .text	00000008 __fp_unlock
00204380 l     F .text	00000168 __sinit.part.0
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
00210320 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 localeconv.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
0020fdd4 l     O .rodata	0000000c p05.0
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 vfprintf.c
002077f4 l     F .text	000000f4 __sprint_r.part.0
00208b7c l     F .text	000000c0 __sbprintf
0020ff08 l     O .rodata	00000010 blanks.1
0020fef8 l     O .rodata	00000010 zeroes.0
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 assert.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 errno.c
00000000 l    df *ABS*	00000000 fclose.c
00208ed0 l     F .text	000000c0 _fclose_r.part.0
00000000 l    df *ABS*	00000000 fiprintf.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 locale.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 mbtowc_r.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 vfiprintfr_1.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 abort.c
00000000 l    df *ABS*	00000000 ctype_.c
00000000 l    df *ABS*	00000000 signal.c
00000000 l    df *ABS*	00000000 signalr.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 lib2-mul.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 unorddf2.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 alt_close.c
0020d37c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
0020d494 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_exit.c
00000000 l    df *ABS*	00000000 alt_fstat.c
0020d4f8 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_getpid.c
00000000 l    df *ABS*	00000000 alt_isatty.c
0020d610 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_kill.c
0020d6fc l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
0020d864 l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
0020d950 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
0020db30 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
00211ee8 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_usleep.c
00000000 l    df *ABS*	00000000 alt_write.c
0020ddcc l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
0020df0c l     F .text	00000034 alt_dev_reg
00210e60 l     O .rwdata	00001060 jtag_uart_0
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
0020e1e8 l     F .text	0000020c altera_avalon_jtag_uart_irq
0020e3f4 l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_busy_sleep.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
0020ed10 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
0020f174 l     F .text	000000d4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
0020f2c4 l     F .text	0000003c alt_get_errno
0020f300 l     F .text	000000dc alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00213b00 g     O .bss	00000004 alt_instruction_exception_handler
00206fd4 g     F .text	00000070 _mprec_log10
002070c0 g     F .text	00000060 __any_on
00209328 g     F .text	00000058 _isatty_r
0020fde0 g     O .rodata	00000028 __mprec_tinytens
0020da6c g     F .text	0000007c alt_main
00200324 g     F .text	000000cc _puts_r
00213b2c g     O .bss	00000100 alt_irq
00209474 g     F .text	00000064 _lseek_r
00211ef8 g       *ABS*	00000000 __flash_rwdata_start
0020be04 g     F .text	00000080 .hidden __eqdf2
00213c2c g       *ABS*	00000000 __alt_heap_start
00209ddc g     F .text	00000060 _kill_r
002002ec g     F .text	00000038 printf
002097a8 g     F .text	0000006c _wcrtomb_r
0020994c g     F .text	00000098 _signal_r
00207790 g     F .text	0000005c __sseek
002046c8 g     F .text	00000010 __sinit
00209648 g     F .text	00000148 __swbuf_r
00209380 g     F .text	00000074 _setlocale_r
002044e8 g     F .text	00000078 __sfmoreglue
0020db0c g     F .text	00000024 __malloc_unlock
00205d14 g     F .text	0000012c memmove
002046b4 g     F .text	00000014 _cleanup
00205f30 g     F .text	000000a4 _Balloc
0020be84 g     F .text	000000e8 .hidden __gtdf2
0020f70c g     F .text	00000024 altera_nios2_gen2_irq_init
00208ec4 g     F .text	0000000c __errno
00200000 g     F .entry	0000000c __reset
002050fc g     F .text	00000008 __localeconv_l
00200020 g       *ABS*	00000000 __flash_exceptions_start
002092c8 g     F .text	00000060 _fstat_r
00213adc g     O .bss	00000004 errno
00207708 g     F .text	00000008 __seofread
00213ae8 g     O .bss	00000004 alt_argv
00219ec0 g       *ABS*	00000000 _gp
0020dd9c g     F .text	00000030 usleep
0020d5f0 g     F .text	00000020 getpid
00210ce0 g     O .rwdata	00000180 alt_fd_list
0020f730 g     F .text	00000090 alt_find_dev
00205c14 g     F .text	00000100 memcpy
0020436c g     F .text	0000000c _cleanup_r
0020d1e0 g     F .text	000000b8 .hidden __floatsidf
0020f248 g     F .text	0000007c alt_io_redirect
0020bf6c g     F .text	000000e8 .hidden __ltdf2
0020fc88 g       *ABS*	00000000 __DTOR_END__
002003f0 g     F .text	00000010 puts
0020f980 g     F .text	00000098 alt_exception_cause_generated_bad_addr
00206f30 g     F .text	000000a4 __ratio
00208b60 g     F .text	0000001c __vfiprintf_internal
0020e5f0 g     F .text	00000220 altera_avalon_jtag_uart_read
002002bc g     F .text	00000030 _printf_r
00200000 g       *ABS*	00000000 __alt_mem_onchip_memory2_0
0020ab18 g     F .text	00000064 .hidden __udivsi3
0020d64c g     F .text	000000b0 isatty
002099e4 g     F .text	000000c4 _raise_r
00208cf8 g     F .text	00000064 __assert_func
0020fe30 g     O .rodata	000000c8 __mprec_tens
00213ad8 g     O .bss	00000004 __malloc_top_pad
00209e3c g     F .text	00000004 _getpid_r
00205104 g     F .text	0000000c _localeconv_r
002063a0 g     F .text	000000b0 __i2b
00204b28 g     F .text	00000494 __sfvwrite_r
00209aa8 g     F .text	000000bc __sigtramp_r
0020765c g     F .text	00000058 _sbrk_r
00209528 g     F .text	00000064 _read_r
00211ee0 g     O .rwdata	00000004 alt_max_fd
00208f90 g     F .text	00000070 _fclose_r
002042e0 g     F .text	00000084 fflush
00213ad4 g     O .bss	00000004 __malloc_max_sbrked_mem
0020ac00 g     F .text	000008f0 .hidden __adddf3
00206cc4 g     F .text	00000108 __b2d
0020a460 g     F .text	000005c4 .hidden __umoddi3
0020d98c g     F .text	000000e0 lseek
00211ec0 g     O .rwdata	00000004 _global_impure_ptr
00207120 g     F .text	0000053c _realloc_r
00213c2c g       *ABS*	00000000 __bss_end
0020f08c g     F .text	000000e8 alt_iic_isr_register
0020f5e0 g     F .text	0000012c alt_tick
00209e40 g     F .text	00000620 .hidden __udivdi3
0020922c g     F .text	00000024 _fputwc_r
0020fe08 g     O .rodata	00000028 __mprec_bigtens
00206154 g     F .text	00000138 __s2b
002098d8 g     F .text	00000018 abort
0020d298 g     F .text	00000090 .hidden __floatunsidf
002069e4 g     F .text	00000058 __mcmp
002046e8 g     F .text	00000014 __fp_lock_all
0020f040 g     F .text	0000004c alt_ic_irq_enabled
0020f53c g     F .text	000000a4 alt_alarm_stop
00213af0 g     O .bss	00000004 alt_irq_active
002000fc g     F .exceptions	000000c8 alt_irq_handler
00210cb8 g     O .rwdata	00000028 alt_dev_null
0020ecf0 g     F .text	00000020 alt_dcache_flush_all
0020628c g     F .text	00000064 __hi0bits
0020d160 g     F .text	00000080 .hidden __fixdfsi
00211ef8 g       *ABS*	00000000 __ram_rwdata_end
00211ed8 g     O .rwdata	00000008 alt_dev_list
0020de08 g     F .text	00000104 write
00210320 g       *ABS*	00000000 __ram_rodata_end
0020d534 g     F .text	000000bc fstat
0020d738 g     F .text	0000012c kill
0020bf6c g     F .text	000000e8 .hidden __ledf2
00206714 g     F .text	00000148 __pow5mult
00207900 g     F .text	00001260 ___vfiprintf_internal_r
0020ab7c g     F .text	0000005c .hidden __umodsi3
00213c2c g       *ABS*	00000000 end
0020e128 g     F .text	000000c0 altera_avalon_jtag_uart_init
002001c4 g     F .exceptions	00000060 alt_instruction_exception_entry
0020fc88 g       *ABS*	00000000 __CTOR_LIST__
00230da0 g       *ABS*	00000000 __alt_stack_pointer
0020d328 g     F .text	00000054 .hidden __clzsi2
0020e810 g     F .text	00000228 altera_avalon_jtag_uart_write
002046d8 g     F .text	00000004 __sfp_lock_acquire
00205b44 g     F .text	000000d0 memchr
00200498 g     F .text	00002018 ___vfprintf_internal_r
0020482c g     F .text	000002fc _free_r
0021006c g     O .rodata	00000180 _ctype_b
002093f4 g     F .text	0000000c __locale_mb_cur_max
0020fb68 g     F .text	00000120 __call_exitprocs
00211ec8 g     O .rwdata	00000004 __malloc_sbrk_base
00200224 g     F .text	0000003c _start
00213af4 g     O .bss	00000004 _alt_tick_rate
0020685c g     F .text	00000188 __lshift
00213af8 g     O .bss	00000008 _alt_nticks
00209c20 g     F .text	000000a0 signal
0020db6c g     F .text	00000108 read
0020df7c g     F .text	00000048 alt_sys_init
0020fad8 g     F .text	00000090 __register_exitproc
00206450 g     F .text	000002c4 __multiply
0020e494 g     F .text	00000068 altera_avalon_jtag_uart_close
0020abd8 g     F .text	00000028 .hidden __mulsi3
00210320 g       *ABS*	00000000 __ram_rwdata_start
0020fc88 g       *ABS*	00000000 __ram_rodata_start
00213b04 g     O .bss	00000028 __malloc_current_mallinfo
00206dcc g     F .text	00000164 __d2b
0020dfc4 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
0020f8c8 g     F .text	000000b8 alt_get_fd
0020eb98 g     F .text	00000158 alt_busy_sleep
00208ca0 g     F .text	00000058 _close_r
0020fa60 g     F .text	00000078 memcmp
0020e084 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
00213c2c g       *ABS*	00000000 __alt_stack_base
0020e0d4 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
0020258c g     F .text	00000164 __swsetup_r
0020b4f0 g     F .text	00000914 .hidden __divdf3
00204560 g     F .text	00000154 __sfp
00207044 g     F .text	0000007c __copybits
00210744 g     O .rwdata	00000408 __malloc_av_
002046e4 g     F .text	00000004 __sinit_lock_release
0020c054 g     F .text	000007ac .hidden __muldf3
002076b4 g     F .text	00000054 __sread
0020f7c0 g     F .text	00000108 alt_find_file
0020ed4c g     F .text	000000a8 alt_dev_llist_insert
0020dae8 g     F .text	00000024 __malloc_lock
0020dce4 g     F .text	000000b8 sbrk
00204280 g     F .text	00000060 _fflush_r
00208d70 g     F .text	00000154 _calloc_r
00213ad0 g       *ABS*	00000000 __bss_start
00205e40 g     F .text	000000f0 memset
00200260 g     F .text	0000005c main
00213aec g     O .bss	00000004 alt_envp
00213ad0 g     O .bss	00000004 __malloc_max_total_mem
0020e024 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
00209790 g     F .text	00000018 __swbuf
002077ec g     F .text	00000008 __sclose
00230da0 g       *ABS*	00000000 __alt_heap_limit
00209000 g     F .text	00000070 fclose
00202910 g     F .text	00001748 _dtoa_r
00205364 g     F .text	000007e0 _malloc_r
002098a8 g     F .text	00000030 __ascii_wctomb
00211ee4 g     O .rwdata	00000004 alt_errno
00209070 g     F .text	00000020 _fiprintf_r
00209cc0 g     F .text	00000060 _init_signal
00204fbc g     F .text	00000098 _fwalk
002094d8 g     F .text	0000000c _mbtowc_r
0020aa24 g     F .text	00000080 .hidden __divsi3
00204710 g     F .text	0000011c _malloc_trim_r
0020fc88 g       *ABS*	00000000 __CTOR_END__
0020958c g     F .text	000000b8 strcmp
0020fc88 g       *ABS*	00000000 __flash_rodata_start
0020fc88 g       *ABS*	00000000 __DTOR_LIST__
0020be04 g     F .text	00000080 .hidden __nedf2
0020df40 g     F .text	0000003c alt_irq_init
0020dc74 g     F .text	00000070 alt_release_fd
002101ec g     O .rodata	00000100 .hidden __clz_tab
00213ae0 g     O .bss	00000004 _PathLocale
0020fa18 g     F .text	00000014 atexit
00208c3c g     F .text	00000064 _write_r
00209400 g     F .text	00000074 setlocale
00211ec4 g     O .rwdata	00000004 _impure_ptr
00213ae4 g     O .bss	00000004 alt_argc
00204058 g     F .text	00000228 __sflush_r
0020ee58 g     F .text	00000064 _do_dtors
00200020 g       .exceptions	00000000 alt_irq_entry
002094e4 g     F .text	00000044 __ascii_mbtowc
00206c68 g     F .text	0000005c __ulp
002046fc g     F .text	00000014 __fp_unlock_all
00211ed0 g     O .rwdata	00000008 alt_fs_list
00200020 g       *ABS*	00000000 __ram_exceptions_start
00205110 g     F .text	0000000c localeconv
002052cc g     F .text	00000098 __swhatbuf_r
0020eedc g     F .text	00000050 alt_ic_isr_register
00211ef8 g       *ABS*	00000000 _edata
00213c2c g       *ABS*	00000000 _end
002090c8 g     F .text	00000164 __fputwc
00200224 g       *ABS*	00000000 __ram_exceptions_end
0020e4fc g     F .text	000000f4 altera_avalon_jtag_uart_ioctl
0020efb4 g     F .text	0000008c alt_ic_irq_disable
00207710 g     F .text	00000080 __swrite
00211ecc g     O .rwdata	00000004 __malloc_trim_threshold
0020fa2c g     F .text	00000034 exit
00209090 g     F .text	00000038 fiprintf
00209644 g     F .text	00000004 _vfiprintf_r
00205054 g     F .text	000000a8 _fwalk_reent
00206a3c g     F .text	0000022c __mdiff
0020aaa4 g     F .text	00000074 .hidden __modsi3
00230da0 g       *ABS*	00000000 __alt_data_end
00200020 g     F .exceptions	00000000 alt_exception
002046dc g     F .text	00000004 __sfp_lock_release
0020ff68 g     O .rodata	00000101 _ctype_
0020d10c g     F .text	00000054 .hidden __unorddf2
0020d4c0 g     F .text	00000038 _exit
0020ea38 g     F .text	00000160 alt_alarm_start
0020511c g     F .text	000001b0 __smakebuf_r
00200400 g     F .text	00000098 strlen
002098f0 g     F .text	0000005c _init_signal_r
0020f3dc g     F .text	00000160 open
0020be84 g     F .text	000000e8 .hidden __gedf2
00208d5c g     F .text	00000014 __assert
002078e8 g     F .text	00000018 __sprint_r
0020eebc g     F .text	00000020 alt_icache_flush_all
00211eec g     O .rwdata	00000004 alt_priority_mask
0020ef2c g     F .text	00000088 alt_ic_irq_enable
002024b0 g     F .text	0000001c __vfprintf_internal
0020989c g     F .text	0000000c _wctomb_r
0020c800 g     F .text	0000090c .hidden __subdf3
002062f0 g     F .text	000000b0 __lo0bits
00211ef0 g     O .rwdata	00000008 alt_alarm_list
0020edf4 g     F .text	00000064 _do_ctors
00209d20 g     F .text	000000bc __sigtramp
00209814 g     F .text	00000088 wcrtomb
0020d3b8 g     F .text	000000dc close
00210b4c g     O .rwdata	0000016c __global_locale
0020d8cc g     F .text	00000084 alt_load
00209250 g     F .text	00000078 fputwc
00209b64 g     F .text	000000bc raise
002046e0 g     F .text	00000004 __sinit_lock_acquire
00205ff8 g     F .text	0000015c __multadd
00205fd4 g     F .text	00000024 _Bfree



Disassembly of section .entry:

00200000 <__reset>:
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
  200000:	00400834 	movhi	at,32
    ori r1, r1, %lo(_start)
  200004:	08408914 	ori	at,at,548
    jmp r1
  200008:	0800683a 	jmp	at
	...

Disassembly of section .exceptions:

00200020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
  200020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
  200024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
  200028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
  20002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
  200030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
  200034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
  200038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
  20003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
  200040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
  200044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
  200048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
  20004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
  200050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
  200054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
  200058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
  20005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
  200060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
  200064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
  200068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
  20006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
  200070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
  200074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
  200078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
  20007c:	10000326 	beq	r2,zero,20008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
  200080:	20000226 	beq	r4,zero,20008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
  200084:	02000fc0 	call	2000fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
  200088:	00000706 	br	2000a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
  20008c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
  200090:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
  200094:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
  200098:	02001c40 	call	2001c4 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
  20009c:	1000021e 	bne	r2,zero,2000a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
  2000a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
  2000a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
  2000a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
  2000ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
  2000b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
  2000b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
  2000b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
  2000bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
  2000c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
  2000c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
  2000c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
  2000cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
  2000d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
  2000d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
  2000d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
  2000dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
  2000e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
  2000e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
  2000e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
  2000ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
  2000f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
  2000f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
  2000f8:	ef80083a 	eret

002000fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
  2000fc:	defff904 	addi	sp,sp,-28
  200100:	dfc00615 	stw	ra,24(sp)
  200104:	df000515 	stw	fp,20(sp)
  200108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
  20010c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
  200110:	0005313a 	rdctl	r2,ipending
  200114:	e0bffc15 	stw	r2,-16(fp)

  return active;
  200118:	e0bffc17 	ldw	r2,-16(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
  20011c:	e0bfff15 	stw	r2,-4(fp)

  do
  {
    i = 0;
  200120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
  200124:	00800044 	movi	r2,1
  200128:	e0bffe15 	stw	r2,-8(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
  20012c:	e0ffff17 	ldw	r3,-4(fp)
  200130:	e0bffe17 	ldw	r2,-8(fp)
  200134:	1884703a 	and	r2,r3,r2
  200138:	10001126 	beq	r2,zero,200180 <alt_irq_handler+0x84>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
  20013c:	e0bffd17 	ldw	r2,-12(fp)
  200140:	100690fa 	slli	r3,r2,3
  200144:	00800874 	movhi	r2,33
  200148:	1885883a 	add	r2,r3,r2
  20014c:	10cecb17 	ldw	r3,15148(r2)
  200150:	e0bffd17 	ldw	r2,-12(fp)
  200154:	100890fa 	slli	r4,r2,3
  200158:	00800874 	movhi	r2,33
  20015c:	2085883a 	add	r2,r4,r2
  200160:	108ecc17 	ldw	r2,15152(r2)
  200164:	1009883a 	mov	r4,r2
  200168:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
  20016c:	0001883a 	nop
  NIOS2_READ_IPENDING (active);
  200170:	0005313a 	rdctl	r2,ipending
  200174:	e0bffb15 	stw	r2,-20(fp)
  return active;
  200178:	e0bffb17 	ldw	r2,-20(fp)
  20017c:	00000706 	br	20019c <alt_irq_handler+0xa0>
      }
      mask <<= 1;
  200180:	e0bffe17 	ldw	r2,-8(fp)
  200184:	1085883a 	add	r2,r2,r2
  200188:	e0bffe15 	stw	r2,-8(fp)
      i++;
  20018c:	e0bffd17 	ldw	r2,-12(fp)
  200190:	10800044 	addi	r2,r2,1
  200194:	e0bffd15 	stw	r2,-12(fp)
      if (active & mask)
  200198:	003fe406 	br	20012c <alt_irq_handler+0x30>

    } while (1);

    active = alt_irq_pending ();
  20019c:	e0bfff15 	stw	r2,-4(fp)
    
  } while (active);
  2001a0:	e0bfff17 	ldw	r2,-4(fp)
  2001a4:	103fde1e 	bne	r2,zero,200120 <alt_irq_handler+0x24>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
  2001a8:	0001883a 	nop
}
  2001ac:	0001883a 	nop
  2001b0:	e037883a 	mov	sp,fp
  2001b4:	dfc00117 	ldw	ra,4(sp)
  2001b8:	df000017 	ldw	fp,0(sp)
  2001bc:	dec00204 	addi	sp,sp,8
  2001c0:	f800283a 	ret

002001c4 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
  2001c4:	defffb04 	addi	sp,sp,-20
  2001c8:	dfc00415 	stw	ra,16(sp)
  2001cc:	df000315 	stw	fp,12(sp)
  2001d0:	df000304 	addi	fp,sp,12
  2001d4:	e13ffd15 	stw	r4,-12(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
  2001d8:	00bfffc4 	movi	r2,-1
  2001dc:	e0bfff15 	stw	r2,-4(fp)
  badaddr = 0;
  2001e0:	e03ffe15 	stw	zero,-8(fp)
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
  2001e4:	d0a71017 	ldw	r2,-25536(gp)
  2001e8:	10000726 	beq	r2,zero,200208 <alt_instruction_exception_entry+0x44>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
  2001ec:	d0a71017 	ldw	r2,-25536(gp)
  2001f0:	e0ffff17 	ldw	r3,-4(fp)
  2001f4:	e1bffe17 	ldw	r6,-8(fp)
  2001f8:	e17ffd17 	ldw	r5,-12(fp)
  2001fc:	1809883a 	mov	r4,r3
  200200:	103ee83a 	callr	r2
  200204:	00000206 	br	200210 <alt_instruction_exception_entry+0x4c>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
  200208:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
  20020c:	0005883a 	mov	r2,zero
}
  200210:	e037883a 	mov	sp,fp
  200214:	dfc00117 	ldw	ra,4(sp)
  200218:	df000017 	ldw	fp,0(sp)
  20021c:	dec00204 	addi	sp,sp,8
  200220:	f800283a 	ret

Disassembly of section .text:

00200224 <_start>:

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
  200224:	06c008f4 	movhi	sp,35
    ori sp, sp, %lo(__alt_stack_pointer)
  200228:	dec36814 	ori	sp,sp,3488
    movhi gp, %hi(_gp)
  20022c:	06800874 	movhi	gp,33
    ori gp, gp, %lo(_gp)
  200230:	d6a7b014 	ori	gp,gp,40640
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
  200234:	00800874 	movhi	r2,33
    ori r2, r2, %lo(__bss_start)
  200238:	108eb414 	ori	r2,r2,15056

    movhi r3, %hi(__bss_end)
  20023c:	00c00874 	movhi	r3,33
    ori r3, r3, %lo(__bss_end)
  200240:	18cf0b14 	ori	r3,r3,15404

    beq r2, r3, 1f
  200244:	10c00326 	beq	r2,r3,200254 <_start+0x30>

0:
    stw zero, (r2)
  200248:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
  20024c:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
  200250:	10fffd36 	bltu	r2,r3,200248 <_start+0x24>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
  200254:	020d8cc0 	call	20d8cc <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
  200258:	020da6c0 	call	20da6c <alt_main>

0020025c <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
  20025c:	003fff06 	br	20025c <alt_after_alt_main>

00200260 <main>:
#include "system.h"

#define delay 1000

int main()
{
  200260:	defffd04 	addi	sp,sp,-12
  200264:	dfc00215 	stw	ra,8(sp)
  200268:	df000115 	stw	fp,4(sp)
  20026c:	df000104 	addi	fp,sp,4
	while (1)
	{
		volatile alt_u16 click = IORD_16DIRECT(SRAM_0_BASE, 0);
  200270:	0080002b 	ldhuio	r2,0(zero)
  200274:	10bfffcc 	andi	r2,r2,65535
  200278:	e0bfff8d 	sth	r2,-2(fp)

		if (click > 40000)
  20027c:	e0bfff8b 	ldhu	r2,-2(fp)
  200280:	10bfffcc 	andi	r2,r2,65535
  200284:	10a71070 	cmpltui	r2,r2,40001
  200288:	1000091e 	bne	r2,zero,2002b0 <main+0x50>
		{
			printf(" Click! (value: %d)\n\n", click);
  20028c:	e0bfff8b 	ldhu	r2,-2(fp)
  200290:	10bfffcc 	andi	r2,r2,65535
  200294:	100b883a 	mov	r5,r2
  200298:	01000874 	movhi	r4,33
  20029c:	213f2204 	addi	r4,r4,-888
  2002a0:	02002ec0 	call	2002ec <printf>
			printf("------------------------------------\n\n");
  2002a4:	01000874 	movhi	r4,33
  2002a8:	213f2804 	addi	r4,r4,-864
  2002ac:	02003f00 	call	2003f0 <puts>
		}

		usleep(delay);
  2002b0:	0100fa04 	movi	r4,1000
  2002b4:	020dd9c0 	call	20dd9c <usleep>
	{
  2002b8:	003fed06 	br	200270 <main+0x10>

002002bc <_printf_r>:
  2002bc:	defffd04 	addi	sp,sp,-12
  2002c0:	2805883a 	mov	r2,r5
  2002c4:	dfc00015 	stw	ra,0(sp)
  2002c8:	d9800115 	stw	r6,4(sp)
  2002cc:	d9c00215 	stw	r7,8(sp)
  2002d0:	21400217 	ldw	r5,8(r4)
  2002d4:	d9c00104 	addi	r7,sp,4
  2002d8:	100d883a 	mov	r6,r2
  2002dc:	02004980 	call	200498 <___vfprintf_internal_r>
  2002e0:	dfc00017 	ldw	ra,0(sp)
  2002e4:	dec00304 	addi	sp,sp,12
  2002e8:	f800283a 	ret

002002ec <printf>:
  2002ec:	defffc04 	addi	sp,sp,-16
  2002f0:	dfc00015 	stw	ra,0(sp)
  2002f4:	d9400115 	stw	r5,4(sp)
  2002f8:	d9800215 	stw	r6,8(sp)
  2002fc:	d9c00315 	stw	r7,12(sp)
  200300:	00800874 	movhi	r2,33
  200304:	1087b117 	ldw	r2,7876(r2)
  200308:	200b883a 	mov	r5,r4
  20030c:	d9800104 	addi	r6,sp,4
  200310:	11000217 	ldw	r4,8(r2)
  200314:	02024b00 	call	2024b0 <__vfprintf_internal>
  200318:	dfc00017 	ldw	ra,0(sp)
  20031c:	dec00404 	addi	sp,sp,16
  200320:	f800283a 	ret

00200324 <_puts_r>:
  200324:	defff504 	addi	sp,sp,-44
  200328:	dc000815 	stw	r16,32(sp)
  20032c:	2021883a 	mov	r16,r4
  200330:	2809883a 	mov	r4,r5
  200334:	dc400915 	stw	r17,36(sp)
  200338:	dfc00a15 	stw	ra,40(sp)
  20033c:	2823883a 	mov	r17,r5
  200340:	02004000 	call	200400 <strlen>
  200344:	11000044 	addi	r4,r2,1
  200348:	d8800515 	stw	r2,20(sp)
  20034c:	00800044 	movi	r2,1
  200350:	00c00874 	movhi	r3,33
  200354:	d8800715 	stw	r2,28(sp)
  200358:	d8800404 	addi	r2,sp,16
  20035c:	18ff3204 	addi	r3,r3,-824
  200360:	d8800115 	stw	r2,4(sp)
  200364:	00800084 	movi	r2,2
  200368:	dc400415 	stw	r17,16(sp)
  20036c:	d8c00615 	stw	r3,24(sp)
  200370:	d9000315 	stw	r4,12(sp)
  200374:	d8800215 	stw	r2,8(sp)
  200378:	81400217 	ldw	r5,8(r16)
  20037c:	80000226 	beq	r16,zero,200388 <_puts_r+0x64>
  200380:	80800e17 	ldw	r2,56(r16)
  200384:	10001326 	beq	r2,zero,2003d4 <_puts_r+0xb0>
  200388:	2880030b 	ldhu	r2,12(r5)
  20038c:	10c8000c 	andi	r3,r2,8192
  200390:	1800061e 	bne	r3,zero,2003ac <_puts_r+0x88>
  200394:	28c01917 	ldw	r3,100(r5)
  200398:	0137ffc4 	movi	r4,-8193
  20039c:	10880014 	ori	r2,r2,8192
  2003a0:	1906703a 	and	r3,r3,r4
  2003a4:	2880030d 	sth	r2,12(r5)
  2003a8:	28c01915 	stw	r3,100(r5)
  2003ac:	d9800104 	addi	r6,sp,4
  2003b0:	8009883a 	mov	r4,r16
  2003b4:	0204b280 	call	204b28 <__sfvwrite_r>
  2003b8:	10000b1e 	bne	r2,zero,2003e8 <_puts_r+0xc4>
  2003bc:	00800284 	movi	r2,10
  2003c0:	dfc00a17 	ldw	ra,40(sp)
  2003c4:	dc400917 	ldw	r17,36(sp)
  2003c8:	dc000817 	ldw	r16,32(sp)
  2003cc:	dec00b04 	addi	sp,sp,44
  2003d0:	f800283a 	ret
  2003d4:	8009883a 	mov	r4,r16
  2003d8:	d9400015 	stw	r5,0(sp)
  2003dc:	02046c80 	call	2046c8 <__sinit>
  2003e0:	d9400017 	ldw	r5,0(sp)
  2003e4:	003fe806 	br	200388 <_puts_r+0x64>
  2003e8:	00bfffc4 	movi	r2,-1
  2003ec:	003ff406 	br	2003c0 <_puts_r+0x9c>

002003f0 <puts>:
  2003f0:	00800874 	movhi	r2,33
  2003f4:	200b883a 	mov	r5,r4
  2003f8:	1107b117 	ldw	r4,7876(r2)
  2003fc:	02003241 	jmpi	200324 <_puts_r>

00200400 <strlen>:
  200400:	208000cc 	andi	r2,r4,3
  200404:	10000926 	beq	r2,zero,20042c <strlen+0x2c>
  200408:	2005883a 	mov	r2,r4
  20040c:	00000306 	br	20041c <strlen+0x1c>
  200410:	10800044 	addi	r2,r2,1
  200414:	10c000cc 	andi	r3,r2,3
  200418:	18000526 	beq	r3,zero,200430 <strlen+0x30>
  20041c:	10c00007 	ldb	r3,0(r2)
  200420:	183ffb1e 	bne	r3,zero,200410 <strlen+0x10>
  200424:	1105c83a 	sub	r2,r2,r4
  200428:	f800283a 	ret
  20042c:	2005883a 	mov	r2,r4
  200430:	11400017 	ldw	r5,0(r2)
  200434:	01ffbff4 	movhi	r7,65279
  200438:	39ffbfc4 	addi	r7,r7,-257
  20043c:	29c7883a 	add	r3,r5,r7
  200440:	01a02074 	movhi	r6,32897
  200444:	014a303a 	nor	r5,zero,r5
  200448:	1946703a 	and	r3,r3,r5
  20044c:	31a02004 	addi	r6,r6,-32640
  200450:	1986703a 	and	r3,r3,r6
  200454:	1800071e 	bne	r3,zero,200474 <strlen+0x74>
  200458:	11400117 	ldw	r5,4(r2)
  20045c:	10800104 	addi	r2,r2,4
  200460:	29c7883a 	add	r3,r5,r7
  200464:	014a303a 	nor	r5,zero,r5
  200468:	1946703a 	and	r3,r3,r5
  20046c:	1986703a 	and	r3,r3,r6
  200470:	183ff926 	beq	r3,zero,200458 <strlen+0x58>
  200474:	10c00007 	ldb	r3,0(r2)
  200478:	183fea26 	beq	r3,zero,200424 <strlen+0x24>
  20047c:	10c00047 	ldb	r3,1(r2)
  200480:	10800044 	addi	r2,r2,1
  200484:	183fe726 	beq	r3,zero,200424 <strlen+0x24>
  200488:	10c00047 	ldb	r3,1(r2)
  20048c:	10800044 	addi	r2,r2,1
  200490:	183ffa1e 	bne	r3,zero,20047c <strlen+0x7c>
  200494:	003fe306 	br	200424 <strlen+0x24>

00200498 <___vfprintf_internal_r>:
  200498:	deffbf04 	addi	sp,sp,-260
  20049c:	dfc04015 	stw	ra,256(sp)
  2004a0:	dd803d15 	stw	r22,244(sp)
  2004a4:	dcc03a15 	stw	r19,232(sp)
  2004a8:	dc803915 	stw	r18,228(sp)
  2004ac:	2027883a 	mov	r19,r4
  2004b0:	2825883a 	mov	r18,r5
  2004b4:	302d883a 	mov	r22,r6
  2004b8:	d9c00615 	stw	r7,24(sp)
  2004bc:	df003f15 	stw	fp,252(sp)
  2004c0:	ddc03e15 	stw	r23,248(sp)
  2004c4:	dd403c15 	stw	r21,240(sp)
  2004c8:	dd003b15 	stw	r20,236(sp)
  2004cc:	dc403815 	stw	r17,224(sp)
  2004d0:	dc003715 	stw	r16,220(sp)
  2004d4:	02051040 	call	205104 <_localeconv_r>
  2004d8:	10800017 	ldw	r2,0(r2)
  2004dc:	1009883a 	mov	r4,r2
  2004e0:	d8800d15 	stw	r2,52(sp)
  2004e4:	02004000 	call	200400 <strlen>
  2004e8:	d8800b15 	stw	r2,44(sp)
  2004ec:	98000226 	beq	r19,zero,2004f8 <___vfprintf_internal_r+0x60>
  2004f0:	98800e17 	ldw	r2,56(r19)
  2004f4:	1001e026 	beq	r2,zero,200c78 <___vfprintf_internal_r+0x7e0>
  2004f8:	9080030b 	ldhu	r2,12(r18)
  2004fc:	10c8000c 	andi	r3,r2,8192
  200500:	1800061e 	bne	r3,zero,20051c <___vfprintf_internal_r+0x84>
  200504:	90c01917 	ldw	r3,100(r18)
  200508:	0137ffc4 	movi	r4,-8193
  20050c:	10880014 	ori	r2,r2,8192
  200510:	1906703a 	and	r3,r3,r4
  200514:	9080030d 	sth	r2,12(r18)
  200518:	90c01915 	stw	r3,100(r18)
  20051c:	10c0020c 	andi	r3,r2,8
  200520:	1800fc26 	beq	r3,zero,200914 <___vfprintf_internal_r+0x47c>
  200524:	90c00417 	ldw	r3,16(r18)
  200528:	1800fa26 	beq	r3,zero,200914 <___vfprintf_internal_r+0x47c>
  20052c:	1080068c 	andi	r2,r2,26
  200530:	10800298 	cmpnei	r2,r2,10
  200534:	1000ff26 	beq	r2,zero,200934 <___vfprintf_internal_r+0x49c>
  200538:	d8802704 	addi	r2,sp,156
  20053c:	b02f883a 	mov	r23,r22
  200540:	d8801a15 	stw	r2,104(sp)
  200544:	d8001c15 	stw	zero,112(sp)
  200548:	d8001b15 	stw	zero,108(sp)
  20054c:	d8000815 	stw	zero,32(sp)
  200550:	d8000915 	stw	zero,36(sp)
  200554:	d8000a15 	stw	zero,40(sp)
  200558:	d8000c15 	stw	zero,48(sp)
  20055c:	d8001015 	stw	zero,64(sp)
  200560:	d8000515 	stw	zero,20(sp)
  200564:	102d883a 	mov	r22,r2
  200568:	b8800007 	ldb	r2,0(r23)
  20056c:	1000d726 	beq	r2,zero,2008cc <___vfprintf_internal_r+0x434>
  200570:	b821883a 	mov	r16,r23
  200574:	00000306 	br	200584 <___vfprintf_internal_r+0xec>
  200578:	80800047 	ldb	r2,1(r16)
  20057c:	84000044 	addi	r16,r16,1
  200580:	10012226 	beq	r2,zero,200a0c <___vfprintf_internal_r+0x574>
  200584:	10800958 	cmpnei	r2,r2,37
  200588:	103ffb1e 	bne	r2,zero,200578 <___vfprintf_internal_r+0xe0>
  20058c:	85e3c83a 	sub	r17,r16,r23
  200590:	85c1201e 	bne	r16,r23,200a14 <___vfprintf_internal_r+0x57c>
  200594:	80800003 	ldbu	r2,0(r16)
  200598:	10803fcc 	andi	r2,r2,255
  20059c:	1080201c 	xori	r2,r2,128
  2005a0:	10bfe004 	addi	r2,r2,-128
  2005a4:	1000c926 	beq	r2,zero,2008cc <___vfprintf_internal_r+0x434>
  2005a8:	82c00047 	ldb	r11,1(r16)
  2005ac:	85c00044 	addi	r23,r16,1
  2005b0:	d8001345 	stb	zero,77(sp)
  2005b4:	0009883a 	mov	r4,zero
  2005b8:	000b883a 	mov	r5,zero
  2005bc:	023fffc4 	movi	r8,-1
  2005c0:	0021883a 	mov	r16,zero
  2005c4:	0019883a 	mov	r12,zero
  2005c8:	bdc00044 	addi	r23,r23,1
  2005cc:	5839883a 	mov	fp,r11
  2005d0:	e0bff804 	addi	r2,fp,-32
  2005d4:	10c01668 	cmpgeui	r3,r2,89
  2005d8:	18006c1e 	bne	r3,zero,20078c <___vfprintf_internal_r+0x2f4>
  2005dc:	100490ba 	slli	r2,r2,2
  2005e0:	00c00834 	movhi	r3,32
  2005e4:	10c7883a 	add	r3,r2,r3
  2005e8:	18817c17 	ldw	r2,1520(r3)
  2005ec:	1000683a 	jmp	r2
  2005f0:	00200ea4 	muli	zero,zero,-32710
  2005f4:	0020078c 	andi	zero,zero,32798
  2005f8:	0020078c 	andi	zero,zero,32798
  2005fc:	00200e98 	cmpnei	zero,zero,-32710
  200600:	0020078c 	andi	zero,zero,32798
  200604:	0020078c 	andi	zero,zero,32798
  200608:	0020078c 	andi	zero,zero,32798
  20060c:	0020078c 	andi	zero,zero,32798
  200610:	0020078c 	andi	zero,zero,32798
  200614:	0020078c 	andi	zero,zero,32798
  200618:	00200d1c 	xori	zero,zero,32820
  20061c:	00200e88 	cmpgei	zero,zero,-32710
  200620:	0020078c 	andi	zero,zero,32798
  200624:	00200d34 	movhi	zero,32820
  200628:	00200d40 	call	200d4 <__reset-0x1dff2c>
  20062c:	0020078c 	andi	zero,zero,32798
  200630:	00200e7c 	xorhi	zero,zero,32825
  200634:	00200754 	movui	zero,32797
  200638:	00200754 	movui	zero,32797
  20063c:	00200754 	movui	zero,32797
  200640:	00200754 	movui	zero,32797
  200644:	00200754 	movui	zero,32797
  200648:	00200754 	movui	zero,32797
  20064c:	00200754 	movui	zero,32797
  200650:	00200754 	movui	zero,32797
  200654:	00200754 	movui	zero,32797
  200658:	0020078c 	andi	zero,zero,32798
  20065c:	0020078c 	andi	zero,zero,32798
  200660:	0020078c 	andi	zero,zero,32798
  200664:	0020078c 	andi	zero,zero,32798
  200668:	0020078c 	andi	zero,zero,32798
  20066c:	0020078c 	andi	zero,zero,32798
  200670:	0020078c 	andi	zero,zero,32798
  200674:	0020078c 	andi	zero,zero,32798
  200678:	0020078c 	andi	zero,zero,32798
  20067c:	0020078c 	andi	zero,zero,32798
  200680:	00200d8c 	andi	zero,zero,32822
  200684:	00200a70 	cmpltui	zero,zero,32809
  200688:	0020078c 	andi	zero,zero,32798
  20068c:	00200a70 	cmpltui	zero,zero,32809
  200690:	0020078c 	andi	zero,zero,32798
  200694:	0020078c 	andi	zero,zero,32798
  200698:	0020078c 	andi	zero,zero,32798
  20069c:	0020078c 	andi	zero,zero,32798
  2006a0:	00201024 	muli	zero,zero,-32704
  2006a4:	0020078c 	andi	zero,zero,32798
  2006a8:	0020078c 	andi	zero,zero,32798
  2006ac:	002009a4 	muli	zero,zero,-32730
  2006b0:	0020078c 	andi	zero,zero,32798
  2006b4:	0020078c 	andi	zero,zero,32798
  2006b8:	0020078c 	andi	zero,zero,32798
  2006bc:	0020078c 	andi	zero,zero,32798
  2006c0:	0020078c 	andi	zero,zero,32798
  2006c4:	0020097c 	xorhi	zero,zero,32805
  2006c8:	0020078c 	andi	zero,zero,32798
  2006cc:	0020078c 	andi	zero,zero,32798
  2006d0:	00201064 	muli	zero,zero,-32703
  2006d4:	0020078c 	andi	zero,zero,32798
  2006d8:	0020078c 	andi	zero,zero,32798
  2006dc:	0020078c 	andi	zero,zero,32798
  2006e0:	0020078c 	andi	zero,zero,32798
  2006e4:	0020078c 	andi	zero,zero,32798
  2006e8:	0020078c 	andi	zero,zero,32798
  2006ec:	0020078c 	andi	zero,zero,32798
  2006f0:	0020078c 	andi	zero,zero,32798
  2006f4:	0020078c 	andi	zero,zero,32798
  2006f8:	0020078c 	andi	zero,zero,32798
  2006fc:	0020103c 	xorhi	zero,zero,32832
  200700:	00200c84 	movi	zero,-32718
  200704:	00200a70 	cmpltui	zero,zero,32809
  200708:	00200a70 	cmpltui	zero,zero,32809
  20070c:	00200a70 	cmpltui	zero,zero,32809
  200710:	00201030 	cmpltui	zero,zero,32832
  200714:	00200c84 	movi	zero,-32718
  200718:	0020078c 	andi	zero,zero,32798
  20071c:	0020078c 	andi	zero,zero,32798
  200720:	00200ed0 	cmplti	zero,zero,-32709
  200724:	0020078c 	andi	zero,zero,32798
  200728:	00200fe4 	muli	zero,zero,-32705
  20072c:	002009a8 	cmpgeui	zero,zero,32806
  200730:	00200fa4 	muli	zero,zero,-32706
  200734:	00200f98 	cmpnei	zero,zero,-32706
  200738:	0020078c 	andi	zero,zero,32798
  20073c:	00200f40 	call	200f4 <__reset-0x1dff0c>
  200740:	0020078c 	andi	zero,zero,32798
  200744:	00200980 	call	20098 <__reset-0x1dff68>
  200748:	0020078c 	andi	zero,zero,32798
  20074c:	0020078c 	andi	zero,zero,32798
  200750:	00200ef8 	rdprs	zero,zero,-32709
  200754:	0021883a 	mov	r16,zero
  200758:	e0fff404 	addi	r3,fp,-48
  20075c:	800490ba 	slli	r2,r16,2
  200760:	bf000007 	ldb	fp,0(r23)
  200764:	bdc00044 	addi	r23,r23,1
  200768:	1421883a 	add	r16,r2,r16
  20076c:	8421883a 	add	r16,r16,r16
  200770:	1c21883a 	add	r16,r3,r16
  200774:	e0fff404 	addi	r3,fp,-48
  200778:	188002b0 	cmpltui	r2,r3,10
  20077c:	103ff71e 	bne	r2,zero,20075c <___vfprintf_internal_r+0x2c4>
  200780:	e0bff804 	addi	r2,fp,-32
  200784:	10c01668 	cmpgeui	r3,r2,89
  200788:	183f9426 	beq	r3,zero,2005dc <___vfprintf_internal_r+0x144>
  20078c:	21003fcc 	andi	r4,r4,255
  200790:	2006541e 	bne	r4,zero,2020e4 <___vfprintf_internal_r+0x1c4c>
  200794:	e0004d26 	beq	fp,zero,2008cc <___vfprintf_internal_r+0x434>
  200798:	df001d05 	stb	fp,116(sp)
  20079c:	d8001345 	stb	zero,77(sp)
  2007a0:	05000044 	movi	r20,1
  2007a4:	05400044 	movi	r21,1
  2007a8:	dc401d04 	addi	r17,sp,116
  2007ac:	db000415 	stw	r12,16(sp)
  2007b0:	0011883a 	mov	r8,zero
  2007b4:	d8000715 	stw	zero,28(sp)
  2007b8:	d8800417 	ldw	r2,16(sp)
  2007bc:	1380008c 	andi	r14,r2,2
  2007c0:	70000126 	beq	r14,zero,2007c8 <___vfprintf_internal_r+0x330>
  2007c4:	a5000084 	addi	r20,r20,2
  2007c8:	d8800417 	ldw	r2,16(sp)
  2007cc:	d8c01c17 	ldw	r3,112(sp)
  2007d0:	1340210c 	andi	r13,r2,132
  2007d4:	6800021e 	bne	r13,zero,2007e0 <___vfprintf_internal_r+0x348>
  2007d8:	850fc83a 	sub	r7,r16,r20
  2007dc:	01c36b16 	blt	zero,r7,20158c <___vfprintf_internal_r+0x10f4>
  2007e0:	d8801347 	ldb	r2,77(sp)
  2007e4:	10000c26 	beq	r2,zero,200818 <___vfprintf_internal_r+0x380>
  2007e8:	d8801b17 	ldw	r2,108(sp)
  2007ec:	d9001344 	addi	r4,sp,77
  2007f0:	18c00044 	addi	r3,r3,1
  2007f4:	10800044 	addi	r2,r2,1
  2007f8:	b1000015 	stw	r4,0(r22)
  2007fc:	01000044 	movi	r4,1
  200800:	d8801b15 	stw	r2,108(sp)
  200804:	b1000115 	stw	r4,4(r22)
  200808:	d8c01c15 	stw	r3,112(sp)
  20080c:	10800208 	cmpgei	r2,r2,8
  200810:	10039f1e 	bne	r2,zero,201690 <___vfprintf_internal_r+0x11f8>
  200814:	b5800204 	addi	r22,r22,8
  200818:	70000c26 	beq	r14,zero,20084c <___vfprintf_internal_r+0x3b4>
  20081c:	d8801b17 	ldw	r2,108(sp)
  200820:	d9001384 	addi	r4,sp,78
  200824:	18c00084 	addi	r3,r3,2
  200828:	10800044 	addi	r2,r2,1
  20082c:	b1000015 	stw	r4,0(r22)
  200830:	01000084 	movi	r4,2
  200834:	d8801b15 	stw	r2,108(sp)
  200838:	b1000115 	stw	r4,4(r22)
  20083c:	d8c01c15 	stw	r3,112(sp)
  200840:	10800208 	cmpgei	r2,r2,8
  200844:	1003a01e 	bne	r2,zero,2016c8 <___vfprintf_internal_r+0x1230>
  200848:	b5800204 	addi	r22,r22,8
  20084c:	6b402018 	cmpnei	r13,r13,128
  200850:	68025c26 	beq	r13,zero,2011c4 <___vfprintf_internal_r+0xd2c>
  200854:	4551c83a 	sub	r8,r8,r21
  200858:	02029416 	blt	zero,r8,2012ac <___vfprintf_internal_r+0xe14>
  20085c:	d8800417 	ldw	r2,16(sp)
  200860:	1080400c 	andi	r2,r2,256
  200864:	1002111e 	bne	r2,zero,2010ac <___vfprintf_internal_r+0xc14>
  200868:	d8801b17 	ldw	r2,108(sp)
  20086c:	1d47883a 	add	r3,r3,r21
  200870:	b4400015 	stw	r17,0(r22)
  200874:	10800044 	addi	r2,r2,1
  200878:	b5400115 	stw	r21,4(r22)
  20087c:	d8801b15 	stw	r2,108(sp)
  200880:	d8c01c15 	stw	r3,112(sp)
  200884:	10800208 	cmpgei	r2,r2,8
  200888:	1002fd1e 	bne	r2,zero,201480 <___vfprintf_internal_r+0xfe8>
  20088c:	b5800204 	addi	r22,r22,8
  200890:	d8800417 	ldw	r2,16(sp)
  200894:	1440010c 	andi	r17,r2,4
  200898:	88000226 	beq	r17,zero,2008a4 <___vfprintf_internal_r+0x40c>
  20089c:	8523c83a 	sub	r17,r16,r20
  2008a0:	0440c616 	blt	zero,r17,200bbc <___vfprintf_internal_r+0x724>
  2008a4:	8500010e 	bge	r16,r20,2008ac <___vfprintf_internal_r+0x414>
  2008a8:	a021883a 	mov	r16,r20
  2008ac:	d8800517 	ldw	r2,20(sp)
  2008b0:	1405883a 	add	r2,r2,r16
  2008b4:	d8800515 	stw	r2,20(sp)
  2008b8:	1802c31e 	bne	r3,zero,2013c8 <___vfprintf_internal_r+0xf30>
  2008bc:	b8800007 	ldb	r2,0(r23)
  2008c0:	d8001b15 	stw	zero,108(sp)
  2008c4:	dd802704 	addi	r22,sp,156
  2008c8:	103f291e 	bne	r2,zero,200570 <___vfprintf_internal_r+0xd8>
  2008cc:	d8801c17 	ldw	r2,112(sp)
  2008d0:	1005ff1e 	bne	r2,zero,2020d0 <___vfprintf_internal_r+0x1c38>
  2008d4:	9080030b 	ldhu	r2,12(r18)
  2008d8:	1080100c 	andi	r2,r2,64
  2008dc:	1006ab1e 	bne	r2,zero,20238c <___vfprintf_internal_r+0x1ef4>
  2008e0:	d8800517 	ldw	r2,20(sp)
  2008e4:	dfc04017 	ldw	ra,256(sp)
  2008e8:	df003f17 	ldw	fp,252(sp)
  2008ec:	ddc03e17 	ldw	r23,248(sp)
  2008f0:	dd803d17 	ldw	r22,244(sp)
  2008f4:	dd403c17 	ldw	r21,240(sp)
  2008f8:	dd003b17 	ldw	r20,236(sp)
  2008fc:	dcc03a17 	ldw	r19,232(sp)
  200900:	dc803917 	ldw	r18,228(sp)
  200904:	dc403817 	ldw	r17,224(sp)
  200908:	dc003717 	ldw	r16,220(sp)
  20090c:	dec04104 	addi	sp,sp,260
  200910:	f800283a 	ret
  200914:	900b883a 	mov	r5,r18
  200918:	9809883a 	mov	r4,r19
  20091c:	020258c0 	call	20258c <__swsetup_r>
  200920:	10069a1e 	bne	r2,zero,20238c <___vfprintf_internal_r+0x1ef4>
  200924:	9080030b 	ldhu	r2,12(r18)
  200928:	1080068c 	andi	r2,r2,26
  20092c:	10800298 	cmpnei	r2,r2,10
  200930:	103f011e 	bne	r2,zero,200538 <___vfprintf_internal_r+0xa0>
  200934:	9080038f 	ldh	r2,14(r18)
  200938:	103eff16 	blt	r2,zero,200538 <___vfprintf_internal_r+0xa0>
  20093c:	d9c00617 	ldw	r7,24(sp)
  200940:	b00d883a 	mov	r6,r22
  200944:	900b883a 	mov	r5,r18
  200948:	9809883a 	mov	r4,r19
  20094c:	dfc04017 	ldw	ra,256(sp)
  200950:	df003f17 	ldw	fp,252(sp)
  200954:	ddc03e17 	ldw	r23,248(sp)
  200958:	dd803d17 	ldw	r22,244(sp)
  20095c:	dd403c17 	ldw	r21,240(sp)
  200960:	dd003b17 	ldw	r20,236(sp)
  200964:	dcc03a17 	ldw	r19,232(sp)
  200968:	dc803917 	ldw	r18,228(sp)
  20096c:	dc403817 	ldw	r17,224(sp)
  200970:	dc003717 	ldw	r16,220(sp)
  200974:	dec04104 	addi	sp,sp,260
  200978:	02024cc1 	jmpi	2024cc <__sbprintf>
  20097c:	63000414 	ori	r12,r12,16
  200980:	6080080c 	andi	r2,r12,32
  200984:	10008126 	beq	r2,zero,200b8c <___vfprintf_internal_r+0x6f4>
  200988:	d8c00617 	ldw	r3,24(sp)
  20098c:	00800044 	movi	r2,1
  200990:	1d000017 	ldw	r20,0(r3)
  200994:	1d400117 	ldw	r21,4(r3)
  200998:	18c00204 	addi	r3,r3,8
  20099c:	d8c00615 	stw	r3,24(sp)
  2009a0:	00000906 	br	2009c8 <___vfprintf_internal_r+0x530>
  2009a4:	63000414 	ori	r12,r12,16
  2009a8:	6080080c 	andi	r2,r12,32
  2009ac:	10006b26 	beq	r2,zero,200b5c <___vfprintf_internal_r+0x6c4>
  2009b0:	d8c00617 	ldw	r3,24(sp)
  2009b4:	0005883a 	mov	r2,zero
  2009b8:	1d000017 	ldw	r20,0(r3)
  2009bc:	1d400117 	ldw	r21,4(r3)
  2009c0:	18c00204 	addi	r3,r3,8
  2009c4:	d8c00615 	stw	r3,24(sp)
  2009c8:	d8001345 	stb	zero,77(sp)
  2009cc:	40ffffe0 	cmpeqi	r3,r8,-1
  2009d0:	001b883a 	mov	r13,zero
  2009d4:	18010a1e 	bne	r3,zero,200e00 <___vfprintf_internal_r+0x968>
  2009d8:	047fdfc4 	movi	r17,-129
  2009dc:	6448703a 	and	r4,r12,r17
  2009e0:	a546b03a 	or	r3,r20,r21
  2009e4:	d9000415 	stw	r4,16(sp)
  2009e8:	1802e61e 	bne	r3,zero,201584 <___vfprintf_internal_r+0x10ec>
  2009ec:	4002601e 	bne	r8,zero,201370 <___vfprintf_internal_r+0xed8>
  2009f0:	1003ae1e 	bne	r2,zero,2018ac <___vfprintf_internal_r+0x1414>
  2009f4:	6540004c 	andi	r21,r12,1
  2009f8:	a803e426 	beq	r21,zero,20198c <___vfprintf_internal_r+0x14f4>
  2009fc:	00800c04 	movi	r2,48
  200a00:	d88026c5 	stb	r2,155(sp)
  200a04:	dc4026c4 	addi	r17,sp,155
  200a08:	0000ba06 	br	200cf4 <___vfprintf_internal_r+0x85c>
  200a0c:	85e3c83a 	sub	r17,r16,r23
  200a10:	85ffae26 	beq	r16,r23,2008cc <___vfprintf_internal_r+0x434>
  200a14:	d8c01c17 	ldw	r3,112(sp)
  200a18:	d8801b17 	ldw	r2,108(sp)
  200a1c:	b5c00015 	stw	r23,0(r22)
  200a20:	1c47883a 	add	r3,r3,r17
  200a24:	10800044 	addi	r2,r2,1
  200a28:	d8801b15 	stw	r2,108(sp)
  200a2c:	b4400115 	stw	r17,4(r22)
  200a30:	d8c01c15 	stw	r3,112(sp)
  200a34:	10800208 	cmpgei	r2,r2,8
  200a38:	1000061e 	bne	r2,zero,200a54 <___vfprintf_internal_r+0x5bc>
  200a3c:	b5800204 	addi	r22,r22,8
  200a40:	d8c00517 	ldw	r3,20(sp)
  200a44:	80800003 	ldbu	r2,0(r16)
  200a48:	1c47883a 	add	r3,r3,r17
  200a4c:	d8c00515 	stw	r3,20(sp)
  200a50:	003ed106 	br	200598 <___vfprintf_internal_r+0x100>
  200a54:	d9801a04 	addi	r6,sp,104
  200a58:	900b883a 	mov	r5,r18
  200a5c:	9809883a 	mov	r4,r19
  200a60:	02078e80 	call	2078e8 <__sprint_r>
  200a64:	103f9b1e 	bne	r2,zero,2008d4 <___vfprintf_internal_r+0x43c>
  200a68:	dd802704 	addi	r22,sp,156
  200a6c:	003ff406 	br	200a40 <___vfprintf_internal_r+0x5a8>
  200a70:	21003fcc 	andi	r4,r4,255
  200a74:	2006291e 	bne	r4,zero,20231c <___vfprintf_internal_r+0x1e84>
  200a78:	d8c00617 	ldw	r3,24(sp)
  200a7c:	6080020c 	andi	r2,r12,8
  200a80:	19000204 	addi	r4,r3,8
  200a84:	d9000e15 	stw	r4,56(sp)
  200a88:	1003c21e 	bne	r2,zero,201994 <___vfprintf_internal_r+0x14fc>
  200a8c:	d8800617 	ldw	r2,24(sp)
  200a90:	10c00017 	ldw	r3,0(r2)
  200a94:	10800117 	ldw	r2,4(r2)
  200a98:	d8c00915 	stw	r3,36(sp)
  200a9c:	d8800a15 	stw	r2,40(sp)
  200aa0:	dd400a17 	ldw	r21,40(sp)
  200aa4:	dd000917 	ldw	r20,36(sp)
  200aa8:	00a00034 	movhi	r2,32768
  200aac:	10bfffc4 	addi	r2,r2,-1
  200ab0:	a8a2703a 	and	r17,r21,r2
  200ab4:	01dffc34 	movhi	r7,32752
  200ab8:	01bfffc4 	movi	r6,-1
  200abc:	39ffffc4 	addi	r7,r7,-1
  200ac0:	a009883a 	mov	r4,r20
  200ac4:	880b883a 	mov	r5,r17
  200ac8:	da000615 	stw	r8,24(sp)
  200acc:	db000415 	stw	r12,16(sp)
  200ad0:	020d10c0 	call	20d10c <__unorddf2>
  200ad4:	db000417 	ldw	r12,16(sp)
  200ad8:	da000617 	ldw	r8,24(sp)
  200adc:	10044d1e 	bne	r2,zero,201c14 <___vfprintf_internal_r+0x177c>
  200ae0:	01dffc34 	movhi	r7,32752
  200ae4:	01bfffc4 	movi	r6,-1
  200ae8:	39ffffc4 	addi	r7,r7,-1
  200aec:	a009883a 	mov	r4,r20
  200af0:	880b883a 	mov	r5,r17
  200af4:	020bf6c0 	call	20bf6c <__ledf2>
  200af8:	db000417 	ldw	r12,16(sp)
  200afc:	da000617 	ldw	r8,24(sp)
  200b00:	0084440e 	bge	zero,r2,201c14 <___vfprintf_internal_r+0x177c>
  200b04:	000d883a 	mov	r6,zero
  200b08:	000f883a 	mov	r7,zero
  200b0c:	a009883a 	mov	r4,r20
  200b10:	a80b883a 	mov	r5,r21
  200b14:	020bf6c0 	call	20bf6c <__ledf2>
  200b18:	db000417 	ldw	r12,16(sp)
  200b1c:	10055916 	blt	r2,zero,202084 <___vfprintf_internal_r+0x1bec>
  200b20:	db401343 	ldbu	r13,77(sp)
  200b24:	e0801210 	cmplti	r2,fp,72
  200b28:	1005471e 	bne	r2,zero,202048 <___vfprintf_internal_r+0x1bb0>
  200b2c:	04400874 	movhi	r17,33
  200b30:	8c7f3404 	addi	r17,r17,-816
  200b34:	00bfdfc4 	movi	r2,-129
  200b38:	6084703a 	and	r2,r12,r2
  200b3c:	d8800415 	stw	r2,16(sp)
  200b40:	d8800e17 	ldw	r2,56(sp)
  200b44:	050000c4 	movi	r20,3
  200b48:	054000c4 	movi	r21,3
  200b4c:	d8800615 	stw	r2,24(sp)
  200b50:	0011883a 	mov	r8,zero
  200b54:	d8000715 	stw	zero,28(sp)
  200b58:	00006a06 	br	200d04 <___vfprintf_internal_r+0x86c>
  200b5c:	d8c00617 	ldw	r3,24(sp)
  200b60:	6080040c 	andi	r2,r12,16
  200b64:	1d000017 	ldw	r20,0(r3)
  200b68:	18c00104 	addi	r3,r3,4
  200b6c:	d8c00615 	stw	r3,24(sp)
  200b70:	1000031e 	bne	r2,zero,200b80 <___vfprintf_internal_r+0x6e8>
  200b74:	6080100c 	andi	r2,r12,64
  200b78:	10000126 	beq	r2,zero,200b80 <___vfprintf_internal_r+0x6e8>
  200b7c:	a53fffcc 	andi	r20,r20,65535
  200b80:	002b883a 	mov	r21,zero
  200b84:	0005883a 	mov	r2,zero
  200b88:	003f8f06 	br	2009c8 <___vfprintf_internal_r+0x530>
  200b8c:	d8c00617 	ldw	r3,24(sp)
  200b90:	6080040c 	andi	r2,r12,16
  200b94:	1d000017 	ldw	r20,0(r3)
  200b98:	18c00104 	addi	r3,r3,4
  200b9c:	d8c00615 	stw	r3,24(sp)
  200ba0:	1000031e 	bne	r2,zero,200bb0 <___vfprintf_internal_r+0x718>
  200ba4:	6080100c 	andi	r2,r12,64
  200ba8:	10000126 	beq	r2,zero,200bb0 <___vfprintf_internal_r+0x718>
  200bac:	a53fffcc 	andi	r20,r20,65535
  200bb0:	002b883a 	mov	r21,zero
  200bb4:	00800044 	movi	r2,1
  200bb8:	003f8306 	br	2009c8 <___vfprintf_internal_r+0x530>
  200bbc:	03000874 	movhi	r12,33
  200bc0:	89000450 	cmplti	r4,r17,17
  200bc4:	d8801b17 	ldw	r2,108(sp)
  200bc8:	633f4804 	addi	r12,r12,-736
  200bcc:	20001b1e 	bne	r4,zero,200c3c <___vfprintf_internal_r+0x7a4>
  200bd0:	05400404 	movi	r21,16
  200bd4:	6039883a 	mov	fp,r12
  200bd8:	00000406 	br	200bec <___vfprintf_internal_r+0x754>
  200bdc:	8c7ffc04 	addi	r17,r17,-16
  200be0:	89000448 	cmpgei	r4,r17,17
  200be4:	b5800204 	addi	r22,r22,8
  200be8:	20001326 	beq	r4,zero,200c38 <___vfprintf_internal_r+0x7a0>
  200bec:	10800044 	addi	r2,r2,1
  200bf0:	18c00404 	addi	r3,r3,16
  200bf4:	b7000015 	stw	fp,0(r22)
  200bf8:	b5400115 	stw	r21,4(r22)
  200bfc:	d8c01c15 	stw	r3,112(sp)
  200c00:	d8801b15 	stw	r2,108(sp)
  200c04:	11000208 	cmpgei	r4,r2,8
  200c08:	203ff426 	beq	r4,zero,200bdc <___vfprintf_internal_r+0x744>
  200c0c:	d9801a04 	addi	r6,sp,104
  200c10:	900b883a 	mov	r5,r18
  200c14:	9809883a 	mov	r4,r19
  200c18:	02078e80 	call	2078e8 <__sprint_r>
  200c1c:	103f2d1e 	bne	r2,zero,2008d4 <___vfprintf_internal_r+0x43c>
  200c20:	8c7ffc04 	addi	r17,r17,-16
  200c24:	89000448 	cmpgei	r4,r17,17
  200c28:	d8c01c17 	ldw	r3,112(sp)
  200c2c:	d8801b17 	ldw	r2,108(sp)
  200c30:	dd802704 	addi	r22,sp,156
  200c34:	203fed1e 	bne	r4,zero,200bec <___vfprintf_internal_r+0x754>
  200c38:	e019883a 	mov	r12,fp
  200c3c:	10800044 	addi	r2,r2,1
  200c40:	1c47883a 	add	r3,r3,r17
  200c44:	d8801b15 	stw	r2,108(sp)
  200c48:	b3000015 	stw	r12,0(r22)
  200c4c:	b4400115 	stw	r17,4(r22)
  200c50:	d8c01c15 	stw	r3,112(sp)
  200c54:	10800210 	cmplti	r2,r2,8
  200c58:	103f121e 	bne	r2,zero,2008a4 <___vfprintf_internal_r+0x40c>
  200c5c:	d9801a04 	addi	r6,sp,104
  200c60:	900b883a 	mov	r5,r18
  200c64:	9809883a 	mov	r4,r19
  200c68:	02078e80 	call	2078e8 <__sprint_r>
  200c6c:	103f191e 	bne	r2,zero,2008d4 <___vfprintf_internal_r+0x43c>
  200c70:	d8c01c17 	ldw	r3,112(sp)
  200c74:	003f0b06 	br	2008a4 <___vfprintf_internal_r+0x40c>
  200c78:	9809883a 	mov	r4,r19
  200c7c:	02046c80 	call	2046c8 <__sinit>
  200c80:	003e1d06 	br	2004f8 <___vfprintf_internal_r+0x60>
  200c84:	21003fcc 	andi	r4,r4,255
  200c88:	2005a61e 	bne	r4,zero,202324 <___vfprintf_internal_r+0x1e8c>
  200c8c:	6080080c 	andi	r2,r12,32
  200c90:	10004326 	beq	r2,zero,200da0 <___vfprintf_internal_r+0x908>
  200c94:	d8c00617 	ldw	r3,24(sp)
  200c98:	18800117 	ldw	r2,4(r3)
  200c9c:	1d000017 	ldw	r20,0(r3)
  200ca0:	18c00204 	addi	r3,r3,8
  200ca4:	d8c00615 	stw	r3,24(sp)
  200ca8:	102b883a 	mov	r21,r2
  200cac:	10004a16 	blt	r2,zero,200dd8 <___vfprintf_internal_r+0x940>
  200cb0:	40bfffd8 	cmpnei	r2,r8,-1
  200cb4:	db401343 	ldbu	r13,77(sp)
  200cb8:	10000626 	beq	r2,zero,200cd4 <___vfprintf_internal_r+0x83c>
  200cbc:	047fdfc4 	movi	r17,-129
  200cc0:	6446703a 	and	r3,r12,r17
  200cc4:	a544b03a 	or	r2,r20,r21
  200cc8:	d8c00415 	stw	r3,16(sp)
  200ccc:	1002f626 	beq	r2,zero,2018a8 <___vfprintf_internal_r+0x1410>
  200cd0:	db000417 	ldw	r12,16(sp)
  200cd4:	a8037f1e 	bne	r21,zero,201ad4 <___vfprintf_internal_r+0x163c>
  200cd8:	a08002a8 	cmpgeui	r2,r20,10
  200cdc:	10037d1e 	bne	r2,zero,201ad4 <___vfprintf_internal_r+0x163c>
  200ce0:	a5000c04 	addi	r20,r20,48
  200ce4:	dd0026c5 	stb	r20,155(sp)
  200ce8:	db000415 	stw	r12,16(sp)
  200cec:	05400044 	movi	r21,1
  200cf0:	dc4026c4 	addi	r17,sp,155
  200cf4:	4029883a 	mov	r20,r8
  200cf8:	4540010e 	bge	r8,r21,200d00 <___vfprintf_internal_r+0x868>
  200cfc:	a829883a 	mov	r20,r21
  200d00:	d8000715 	stw	zero,28(sp)
  200d04:	6b403fcc 	andi	r13,r13,255
  200d08:	6b40201c 	xori	r13,r13,128
  200d0c:	6b7fe004 	addi	r13,r13,-128
  200d10:	683ea926 	beq	r13,zero,2007b8 <___vfprintf_internal_r+0x320>
  200d14:	a5000044 	addi	r20,r20,1
  200d18:	003ea706 	br	2007b8 <___vfprintf_internal_r+0x320>
  200d1c:	d8800617 	ldw	r2,24(sp)
  200d20:	14000017 	ldw	r16,0(r2)
  200d24:	10800104 	addi	r2,r2,4
  200d28:	8003150e 	bge	r16,zero,201980 <___vfprintf_internal_r+0x14e8>
  200d2c:	0421c83a 	sub	r16,zero,r16
  200d30:	d8800615 	stw	r2,24(sp)
  200d34:	bac00007 	ldb	r11,0(r23)
  200d38:	63000114 	ori	r12,r12,4
  200d3c:	003e2206 	br	2005c8 <___vfprintf_internal_r+0x130>
  200d40:	bf000007 	ldb	fp,0(r23)
  200d44:	b8800044 	addi	r2,r23,1
  200d48:	e0c00aa0 	cmpeqi	r3,fp,42
  200d4c:	1805c91e 	bne	r3,zero,202474 <___vfprintf_internal_r+0x1fdc>
  200d50:	e0fff404 	addi	r3,fp,-48
  200d54:	198002b0 	cmpltui	r6,r3,10
  200d58:	102f883a 	mov	r23,r2
  200d5c:	0011883a 	mov	r8,zero
  200d60:	303e1b26 	beq	r6,zero,2005d0 <___vfprintf_internal_r+0x138>
  200d64:	400490ba 	slli	r2,r8,2
  200d68:	bf000007 	ldb	fp,0(r23)
  200d6c:	bdc00044 	addi	r23,r23,1
  200d70:	1211883a 	add	r8,r2,r8
  200d74:	4211883a 	add	r8,r8,r8
  200d78:	40d1883a 	add	r8,r8,r3
  200d7c:	e0fff404 	addi	r3,fp,-48
  200d80:	188002b0 	cmpltui	r2,r3,10
  200d84:	103ff71e 	bne	r2,zero,200d64 <___vfprintf_internal_r+0x8cc>
  200d88:	003e1106 	br	2005d0 <___vfprintf_internal_r+0x138>
  200d8c:	21003fcc 	andi	r4,r4,255
  200d90:	20055e1e 	bne	r4,zero,20230c <___vfprintf_internal_r+0x1e74>
  200d94:	63000414 	ori	r12,r12,16
  200d98:	6080080c 	andi	r2,r12,32
  200d9c:	103fbd1e 	bne	r2,zero,200c94 <___vfprintf_internal_r+0x7fc>
  200da0:	d8c00617 	ldw	r3,24(sp)
  200da4:	6080040c 	andi	r2,r12,16
  200da8:	1d000017 	ldw	r20,0(r3)
  200dac:	18c00104 	addi	r3,r3,4
  200db0:	d8c00615 	stw	r3,24(sp)
  200db4:	1002e91e 	bne	r2,zero,20195c <___vfprintf_internal_r+0x14c4>
  200db8:	6080100c 	andi	r2,r12,64
  200dbc:	1002e726 	beq	r2,zero,20195c <___vfprintf_internal_r+0x14c4>
  200dc0:	a53fffcc 	andi	r20,r20,65535
  200dc4:	a520001c 	xori	r20,r20,32768
  200dc8:	a5200004 	addi	r20,r20,-32768
  200dcc:	a02bd7fa 	srai	r21,r20,31
  200dd0:	a805883a 	mov	r2,r21
  200dd4:	103fb60e 	bge	r2,zero,200cb0 <___vfprintf_internal_r+0x818>
  200dd8:	a004c03a 	cmpne	r2,r20,zero
  200ddc:	056bc83a 	sub	r21,zero,r21
  200de0:	a8abc83a 	sub	r21,r21,r2
  200de4:	00800b44 	movi	r2,45
  200de8:	d8801345 	stb	r2,77(sp)
  200dec:	40ffffe0 	cmpeqi	r3,r8,-1
  200df0:	0529c83a 	sub	r20,zero,r20
  200df4:	03400b44 	movi	r13,45
  200df8:	00800044 	movi	r2,1
  200dfc:	183ef626 	beq	r3,zero,2009d8 <___vfprintf_internal_r+0x540>
  200e00:	10c00060 	cmpeqi	r3,r2,1
  200e04:	183fb31e 	bne	r3,zero,200cd4 <___vfprintf_internal_r+0x83c>
  200e08:	108000a0 	cmpeqi	r2,r2,2
  200e0c:	10015d1e 	bne	r2,zero,201384 <___vfprintf_internal_r+0xeec>
  200e10:	dc402704 	addi	r17,sp,156
  200e14:	a006d0fa 	srli	r3,r20,3
  200e18:	a808977a 	slli	r4,r21,29
  200e1c:	a82ad0fa 	srli	r21,r21,3
  200e20:	a50001cc 	andi	r20,r20,7
  200e24:	a0800c04 	addi	r2,r20,48
  200e28:	20e8b03a 	or	r20,r4,r3
  200e2c:	88bfffc5 	stb	r2,-1(r17)
  200e30:	a546b03a 	or	r3,r20,r21
  200e34:	880b883a 	mov	r5,r17
  200e38:	8c7fffc4 	addi	r17,r17,-1
  200e3c:	183ff51e 	bne	r3,zero,200e14 <___vfprintf_internal_r+0x97c>
  200e40:	60c0004c 	andi	r3,r12,1
  200e44:	18015c26 	beq	r3,zero,2013b8 <___vfprintf_internal_r+0xf20>
  200e48:	10803fcc 	andi	r2,r2,255
  200e4c:	1080201c 	xori	r2,r2,128
  200e50:	10bfe004 	addi	r2,r2,-128
  200e54:	10800c18 	cmpnei	r2,r2,48
  200e58:	10015726 	beq	r2,zero,2013b8 <___vfprintf_internal_r+0xf20>
  200e5c:	00800c04 	movi	r2,48
  200e60:	297fff84 	addi	r5,r5,-2
  200e64:	88bfffc5 	stb	r2,-1(r17)
  200e68:	d8802704 	addi	r2,sp,156
  200e6c:	116bc83a 	sub	r21,r2,r5
  200e70:	db000415 	stw	r12,16(sp)
  200e74:	2823883a 	mov	r17,r5
  200e78:	003f9e06 	br	200cf4 <___vfprintf_internal_r+0x85c>
  200e7c:	bac00007 	ldb	r11,0(r23)
  200e80:	63002014 	ori	r12,r12,128
  200e84:	003dd006 	br	2005c8 <___vfprintf_internal_r+0x130>
  200e88:	bac00007 	ldb	r11,0(r23)
  200e8c:	01000044 	movi	r4,1
  200e90:	01400ac4 	movi	r5,43
  200e94:	003dcc06 	br	2005c8 <___vfprintf_internal_r+0x130>
  200e98:	bac00007 	ldb	r11,0(r23)
  200e9c:	63000054 	ori	r12,r12,1
  200ea0:	003dc906 	br	2005c8 <___vfprintf_internal_r+0x130>
  200ea4:	28803fcc 	andi	r2,r5,255
  200ea8:	1080201c 	xori	r2,r2,128
  200eac:	10bfe004 	addi	r2,r2,-128
  200eb0:	bf000003 	ldbu	fp,0(r23)
  200eb4:	10000c1e 	bne	r2,zero,200ee8 <___vfprintf_internal_r+0xa50>
  200eb8:	e2c03fcc 	andi	r11,fp,255
  200ebc:	5ac0201c 	xori	r11,r11,128
  200ec0:	01000044 	movi	r4,1
  200ec4:	01400804 	movi	r5,32
  200ec8:	5affe004 	addi	r11,r11,-128
  200ecc:	003dbe06 	br	2005c8 <___vfprintf_internal_r+0x130>
  200ed0:	bac00007 	ldb	r11,0(r23)
  200ed4:	58801b18 	cmpnei	r2,r11,108
  200ed8:	1002a71e 	bne	r2,zero,201978 <___vfprintf_internal_r+0x14e0>
  200edc:	bf000043 	ldbu	fp,1(r23)
  200ee0:	63000814 	ori	r12,r12,32
  200ee4:	bdc00044 	addi	r23,r23,1
  200ee8:	e2c03fcc 	andi	r11,fp,255
  200eec:	5ac0201c 	xori	r11,r11,128
  200ef0:	5affe004 	addi	r11,r11,-128
  200ef4:	003db406 	br	2005c8 <___vfprintf_internal_r+0x130>
  200ef8:	21003fcc 	andi	r4,r4,255
  200efc:	20050b1e 	bne	r4,zero,20232c <___vfprintf_internal_r+0x1e94>
  200f00:	00800874 	movhi	r2,33
  200f04:	10bf3704 	addi	r2,r2,-804
  200f08:	d8800c15 	stw	r2,48(sp)
  200f0c:	6080080c 	andi	r2,r12,32
  200f10:	10005b26 	beq	r2,zero,201080 <___vfprintf_internal_r+0xbe8>
  200f14:	d8800617 	ldw	r2,24(sp)
  200f18:	15000017 	ldw	r20,0(r2)
  200f1c:	15400117 	ldw	r21,4(r2)
  200f20:	10800204 	addi	r2,r2,8
  200f24:	d8800615 	stw	r2,24(sp)
  200f28:	6080004c 	andi	r2,r12,1
  200f2c:	10000226 	beq	r2,zero,200f38 <___vfprintf_internal_r+0xaa0>
  200f30:	a544b03a 	or	r2,r20,r21
  200f34:	10029c1e 	bne	r2,zero,2019a8 <___vfprintf_internal_r+0x1510>
  200f38:	00800084 	movi	r2,2
  200f3c:	003ea206 	br	2009c8 <___vfprintf_internal_r+0x530>
  200f40:	d8800617 	ldw	r2,24(sp)
  200f44:	d8001345 	stb	zero,77(sp)
  200f48:	14400017 	ldw	r17,0(r2)
  200f4c:	10c00104 	addi	r3,r2,4
  200f50:	8802ba26 	beq	r17,zero,201a3c <___vfprintf_internal_r+0x15a4>
  200f54:	40bfffe0 	cmpeqi	r2,r8,-1
  200f58:	1003c61e 	bne	r2,zero,201e74 <___vfprintf_internal_r+0x19dc>
  200f5c:	400d883a 	mov	r6,r8
  200f60:	000b883a 	mov	r5,zero
  200f64:	8809883a 	mov	r4,r17
  200f68:	d8c00715 	stw	r3,28(sp)
  200f6c:	db000615 	stw	r12,24(sp)
  200f70:	da000415 	stw	r8,16(sp)
  200f74:	0205b440 	call	205b44 <memchr>
  200f78:	da000417 	ldw	r8,16(sp)
  200f7c:	db000617 	ldw	r12,24(sp)
  200f80:	d8c00717 	ldw	r3,28(sp)
  200f84:	1004d126 	beq	r2,zero,2022cc <___vfprintf_internal_r+0x1e34>
  200f88:	146bc83a 	sub	r21,r2,r17
  200f8c:	a829883a 	mov	r20,r21
  200f90:	d8c00615 	stw	r3,24(sp)
  200f94:	003e0506 	br	2007ac <___vfprintf_internal_r+0x314>
  200f98:	bac00007 	ldb	r11,0(r23)
  200f9c:	63000814 	ori	r12,r12,32
  200fa0:	003d8906 	br	2005c8 <___vfprintf_internal_r+0x130>
  200fa4:	d8c00617 	ldw	r3,24(sp)
  200fa8:	00800c04 	movi	r2,48
  200fac:	d8801385 	stb	r2,78(sp)
  200fb0:	00801e04 	movi	r2,120
  200fb4:	01000874 	movhi	r4,33
  200fb8:	d88013c5 	stb	r2,79(sp)
  200fbc:	18800104 	addi	r2,r3,4
  200fc0:	d8800615 	stw	r2,24(sp)
  200fc4:	20bf3704 	addi	r2,r4,-804
  200fc8:	d8800c15 	stw	r2,48(sp)
  200fcc:	1d000017 	ldw	r20,0(r3)
  200fd0:	002b883a 	mov	r21,zero
  200fd4:	63000094 	ori	r12,r12,2
  200fd8:	00800084 	movi	r2,2
  200fdc:	07001e04 	movi	fp,120
  200fe0:	003e7906 	br	2009c8 <___vfprintf_internal_r+0x530>
  200fe4:	21003fcc 	andi	r4,r4,255
  200fe8:	2004ca1e 	bne	r4,zero,202314 <___vfprintf_internal_r+0x1e7c>
  200fec:	d9000617 	ldw	r4,24(sp)
  200ff0:	6080080c 	andi	r2,r12,32
  200ff4:	20c00104 	addi	r3,r4,4
  200ff8:	1002711e 	bne	r2,zero,2019c0 <___vfprintf_internal_r+0x1528>
  200ffc:	6080040c 	andi	r2,r12,16
  201000:	1002dc1e 	bne	r2,zero,201b74 <___vfprintf_internal_r+0x16dc>
  201004:	6300100c 	andi	r12,r12,64
  201008:	6002da26 	beq	r12,zero,201b74 <___vfprintf_internal_r+0x16dc>
  20100c:	d8800617 	ldw	r2,24(sp)
  201010:	d8c00615 	stw	r3,24(sp)
  201014:	d8c00517 	ldw	r3,20(sp)
  201018:	10800017 	ldw	r2,0(r2)
  20101c:	10c0000d 	sth	r3,0(r2)
  201020:	003d5106 	br	200568 <___vfprintf_internal_r+0xd0>
  201024:	bac00007 	ldb	r11,0(r23)
  201028:	63000214 	ori	r12,r12,8
  20102c:	003d6606 	br	2005c8 <___vfprintf_internal_r+0x130>
  201030:	bac00007 	ldb	r11,0(r23)
  201034:	63001014 	ori	r12,r12,64
  201038:	003d6306 	br	2005c8 <___vfprintf_internal_r+0x130>
  20103c:	d8c00617 	ldw	r3,24(sp)
  201040:	d8001345 	stb	zero,77(sp)
  201044:	05000044 	movi	r20,1
  201048:	18800017 	ldw	r2,0(r3)
  20104c:	18c00104 	addi	r3,r3,4
  201050:	d8c00615 	stw	r3,24(sp)
  201054:	d8801d05 	stb	r2,116(sp)
  201058:	05400044 	movi	r21,1
  20105c:	dc401d04 	addi	r17,sp,116
  201060:	003dd206 	br	2007ac <___vfprintf_internal_r+0x314>
  201064:	21003fcc 	andi	r4,r4,255
  201068:	2004b21e 	bne	r4,zero,202334 <___vfprintf_internal_r+0x1e9c>
  20106c:	00800874 	movhi	r2,33
  201070:	10bf3c04 	addi	r2,r2,-784
  201074:	d8800c15 	stw	r2,48(sp)
  201078:	6080080c 	andi	r2,r12,32
  20107c:	103fa51e 	bne	r2,zero,200f14 <___vfprintf_internal_r+0xa7c>
  201080:	d8c00617 	ldw	r3,24(sp)
  201084:	6080040c 	andi	r2,r12,16
  201088:	1d000017 	ldw	r20,0(r3)
  20108c:	18c00104 	addi	r3,r3,4
  201090:	d8c00615 	stw	r3,24(sp)
  201094:	10022f1e 	bne	r2,zero,201954 <___vfprintf_internal_r+0x14bc>
  201098:	6080100c 	andi	r2,r12,64
  20109c:	10022d26 	beq	r2,zero,201954 <___vfprintf_internal_r+0x14bc>
  2010a0:	a53fffcc 	andi	r20,r20,65535
  2010a4:	002b883a 	mov	r21,zero
  2010a8:	003f9f06 	br	200f28 <___vfprintf_internal_r+0xa90>
  2010ac:	e2c01990 	cmplti	r11,fp,102
  2010b0:	5800fb1e 	bne	r11,zero,2014a0 <___vfprintf_internal_r+0x1008>
  2010b4:	d9000917 	ldw	r4,36(sp)
  2010b8:	d9400a17 	ldw	r5,40(sp)
  2010bc:	000d883a 	mov	r6,zero
  2010c0:	000f883a 	mov	r7,zero
  2010c4:	d8c00e15 	stw	r3,56(sp)
  2010c8:	020be040 	call	20be04 <__eqdf2>
  2010cc:	d8c00e17 	ldw	r3,56(sp)
  2010d0:	1001891e 	bne	r2,zero,2016f8 <___vfprintf_internal_r+0x1260>
  2010d4:	d8801b17 	ldw	r2,108(sp)
  2010d8:	01000874 	movhi	r4,33
  2010dc:	213f4304 	addi	r4,r4,-756
  2010e0:	10800044 	addi	r2,r2,1
  2010e4:	18c00044 	addi	r3,r3,1
  2010e8:	b1000015 	stw	r4,0(r22)
  2010ec:	01000044 	movi	r4,1
  2010f0:	d8801b15 	stw	r2,108(sp)
  2010f4:	b1000115 	stw	r4,4(r22)
  2010f8:	d8c01c15 	stw	r3,112(sp)
  2010fc:	10800208 	cmpgei	r2,r2,8
  201100:	10034a1e 	bne	r2,zero,201e2c <___vfprintf_internal_r+0x1994>
  201104:	b5800204 	addi	r22,r22,8
  201108:	d8801417 	ldw	r2,80(sp)
  20110c:	d9000817 	ldw	r4,32(sp)
  201110:	1102150e 	bge	r2,r4,201968 <___vfprintf_internal_r+0x14d0>
  201114:	d8800d17 	ldw	r2,52(sp)
  201118:	d9000b17 	ldw	r4,44(sp)
  20111c:	b0800015 	stw	r2,0(r22)
  201120:	d8801b17 	ldw	r2,108(sp)
  201124:	1907883a 	add	r3,r3,r4
  201128:	b1000115 	stw	r4,4(r22)
  20112c:	10800044 	addi	r2,r2,1
  201130:	d8801b15 	stw	r2,108(sp)
  201134:	d8c01c15 	stw	r3,112(sp)
  201138:	10800208 	cmpgei	r2,r2,8
  20113c:	1002371e 	bne	r2,zero,201a1c <___vfprintf_internal_r+0x1584>
  201140:	b5800204 	addi	r22,r22,8
  201144:	d8800817 	ldw	r2,32(sp)
  201148:	157fffc4 	addi	r21,r2,-1
  20114c:	057dd00e 	bge	zero,r21,200890 <___vfprintf_internal_r+0x3f8>
  201150:	01c00874 	movhi	r7,33
  201154:	a9000450 	cmplti	r4,r21,17
  201158:	d8801b17 	ldw	r2,108(sp)
  20115c:	39ff4404 	addi	r7,r7,-752
  201160:	20032e1e 	bne	r4,zero,201e1c <___vfprintf_internal_r+0x1984>
  201164:	07000404 	movi	fp,16
  201168:	3823883a 	mov	r17,r7
  20116c:	00000406 	br	201180 <___vfprintf_internal_r+0xce8>
  201170:	b5800204 	addi	r22,r22,8
  201174:	ad7ffc04 	addi	r21,r21,-16
  201178:	a9000448 	cmpgei	r4,r21,17
  20117c:	20032626 	beq	r4,zero,201e18 <___vfprintf_internal_r+0x1980>
  201180:	10800044 	addi	r2,r2,1
  201184:	18c00404 	addi	r3,r3,16
  201188:	b4400015 	stw	r17,0(r22)
  20118c:	b7000115 	stw	fp,4(r22)
  201190:	d8c01c15 	stw	r3,112(sp)
  201194:	d8801b15 	stw	r2,108(sp)
  201198:	11000208 	cmpgei	r4,r2,8
  20119c:	203ff426 	beq	r4,zero,201170 <___vfprintf_internal_r+0xcd8>
  2011a0:	d9801a04 	addi	r6,sp,104
  2011a4:	900b883a 	mov	r5,r18
  2011a8:	9809883a 	mov	r4,r19
  2011ac:	02078e80 	call	2078e8 <__sprint_r>
  2011b0:	103dc81e 	bne	r2,zero,2008d4 <___vfprintf_internal_r+0x43c>
  2011b4:	d8c01c17 	ldw	r3,112(sp)
  2011b8:	d8801b17 	ldw	r2,108(sp)
  2011bc:	dd802704 	addi	r22,sp,156
  2011c0:	003fec06 	br	201174 <___vfprintf_internal_r+0xcdc>
  2011c4:	8519c83a 	sub	r12,r16,r20
  2011c8:	033da20e 	bge	zero,r12,200854 <___vfprintf_internal_r+0x3bc>
  2011cc:	01c00874 	movhi	r7,33
  2011d0:	61000450 	cmplti	r4,r12,17
  2011d4:	d8801b17 	ldw	r2,108(sp)
  2011d8:	39ff4404 	addi	r7,r7,-752
  2011dc:	2000281e 	bne	r4,zero,201280 <___vfprintf_internal_r+0xde8>
  2011e0:	dc400e15 	stw	r17,56(sp)
  2011e4:	dc000f15 	stw	r16,60(sp)
  2011e8:	b009883a 	mov	r4,r22
  2011ec:	03400404 	movi	r13,16
  2011f0:	a02d883a 	mov	r22,r20
  2011f4:	6021883a 	mov	r16,r12
  2011f8:	4029883a 	mov	r20,r8
  2011fc:	3823883a 	mov	r17,r7
  201200:	00000406 	br	201214 <___vfprintf_internal_r+0xd7c>
  201204:	843ffc04 	addi	r16,r16,-16
  201208:	81400448 	cmpgei	r5,r16,17
  20120c:	21000204 	addi	r4,r4,8
  201210:	28001426 	beq	r5,zero,201264 <___vfprintf_internal_r+0xdcc>
  201214:	10800044 	addi	r2,r2,1
  201218:	18c00404 	addi	r3,r3,16
  20121c:	24400015 	stw	r17,0(r4)
  201220:	23400115 	stw	r13,4(r4)
  201224:	d8c01c15 	stw	r3,112(sp)
  201228:	d8801b15 	stw	r2,108(sp)
  20122c:	11400208 	cmpgei	r5,r2,8
  201230:	283ff426 	beq	r5,zero,201204 <___vfprintf_internal_r+0xd6c>
  201234:	d9801a04 	addi	r6,sp,104
  201238:	900b883a 	mov	r5,r18
  20123c:	9809883a 	mov	r4,r19
  201240:	02078e80 	call	2078e8 <__sprint_r>
  201244:	103da31e 	bne	r2,zero,2008d4 <___vfprintf_internal_r+0x43c>
  201248:	843ffc04 	addi	r16,r16,-16
  20124c:	81400448 	cmpgei	r5,r16,17
  201250:	d8c01c17 	ldw	r3,112(sp)
  201254:	d8801b17 	ldw	r2,108(sp)
  201258:	d9002704 	addi	r4,sp,156
  20125c:	03400404 	movi	r13,16
  201260:	283fec1e 	bne	r5,zero,201214 <___vfprintf_internal_r+0xd7c>
  201264:	8019883a 	mov	r12,r16
  201268:	880f883a 	mov	r7,r17
  20126c:	dc000f17 	ldw	r16,60(sp)
  201270:	dc400e17 	ldw	r17,56(sp)
  201274:	a011883a 	mov	r8,r20
  201278:	b029883a 	mov	r20,r22
  20127c:	202d883a 	mov	r22,r4
  201280:	10800044 	addi	r2,r2,1
  201284:	1b07883a 	add	r3,r3,r12
  201288:	d8801b15 	stw	r2,108(sp)
  20128c:	b1c00015 	stw	r7,0(r22)
  201290:	b3000115 	stw	r12,4(r22)
  201294:	d8c01c15 	stw	r3,112(sp)
  201298:	10800208 	cmpgei	r2,r2,8
  20129c:	1002eb1e 	bne	r2,zero,201e4c <___vfprintf_internal_r+0x19b4>
  2012a0:	4551c83a 	sub	r8,r8,r21
  2012a4:	b5800204 	addi	r22,r22,8
  2012a8:	023d6c0e 	bge	zero,r8,20085c <___vfprintf_internal_r+0x3c4>
  2012ac:	01c00874 	movhi	r7,33
  2012b0:	41000450 	cmplti	r4,r8,17
  2012b4:	d8801b17 	ldw	r2,108(sp)
  2012b8:	39ff4404 	addi	r7,r7,-752
  2012bc:	2000221e 	bne	r4,zero,201348 <___vfprintf_internal_r+0xeb0>
  2012c0:	dc400e15 	stw	r17,56(sp)
  2012c4:	dc000f15 	stw	r16,60(sp)
  2012c8:	03000404 	movi	r12,16
  2012cc:	4021883a 	mov	r16,r8
  2012d0:	3823883a 	mov	r17,r7
  2012d4:	00000406 	br	2012e8 <___vfprintf_internal_r+0xe50>
  2012d8:	843ffc04 	addi	r16,r16,-16
  2012dc:	81000448 	cmpgei	r4,r16,17
  2012e0:	b5800204 	addi	r22,r22,8
  2012e4:	20001426 	beq	r4,zero,201338 <___vfprintf_internal_r+0xea0>
  2012e8:	10800044 	addi	r2,r2,1
  2012ec:	18c00404 	addi	r3,r3,16
  2012f0:	b4400015 	stw	r17,0(r22)
  2012f4:	b3000115 	stw	r12,4(r22)
  2012f8:	d8c01c15 	stw	r3,112(sp)
  2012fc:	d8801b15 	stw	r2,108(sp)
  201300:	11000208 	cmpgei	r4,r2,8
  201304:	203ff426 	beq	r4,zero,2012d8 <___vfprintf_internal_r+0xe40>
  201308:	d9801a04 	addi	r6,sp,104
  20130c:	900b883a 	mov	r5,r18
  201310:	9809883a 	mov	r4,r19
  201314:	02078e80 	call	2078e8 <__sprint_r>
  201318:	103d6e1e 	bne	r2,zero,2008d4 <___vfprintf_internal_r+0x43c>
  20131c:	843ffc04 	addi	r16,r16,-16
  201320:	81000448 	cmpgei	r4,r16,17
  201324:	d8c01c17 	ldw	r3,112(sp)
  201328:	d8801b17 	ldw	r2,108(sp)
  20132c:	dd802704 	addi	r22,sp,156
  201330:	03000404 	movi	r12,16
  201334:	203fec1e 	bne	r4,zero,2012e8 <___vfprintf_internal_r+0xe50>
  201338:	8011883a 	mov	r8,r16
  20133c:	880f883a 	mov	r7,r17
  201340:	dc000f17 	ldw	r16,60(sp)
  201344:	dc400e17 	ldw	r17,56(sp)
  201348:	10800044 	addi	r2,r2,1
  20134c:	1a07883a 	add	r3,r3,r8
  201350:	d8801b15 	stw	r2,108(sp)
  201354:	b1c00015 	stw	r7,0(r22)
  201358:	b2000115 	stw	r8,4(r22)
  20135c:	d8c01c15 	stw	r3,112(sp)
  201360:	10800208 	cmpgei	r2,r2,8
  201364:	1001731e 	bne	r2,zero,201934 <___vfprintf_internal_r+0x149c>
  201368:	b5800204 	addi	r22,r22,8
  20136c:	003d3b06 	br	20085c <___vfprintf_internal_r+0x3c4>
  201370:	10c00060 	cmpeqi	r3,r2,1
  201374:	1803831e 	bne	r3,zero,202184 <___vfprintf_internal_r+0x1cec>
  201378:	108000a0 	cmpeqi	r2,r2,2
  20137c:	db000417 	ldw	r12,16(sp)
  201380:	103ea326 	beq	r2,zero,200e10 <___vfprintf_internal_r+0x978>
  201384:	d9000c17 	ldw	r4,48(sp)
  201388:	dc402704 	addi	r17,sp,156
  20138c:	a08003cc 	andi	r2,r20,15
  201390:	a806973a 	slli	r3,r21,28
  201394:	a028d13a 	srli	r20,r20,4
  201398:	2085883a 	add	r2,r4,r2
  20139c:	10800003 	ldbu	r2,0(r2)
  2013a0:	a82ad13a 	srli	r21,r21,4
  2013a4:	1d28b03a 	or	r20,r3,r20
  2013a8:	88bfffc5 	stb	r2,-1(r17)
  2013ac:	a544b03a 	or	r2,r20,r21
  2013b0:	8c7fffc4 	addi	r17,r17,-1
  2013b4:	103ff51e 	bne	r2,zero,20138c <___vfprintf_internal_r+0xef4>
  2013b8:	d8802704 	addi	r2,sp,156
  2013bc:	146bc83a 	sub	r21,r2,r17
  2013c0:	db000415 	stw	r12,16(sp)
  2013c4:	003e4b06 	br	200cf4 <___vfprintf_internal_r+0x85c>
  2013c8:	d9801a04 	addi	r6,sp,104
  2013cc:	900b883a 	mov	r5,r18
  2013d0:	9809883a 	mov	r4,r19
  2013d4:	02078e80 	call	2078e8 <__sprint_r>
  2013d8:	103d3826 	beq	r2,zero,2008bc <___vfprintf_internal_r+0x424>
  2013dc:	003d3d06 	br	2008d4 <___vfprintf_internal_r+0x43c>
  2013e0:	d8801b17 	ldw	r2,108(sp)
  2013e4:	01000874 	movhi	r4,33
  2013e8:	213f4304 	addi	r4,r4,-756
  2013ec:	10800044 	addi	r2,r2,1
  2013f0:	18c00044 	addi	r3,r3,1
  2013f4:	b1000015 	stw	r4,0(r22)
  2013f8:	01000044 	movi	r4,1
  2013fc:	d8801b15 	stw	r2,108(sp)
  201400:	b1000115 	stw	r4,4(r22)
  201404:	d8c01c15 	stw	r3,112(sp)
  201408:	10800208 	cmpgei	r2,r2,8
  20140c:	1003211e 	bne	r2,zero,202094 <___vfprintf_internal_r+0x1bfc>
  201410:	b5800204 	addi	r22,r22,8
  201414:	2802a51e 	bne	r5,zero,201eac <___vfprintf_internal_r+0x1a14>
  201418:	d8800417 	ldw	r2,16(sp)
  20141c:	d9000817 	ldw	r4,32(sp)
  201420:	1080004c 	andi	r2,r2,1
  201424:	1104b03a 	or	r2,r2,r4
  201428:	103d1926 	beq	r2,zero,200890 <___vfprintf_internal_r+0x3f8>
  20142c:	d8800d17 	ldw	r2,52(sp)
  201430:	d9000b17 	ldw	r4,44(sp)
  201434:	b0800015 	stw	r2,0(r22)
  201438:	d8801b17 	ldw	r2,108(sp)
  20143c:	20c7883a 	add	r3,r4,r3
  201440:	b1000115 	stw	r4,4(r22)
  201444:	10800044 	addi	r2,r2,1
  201448:	d8c01c15 	stw	r3,112(sp)
  20144c:	d8801b15 	stw	r2,108(sp)
  201450:	11000208 	cmpgei	r4,r2,8
  201454:	2003381e 	bne	r4,zero,202138 <___vfprintf_internal_r+0x1ca0>
  201458:	b5800204 	addi	r22,r22,8
  20145c:	d9000817 	ldw	r4,32(sp)
  201460:	10800044 	addi	r2,r2,1
  201464:	d8801b15 	stw	r2,108(sp)
  201468:	20c7883a 	add	r3,r4,r3
  20146c:	b4400015 	stw	r17,0(r22)
  201470:	b1000115 	stw	r4,4(r22)
  201474:	d8c01c15 	stw	r3,112(sp)
  201478:	10800208 	cmpgei	r2,r2,8
  20147c:	103d0326 	beq	r2,zero,20088c <___vfprintf_internal_r+0x3f4>
  201480:	d9801a04 	addi	r6,sp,104
  201484:	900b883a 	mov	r5,r18
  201488:	9809883a 	mov	r4,r19
  20148c:	02078e80 	call	2078e8 <__sprint_r>
  201490:	103d101e 	bne	r2,zero,2008d4 <___vfprintf_internal_r+0x43c>
  201494:	d8c01c17 	ldw	r3,112(sp)
  201498:	dd802704 	addi	r22,sp,156
  20149c:	003cfc06 	br	200890 <___vfprintf_internal_r+0x3f8>
  2014a0:	d8800817 	ldw	r2,32(sp)
  2014a4:	dd401b17 	ldw	r21,108(sp)
  2014a8:	18c00044 	addi	r3,r3,1
  2014ac:	10800088 	cmpgei	r2,r2,2
  2014b0:	ad400044 	addi	r21,r21,1
  2014b4:	b7000204 	addi	fp,r22,8
  2014b8:	1000e826 	beq	r2,zero,20185c <___vfprintf_internal_r+0x13c4>
  2014bc:	00800044 	movi	r2,1
  2014c0:	b0800115 	stw	r2,4(r22)
  2014c4:	b4400015 	stw	r17,0(r22)
  2014c8:	d8c01c15 	stw	r3,112(sp)
  2014cc:	dd401b15 	stw	r21,108(sp)
  2014d0:	a8800210 	cmplti	r2,r21,8
  2014d4:	1001ad26 	beq	r2,zero,201b8c <___vfprintf_internal_r+0x16f4>
  2014d8:	d8800b17 	ldw	r2,44(sp)
  2014dc:	d9000d17 	ldw	r4,52(sp)
  2014e0:	ad400044 	addi	r21,r21,1
  2014e4:	1887883a 	add	r3,r3,r2
  2014e8:	e0800115 	stw	r2,4(fp)
  2014ec:	e1000015 	stw	r4,0(fp)
  2014f0:	d8c01c15 	stw	r3,112(sp)
  2014f4:	dd401b15 	stw	r21,108(sp)
  2014f8:	a8800208 	cmpgei	r2,r21,8
  2014fc:	1001ac1e 	bne	r2,zero,201bb0 <___vfprintf_internal_r+0x1718>
  201500:	e7000204 	addi	fp,fp,8
  201504:	d9000917 	ldw	r4,36(sp)
  201508:	d9400a17 	ldw	r5,40(sp)
  20150c:	000d883a 	mov	r6,zero
  201510:	000f883a 	mov	r7,zero
  201514:	d8c00715 	stw	r3,28(sp)
  201518:	020be040 	call	20be04 <__eqdf2>
  20151c:	d8c00817 	ldw	r3,32(sp)
  201520:	1dbfffc4 	addi	r22,r3,-1
  201524:	d8c00717 	ldw	r3,28(sp)
  201528:	1000e426 	beq	r2,zero,2018bc <___vfprintf_internal_r+0x1424>
  20152c:	8a400044 	addi	r9,r17,1
  201530:	ad400044 	addi	r21,r21,1
  201534:	1d87883a 	add	r3,r3,r22
  201538:	e2400015 	stw	r9,0(fp)
  20153c:	e5800115 	stw	r22,4(fp)
  201540:	d8c01c15 	stw	r3,112(sp)
  201544:	dd401b15 	stw	r21,108(sp)
  201548:	a8800208 	cmpgei	r2,r21,8
  20154c:	1000cd1e 	bne	r2,zero,201884 <___vfprintf_internal_r+0x13ec>
  201550:	e7000204 	addi	fp,fp,8
  201554:	d9001017 	ldw	r4,64(sp)
  201558:	ad400044 	addi	r21,r21,1
  20155c:	d8801644 	addi	r2,sp,89
  201560:	20c7883a 	add	r3,r4,r3
  201564:	dd401b15 	stw	r21,108(sp)
  201568:	e0800015 	stw	r2,0(fp)
  20156c:	e1000115 	stw	r4,4(fp)
  201570:	d8c01c15 	stw	r3,112(sp)
  201574:	ad400208 	cmpgei	r21,r21,8
  201578:	a83fc11e 	bne	r21,zero,201480 <___vfprintf_internal_r+0xfe8>
  20157c:	e5800204 	addi	r22,fp,8
  201580:	003cc306 	br	200890 <___vfprintf_internal_r+0x3f8>
  201584:	db000417 	ldw	r12,16(sp)
  201588:	003e1d06 	br	200e00 <___vfprintf_internal_r+0x968>
  20158c:	03000874 	movhi	r12,33
  201590:	39000450 	cmplti	r4,r7,17
  201594:	d8801b17 	ldw	r2,108(sp)
  201598:	633f4804 	addi	r12,r12,-736
  20159c:	2000321e 	bne	r4,zero,201668 <___vfprintf_internal_r+0x11d0>
  2015a0:	dc401115 	stw	r17,68(sp)
  2015a4:	b009883a 	mov	r4,r22
  2015a8:	9023883a 	mov	r17,r18
  2015ac:	a82d883a 	mov	r22,r21
  2015b0:	ddc01215 	stw	r23,72(sp)
  2015b4:	03c00404 	movi	r15,16
  2015b8:	a02f883a 	mov	r23,r20
  2015bc:	db800e15 	stw	r14,56(sp)
  2015c0:	8029883a 	mov	r20,r16
  2015c4:	db400f15 	stw	r13,60(sp)
  2015c8:	402b883a 	mov	r21,r8
  2015cc:	3821883a 	mov	r16,r7
  2015d0:	6025883a 	mov	r18,r12
  2015d4:	00000406 	br	2015e8 <___vfprintf_internal_r+0x1150>
  2015d8:	843ffc04 	addi	r16,r16,-16
  2015dc:	81800448 	cmpgei	r6,r16,17
  2015e0:	21000204 	addi	r4,r4,8
  2015e4:	30001426 	beq	r6,zero,201638 <___vfprintf_internal_r+0x11a0>
  2015e8:	10800044 	addi	r2,r2,1
  2015ec:	18c00404 	addi	r3,r3,16
  2015f0:	24800015 	stw	r18,0(r4)
  2015f4:	23c00115 	stw	r15,4(r4)
  2015f8:	d8c01c15 	stw	r3,112(sp)
  2015fc:	d8801b15 	stw	r2,108(sp)
  201600:	11800208 	cmpgei	r6,r2,8
  201604:	303ff426 	beq	r6,zero,2015d8 <___vfprintf_internal_r+0x1140>
  201608:	d9801a04 	addi	r6,sp,104
  20160c:	880b883a 	mov	r5,r17
  201610:	9809883a 	mov	r4,r19
  201614:	02078e80 	call	2078e8 <__sprint_r>
  201618:	10017c1e 	bne	r2,zero,201c0c <___vfprintf_internal_r+0x1774>
  20161c:	843ffc04 	addi	r16,r16,-16
  201620:	81800448 	cmpgei	r6,r16,17
  201624:	d8c01c17 	ldw	r3,112(sp)
  201628:	d8801b17 	ldw	r2,108(sp)
  20162c:	d9002704 	addi	r4,sp,156
  201630:	03c00404 	movi	r15,16
  201634:	303fec1e 	bne	r6,zero,2015e8 <___vfprintf_internal_r+0x1150>
  201638:	800f883a 	mov	r7,r16
  20163c:	9019883a 	mov	r12,r18
  201640:	a021883a 	mov	r16,r20
  201644:	8825883a 	mov	r18,r17
  201648:	b829883a 	mov	r20,r23
  20164c:	db800e17 	ldw	r14,56(sp)
  201650:	db400f17 	ldw	r13,60(sp)
  201654:	ddc01217 	ldw	r23,72(sp)
  201658:	dc401117 	ldw	r17,68(sp)
  20165c:	a811883a 	mov	r8,r21
  201660:	b02b883a 	mov	r21,r22
  201664:	202d883a 	mov	r22,r4
  201668:	10800044 	addi	r2,r2,1
  20166c:	19c7883a 	add	r3,r3,r7
  201670:	d8801b15 	stw	r2,108(sp)
  201674:	b3000015 	stw	r12,0(r22)
  201678:	b1c00115 	stw	r7,4(r22)
  20167c:	d8c01c15 	stw	r3,112(sp)
  201680:	10800208 	cmpgei	r2,r2,8
  201684:	1001531e 	bne	r2,zero,201bd4 <___vfprintf_internal_r+0x173c>
  201688:	b5800204 	addi	r22,r22,8
  20168c:	003c5406 	br	2007e0 <___vfprintf_internal_r+0x348>
  201690:	d9801a04 	addi	r6,sp,104
  201694:	900b883a 	mov	r5,r18
  201698:	9809883a 	mov	r4,r19
  20169c:	da001115 	stw	r8,68(sp)
  2016a0:	db400f15 	stw	r13,60(sp)
  2016a4:	db800e15 	stw	r14,56(sp)
  2016a8:	02078e80 	call	2078e8 <__sprint_r>
  2016ac:	103c891e 	bne	r2,zero,2008d4 <___vfprintf_internal_r+0x43c>
  2016b0:	d8c01c17 	ldw	r3,112(sp)
  2016b4:	da001117 	ldw	r8,68(sp)
  2016b8:	db400f17 	ldw	r13,60(sp)
  2016bc:	db800e17 	ldw	r14,56(sp)
  2016c0:	dd802704 	addi	r22,sp,156
  2016c4:	003c5406 	br	200818 <___vfprintf_internal_r+0x380>
  2016c8:	d9801a04 	addi	r6,sp,104
  2016cc:	900b883a 	mov	r5,r18
  2016d0:	9809883a 	mov	r4,r19
  2016d4:	da000f15 	stw	r8,60(sp)
  2016d8:	db400e15 	stw	r13,56(sp)
  2016dc:	02078e80 	call	2078e8 <__sprint_r>
  2016e0:	103c7c1e 	bne	r2,zero,2008d4 <___vfprintf_internal_r+0x43c>
  2016e4:	d8c01c17 	ldw	r3,112(sp)
  2016e8:	da000f17 	ldw	r8,60(sp)
  2016ec:	db400e17 	ldw	r13,56(sp)
  2016f0:	dd802704 	addi	r22,sp,156
  2016f4:	003c5506 	br	20084c <___vfprintf_internal_r+0x3b4>
  2016f8:	d9401417 	ldw	r5,80(sp)
  2016fc:	017f380e 	bge	zero,r5,2013e0 <___vfprintf_internal_r+0xf48>
  201700:	d8800717 	ldw	r2,28(sp)
  201704:	d9000817 	ldw	r4,32(sp)
  201708:	102b883a 	mov	r21,r2
  20170c:	2080b316 	blt	r4,r2,2019dc <___vfprintf_internal_r+0x1544>
  201710:	05400a0e 	bge	zero,r21,20173c <___vfprintf_internal_r+0x12a4>
  201714:	d8801b17 	ldw	r2,108(sp)
  201718:	1d47883a 	add	r3,r3,r21
  20171c:	b4400015 	stw	r17,0(r22)
  201720:	10800044 	addi	r2,r2,1
  201724:	d8801b15 	stw	r2,108(sp)
  201728:	b5400115 	stw	r21,4(r22)
  20172c:	d8c01c15 	stw	r3,112(sp)
  201730:	10800208 	cmpgei	r2,r2,8
  201734:	1002cf1e 	bne	r2,zero,202274 <___vfprintf_internal_r+0x1ddc>
  201738:	b5800204 	addi	r22,r22,8
  20173c:	a800b516 	blt	r21,zero,201a14 <___vfprintf_internal_r+0x157c>
  201740:	d8800717 	ldw	r2,28(sp)
  201744:	156bc83a 	sub	r21,r2,r21
  201748:	0540c416 	blt	zero,r21,201a5c <___vfprintf_internal_r+0x15c4>
  20174c:	dd401417 	ldw	r21,80(sp)
  201750:	d8800817 	ldw	r2,32(sp)
  201754:	a880a40e 	bge	r21,r2,2019e8 <___vfprintf_internal_r+0x1550>
  201758:	d8800d17 	ldw	r2,52(sp)
  20175c:	d9000b17 	ldw	r4,44(sp)
  201760:	b0800015 	stw	r2,0(r22)
  201764:	d8801b17 	ldw	r2,108(sp)
  201768:	1907883a 	add	r3,r3,r4
  20176c:	b1000115 	stw	r4,4(r22)
  201770:	10800044 	addi	r2,r2,1
  201774:	d8801b15 	stw	r2,108(sp)
  201778:	d8c01c15 	stw	r3,112(sp)
  20177c:	10800208 	cmpgei	r2,r2,8
  201780:	1002b31e 	bne	r2,zero,202250 <___vfprintf_internal_r+0x1db8>
  201784:	b5800204 	addi	r22,r22,8
  201788:	d9000817 	ldw	r4,32(sp)
  20178c:	d9400717 	ldw	r5,28(sp)
  201790:	2545c83a 	sub	r2,r4,r21
  201794:	2149c83a 	sub	r4,r4,r5
  201798:	102b883a 	mov	r21,r2
  20179c:	2080010e 	bge	r4,r2,2017a4 <___vfprintf_internal_r+0x130c>
  2017a0:	202b883a 	mov	r21,r4
  2017a4:	05400c0e 	bge	zero,r21,2017d8 <___vfprintf_internal_r+0x1340>
  2017a8:	d9000717 	ldw	r4,28(sp)
  2017ac:	1d47883a 	add	r3,r3,r21
  2017b0:	b5400115 	stw	r21,4(r22)
  2017b4:	8913883a 	add	r9,r17,r4
  2017b8:	d9001b17 	ldw	r4,108(sp)
  2017bc:	b2400015 	stw	r9,0(r22)
  2017c0:	d8c01c15 	stw	r3,112(sp)
  2017c4:	21000044 	addi	r4,r4,1
  2017c8:	d9001b15 	stw	r4,108(sp)
  2017cc:	21000208 	cmpgei	r4,r4,8
  2017d0:	2002b31e 	bne	r4,zero,2022a0 <___vfprintf_internal_r+0x1e08>
  2017d4:	b5800204 	addi	r22,r22,8
  2017d8:	a800010e 	bge	r21,zero,2017e0 <___vfprintf_internal_r+0x1348>
  2017dc:	002b883a 	mov	r21,zero
  2017e0:	156bc83a 	sub	r21,r2,r21
  2017e4:	057c2a0e 	bge	zero,r21,200890 <___vfprintf_internal_r+0x3f8>
  2017e8:	01c00874 	movhi	r7,33
  2017ec:	a9000450 	cmplti	r4,r21,17
  2017f0:	d8801b17 	ldw	r2,108(sp)
  2017f4:	39ff4404 	addi	r7,r7,-752
  2017f8:	2001881e 	bne	r4,zero,201e1c <___vfprintf_internal_r+0x1984>
  2017fc:	07000404 	movi	fp,16
  201800:	3823883a 	mov	r17,r7
  201804:	00000406 	br	201818 <___vfprintf_internal_r+0x1380>
  201808:	b5800204 	addi	r22,r22,8
  20180c:	ad7ffc04 	addi	r21,r21,-16
  201810:	a9000448 	cmpgei	r4,r21,17
  201814:	20018026 	beq	r4,zero,201e18 <___vfprintf_internal_r+0x1980>
  201818:	10800044 	addi	r2,r2,1
  20181c:	18c00404 	addi	r3,r3,16
  201820:	b4400015 	stw	r17,0(r22)
  201824:	b7000115 	stw	fp,4(r22)
  201828:	d8c01c15 	stw	r3,112(sp)
  20182c:	d8801b15 	stw	r2,108(sp)
  201830:	11000208 	cmpgei	r4,r2,8
  201834:	203ff426 	beq	r4,zero,201808 <___vfprintf_internal_r+0x1370>
  201838:	d9801a04 	addi	r6,sp,104
  20183c:	900b883a 	mov	r5,r18
  201840:	9809883a 	mov	r4,r19
  201844:	02078e80 	call	2078e8 <__sprint_r>
  201848:	103c221e 	bne	r2,zero,2008d4 <___vfprintf_internal_r+0x43c>
  20184c:	d8c01c17 	ldw	r3,112(sp)
  201850:	d8801b17 	ldw	r2,108(sp)
  201854:	dd802704 	addi	r22,sp,156
  201858:	003fec06 	br	20180c <___vfprintf_internal_r+0x1374>
  20185c:	d8800417 	ldw	r2,16(sp)
  201860:	1080004c 	andi	r2,r2,1
  201864:	103f151e 	bne	r2,zero,2014bc <___vfprintf_internal_r+0x1024>
  201868:	00800044 	movi	r2,1
  20186c:	b0800115 	stw	r2,4(r22)
  201870:	b4400015 	stw	r17,0(r22)
  201874:	d8c01c15 	stw	r3,112(sp)
  201878:	dd401b15 	stw	r21,108(sp)
  20187c:	a8800210 	cmplti	r2,r21,8
  201880:	103f341e 	bne	r2,zero,201554 <___vfprintf_internal_r+0x10bc>
  201884:	d9801a04 	addi	r6,sp,104
  201888:	900b883a 	mov	r5,r18
  20188c:	9809883a 	mov	r4,r19
  201890:	02078e80 	call	2078e8 <__sprint_r>
  201894:	103c0f1e 	bne	r2,zero,2008d4 <___vfprintf_internal_r+0x43c>
  201898:	d8c01c17 	ldw	r3,112(sp)
  20189c:	dd401b17 	ldw	r21,108(sp)
  2018a0:	df002704 	addi	fp,sp,156
  2018a4:	003f2b06 	br	201554 <___vfprintf_internal_r+0x10bc>
  2018a8:	4002361e 	bne	r8,zero,202184 <___vfprintf_internal_r+0x1cec>
  2018ac:	0011883a 	mov	r8,zero
  2018b0:	002b883a 	mov	r21,zero
  2018b4:	dc402704 	addi	r17,sp,156
  2018b8:	003d0e06 	br	200cf4 <___vfprintf_internal_r+0x85c>
  2018bc:	05bf250e 	bge	zero,r22,201554 <___vfprintf_internal_r+0x10bc>
  2018c0:	01c00874 	movhi	r7,33
  2018c4:	b0800450 	cmplti	r2,r22,17
  2018c8:	39ff4404 	addi	r7,r7,-752
  2018cc:	1001731e 	bne	r2,zero,201e9c <___vfprintf_internal_r+0x1a04>
  2018d0:	dc000715 	stw	r16,28(sp)
  2018d4:	04400404 	movi	r17,16
  2018d8:	3821883a 	mov	r16,r7
  2018dc:	00000406 	br	2018f0 <___vfprintf_internal_r+0x1458>
  2018e0:	e7000204 	addi	fp,fp,8
  2018e4:	b5bffc04 	addi	r22,r22,-16
  2018e8:	b0800448 	cmpgei	r2,r22,17
  2018ec:	10016926 	beq	r2,zero,201e94 <___vfprintf_internal_r+0x19fc>
  2018f0:	ad400044 	addi	r21,r21,1
  2018f4:	18c00404 	addi	r3,r3,16
  2018f8:	e4000015 	stw	r16,0(fp)
  2018fc:	e4400115 	stw	r17,4(fp)
  201900:	d8c01c15 	stw	r3,112(sp)
  201904:	dd401b15 	stw	r21,108(sp)
  201908:	a8800208 	cmpgei	r2,r21,8
  20190c:	103ff426 	beq	r2,zero,2018e0 <___vfprintf_internal_r+0x1448>
  201910:	d9801a04 	addi	r6,sp,104
  201914:	900b883a 	mov	r5,r18
  201918:	9809883a 	mov	r4,r19
  20191c:	02078e80 	call	2078e8 <__sprint_r>
  201920:	103bec1e 	bne	r2,zero,2008d4 <___vfprintf_internal_r+0x43c>
  201924:	d8c01c17 	ldw	r3,112(sp)
  201928:	dd401b17 	ldw	r21,108(sp)
  20192c:	df002704 	addi	fp,sp,156
  201930:	003fec06 	br	2018e4 <___vfprintf_internal_r+0x144c>
  201934:	d9801a04 	addi	r6,sp,104
  201938:	900b883a 	mov	r5,r18
  20193c:	9809883a 	mov	r4,r19
  201940:	02078e80 	call	2078e8 <__sprint_r>
  201944:	103be31e 	bne	r2,zero,2008d4 <___vfprintf_internal_r+0x43c>
  201948:	d8c01c17 	ldw	r3,112(sp)
  20194c:	dd802704 	addi	r22,sp,156
  201950:	003bc206 	br	20085c <___vfprintf_internal_r+0x3c4>
  201954:	002b883a 	mov	r21,zero
  201958:	003d7306 	br	200f28 <___vfprintf_internal_r+0xa90>
  20195c:	a02bd7fa 	srai	r21,r20,31
  201960:	a805883a 	mov	r2,r21
  201964:	003cd106 	br	200cac <___vfprintf_internal_r+0x814>
  201968:	d8800417 	ldw	r2,16(sp)
  20196c:	1080004c 	andi	r2,r2,1
  201970:	103bc726 	beq	r2,zero,200890 <___vfprintf_internal_r+0x3f8>
  201974:	003de706 	br	201114 <___vfprintf_internal_r+0xc7c>
  201978:	63000414 	ori	r12,r12,16
  20197c:	003b1206 	br	2005c8 <___vfprintf_internal_r+0x130>
  201980:	bac00007 	ldb	r11,0(r23)
  201984:	d8800615 	stw	r2,24(sp)
  201988:	003b0f06 	br	2005c8 <___vfprintf_internal_r+0x130>
  20198c:	dc402704 	addi	r17,sp,156
  201990:	003cd806 	br	200cf4 <___vfprintf_internal_r+0x85c>
  201994:	18800017 	ldw	r2,0(r3)
  201998:	d8800915 	stw	r2,36(sp)
  20199c:	18800117 	ldw	r2,4(r3)
  2019a0:	d8800a15 	stw	r2,40(sp)
  2019a4:	003c3e06 	br	200aa0 <___vfprintf_internal_r+0x608>
  2019a8:	00800c04 	movi	r2,48
  2019ac:	d8801385 	stb	r2,78(sp)
  2019b0:	df0013c5 	stb	fp,79(sp)
  2019b4:	63000094 	ori	r12,r12,2
  2019b8:	00800084 	movi	r2,2
  2019bc:	003c0206 	br	2009c8 <___vfprintf_internal_r+0x530>
  2019c0:	d9400517 	ldw	r5,20(sp)
  2019c4:	20800017 	ldw	r2,0(r4)
  2019c8:	d8c00615 	stw	r3,24(sp)
  2019cc:	2809d7fa 	srai	r4,r5,31
  2019d0:	11400015 	stw	r5,0(r2)
  2019d4:	11000115 	stw	r4,4(r2)
  2019d8:	003ae306 	br	200568 <___vfprintf_internal_r+0xd0>
  2019dc:	202b883a 	mov	r21,r4
  2019e0:	057f4c16 	blt	zero,r21,201714 <___vfprintf_internal_r+0x127c>
  2019e4:	003f5506 	br	20173c <___vfprintf_internal_r+0x12a4>
  2019e8:	d8800417 	ldw	r2,16(sp)
  2019ec:	1080004c 	andi	r2,r2,1
  2019f0:	103f591e 	bne	r2,zero,201758 <___vfprintf_internal_r+0x12c0>
  2019f4:	d9000817 	ldw	r4,32(sp)
  2019f8:	d9400717 	ldw	r5,28(sp)
  2019fc:	2545c83a 	sub	r2,r4,r21
  201a00:	2179c83a 	sub	fp,r4,r5
  201a04:	102b883a 	mov	r21,r2
  201a08:	e0bf730e 	bge	fp,r2,2017d8 <___vfprintf_internal_r+0x1340>
  201a0c:	e02b883a 	mov	r21,fp
  201a10:	003f7106 	br	2017d8 <___vfprintf_internal_r+0x1340>
  201a14:	002b883a 	mov	r21,zero
  201a18:	003f4906 	br	201740 <___vfprintf_internal_r+0x12a8>
  201a1c:	d9801a04 	addi	r6,sp,104
  201a20:	900b883a 	mov	r5,r18
  201a24:	9809883a 	mov	r4,r19
  201a28:	02078e80 	call	2078e8 <__sprint_r>
  201a2c:	103ba91e 	bne	r2,zero,2008d4 <___vfprintf_internal_r+0x43c>
  201a30:	d8c01c17 	ldw	r3,112(sp)
  201a34:	dd802704 	addi	r22,sp,156
  201a38:	003dc206 	br	201144 <___vfprintf_internal_r+0xcac>
  201a3c:	408001f0 	cmpltui	r2,r8,7
  201a40:	402b883a 	mov	r21,r8
  201a44:	1001a026 	beq	r2,zero,2020c8 <___vfprintf_internal_r+0x1c30>
  201a48:	04400874 	movhi	r17,33
  201a4c:	a829883a 	mov	r20,r21
  201a50:	d8c00615 	stw	r3,24(sp)
  201a54:	8c7f4104 	addi	r17,r17,-764
  201a58:	003b5406 	br	2007ac <___vfprintf_internal_r+0x314>
  201a5c:	01c00874 	movhi	r7,33
  201a60:	a9000450 	cmplti	r4,r21,17
  201a64:	d8801b17 	ldw	r2,108(sp)
  201a68:	39ff4404 	addi	r7,r7,-752
  201a6c:	20017b1e 	bne	r4,zero,20205c <___vfprintf_internal_r+0x1bc4>
  201a70:	dc000e15 	stw	r16,56(sp)
  201a74:	07000404 	movi	fp,16
  201a78:	3821883a 	mov	r16,r7
  201a7c:	00000406 	br	201a90 <___vfprintf_internal_r+0x15f8>
  201a80:	b5800204 	addi	r22,r22,8
  201a84:	ad7ffc04 	addi	r21,r21,-16
  201a88:	a9000448 	cmpgei	r4,r21,17
  201a8c:	20017126 	beq	r4,zero,202054 <___vfprintf_internal_r+0x1bbc>
  201a90:	10800044 	addi	r2,r2,1
  201a94:	18c00404 	addi	r3,r3,16
  201a98:	b4000015 	stw	r16,0(r22)
  201a9c:	b7000115 	stw	fp,4(r22)
  201aa0:	d8c01c15 	stw	r3,112(sp)
  201aa4:	d8801b15 	stw	r2,108(sp)
  201aa8:	11000208 	cmpgei	r4,r2,8
  201aac:	203ff426 	beq	r4,zero,201a80 <___vfprintf_internal_r+0x15e8>
  201ab0:	d9801a04 	addi	r6,sp,104
  201ab4:	900b883a 	mov	r5,r18
  201ab8:	9809883a 	mov	r4,r19
  201abc:	02078e80 	call	2078e8 <__sprint_r>
  201ac0:	103b841e 	bne	r2,zero,2008d4 <___vfprintf_internal_r+0x43c>
  201ac4:	d8c01c17 	ldw	r3,112(sp)
  201ac8:	d8801b17 	ldw	r2,108(sp)
  201acc:	dd802704 	addi	r22,sp,156
  201ad0:	003fec06 	br	201a84 <___vfprintf_internal_r+0x15ec>
  201ad4:	dc402704 	addi	r17,sp,156
  201ad8:	a805883a 	mov	r2,r21
  201adc:	dc000715 	stw	r16,28(sp)
  201ae0:	902b883a 	mov	r21,r18
  201ae4:	8821883a 	mov	r16,r17
  201ae8:	db000415 	stw	r12,16(sp)
  201aec:	a023883a 	mov	r17,r20
  201af0:	da000e15 	stw	r8,56(sp)
  201af4:	9829883a 	mov	r20,r19
  201af8:	1025883a 	mov	r18,r2
  201afc:	6827883a 	mov	r19,r13
  201b00:	8809883a 	mov	r4,r17
  201b04:	900b883a 	mov	r5,r18
  201b08:	01800284 	movi	r6,10
  201b0c:	000f883a 	mov	r7,zero
  201b10:	020a4600 	call	20a460 <__umoddi3>
  201b14:	10800c04 	addi	r2,r2,48
  201b18:	8809883a 	mov	r4,r17
  201b1c:	900b883a 	mov	r5,r18
  201b20:	01800284 	movi	r6,10
  201b24:	000f883a 	mov	r7,zero
  201b28:	80bfffc5 	stb	r2,-1(r16)
  201b2c:	0209e400 	call	209e40 <__udivdi3>
  201b30:	900d883a 	mov	r6,r18
  201b34:	880f883a 	mov	r7,r17
  201b38:	843fffc4 	addi	r16,r16,-1
  201b3c:	1023883a 	mov	r17,r2
  201b40:	1825883a 	mov	r18,r3
  201b44:	303fee1e 	bne	r6,zero,201b00 <___vfprintf_internal_r+0x1668>
  201b48:	39c002a8 	cmpgeui	r7,r7,10
  201b4c:	383fec1e 	bne	r7,zero,201b00 <___vfprintf_internal_r+0x1668>
  201b50:	8023883a 	mov	r17,r16
  201b54:	d8802704 	addi	r2,sp,156
  201b58:	981b883a 	mov	r13,r19
  201b5c:	a825883a 	mov	r18,r21
  201b60:	dc000717 	ldw	r16,28(sp)
  201b64:	da000e17 	ldw	r8,56(sp)
  201b68:	a027883a 	mov	r19,r20
  201b6c:	146bc83a 	sub	r21,r2,r17
  201b70:	003c6006 	br	200cf4 <___vfprintf_internal_r+0x85c>
  201b74:	d8800617 	ldw	r2,24(sp)
  201b78:	10800017 	ldw	r2,0(r2)
  201b7c:	d8c00615 	stw	r3,24(sp)
  201b80:	d8c00517 	ldw	r3,20(sp)
  201b84:	10c00015 	stw	r3,0(r2)
  201b88:	003a7706 	br	200568 <___vfprintf_internal_r+0xd0>
  201b8c:	d9801a04 	addi	r6,sp,104
  201b90:	900b883a 	mov	r5,r18
  201b94:	9809883a 	mov	r4,r19
  201b98:	02078e80 	call	2078e8 <__sprint_r>
  201b9c:	103b4d1e 	bne	r2,zero,2008d4 <___vfprintf_internal_r+0x43c>
  201ba0:	d8c01c17 	ldw	r3,112(sp)
  201ba4:	dd401b17 	ldw	r21,108(sp)
  201ba8:	df002704 	addi	fp,sp,156
  201bac:	003e4a06 	br	2014d8 <___vfprintf_internal_r+0x1040>
  201bb0:	d9801a04 	addi	r6,sp,104
  201bb4:	900b883a 	mov	r5,r18
  201bb8:	9809883a 	mov	r4,r19
  201bbc:	02078e80 	call	2078e8 <__sprint_r>
  201bc0:	103b441e 	bne	r2,zero,2008d4 <___vfprintf_internal_r+0x43c>
  201bc4:	d8c01c17 	ldw	r3,112(sp)
  201bc8:	dd401b17 	ldw	r21,108(sp)
  201bcc:	df002704 	addi	fp,sp,156
  201bd0:	003e4c06 	br	201504 <___vfprintf_internal_r+0x106c>
  201bd4:	d9801a04 	addi	r6,sp,104
  201bd8:	900b883a 	mov	r5,r18
  201bdc:	9809883a 	mov	r4,r19
  201be0:	da001115 	stw	r8,68(sp)
  201be4:	db400f15 	stw	r13,60(sp)
  201be8:	db800e15 	stw	r14,56(sp)
  201bec:	02078e80 	call	2078e8 <__sprint_r>
  201bf0:	103b381e 	bne	r2,zero,2008d4 <___vfprintf_internal_r+0x43c>
  201bf4:	d8c01c17 	ldw	r3,112(sp)
  201bf8:	da001117 	ldw	r8,68(sp)
  201bfc:	db400f17 	ldw	r13,60(sp)
  201c00:	db800e17 	ldw	r14,56(sp)
  201c04:	dd802704 	addi	r22,sp,156
  201c08:	003af506 	br	2007e0 <___vfprintf_internal_r+0x348>
  201c0c:	8825883a 	mov	r18,r17
  201c10:	003b3006 	br	2008d4 <___vfprintf_internal_r+0x43c>
  201c14:	d9000917 	ldw	r4,36(sp)
  201c18:	d9400a17 	ldw	r5,40(sp)
  201c1c:	da000615 	stw	r8,24(sp)
  201c20:	200d883a 	mov	r6,r4
  201c24:	280f883a 	mov	r7,r5
  201c28:	db000415 	stw	r12,16(sp)
  201c2c:	020d10c0 	call	20d10c <__unorddf2>
  201c30:	db000417 	ldw	r12,16(sp)
  201c34:	da000617 	ldw	r8,24(sp)
  201c38:	1001f51e 	bne	r2,zero,202410 <___vfprintf_internal_r+0x1f78>
  201c3c:	057ff7c4 	movi	r21,-33
  201c40:	40bfffe0 	cmpeqi	r2,r8,-1
  201c44:	e56a703a 	and	r21,fp,r21
  201c48:	1001931e 	bne	r2,zero,202298 <___vfprintf_internal_r+0x1e00>
  201c4c:	a88011d8 	cmpnei	r2,r21,71
  201c50:	10013626 	beq	r2,zero,20212c <___vfprintf_internal_r+0x1c94>
  201c54:	60804014 	ori	r2,r12,256
  201c58:	d8800415 	stw	r2,16(sp)
  201c5c:	d8800a17 	ldw	r2,40(sp)
  201c60:	10011516 	blt	r2,zero,2020b8 <___vfprintf_internal_r+0x1c20>
  201c64:	dd000a17 	ldw	r20,40(sp)
  201c68:	d8000605 	stb	zero,24(sp)
  201c6c:	e08019a0 	cmpeqi	r2,fp,102
  201c70:	d8800f15 	stw	r2,60(sp)
  201c74:	1000b91e 	bne	r2,zero,201f5c <___vfprintf_internal_r+0x1ac4>
  201c78:	e08011a0 	cmpeqi	r2,fp,70
  201c7c:	1000b71e 	bne	r2,zero,201f5c <___vfprintf_internal_r+0x1ac4>
  201c80:	a8801158 	cmpnei	r2,r21,69
  201c84:	10014126 	beq	r2,zero,20218c <___vfprintf_internal_r+0x1cf4>
  201c88:	d8801804 	addi	r2,sp,96
  201c8c:	d8800315 	stw	r2,12(sp)
  201c90:	d9400917 	ldw	r5,36(sp)
  201c94:	d8801504 	addi	r2,sp,84
  201c98:	d8800215 	stw	r2,8(sp)
  201c9c:	d8801404 	addi	r2,sp,80
  201ca0:	da000015 	stw	r8,0(sp)
  201ca4:	9809883a 	mov	r4,r19
  201ca8:	d8800115 	stw	r2,4(sp)
  201cac:	01c00084 	movi	r7,2
  201cb0:	a00d883a 	mov	r6,r20
  201cb4:	db000815 	stw	r12,32(sp)
  201cb8:	da000715 	stw	r8,28(sp)
  201cbc:	02029100 	call	202910 <_dtoa_r>
  201cc0:	da000717 	ldw	r8,28(sp)
  201cc4:	e10019d8 	cmpnei	r4,fp,103
  201cc8:	db000817 	ldw	r12,32(sp)
  201ccc:	1023883a 	mov	r17,r2
  201cd0:	4007883a 	mov	r3,r8
  201cd4:	2001411e 	bne	r4,zero,2021dc <___vfprintf_internal_r+0x1d44>
  201cd8:	6080004c 	andi	r2,r12,1
  201cdc:	1001411e 	bne	r2,zero,2021e4 <___vfprintf_internal_r+0x1d4c>
  201ce0:	d8801417 	ldw	r2,80(sp)
  201ce4:	ad4011e0 	cmpeqi	r21,r21,71
  201ce8:	d8800715 	stw	r2,28(sp)
  201cec:	d8801817 	ldw	r2,96(sp)
  201cf0:	1445c83a 	sub	r2,r2,r17
  201cf4:	d8800815 	stw	r2,32(sp)
  201cf8:	a8000526 	beq	r21,zero,201d10 <___vfprintf_internal_r+0x1878>
  201cfc:	d8c00717 	ldw	r3,28(sp)
  201d00:	18bfff50 	cmplti	r2,r3,-3
  201d04:	1000011e 	bne	r2,zero,201d0c <___vfprintf_internal_r+0x1874>
  201d08:	40c1460e 	bge	r8,r3,202224 <___vfprintf_internal_r+0x1d8c>
  201d0c:	e73fff84 	addi	fp,fp,-2
  201d10:	d8800717 	ldw	r2,28(sp)
  201d14:	df001645 	stb	fp,89(sp)
  201d18:	157fffc4 	addi	r21,r2,-1
  201d1c:	dd401415 	stw	r21,80(sp)
  201d20:	a801ab16 	blt	r21,zero,2023d0 <___vfprintf_internal_r+0x1f38>
  201d24:	00800ac4 	movi	r2,43
  201d28:	d8801685 	stb	r2,90(sp)
  201d2c:	a8800290 	cmplti	r2,r21,10
  201d30:	1001a01e 	bne	r2,zero,2023b4 <___vfprintf_internal_r+0x1f1c>
  201d34:	d98019c4 	addi	r6,sp,103
  201d38:	9029883a 	mov	r20,r18
  201d3c:	dc400715 	stw	r17,28(sp)
  201d40:	8025883a 	mov	r18,r16
  201d44:	db000f15 	stw	r12,60(sp)
  201d48:	3021883a 	mov	r16,r6
  201d4c:	a809883a 	mov	r4,r21
  201d50:	01400284 	movi	r5,10
  201d54:	020aaa40 	call	20aaa4 <__modsi3>
  201d58:	10800c04 	addi	r2,r2,48
  201d5c:	a809883a 	mov	r4,r21
  201d60:	80bfffc5 	stb	r2,-1(r16)
  201d64:	01400284 	movi	r5,10
  201d68:	020aa240 	call	20aa24 <__divsi3>
  201d6c:	a9001908 	cmpgei	r4,r21,100
  201d70:	8023883a 	mov	r17,r16
  201d74:	102b883a 	mov	r21,r2
  201d78:	843fffc4 	addi	r16,r16,-1
  201d7c:	203ff31e 	bne	r4,zero,201d4c <___vfprintf_internal_r+0x18b4>
  201d80:	800d883a 	mov	r6,r16
  201d84:	11000c04 	addi	r4,r2,48
  201d88:	9021883a 	mov	r16,r18
  201d8c:	a025883a 	mov	r18,r20
  201d90:	8829883a 	mov	r20,r17
  201d94:	a0bfff84 	addi	r2,r20,-2
  201d98:	313fffc5 	stb	r4,-1(r6)
  201d9c:	d8c019c4 	addi	r3,sp,103
  201da0:	db000f17 	ldw	r12,60(sp)
  201da4:	dc400717 	ldw	r17,28(sp)
  201da8:	10c1be2e 	bgeu	r2,r3,2024a4 <___vfprintf_internal_r+0x200c>
  201dac:	d8c016c4 	addi	r3,sp,91
  201db0:	00000106 	br	201db8 <___vfprintf_internal_r+0x1920>
  201db4:	11000003 	ldbu	r4,0(r2)
  201db8:	19000005 	stb	r4,0(r3)
  201dbc:	10800044 	addi	r2,r2,1
  201dc0:	d90019c4 	addi	r4,sp,103
  201dc4:	18c00044 	addi	r3,r3,1
  201dc8:	113ffa1e 	bne	r2,r4,201db4 <___vfprintf_internal_r+0x191c>
  201dcc:	d8801a44 	addi	r2,sp,105
  201dd0:	d8c016c4 	addi	r3,sp,91
  201dd4:	1505c83a 	sub	r2,r2,r20
  201dd8:	1885883a 	add	r2,r3,r2
  201ddc:	d8c01644 	addi	r3,sp,89
  201de0:	10c5c83a 	sub	r2,r2,r3
  201de4:	d8801015 	stw	r2,64(sp)
  201de8:	d8c00817 	ldw	r3,32(sp)
  201dec:	d9001017 	ldw	r4,64(sp)
  201df0:	18800088 	cmpgei	r2,r3,2
  201df4:	192b883a 	add	r21,r3,r4
  201df8:	10018126 	beq	r2,zero,202400 <___vfprintf_internal_r+0x1f68>
  201dfc:	d8800b17 	ldw	r2,44(sp)
  201e00:	a8ab883a 	add	r21,r21,r2
  201e04:	a829883a 	mov	r20,r21
  201e08:	a800010e 	bge	r21,zero,201e10 <___vfprintf_internal_r+0x1978>
  201e0c:	0029883a 	mov	r20,zero
  201e10:	d8000715 	stw	zero,28(sp)
  201e14:	00008406 	br	202028 <___vfprintf_internal_r+0x1b90>
  201e18:	880f883a 	mov	r7,r17
  201e1c:	10800044 	addi	r2,r2,1
  201e20:	1d47883a 	add	r3,r3,r21
  201e24:	b1c00015 	stw	r7,0(r22)
  201e28:	003a9306 	br	200878 <___vfprintf_internal_r+0x3e0>
  201e2c:	d9801a04 	addi	r6,sp,104
  201e30:	900b883a 	mov	r5,r18
  201e34:	9809883a 	mov	r4,r19
  201e38:	02078e80 	call	2078e8 <__sprint_r>
  201e3c:	103aa51e 	bne	r2,zero,2008d4 <___vfprintf_internal_r+0x43c>
  201e40:	d8c01c17 	ldw	r3,112(sp)
  201e44:	dd802704 	addi	r22,sp,156
  201e48:	003caf06 	br	201108 <___vfprintf_internal_r+0xc70>
  201e4c:	d9801a04 	addi	r6,sp,104
  201e50:	900b883a 	mov	r5,r18
  201e54:	9809883a 	mov	r4,r19
  201e58:	da000e15 	stw	r8,56(sp)
  201e5c:	02078e80 	call	2078e8 <__sprint_r>
  201e60:	103a9c1e 	bne	r2,zero,2008d4 <___vfprintf_internal_r+0x43c>
  201e64:	d8c01c17 	ldw	r3,112(sp)
  201e68:	da000e17 	ldw	r8,56(sp)
  201e6c:	dd802704 	addi	r22,sp,156
  201e70:	003a7806 	br	200854 <___vfprintf_internal_r+0x3bc>
  201e74:	8809883a 	mov	r4,r17
  201e78:	db000415 	stw	r12,16(sp)
  201e7c:	d8c00615 	stw	r3,24(sp)
  201e80:	02004000 	call	200400 <strlen>
  201e84:	db000417 	ldw	r12,16(sp)
  201e88:	102b883a 	mov	r21,r2
  201e8c:	1029883a 	mov	r20,r2
  201e90:	003a4606 	br	2007ac <___vfprintf_internal_r+0x314>
  201e94:	800f883a 	mov	r7,r16
  201e98:	dc000717 	ldw	r16,28(sp)
  201e9c:	ad400044 	addi	r21,r21,1
  201ea0:	1d87883a 	add	r3,r3,r22
  201ea4:	e1c00015 	stw	r7,0(fp)
  201ea8:	003da406 	br	20153c <___vfprintf_internal_r+0x10a4>
  201eac:	d8800d17 	ldw	r2,52(sp)
  201eb0:	d9000b17 	ldw	r4,44(sp)
  201eb4:	b0800015 	stw	r2,0(r22)
  201eb8:	d8801b17 	ldw	r2,108(sp)
  201ebc:	20c7883a 	add	r3,r4,r3
  201ec0:	b1000115 	stw	r4,4(r22)
  201ec4:	10800044 	addi	r2,r2,1
  201ec8:	d8c01c15 	stw	r3,112(sp)
  201ecc:	d8801b15 	stw	r2,108(sp)
  201ed0:	11000208 	cmpgei	r4,r2,8
  201ed4:	2000981e 	bne	r4,zero,202138 <___vfprintf_internal_r+0x1ca0>
  201ed8:	b5800204 	addi	r22,r22,8
  201edc:	283d5f0e 	bge	r5,zero,20145c <___vfprintf_internal_r+0xfc4>
  201ee0:	01c00874 	movhi	r7,33
  201ee4:	293ffc08 	cmpgei	r4,r5,-16
  201ee8:	39ff4404 	addi	r7,r7,-752
  201eec:	0179c83a 	sub	fp,zero,r5
  201ef0:	2001151e 	bne	r4,zero,202348 <___vfprintf_internal_r+0x1eb0>
  201ef4:	dc000715 	stw	r16,28(sp)
  201ef8:	05400404 	movi	r21,16
  201efc:	9021883a 	mov	r16,r18
  201f00:	3825883a 	mov	r18,r7
  201f04:	00000406 	br	201f18 <___vfprintf_internal_r+0x1a80>
  201f08:	b5800204 	addi	r22,r22,8
  201f0c:	e73ffc04 	addi	fp,fp,-16
  201f10:	e1800448 	cmpgei	r6,fp,17
  201f14:	30010926 	beq	r6,zero,20233c <___vfprintf_internal_r+0x1ea4>
  201f18:	10800044 	addi	r2,r2,1
  201f1c:	18c00404 	addi	r3,r3,16
  201f20:	b4800015 	stw	r18,0(r22)
  201f24:	b5400115 	stw	r21,4(r22)
  201f28:	d8c01c15 	stw	r3,112(sp)
  201f2c:	d8801b15 	stw	r2,108(sp)
  201f30:	11800208 	cmpgei	r6,r2,8
  201f34:	303ff426 	beq	r6,zero,201f08 <___vfprintf_internal_r+0x1a70>
  201f38:	d9801a04 	addi	r6,sp,104
  201f3c:	800b883a 	mov	r5,r16
  201f40:	9809883a 	mov	r4,r19
  201f44:	02078e80 	call	2078e8 <__sprint_r>
  201f48:	1001411e 	bne	r2,zero,202450 <___vfprintf_internal_r+0x1fb8>
  201f4c:	d8c01c17 	ldw	r3,112(sp)
  201f50:	d8801b17 	ldw	r2,108(sp)
  201f54:	dd802704 	addi	r22,sp,156
  201f58:	003fec06 	br	201f0c <___vfprintf_internal_r+0x1a74>
  201f5c:	d8801804 	addi	r2,sp,96
  201f60:	d8800315 	stw	r2,12(sp)
  201f64:	d9400917 	ldw	r5,36(sp)
  201f68:	d8801504 	addi	r2,sp,84
  201f6c:	d8800215 	stw	r2,8(sp)
  201f70:	d8801404 	addi	r2,sp,80
  201f74:	da000015 	stw	r8,0(sp)
  201f78:	d8800115 	stw	r2,4(sp)
  201f7c:	01c000c4 	movi	r7,3
  201f80:	a00d883a 	mov	r6,r20
  201f84:	9809883a 	mov	r4,r19
  201f88:	db000815 	stw	r12,32(sp)
  201f8c:	da000715 	stw	r8,28(sp)
  201f90:	02029100 	call	202910 <_dtoa_r>
  201f94:	da000717 	ldw	r8,28(sp)
  201f98:	1023883a 	mov	r17,r2
  201f9c:	db000817 	ldw	r12,32(sp)
  201fa0:	1207883a 	add	r3,r2,r8
  201fa4:	88800007 	ldb	r2,0(r17)
  201fa8:	10800c20 	cmpeqi	r2,r2,48
  201fac:	10004f1e 	bne	r2,zero,2020ec <___vfprintf_internal_r+0x1c54>
  201fb0:	d8801417 	ldw	r2,80(sp)
  201fb4:	1893883a 	add	r9,r3,r2
  201fb8:	d9000917 	ldw	r4,36(sp)
  201fbc:	000d883a 	mov	r6,zero
  201fc0:	000f883a 	mov	r7,zero
  201fc4:	a00b883a 	mov	r5,r20
  201fc8:	da401115 	stw	r9,68(sp)
  201fcc:	da000815 	stw	r8,32(sp)
  201fd0:	db000715 	stw	r12,28(sp)
  201fd4:	020be040 	call	20be04 <__eqdf2>
  201fd8:	db000717 	ldw	r12,28(sp)
  201fdc:	da000817 	ldw	r8,32(sp)
  201fe0:	da401117 	ldw	r9,68(sp)
  201fe4:	1000811e 	bne	r2,zero,2021ec <___vfprintf_internal_r+0x1d54>
  201fe8:	4805883a 	mov	r2,r9
  201fec:	d8c01417 	ldw	r3,80(sp)
  201ff0:	1445c83a 	sub	r2,r2,r17
  201ff4:	ad4011d8 	cmpnei	r21,r21,71
  201ff8:	d8c00715 	stw	r3,28(sp)
  201ffc:	d8800815 	stw	r2,32(sp)
  202000:	a83f3e26 	beq	r21,zero,201cfc <___vfprintf_internal_r+0x1864>
  202004:	d8800f17 	ldw	r2,60(sp)
  202008:	103f4126 	beq	r2,zero,201d10 <___vfprintf_internal_r+0x1878>
  20200c:	d8c00717 	ldw	r3,28(sp)
  202010:	6080004c 	andi	r2,r12,1
  202014:	1204b03a 	or	r2,r2,r8
  202018:	00c1050e 	bge	zero,r3,202430 <___vfprintf_internal_r+0x1f98>
  20201c:	1000f11e 	bne	r2,zero,2023e4 <___vfprintf_internal_r+0x1f4c>
  202020:	dd400717 	ldw	r21,28(sp)
  202024:	a829883a 	mov	r20,r21
  202028:	d8800607 	ldb	r2,24(sp)
  20202c:	10007826 	beq	r2,zero,202210 <___vfprintf_internal_r+0x1d78>
  202030:	00800b44 	movi	r2,45
  202034:	d8801345 	stb	r2,77(sp)
  202038:	d8800e17 	ldw	r2,56(sp)
  20203c:	0011883a 	mov	r8,zero
  202040:	d8800615 	stw	r2,24(sp)
  202044:	003b3306 	br	200d14 <___vfprintf_internal_r+0x87c>
  202048:	04400874 	movhi	r17,33
  20204c:	8c7f3304 	addi	r17,r17,-820
  202050:	003ab806 	br	200b34 <___vfprintf_internal_r+0x69c>
  202054:	800f883a 	mov	r7,r16
  202058:	dc000e17 	ldw	r16,56(sp)
  20205c:	10800044 	addi	r2,r2,1
  202060:	1d47883a 	add	r3,r3,r21
  202064:	d8801b15 	stw	r2,108(sp)
  202068:	b1c00015 	stw	r7,0(r22)
  20206c:	b5400115 	stw	r21,4(r22)
  202070:	d8c01c15 	stw	r3,112(sp)
  202074:	10800208 	cmpgei	r2,r2,8
  202078:	10003a1e 	bne	r2,zero,202164 <___vfprintf_internal_r+0x1ccc>
  20207c:	b5800204 	addi	r22,r22,8
  202080:	003db206 	br	20174c <___vfprintf_internal_r+0x12b4>
  202084:	00800b44 	movi	r2,45
  202088:	d8801345 	stb	r2,77(sp)
  20208c:	03400b44 	movi	r13,45
  202090:	003aa406 	br	200b24 <___vfprintf_internal_r+0x68c>
  202094:	d9801a04 	addi	r6,sp,104
  202098:	900b883a 	mov	r5,r18
  20209c:	9809883a 	mov	r4,r19
  2020a0:	02078e80 	call	2078e8 <__sprint_r>
  2020a4:	103a0b1e 	bne	r2,zero,2008d4 <___vfprintf_internal_r+0x43c>
  2020a8:	d9401417 	ldw	r5,80(sp)
  2020ac:	d8c01c17 	ldw	r3,112(sp)
  2020b0:	dd802704 	addi	r22,sp,156
  2020b4:	003cd706 	br	201414 <___vfprintf_internal_r+0xf7c>
  2020b8:	1520003c 	xorhi	r20,r2,32768
  2020bc:	00800b44 	movi	r2,45
  2020c0:	d8800605 	stb	r2,24(sp)
  2020c4:	003ee906 	br	201c6c <___vfprintf_internal_r+0x17d4>
  2020c8:	05400184 	movi	r21,6
  2020cc:	003e5e06 	br	201a48 <___vfprintf_internal_r+0x15b0>
  2020d0:	d9801a04 	addi	r6,sp,104
  2020d4:	900b883a 	mov	r5,r18
  2020d8:	9809883a 	mov	r4,r19
  2020dc:	02078e80 	call	2078e8 <__sprint_r>
  2020e0:	0039fc06 	br	2008d4 <___vfprintf_internal_r+0x43c>
  2020e4:	d9401345 	stb	r5,77(sp)
  2020e8:	0039aa06 	br	200794 <___vfprintf_internal_r+0x2fc>
  2020ec:	d9000917 	ldw	r4,36(sp)
  2020f0:	000d883a 	mov	r6,zero
  2020f4:	000f883a 	mov	r7,zero
  2020f8:	a00b883a 	mov	r5,r20
  2020fc:	d8c01115 	stw	r3,68(sp)
  202100:	da000815 	stw	r8,32(sp)
  202104:	db000715 	stw	r12,28(sp)
  202108:	020be040 	call	20be04 <__eqdf2>
  20210c:	db000717 	ldw	r12,28(sp)
  202110:	da000817 	ldw	r8,32(sp)
  202114:	d8c01117 	ldw	r3,68(sp)
  202118:	103fa526 	beq	r2,zero,201fb0 <___vfprintf_internal_r+0x1b18>
  20211c:	00800044 	movi	r2,1
  202120:	1205c83a 	sub	r2,r2,r8
  202124:	d8801415 	stw	r2,80(sp)
  202128:	003fa206 	br	201fb4 <___vfprintf_internal_r+0x1b1c>
  20212c:	403ec91e 	bne	r8,zero,201c54 <___vfprintf_internal_r+0x17bc>
  202130:	02000044 	movi	r8,1
  202134:	003ec706 	br	201c54 <___vfprintf_internal_r+0x17bc>
  202138:	d9801a04 	addi	r6,sp,104
  20213c:	900b883a 	mov	r5,r18
  202140:	9809883a 	mov	r4,r19
  202144:	02078e80 	call	2078e8 <__sprint_r>
  202148:	1039e21e 	bne	r2,zero,2008d4 <___vfprintf_internal_r+0x43c>
  20214c:	d9401417 	ldw	r5,80(sp)
  202150:	d8c01c17 	ldw	r3,112(sp)
  202154:	d8801b17 	ldw	r2,108(sp)
  202158:	dd802704 	addi	r22,sp,156
  20215c:	283cbf0e 	bge	r5,zero,20145c <___vfprintf_internal_r+0xfc4>
  202160:	003f5f06 	br	201ee0 <___vfprintf_internal_r+0x1a48>
  202164:	d9801a04 	addi	r6,sp,104
  202168:	900b883a 	mov	r5,r18
  20216c:	9809883a 	mov	r4,r19
  202170:	02078e80 	call	2078e8 <__sprint_r>
  202174:	1039d71e 	bne	r2,zero,2008d4 <___vfprintf_internal_r+0x43c>
  202178:	d8c01c17 	ldw	r3,112(sp)
  20217c:	dd802704 	addi	r22,sp,156
  202180:	003d7206 	br	20174c <___vfprintf_internal_r+0x12b4>
  202184:	db000417 	ldw	r12,16(sp)
  202188:	003ad506 	br	200ce0 <___vfprintf_internal_r+0x848>
  20218c:	d8801804 	addi	r2,sp,96
  202190:	d8800315 	stw	r2,12(sp)
  202194:	d9400917 	ldw	r5,36(sp)
  202198:	d8801504 	addi	r2,sp,84
  20219c:	40c00044 	addi	r3,r8,1
  2021a0:	d8800215 	stw	r2,8(sp)
  2021a4:	d8801404 	addi	r2,sp,80
  2021a8:	d8c00015 	stw	r3,0(sp)
  2021ac:	d8800115 	stw	r2,4(sp)
  2021b0:	01c00084 	movi	r7,2
  2021b4:	a00d883a 	mov	r6,r20
  2021b8:	9809883a 	mov	r4,r19
  2021bc:	db001115 	stw	r12,68(sp)
  2021c0:	da000815 	stw	r8,32(sp)
  2021c4:	d8c00715 	stw	r3,28(sp)
  2021c8:	02029100 	call	202910 <_dtoa_r>
  2021cc:	d8c00717 	ldw	r3,28(sp)
  2021d0:	da000817 	ldw	r8,32(sp)
  2021d4:	db001117 	ldw	r12,68(sp)
  2021d8:	1023883a 	mov	r17,r2
  2021dc:	e08011d8 	cmpnei	r2,fp,71
  2021e0:	103ebd26 	beq	r2,zero,201cd8 <___vfprintf_internal_r+0x1840>
  2021e4:	88d3883a 	add	r9,r17,r3
  2021e8:	003f7306 	br	201fb8 <___vfprintf_internal_r+0x1b20>
  2021ec:	d8801817 	ldw	r2,96(sp)
  2021f0:	127f7e2e 	bgeu	r2,r9,201fec <___vfprintf_internal_r+0x1b54>
  2021f4:	01000c04 	movi	r4,48
  2021f8:	10c00044 	addi	r3,r2,1
  2021fc:	d8c01815 	stw	r3,96(sp)
  202200:	11000005 	stb	r4,0(r2)
  202204:	d8801817 	ldw	r2,96(sp)
  202208:	127ffb36 	bltu	r2,r9,2021f8 <___vfprintf_internal_r+0x1d60>
  20220c:	003f7706 	br	201fec <___vfprintf_internal_r+0x1b54>
  202210:	d8800e17 	ldw	r2,56(sp)
  202214:	db401343 	ldbu	r13,77(sp)
  202218:	0011883a 	mov	r8,zero
  20221c:	d8800615 	stw	r2,24(sp)
  202220:	003ab806 	br	200d04 <___vfprintf_internal_r+0x86c>
  202224:	d8800717 	ldw	r2,28(sp)
  202228:	d8c00817 	ldw	r3,32(sp)
  20222c:	10c02b16 	blt	r2,r3,2022dc <___vfprintf_internal_r+0x1e44>
  202230:	6300004c 	andi	r12,r12,1
  202234:	6000581e 	bne	r12,zero,202398 <___vfprintf_internal_r+0x1f00>
  202238:	1029883a 	mov	r20,r2
  20223c:	1000010e 	bge	r2,zero,202244 <___vfprintf_internal_r+0x1dac>
  202240:	0029883a 	mov	r20,zero
  202244:	dd400717 	ldw	r21,28(sp)
  202248:	070019c4 	movi	fp,103
  20224c:	003f7606 	br	202028 <___vfprintf_internal_r+0x1b90>
  202250:	d9801a04 	addi	r6,sp,104
  202254:	900b883a 	mov	r5,r18
  202258:	9809883a 	mov	r4,r19
  20225c:	02078e80 	call	2078e8 <__sprint_r>
  202260:	10399c1e 	bne	r2,zero,2008d4 <___vfprintf_internal_r+0x43c>
  202264:	dd401417 	ldw	r21,80(sp)
  202268:	d8c01c17 	ldw	r3,112(sp)
  20226c:	dd802704 	addi	r22,sp,156
  202270:	003d4506 	br	201788 <___vfprintf_internal_r+0x12f0>
  202274:	d9801a04 	addi	r6,sp,104
  202278:	900b883a 	mov	r5,r18
  20227c:	9809883a 	mov	r4,r19
  202280:	02078e80 	call	2078e8 <__sprint_r>
  202284:	1039931e 	bne	r2,zero,2008d4 <___vfprintf_internal_r+0x43c>
  202288:	d8c01c17 	ldw	r3,112(sp)
  20228c:	dd802704 	addi	r22,sp,156
  202290:	a83d2b0e 	bge	r21,zero,201740 <___vfprintf_internal_r+0x12a8>
  202294:	003ddf06 	br	201a14 <___vfprintf_internal_r+0x157c>
  202298:	02000184 	movi	r8,6
  20229c:	003e6d06 	br	201c54 <___vfprintf_internal_r+0x17bc>
  2022a0:	d9801a04 	addi	r6,sp,104
  2022a4:	900b883a 	mov	r5,r18
  2022a8:	9809883a 	mov	r4,r19
  2022ac:	02078e80 	call	2078e8 <__sprint_r>
  2022b0:	1039881e 	bne	r2,zero,2008d4 <___vfprintf_internal_r+0x43c>
  2022b4:	d8801417 	ldw	r2,80(sp)
  2022b8:	d9000817 	ldw	r4,32(sp)
  2022bc:	d8c01c17 	ldw	r3,112(sp)
  2022c0:	dd802704 	addi	r22,sp,156
  2022c4:	2085c83a 	sub	r2,r4,r2
  2022c8:	003d4306 	br	2017d8 <___vfprintf_internal_r+0x1340>
  2022cc:	4029883a 	mov	r20,r8
  2022d0:	d8c00615 	stw	r3,24(sp)
  2022d4:	402b883a 	mov	r21,r8
  2022d8:	00393406 	br	2007ac <___vfprintf_internal_r+0x314>
  2022dc:	d8800817 	ldw	r2,32(sp)
  2022e0:	d8c00b17 	ldw	r3,44(sp)
  2022e4:	10eb883a 	add	r21,r2,r3
  2022e8:	d8800717 	ldw	r2,28(sp)
  2022ec:	00800316 	blt	zero,r2,2022fc <___vfprintf_internal_r+0x1e64>
  2022f0:	d8800717 	ldw	r2,28(sp)
  2022f4:	a8abc83a 	sub	r21,r21,r2
  2022f8:	ad400044 	addi	r21,r21,1
  2022fc:	a829883a 	mov	r20,r21
  202300:	a8002a16 	blt	r21,zero,2023ac <___vfprintf_internal_r+0x1f14>
  202304:	070019c4 	movi	fp,103
  202308:	003f4706 	br	202028 <___vfprintf_internal_r+0x1b90>
  20230c:	d9401345 	stb	r5,77(sp)
  202310:	003aa006 	br	200d94 <___vfprintf_internal_r+0x8fc>
  202314:	d9401345 	stb	r5,77(sp)
  202318:	003b3406 	br	200fec <___vfprintf_internal_r+0xb54>
  20231c:	d9401345 	stb	r5,77(sp)
  202320:	0039d506 	br	200a78 <___vfprintf_internal_r+0x5e0>
  202324:	d9401345 	stb	r5,77(sp)
  202328:	003a5806 	br	200c8c <___vfprintf_internal_r+0x7f4>
  20232c:	d9401345 	stb	r5,77(sp)
  202330:	003af306 	br	200f00 <___vfprintf_internal_r+0xa68>
  202334:	d9401345 	stb	r5,77(sp)
  202338:	003b4c06 	br	20106c <___vfprintf_internal_r+0xbd4>
  20233c:	900f883a 	mov	r7,r18
  202340:	8025883a 	mov	r18,r16
  202344:	dc000717 	ldw	r16,28(sp)
  202348:	10800044 	addi	r2,r2,1
  20234c:	1f07883a 	add	r3,r3,fp
  202350:	b1c00015 	stw	r7,0(r22)
  202354:	b7000115 	stw	fp,4(r22)
  202358:	d8c01c15 	stw	r3,112(sp)
  20235c:	d8801b15 	stw	r2,108(sp)
  202360:	11000208 	cmpgei	r4,r2,8
  202364:	203c3c26 	beq	r4,zero,201458 <___vfprintf_internal_r+0xfc0>
  202368:	d9801a04 	addi	r6,sp,104
  20236c:	900b883a 	mov	r5,r18
  202370:	9809883a 	mov	r4,r19
  202374:	02078e80 	call	2078e8 <__sprint_r>
  202378:	1039561e 	bne	r2,zero,2008d4 <___vfprintf_internal_r+0x43c>
  20237c:	d8c01c17 	ldw	r3,112(sp)
  202380:	d8801b17 	ldw	r2,108(sp)
  202384:	dd802704 	addi	r22,sp,156
  202388:	003c3406 	br	20145c <___vfprintf_internal_r+0xfc4>
  20238c:	00bfffc4 	movi	r2,-1
  202390:	d8800515 	stw	r2,20(sp)
  202394:	00395206 	br	2008e0 <___vfprintf_internal_r+0x448>
  202398:	d8800717 	ldw	r2,28(sp)
  20239c:	d8c00b17 	ldw	r3,44(sp)
  2023a0:	10eb883a 	add	r21,r2,r3
  2023a4:	a829883a 	mov	r20,r21
  2023a8:	a83fd60e 	bge	r21,zero,202304 <___vfprintf_internal_r+0x1e6c>
  2023ac:	0029883a 	mov	r20,zero
  2023b0:	003fd406 	br	202304 <___vfprintf_internal_r+0x1e6c>
  2023b4:	00800c04 	movi	r2,48
  2023b8:	ad400c04 	addi	r21,r21,48
  2023bc:	d88016c5 	stb	r2,91(sp)
  2023c0:	00800104 	movi	r2,4
  2023c4:	dd401705 	stb	r21,92(sp)
  2023c8:	d8801015 	stw	r2,64(sp)
  2023cc:	003e8606 	br	201de8 <___vfprintf_internal_r+0x1950>
  2023d0:	05400044 	movi	r21,1
  2023d4:	a8abc83a 	sub	r21,r21,r2
  2023d8:	00800b44 	movi	r2,45
  2023dc:	d8801685 	stb	r2,90(sp)
  2023e0:	003e5206 	br	201d2c <___vfprintf_internal_r+0x1894>
  2023e4:	d8800b17 	ldw	r2,44(sp)
  2023e8:	18ab883a 	add	r21,r3,r2
  2023ec:	aa2b883a 	add	r21,r21,r8
  2023f0:	a829883a 	mov	r20,r21
  2023f4:	a83f0c0e 	bge	r21,zero,202028 <___vfprintf_internal_r+0x1b90>
  2023f8:	0029883a 	mov	r20,zero
  2023fc:	003f0a06 	br	202028 <___vfprintf_internal_r+0x1b90>
  202400:	6080004c 	andi	r2,r12,1
  202404:	d8800715 	stw	r2,28(sp)
  202408:	103e7c1e 	bne	r2,zero,201dfc <___vfprintf_internal_r+0x1964>
  20240c:	003ff806 	br	2023f0 <___vfprintf_internal_r+0x1f58>
  202410:	d8800a17 	ldw	r2,40(sp)
  202414:	10001316 	blt	r2,zero,202464 <___vfprintf_internal_r+0x1fcc>
  202418:	db401343 	ldbu	r13,77(sp)
  20241c:	e0801210 	cmplti	r2,fp,72
  202420:	10000d1e 	bne	r2,zero,202458 <___vfprintf_internal_r+0x1fc0>
  202424:	04400874 	movhi	r17,33
  202428:	8c7f3604 	addi	r17,r17,-808
  20242c:	0039c106 	br	200b34 <___vfprintf_internal_r+0x69c>
  202430:	1000031e 	bne	r2,zero,202440 <___vfprintf_internal_r+0x1fa8>
  202434:	05000044 	movi	r20,1
  202438:	05400044 	movi	r21,1
  20243c:	003efa06 	br	202028 <___vfprintf_internal_r+0x1b90>
  202440:	d8800b17 	ldw	r2,44(sp)
  202444:	15400044 	addi	r21,r2,1
  202448:	aa2b883a 	add	r21,r21,r8
  20244c:	003fe806 	br	2023f0 <___vfprintf_internal_r+0x1f58>
  202450:	8025883a 	mov	r18,r16
  202454:	00391f06 	br	2008d4 <___vfprintf_internal_r+0x43c>
  202458:	04400874 	movhi	r17,33
  20245c:	8c7f3504 	addi	r17,r17,-812
  202460:	0039b406 	br	200b34 <___vfprintf_internal_r+0x69c>
  202464:	00800b44 	movi	r2,45
  202468:	d8801345 	stb	r2,77(sp)
  20246c:	03400b44 	movi	r13,45
  202470:	003fea06 	br	20241c <___vfprintf_internal_r+0x1f84>
  202474:	d8c00617 	ldw	r3,24(sp)
  202478:	1a000017 	ldw	r8,0(r3)
  20247c:	18c00104 	addi	r3,r3,4
  202480:	4000010e 	bge	r8,zero,202488 <___vfprintf_internal_r+0x1ff0>
  202484:	023fffc4 	movi	r8,-1
  202488:	bf000043 	ldbu	fp,1(r23)
  20248c:	d8c00615 	stw	r3,24(sp)
  202490:	102f883a 	mov	r23,r2
  202494:	e2c03fcc 	andi	r11,fp,255
  202498:	5ac0201c 	xori	r11,r11,128
  20249c:	5affe004 	addi	r11,r11,-128
  2024a0:	00384906 	br	2005c8 <___vfprintf_internal_r+0x130>
  2024a4:	00800084 	movi	r2,2
  2024a8:	d8801015 	stw	r2,64(sp)
  2024ac:	003e4e06 	br	201de8 <___vfprintf_internal_r+0x1950>

002024b0 <__vfprintf_internal>:
  2024b0:	00c00874 	movhi	r3,33
  2024b4:	2005883a 	mov	r2,r4
  2024b8:	1907b117 	ldw	r4,7876(r3)
  2024bc:	300f883a 	mov	r7,r6
  2024c0:	280d883a 	mov	r6,r5
  2024c4:	100b883a 	mov	r5,r2
  2024c8:	02004981 	jmpi	200498 <___vfprintf_internal_r>

002024cc <__sbprintf>:
  2024cc:	2880030b 	ldhu	r2,12(r5)
  2024d0:	2b001917 	ldw	r12,100(r5)
  2024d4:	2ac0038b 	ldhu	r11,14(r5)
  2024d8:	2a800717 	ldw	r10,28(r5)
  2024dc:	2a400917 	ldw	r9,36(r5)
  2024e0:	defee204 	addi	sp,sp,-1144
  2024e4:	da001a04 	addi	r8,sp,104
  2024e8:	00c10004 	movi	r3,1024
  2024ec:	dc011a15 	stw	r16,1128(sp)
  2024f0:	10bfff4c 	andi	r2,r2,65533
  2024f4:	2821883a 	mov	r16,r5
  2024f8:	d80b883a 	mov	r5,sp
  2024fc:	dc811c15 	stw	r18,1136(sp)
  202500:	dc411b15 	stw	r17,1132(sp)
  202504:	dfc11d15 	stw	ra,1140(sp)
  202508:	2025883a 	mov	r18,r4
  20250c:	d880030d 	sth	r2,12(sp)
  202510:	db001915 	stw	r12,100(sp)
  202514:	dac0038d 	sth	r11,14(sp)
  202518:	da800715 	stw	r10,28(sp)
  20251c:	da400915 	stw	r9,36(sp)
  202520:	da000015 	stw	r8,0(sp)
  202524:	da000415 	stw	r8,16(sp)
  202528:	d8c00215 	stw	r3,8(sp)
  20252c:	d8c00515 	stw	r3,20(sp)
  202530:	d8000615 	stw	zero,24(sp)
  202534:	02004980 	call	200498 <___vfprintf_internal_r>
  202538:	1023883a 	mov	r17,r2
  20253c:	10000d0e 	bge	r2,zero,202574 <__sbprintf+0xa8>
  202540:	d880030b 	ldhu	r2,12(sp)
  202544:	1080100c 	andi	r2,r2,64
  202548:	10000326 	beq	r2,zero,202558 <__sbprintf+0x8c>
  20254c:	8080030b 	ldhu	r2,12(r16)
  202550:	10801014 	ori	r2,r2,64
  202554:	8080030d 	sth	r2,12(r16)
  202558:	8805883a 	mov	r2,r17
  20255c:	dfc11d17 	ldw	ra,1140(sp)
  202560:	dc811c17 	ldw	r18,1136(sp)
  202564:	dc411b17 	ldw	r17,1132(sp)
  202568:	dc011a17 	ldw	r16,1128(sp)
  20256c:	dec11e04 	addi	sp,sp,1144
  202570:	f800283a 	ret
  202574:	d80b883a 	mov	r5,sp
  202578:	9009883a 	mov	r4,r18
  20257c:	02042800 	call	204280 <_fflush_r>
  202580:	103fef26 	beq	r2,zero,202540 <__sbprintf+0x74>
  202584:	047fffc4 	movi	r17,-1
  202588:	003fed06 	br	202540 <__sbprintf+0x74>

0020258c <__swsetup_r>:
  20258c:	00800874 	movhi	r2,33
  202590:	1087b117 	ldw	r2,7876(r2)
  202594:	defffd04 	addi	sp,sp,-12
  202598:	dc400115 	stw	r17,4(sp)
  20259c:	dc000015 	stw	r16,0(sp)
  2025a0:	dfc00215 	stw	ra,8(sp)
  2025a4:	2023883a 	mov	r17,r4
  2025a8:	2821883a 	mov	r16,r5
  2025ac:	10000226 	beq	r2,zero,2025b8 <__swsetup_r+0x2c>
  2025b0:	10c00e17 	ldw	r3,56(r2)
  2025b4:	18001f26 	beq	r3,zero,202634 <__swsetup_r+0xa8>
  2025b8:	8180030b 	ldhu	r6,12(r16)
  2025bc:	30c0020c 	andi	r3,r6,8
  2025c0:	3005883a 	mov	r2,r6
  2025c4:	18002126 	beq	r3,zero,20264c <__swsetup_r+0xc0>
  2025c8:	80c00417 	ldw	r3,16(r16)
  2025cc:	18002826 	beq	r3,zero,202670 <__swsetup_r+0xe4>
  2025d0:	1100004c 	andi	r4,r2,1
  2025d4:	20000b1e 	bne	r4,zero,202604 <__swsetup_r+0x78>
  2025d8:	1100008c 	andi	r4,r2,2
  2025dc:	20002e1e 	bne	r4,zero,202698 <__swsetup_r+0x10c>
  2025e0:	81000517 	ldw	r4,20(r16)
  2025e4:	81000215 	stw	r4,8(r16)
  2025e8:	18000b26 	beq	r3,zero,202618 <__swsetup_r+0x8c>
  2025ec:	0005883a 	mov	r2,zero
  2025f0:	dfc00217 	ldw	ra,8(sp)
  2025f4:	dc400117 	ldw	r17,4(sp)
  2025f8:	dc000017 	ldw	r16,0(sp)
  2025fc:	dec00304 	addi	sp,sp,12
  202600:	f800283a 	ret
  202604:	81000517 	ldw	r4,20(r16)
  202608:	80000215 	stw	zero,8(r16)
  20260c:	0109c83a 	sub	r4,zero,r4
  202610:	81000615 	stw	r4,24(r16)
  202614:	183ff51e 	bne	r3,zero,2025ec <__swsetup_r+0x60>
  202618:	10c0200c 	andi	r3,r2,128
  20261c:	0005883a 	mov	r2,zero
  202620:	183ff326 	beq	r3,zero,2025f0 <__swsetup_r+0x64>
  202624:	31801014 	ori	r6,r6,64
  202628:	8180030d 	sth	r6,12(r16)
  20262c:	00bfffc4 	movi	r2,-1
  202630:	003fef06 	br	2025f0 <__swsetup_r+0x64>
  202634:	1009883a 	mov	r4,r2
  202638:	02046c80 	call	2046c8 <__sinit>
  20263c:	8180030b 	ldhu	r6,12(r16)
  202640:	30c0020c 	andi	r3,r6,8
  202644:	3005883a 	mov	r2,r6
  202648:	183fdf1e 	bne	r3,zero,2025c8 <__swsetup_r+0x3c>
  20264c:	3080040c 	andi	r2,r6,16
  202650:	10002126 	beq	r2,zero,2026d8 <__swsetup_r+0x14c>
  202654:	3080010c 	andi	r2,r6,4
  202658:	1000111e 	bne	r2,zero,2026a0 <__swsetup_r+0x114>
  20265c:	80c00417 	ldw	r3,16(r16)
  202660:	30800214 	ori	r2,r6,8
  202664:	8080030d 	sth	r2,12(r16)
  202668:	100d883a 	mov	r6,r2
  20266c:	183fd81e 	bne	r3,zero,2025d0 <__swsetup_r+0x44>
  202670:	1100a00c 	andi	r4,r2,640
  202674:	21008020 	cmpeqi	r4,r4,512
  202678:	203fd51e 	bne	r4,zero,2025d0 <__swsetup_r+0x44>
  20267c:	800b883a 	mov	r5,r16
  202680:	8809883a 	mov	r4,r17
  202684:	020511c0 	call	20511c <__smakebuf_r>
  202688:	8180030b 	ldhu	r6,12(r16)
  20268c:	80c00417 	ldw	r3,16(r16)
  202690:	3005883a 	mov	r2,r6
  202694:	003fce06 	br	2025d0 <__swsetup_r+0x44>
  202698:	0009883a 	mov	r4,zero
  20269c:	003fd106 	br	2025e4 <__swsetup_r+0x58>
  2026a0:	81400c17 	ldw	r5,48(r16)
  2026a4:	28000626 	beq	r5,zero,2026c0 <__swsetup_r+0x134>
  2026a8:	80801004 	addi	r2,r16,64
  2026ac:	28800326 	beq	r5,r2,2026bc <__swsetup_r+0x130>
  2026b0:	8809883a 	mov	r4,r17
  2026b4:	020482c0 	call	20482c <_free_r>
  2026b8:	8180030b 	ldhu	r6,12(r16)
  2026bc:	80000c15 	stw	zero,48(r16)
  2026c0:	80c00417 	ldw	r3,16(r16)
  2026c4:	00bff6c4 	movi	r2,-37
  2026c8:	118c703a 	and	r6,r2,r6
  2026cc:	80000115 	stw	zero,4(r16)
  2026d0:	80c00015 	stw	r3,0(r16)
  2026d4:	003fe206 	br	202660 <__swsetup_r+0xd4>
  2026d8:	00800244 	movi	r2,9
  2026dc:	88800015 	stw	r2,0(r17)
  2026e0:	31801014 	ori	r6,r6,64
  2026e4:	8180030d 	sth	r6,12(r16)
  2026e8:	00bfffc4 	movi	r2,-1
  2026ec:	003fc006 	br	2025f0 <__swsetup_r+0x64>

002026f0 <quorem>:
  2026f0:	defff204 	addi	sp,sp,-56
  2026f4:	dc400515 	stw	r17,20(sp)
  2026f8:	20800417 	ldw	r2,16(r4)
  2026fc:	2c400417 	ldw	r17,16(r5)
  202700:	dfc00d15 	stw	ra,52(sp)
  202704:	df000c15 	stw	fp,48(sp)
  202708:	ddc00b15 	stw	r23,44(sp)
  20270c:	dd800a15 	stw	r22,40(sp)
  202710:	dd400915 	stw	r21,36(sp)
  202714:	dd000815 	stw	r20,32(sp)
  202718:	dcc00715 	stw	r19,28(sp)
  20271c:	dc800615 	stw	r18,24(sp)
  202720:	dc000415 	stw	r16,16(sp)
  202724:	d9000115 	stw	r4,4(sp)
  202728:	d9400215 	stw	r5,8(sp)
  20272c:	14407616 	blt	r2,r17,202908 <quorem+0x218>
  202730:	8c7fffc4 	addi	r17,r17,-1
  202734:	882a90ba 	slli	r21,r17,2
  202738:	2f000504 	addi	fp,r5,20
  20273c:	25800504 	addi	r22,r4,20
  202740:	e565883a 	add	r18,fp,r21
  202744:	b545883a 	add	r2,r22,r21
  202748:	95c00017 	ldw	r23,0(r18)
  20274c:	15000017 	ldw	r20,0(r2)
  202750:	dd800015 	stw	r22,0(sp)
  202754:	bdc00044 	addi	r23,r23,1
  202758:	b80b883a 	mov	r5,r23
  20275c:	a009883a 	mov	r4,r20
  202760:	d8800315 	stw	r2,12(sp)
  202764:	020ab180 	call	20ab18 <__udivsi3>
  202768:	1021883a 	mov	r16,r2
  20276c:	a5c02f36 	bltu	r20,r23,20282c <quorem+0x13c>
  202770:	e029883a 	mov	r20,fp
  202774:	002b883a 	mov	r21,zero
  202778:	002f883a 	mov	r23,zero
  20277c:	a4c00017 	ldw	r19,0(r20)
  202780:	800b883a 	mov	r5,r16
  202784:	b5800104 	addi	r22,r22,4
  202788:	993fffcc 	andi	r4,r19,65535
  20278c:	020abd80 	call	20abd8 <__mulsi3>
  202790:	9808d43a 	srli	r4,r19,16
  202794:	800b883a 	mov	r5,r16
  202798:	156b883a 	add	r21,r2,r21
  20279c:	020abd80 	call	20abd8 <__mulsi3>
  2027a0:	b0ffff17 	ldw	r3,-4(r22)
  2027a4:	a80ad43a 	srli	r5,r21,16
  2027a8:	a93fffcc 	andi	r4,r21,65535
  2027ac:	19bfffcc 	andi	r6,r3,65535
  2027b0:	b909c83a 	sub	r4,r23,r4
  2027b4:	2189883a 	add	r4,r4,r6
  2027b8:	1806d43a 	srli	r3,r3,16
  2027bc:	1145883a 	add	r2,r2,r5
  2027c0:	200bd43a 	srai	r5,r4,16
  2027c4:	11bfffcc 	andi	r6,r2,65535
  2027c8:	1987c83a 	sub	r3,r3,r6
  2027cc:	1947883a 	add	r3,r3,r5
  2027d0:	180a943a 	slli	r5,r3,16
  2027d4:	213fffcc 	andi	r4,r4,65535
  2027d8:	a5000104 	addi	r20,r20,4
  2027dc:	2908b03a 	or	r4,r5,r4
  2027e0:	b13fff15 	stw	r4,-4(r22)
  2027e4:	102ad43a 	srli	r21,r2,16
  2027e8:	182fd43a 	srai	r23,r3,16
  2027ec:	953fe32e 	bgeu	r18,r20,20277c <quorem+0x8c>
  2027f0:	d8c00317 	ldw	r3,12(sp)
  2027f4:	18800017 	ldw	r2,0(r3)
  2027f8:	10000c1e 	bne	r2,zero,20282c <quorem+0x13c>
  2027fc:	d8800017 	ldw	r2,0(sp)
  202800:	1d7fff04 	addi	r21,r3,-4
  202804:	15400436 	bltu	r2,r21,202818 <quorem+0x128>
  202808:	00000606 	br	202824 <quorem+0x134>
  20280c:	d8800017 	ldw	r2,0(sp)
  202810:	8c7fffc4 	addi	r17,r17,-1
  202814:	1540032e 	bgeu	r2,r21,202824 <quorem+0x134>
  202818:	a8800017 	ldw	r2,0(r21)
  20281c:	ad7fff04 	addi	r21,r21,-4
  202820:	103ffa26 	beq	r2,zero,20280c <quorem+0x11c>
  202824:	d8800117 	ldw	r2,4(sp)
  202828:	14400415 	stw	r17,16(r2)
  20282c:	d9400217 	ldw	r5,8(sp)
  202830:	d9000117 	ldw	r4,4(sp)
  202834:	02069e40 	call	2069e4 <__mcmp>
  202838:	10002616 	blt	r2,zero,2028d4 <quorem+0x1e4>
  20283c:	d9400017 	ldw	r5,0(sp)
  202840:	84000044 	addi	r16,r16,1
  202844:	0007883a 	mov	r3,zero
  202848:	e1000017 	ldw	r4,0(fp)
  20284c:	29800017 	ldw	r6,0(r5)
  202850:	29400104 	addi	r5,r5,4
  202854:	20bfffcc 	andi	r2,r4,65535
  202858:	1887c83a 	sub	r3,r3,r2
  20285c:	30bfffcc 	andi	r2,r6,65535
  202860:	1885883a 	add	r2,r3,r2
  202864:	2008d43a 	srli	r4,r4,16
  202868:	3006d43a 	srli	r3,r6,16
  20286c:	100fd43a 	srai	r7,r2,16
  202870:	11bfffcc 	andi	r6,r2,65535
  202874:	1907c83a 	sub	r3,r3,r4
  202878:	19c7883a 	add	r3,r3,r7
  20287c:	1804943a 	slli	r2,r3,16
  202880:	e7000104 	addi	fp,fp,4
  202884:	1807d43a 	srai	r3,r3,16
  202888:	1184b03a 	or	r2,r2,r6
  20288c:	28bfff15 	stw	r2,-4(r5)
  202890:	973fed2e 	bgeu	r18,fp,202848 <quorem+0x158>
  202894:	880490ba 	slli	r2,r17,2
  202898:	d9000017 	ldw	r4,0(sp)
  20289c:	2085883a 	add	r2,r4,r2
  2028a0:	10c00017 	ldw	r3,0(r2)
  2028a4:	18000b1e 	bne	r3,zero,2028d4 <quorem+0x1e4>
  2028a8:	10bfff04 	addi	r2,r2,-4
  2028ac:	20800436 	bltu	r4,r2,2028c0 <quorem+0x1d0>
  2028b0:	00000606 	br	2028cc <quorem+0x1dc>
  2028b4:	d8c00017 	ldw	r3,0(sp)
  2028b8:	8c7fffc4 	addi	r17,r17,-1
  2028bc:	1880032e 	bgeu	r3,r2,2028cc <quorem+0x1dc>
  2028c0:	10c00017 	ldw	r3,0(r2)
  2028c4:	10bfff04 	addi	r2,r2,-4
  2028c8:	183ffa26 	beq	r3,zero,2028b4 <quorem+0x1c4>
  2028cc:	d8800117 	ldw	r2,4(sp)
  2028d0:	14400415 	stw	r17,16(r2)
  2028d4:	8005883a 	mov	r2,r16
  2028d8:	dfc00d17 	ldw	ra,52(sp)
  2028dc:	df000c17 	ldw	fp,48(sp)
  2028e0:	ddc00b17 	ldw	r23,44(sp)
  2028e4:	dd800a17 	ldw	r22,40(sp)
  2028e8:	dd400917 	ldw	r21,36(sp)
  2028ec:	dd000817 	ldw	r20,32(sp)
  2028f0:	dcc00717 	ldw	r19,28(sp)
  2028f4:	dc800617 	ldw	r18,24(sp)
  2028f8:	dc400517 	ldw	r17,20(sp)
  2028fc:	dc000417 	ldw	r16,16(sp)
  202900:	dec00e04 	addi	sp,sp,56
  202904:	f800283a 	ret
  202908:	0005883a 	mov	r2,zero
  20290c:	003ff206 	br	2028d8 <quorem+0x1e8>

00202910 <_dtoa_r>:
  202910:	20801017 	ldw	r2,64(r4)
  202914:	deffe304 	addi	sp,sp,-116
  202918:	df001b15 	stw	fp,108(sp)
  20291c:	dcc01615 	stw	r19,88(sp)
  202920:	dc801515 	stw	r18,84(sp)
  202924:	dc401415 	stw	r17,80(sp)
  202928:	dc001315 	stw	r16,76(sp)
  20292c:	dfc01c15 	stw	ra,112(sp)
  202930:	ddc01a15 	stw	r23,104(sp)
  202934:	dd801915 	stw	r22,100(sp)
  202938:	dd401815 	stw	r21,96(sp)
  20293c:	dd001715 	stw	r20,92(sp)
  202940:	d9c00215 	stw	r7,8(sp)
  202944:	dc001f17 	ldw	r16,124(sp)
  202948:	2039883a 	mov	fp,r4
  20294c:	3025883a 	mov	r18,r6
  202950:	2827883a 	mov	r19,r5
  202954:	3023883a 	mov	r17,r6
  202958:	10000826 	beq	r2,zero,20297c <_dtoa_r+0x6c>
  20295c:	21801117 	ldw	r6,68(r4)
  202960:	00c00044 	movi	r3,1
  202964:	100b883a 	mov	r5,r2
  202968:	1986983a 	sll	r3,r3,r6
  20296c:	11800115 	stw	r6,4(r2)
  202970:	10c00215 	stw	r3,8(r2)
  202974:	0205fd40 	call	205fd4 <_Bfree>
  202978:	e0001015 	stw	zero,64(fp)
  20297c:	90018916 	blt	r18,zero,202fa4 <_dtoa_r+0x694>
  202980:	80000015 	stw	zero,0(r16)
  202984:	909ffc2c 	andhi	r2,r18,32752
  202988:	00dffc34 	movhi	r3,32752
  20298c:	10c18e26 	beq	r2,r3,202fc8 <_dtoa_r+0x6b8>
  202990:	000d883a 	mov	r6,zero
  202994:	000f883a 	mov	r7,zero
  202998:	9809883a 	mov	r4,r19
  20299c:	880b883a 	mov	r5,r17
  2029a0:	020be040 	call	20be04 <__eqdf2>
  2029a4:	1000191e 	bne	r2,zero,202a0c <_dtoa_r+0xfc>
  2029a8:	d8c01e17 	ldw	r3,120(sp)
  2029ac:	00800044 	movi	r2,1
  2029b0:	18800015 	stw	r2,0(r3)
  2029b4:	d8802017 	ldw	r2,128(sp)
  2029b8:	1002ff26 	beq	r2,zero,2035b8 <_dtoa_r+0xca8>
  2029bc:	d9002017 	ldw	r4,128(sp)
  2029c0:	00800874 	movhi	r2,33
  2029c4:	10bf4344 	addi	r2,r2,-755
  2029c8:	00c00874 	movhi	r3,33
  2029cc:	20800015 	stw	r2,0(r4)
  2029d0:	18bf4304 	addi	r2,r3,-756
  2029d4:	d8800115 	stw	r2,4(sp)
  2029d8:	d8800117 	ldw	r2,4(sp)
  2029dc:	dfc01c17 	ldw	ra,112(sp)
  2029e0:	df001b17 	ldw	fp,108(sp)
  2029e4:	ddc01a17 	ldw	r23,104(sp)
  2029e8:	dd801917 	ldw	r22,100(sp)
  2029ec:	dd401817 	ldw	r21,96(sp)
  2029f0:	dd001717 	ldw	r20,92(sp)
  2029f4:	dcc01617 	ldw	r19,88(sp)
  2029f8:	dc801517 	ldw	r18,84(sp)
  2029fc:	dc401417 	ldw	r17,80(sp)
  202a00:	dc001317 	ldw	r16,76(sp)
  202a04:	dec01d04 	addi	sp,sp,116
  202a08:	f800283a 	ret
  202a0c:	d8801104 	addi	r2,sp,68
  202a10:	9020d53a 	srli	r16,r18,20
  202a14:	d8800015 	stw	r2,0(sp)
  202a18:	d9c01204 	addi	r7,sp,72
  202a1c:	980b883a 	mov	r5,r19
  202a20:	880d883a 	mov	r6,r17
  202a24:	e009883a 	mov	r4,fp
  202a28:	0206dcc0 	call	206dcc <__d2b>
  202a2c:	102f883a 	mov	r23,r2
  202a30:	8001781e 	bne	r16,zero,203014 <_dtoa_r+0x704>
  202a34:	dd001117 	ldw	r20,68(sp)
  202a38:	dc001217 	ldw	r16,72(sp)
  202a3c:	a421883a 	add	r16,r20,r16
  202a40:	80810c84 	addi	r2,r16,1074
  202a44:	10c00850 	cmplti	r3,r2,33
  202a48:	1802eb1e 	bne	r3,zero,2035f8 <_dtoa_r+0xce8>
  202a4c:	01001004 	movi	r4,64
  202a50:	2085c83a 	sub	r2,r4,r2
  202a54:	81010484 	addi	r4,r16,1042
  202a58:	90a4983a 	sll	r18,r18,r2
  202a5c:	9908d83a 	srl	r4,r19,r4
  202a60:	9108b03a 	or	r4,r18,r4
  202a64:	020d2980 	call	20d298 <__floatunsidf>
  202a68:	1009883a 	mov	r4,r2
  202a6c:	017f8434 	movhi	r5,65040
  202a70:	00800044 	movi	r2,1
  202a74:	194b883a 	add	r5,r3,r5
  202a78:	843fffc4 	addi	r16,r16,-1
  202a7c:	d8800915 	stw	r2,36(sp)
  202a80:	000d883a 	mov	r6,zero
  202a84:	01cffe34 	movhi	r7,16376
  202a88:	020c8000 	call	20c800 <__subdf3>
  202a8c:	0198dbf4 	movhi	r6,25455
  202a90:	01cff4f4 	movhi	r7,16339
  202a94:	3190d844 	addi	r6,r6,17249
  202a98:	39e1e9c4 	addi	r7,r7,-30809
  202a9c:	1009883a 	mov	r4,r2
  202aa0:	180b883a 	mov	r5,r3
  202aa4:	020c0540 	call	20c054 <__muldf3>
  202aa8:	01a2d874 	movhi	r6,35681
  202aac:	01cff1f4 	movhi	r7,16327
  202ab0:	31b22cc4 	addi	r6,r6,-14157
  202ab4:	39e28a04 	addi	r7,r7,-30168
  202ab8:	180b883a 	mov	r5,r3
  202abc:	1009883a 	mov	r4,r2
  202ac0:	020ac000 	call	20ac00 <__adddf3>
  202ac4:	8009883a 	mov	r4,r16
  202ac8:	102b883a 	mov	r21,r2
  202acc:	1825883a 	mov	r18,r3
  202ad0:	020d1e00 	call	20d1e0 <__floatsidf>
  202ad4:	019427f4 	movhi	r6,20639
  202ad8:	01cff4f4 	movhi	r7,16339
  202adc:	319e7ec4 	addi	r6,r6,31227
  202ae0:	39d104c4 	addi	r7,r7,17427
  202ae4:	1009883a 	mov	r4,r2
  202ae8:	180b883a 	mov	r5,r3
  202aec:	020c0540 	call	20c054 <__muldf3>
  202af0:	100d883a 	mov	r6,r2
  202af4:	180f883a 	mov	r7,r3
  202af8:	a809883a 	mov	r4,r21
  202afc:	900b883a 	mov	r5,r18
  202b00:	020ac000 	call	20ac00 <__adddf3>
  202b04:	1009883a 	mov	r4,r2
  202b08:	180b883a 	mov	r5,r3
  202b0c:	1025883a 	mov	r18,r2
  202b10:	182d883a 	mov	r22,r3
  202b14:	020d1600 	call	20d160 <__fixdfsi>
  202b18:	000d883a 	mov	r6,zero
  202b1c:	000f883a 	mov	r7,zero
  202b20:	9009883a 	mov	r4,r18
  202b24:	b00b883a 	mov	r5,r22
  202b28:	102b883a 	mov	r21,r2
  202b2c:	020bf6c0 	call	20bf6c <__ledf2>
  202b30:	10029716 	blt	r2,zero,203590 <_dtoa_r+0xc80>
  202b34:	a421c83a 	sub	r16,r20,r16
  202b38:	a88005e8 	cmpgeui	r2,r21,23
  202b3c:	85bfffc4 	addi	r22,r16,-1
  202b40:	10028b1e 	bne	r2,zero,203570 <_dtoa_r+0xc60>
  202b44:	a80690fa 	slli	r3,r21,3
  202b48:	00800874 	movhi	r2,33
  202b4c:	10bf8c04 	addi	r2,r2,-464
  202b50:	10c5883a 	add	r2,r2,r3
  202b54:	11800017 	ldw	r6,0(r2)
  202b58:	11c00117 	ldw	r7,4(r2)
  202b5c:	9809883a 	mov	r4,r19
  202b60:	880b883a 	mov	r5,r17
  202b64:	020bf6c0 	call	20bf6c <__ledf2>
  202b68:	10025f0e 	bge	r2,zero,2034e8 <_dtoa_r+0xbd8>
  202b6c:	d8000815 	stw	zero,32(sp)
  202b70:	ad7fffc4 	addi	r21,r21,-1
  202b74:	b0028116 	blt	r22,zero,20357c <_dtoa_r+0xc6c>
  202b78:	d8000415 	stw	zero,16(sp)
  202b7c:	a8025d0e 	bge	r21,zero,2034f4 <_dtoa_r+0xbe4>
  202b80:	d8800417 	ldw	r2,16(sp)
  202b84:	d8c00217 	ldw	r3,8(sp)
  202b88:	dd400615 	stw	r21,24(sp)
  202b8c:	1545c83a 	sub	r2,r2,r21
  202b90:	d8800415 	stw	r2,16(sp)
  202b94:	0545c83a 	sub	r2,zero,r21
  202b98:	d8800715 	stw	r2,28(sp)
  202b9c:	188002a8 	cmpgeui	r2,r3,10
  202ba0:	002b883a 	mov	r21,zero
  202ba4:	1002591e 	bne	r2,zero,20350c <_dtoa_r+0xbfc>
  202ba8:	18800190 	cmplti	r2,r3,6
  202bac:	1002961e 	bne	r2,zero,203608 <_dtoa_r+0xcf8>
  202bb0:	18bfff04 	addi	r2,r3,-4
  202bb4:	d8800215 	stw	r2,8(sp)
  202bb8:	0021883a 	mov	r16,zero
  202bbc:	d8c00217 	ldw	r3,8(sp)
  202bc0:	18800120 	cmpeqi	r2,r3,4
  202bc4:	10036d1e 	bne	r2,zero,20397c <_dtoa_r+0x106c>
  202bc8:	18800160 	cmpeqi	r2,r3,5
  202bcc:	1003291e 	bne	r2,zero,203874 <_dtoa_r+0xf64>
  202bd0:	188000a0 	cmpeqi	r2,r3,2
  202bd4:	10025926 	beq	r2,zero,20353c <_dtoa_r+0xc2c>
  202bd8:	d8000515 	stw	zero,20(sp)
  202bdc:	d8801d17 	ldw	r2,116(sp)
  202be0:	0083340e 	bge	zero,r2,2038b4 <_dtoa_r+0xfa4>
  202be4:	d8800b15 	stw	r2,44(sp)
  202be8:	d8800315 	stw	r2,12(sp)
  202bec:	100d883a 	mov	r6,r2
  202bf0:	e0001115 	stw	zero,68(fp)
  202bf4:	30800610 	cmplti	r2,r6,24
  202bf8:	1004f61e 	bne	r2,zero,203fd4 <_dtoa_r+0x16c4>
  202bfc:	00c00044 	movi	r3,1
  202c00:	00800104 	movi	r2,4
  202c04:	1085883a 	add	r2,r2,r2
  202c08:	11000504 	addi	r4,r2,20
  202c0c:	180b883a 	mov	r5,r3
  202c10:	18c00044 	addi	r3,r3,1
  202c14:	313ffb2e 	bgeu	r6,r4,202c04 <_dtoa_r+0x2f4>
  202c18:	e1401115 	stw	r5,68(fp)
  202c1c:	e009883a 	mov	r4,fp
  202c20:	0205f300 	call	205f30 <_Balloc>
  202c24:	d8800115 	stw	r2,4(sp)
  202c28:	1004e326 	beq	r2,zero,203fb8 <_dtoa_r+0x16a8>
  202c2c:	d8800117 	ldw	r2,4(sp)
  202c30:	e0801015 	stw	r2,64(fp)
  202c34:	d8800317 	ldw	r2,12(sp)
  202c38:	108003e8 	cmpgeui	r2,r2,15
  202c3c:	1001091e 	bne	r2,zero,203064 <_dtoa_r+0x754>
  202c40:	80010826 	beq	r16,zero,203064 <_dtoa_r+0x754>
  202c44:	d9000617 	ldw	r4,24(sp)
  202c48:	0103970e 	bge	zero,r4,203aa8 <_dtoa_r+0x1198>
  202c4c:	208003cc 	andi	r2,r4,15
  202c50:	100690fa 	slli	r3,r2,3
  202c54:	2029d13a 	srai	r20,r4,4
  202c58:	00800874 	movhi	r2,33
  202c5c:	10bf8c04 	addi	r2,r2,-464
  202c60:	10c5883a 	add	r2,r2,r3
  202c64:	a0c0040c 	andi	r3,r20,16
  202c68:	12800017 	ldw	r10,0(r2)
  202c6c:	12400117 	ldw	r9,4(r2)
  202c70:	18033c26 	beq	r3,zero,203964 <_dtoa_r+0x1054>
  202c74:	00800874 	movhi	r2,33
  202c78:	10bf8204 	addi	r2,r2,-504
  202c7c:	11800817 	ldw	r6,32(r2)
  202c80:	11c00917 	ldw	r7,36(r2)
  202c84:	9809883a 	mov	r4,r19
  202c88:	880b883a 	mov	r5,r17
  202c8c:	da400e15 	stw	r9,56(sp)
  202c90:	da800d15 	stw	r10,52(sp)
  202c94:	020b4f00 	call	20b4f0 <__divdf3>
  202c98:	da800d17 	ldw	r10,52(sp)
  202c9c:	da400e17 	ldw	r9,56(sp)
  202ca0:	a50003cc 	andi	r20,r20,15
  202ca4:	d8800a15 	stw	r2,40(sp)
  202ca8:	d8c00c15 	stw	r3,48(sp)
  202cac:	040000c4 	movi	r16,3
  202cb0:	a0001126 	beq	r20,zero,202cf8 <_dtoa_r+0x3e8>
  202cb4:	04800874 	movhi	r18,33
  202cb8:	94bf8204 	addi	r18,r18,-504
  202cbc:	5009883a 	mov	r4,r10
  202cc0:	480b883a 	mov	r5,r9
  202cc4:	a180004c 	andi	r6,r20,1
  202cc8:	30000626 	beq	r6,zero,202ce4 <_dtoa_r+0x3d4>
  202ccc:	91800017 	ldw	r6,0(r18)
  202cd0:	91c00117 	ldw	r7,4(r18)
  202cd4:	84000044 	addi	r16,r16,1
  202cd8:	020c0540 	call	20c054 <__muldf3>
  202cdc:	1009883a 	mov	r4,r2
  202ce0:	180b883a 	mov	r5,r3
  202ce4:	a029d07a 	srai	r20,r20,1
  202ce8:	94800204 	addi	r18,r18,8
  202cec:	a03ff51e 	bne	r20,zero,202cc4 <_dtoa_r+0x3b4>
  202cf0:	2015883a 	mov	r10,r4
  202cf4:	2813883a 	mov	r9,r5
  202cf8:	d9000a17 	ldw	r4,40(sp)
  202cfc:	d9400c17 	ldw	r5,48(sp)
  202d00:	500d883a 	mov	r6,r10
  202d04:	480f883a 	mov	r7,r9
  202d08:	020b4f00 	call	20b4f0 <__divdf3>
  202d0c:	d8800a15 	stw	r2,40(sp)
  202d10:	1825883a 	mov	r18,r3
  202d14:	d8800817 	ldw	r2,32(sp)
  202d18:	10000726 	beq	r2,zero,202d38 <_dtoa_r+0x428>
  202d1c:	dd000a17 	ldw	r20,40(sp)
  202d20:	000d883a 	mov	r6,zero
  202d24:	01cffc34 	movhi	r7,16368
  202d28:	a009883a 	mov	r4,r20
  202d2c:	900b883a 	mov	r5,r18
  202d30:	020bf6c0 	call	20bf6c <__ledf2>
  202d34:	10044516 	blt	r2,zero,203e4c <_dtoa_r+0x153c>
  202d38:	8009883a 	mov	r4,r16
  202d3c:	020d1e00 	call	20d1e0 <__floatsidf>
  202d40:	d9800a17 	ldw	r6,40(sp)
  202d44:	900f883a 	mov	r7,r18
  202d48:	1009883a 	mov	r4,r2
  202d4c:	180b883a 	mov	r5,r3
  202d50:	020c0540 	call	20c054 <__muldf3>
  202d54:	000d883a 	mov	r6,zero
  202d58:	01d00734 	movhi	r7,16412
  202d5c:	1009883a 	mov	r4,r2
  202d60:	180b883a 	mov	r5,r3
  202d64:	020ac000 	call	20ac00 <__adddf3>
  202d68:	1029883a 	mov	r20,r2
  202d6c:	00bf3034 	movhi	r2,64704
  202d70:	1885883a 	add	r2,r3,r2
  202d74:	d8800c15 	stw	r2,48(sp)
  202d78:	d8800317 	ldw	r2,12(sp)
  202d7c:	10032d26 	beq	r2,zero,203a34 <_dtoa_r+0x1124>
  202d80:	d8800617 	ldw	r2,24(sp)
  202d84:	d8801015 	stw	r2,64(sp)
  202d88:	d8800317 	ldw	r2,12(sp)
  202d8c:	d8800d15 	stw	r2,52(sp)
  202d90:	d8800d17 	ldw	r2,52(sp)
  202d94:	dc000a17 	ldw	r16,40(sp)
  202d98:	900b883a 	mov	r5,r18
  202d9c:	10bfffc4 	addi	r2,r2,-1
  202da0:	100690fa 	slli	r3,r2,3
  202da4:	00800874 	movhi	r2,33
  202da8:	10bf8c04 	addi	r2,r2,-464
  202dac:	10c5883a 	add	r2,r2,r3
  202db0:	12c00017 	ldw	r11,0(r2)
  202db4:	13000117 	ldw	r12,4(r2)
  202db8:	8009883a 	mov	r4,r16
  202dbc:	dac00e15 	stw	r11,56(sp)
  202dc0:	db000a15 	stw	r12,40(sp)
  202dc4:	020d1600 	call	20d160 <__fixdfsi>
  202dc8:	1009883a 	mov	r4,r2
  202dcc:	10800c04 	addi	r2,r2,48
  202dd0:	d8800f15 	stw	r2,60(sp)
  202dd4:	020d1e00 	call	20d1e0 <__floatsidf>
  202dd8:	8009883a 	mov	r4,r16
  202ddc:	100d883a 	mov	r6,r2
  202de0:	180f883a 	mov	r7,r3
  202de4:	900b883a 	mov	r5,r18
  202de8:	020c8000 	call	20c800 <__subdf3>
  202dec:	d9000117 	ldw	r4,4(sp)
  202df0:	dac00e17 	ldw	r11,56(sp)
  202df4:	db000a17 	ldw	r12,40(sp)
  202df8:	1825883a 	mov	r18,r3
  202dfc:	d8c00517 	ldw	r3,20(sp)
  202e00:	22000044 	addi	r8,r4,1
  202e04:	da000e15 	stw	r8,56(sp)
  202e08:	1021883a 	mov	r16,r2
  202e0c:	580d883a 	mov	r6,r11
  202e10:	600f883a 	mov	r7,r12
  202e14:	1803b226 	beq	r3,zero,203ce0 <_dtoa_r+0x13d0>
  202e18:	0009883a 	mov	r4,zero
  202e1c:	014ff834 	movhi	r5,16352
  202e20:	020b4f00 	call	20b4f0 <__divdf3>
  202e24:	d9c00c17 	ldw	r7,48(sp)
  202e28:	a00d883a 	mov	r6,r20
  202e2c:	1009883a 	mov	r4,r2
  202e30:	180b883a 	mov	r5,r3
  202e34:	020c8000 	call	20c800 <__subdf3>
  202e38:	d9000117 	ldw	r4,4(sp)
  202e3c:	1029883a 	mov	r20,r2
  202e40:	d8800f17 	ldw	r2,60(sp)
  202e44:	800d883a 	mov	r6,r16
  202e48:	900f883a 	mov	r7,r18
  202e4c:	20800005 	stb	r2,0(r4)
  202e50:	180b883a 	mov	r5,r3
  202e54:	a009883a 	mov	r4,r20
  202e58:	d8c00a15 	stw	r3,40(sp)
  202e5c:	020be840 	call	20be84 <__gedf2>
  202e60:	da000e17 	ldw	r8,56(sp)
  202e64:	0083e516 	blt	zero,r2,203dfc <_dtoa_r+0x14ec>
  202e68:	0005883a 	mov	r2,zero
  202e6c:	dd400e15 	stw	r21,56(sp)
  202e70:	dd800f15 	stw	r22,60(sp)
  202e74:	ddc00c15 	stw	r23,48(sp)
  202e78:	dd800d17 	ldw	r22,52(sp)
  202e7c:	402b883a 	mov	r21,r8
  202e80:	dc400d15 	stw	r17,52(sp)
  202e84:	dc400a17 	ldw	r17,40(sp)
  202e88:	dcc00a15 	stw	r19,40(sp)
  202e8c:	1027883a 	mov	r19,r2
  202e90:	00002606 	br	202f2c <_dtoa_r+0x61c>
  202e94:	9cc00044 	addi	r19,r19,1
  202e98:	9d806d0e 	bge	r19,r22,203050 <_dtoa_r+0x740>
  202e9c:	a009883a 	mov	r4,r20
  202ea0:	880b883a 	mov	r5,r17
  202ea4:	000d883a 	mov	r6,zero
  202ea8:	01d00934 	movhi	r7,16420
  202eac:	020c0540 	call	20c054 <__muldf3>
  202eb0:	000d883a 	mov	r6,zero
  202eb4:	01d00934 	movhi	r7,16420
  202eb8:	8009883a 	mov	r4,r16
  202ebc:	900b883a 	mov	r5,r18
  202ec0:	1029883a 	mov	r20,r2
  202ec4:	1823883a 	mov	r17,r3
  202ec8:	020c0540 	call	20c054 <__muldf3>
  202ecc:	180b883a 	mov	r5,r3
  202ed0:	1009883a 	mov	r4,r2
  202ed4:	1821883a 	mov	r16,r3
  202ed8:	1025883a 	mov	r18,r2
  202edc:	020d1600 	call	20d160 <__fixdfsi>
  202ee0:	1009883a 	mov	r4,r2
  202ee4:	102f883a 	mov	r23,r2
  202ee8:	020d1e00 	call	20d1e0 <__floatsidf>
  202eec:	9009883a 	mov	r4,r18
  202ef0:	800b883a 	mov	r5,r16
  202ef4:	100d883a 	mov	r6,r2
  202ef8:	180f883a 	mov	r7,r3
  202efc:	020c8000 	call	20c800 <__subdf3>
  202f00:	ad400044 	addi	r21,r21,1
  202f04:	ba000c04 	addi	r8,r23,48
  202f08:	aa3fffc5 	stb	r8,-1(r21)
  202f0c:	a00d883a 	mov	r6,r20
  202f10:	880f883a 	mov	r7,r17
  202f14:	1009883a 	mov	r4,r2
  202f18:	180b883a 	mov	r5,r3
  202f1c:	1021883a 	mov	r16,r2
  202f20:	1825883a 	mov	r18,r3
  202f24:	020bf6c0 	call	20bf6c <__ledf2>
  202f28:	10040516 	blt	r2,zero,203f40 <_dtoa_r+0x1630>
  202f2c:	800d883a 	mov	r6,r16
  202f30:	900f883a 	mov	r7,r18
  202f34:	0009883a 	mov	r4,zero
  202f38:	014ffc34 	movhi	r5,16368
  202f3c:	020c8000 	call	20c800 <__subdf3>
  202f40:	a00d883a 	mov	r6,r20
  202f44:	880f883a 	mov	r7,r17
  202f48:	1009883a 	mov	r4,r2
  202f4c:	180b883a 	mov	r5,r3
  202f50:	020bf6c0 	call	20bf6c <__ledf2>
  202f54:	103fcf0e 	bge	r2,zero,202e94 <_dtoa_r+0x584>
  202f58:	d8801017 	ldw	r2,64(sp)
  202f5c:	ddc00c17 	ldw	r23,48(sp)
  202f60:	d9000117 	ldw	r4,4(sp)
  202f64:	a829883a 	mov	r20,r21
  202f68:	14c00044 	addi	r19,r2,1
  202f6c:	00000106 	br	202f74 <_dtoa_r+0x664>
  202f70:	a103d826 	beq	r20,r4,203ed4 <_dtoa_r+0x15c4>
  202f74:	a0ffffc3 	ldbu	r3,-1(r20)
  202f78:	a011883a 	mov	r8,r20
  202f7c:	a53fffc4 	addi	r20,r20,-1
  202f80:	18803fcc 	andi	r2,r3,255
  202f84:	1080201c 	xori	r2,r2,128
  202f88:	10bfe004 	addi	r2,r2,-128
  202f8c:	10800e60 	cmpeqi	r2,r2,57
  202f90:	103ff71e 	bne	r2,zero,202f70 <_dtoa_r+0x660>
  202f94:	18c00044 	addi	r3,r3,1
  202f98:	a0c00005 	stb	r3,0(r20)
  202f9c:	dcc00215 	stw	r19,8(sp)
  202fa0:	00014406 	br	2034b4 <_dtoa_r+0xba4>
  202fa4:	04600034 	movhi	r17,32768
  202fa8:	8c7fffc4 	addi	r17,r17,-1
  202fac:	9462703a 	and	r17,r18,r17
  202fb0:	00800044 	movi	r2,1
  202fb4:	8825883a 	mov	r18,r17
  202fb8:	80800015 	stw	r2,0(r16)
  202fbc:	00dffc34 	movhi	r3,32752
  202fc0:	909ffc2c 	andhi	r2,r18,32752
  202fc4:	10fe721e 	bne	r2,r3,202990 <_dtoa_r+0x80>
  202fc8:	d9001e17 	ldw	r4,120(sp)
  202fcc:	00800434 	movhi	r2,16
  202fd0:	10bfffc4 	addi	r2,r2,-1
  202fd4:	9084703a 	and	r2,r18,r2
  202fd8:	00c9c3c4 	movi	r3,9999
  202fdc:	20c00015 	stw	r3,0(r4)
  202fe0:	14e6b03a 	or	r19,r2,r19
  202fe4:	9800141e 	bne	r19,zero,203038 <_dtoa_r+0x728>
  202fe8:	d8802017 	ldw	r2,128(sp)
  202fec:	10041126 	beq	r2,zero,204034 <_dtoa_r+0x1724>
  202ff0:	00800874 	movhi	r2,33
  202ff4:	1007883a 	mov	r3,r2
  202ff8:	18ff4d04 	addi	r3,r3,-716
  202ffc:	00800874 	movhi	r2,33
  203000:	d8c00115 	stw	r3,4(sp)
  203004:	10bf4f04 	addi	r2,r2,-708
  203008:	d8c02017 	ldw	r3,128(sp)
  20300c:	18800015 	stw	r2,0(r3)
  203010:	003e7106 	br	2029d8 <_dtoa_r+0xc8>
  203014:	01400434 	movhi	r5,16
  203018:	297fffc4 	addi	r5,r5,-1
  20301c:	894a703a 	and	r5,r17,r5
  203020:	dd001117 	ldw	r20,68(sp)
  203024:	9809883a 	mov	r4,r19
  203028:	294ffc34 	orhi	r5,r5,16368
  20302c:	843f0044 	addi	r16,r16,-1023
  203030:	d8000915 	stw	zero,36(sp)
  203034:	003e9206 	br	202a80 <_dtoa_r+0x170>
  203038:	d8802017 	ldw	r2,128(sp)
  20303c:	1002061e 	bne	r2,zero,203858 <_dtoa_r+0xf48>
  203040:	00800874 	movhi	r2,33
  203044:	10bf4c04 	addi	r2,r2,-720
  203048:	d8800115 	stw	r2,4(sp)
  20304c:	003e6206 	br	2029d8 <_dtoa_r+0xc8>
  203050:	dd400e17 	ldw	r21,56(sp)
  203054:	dd800f17 	ldw	r22,60(sp)
  203058:	ddc00c17 	ldw	r23,48(sp)
  20305c:	dc400d17 	ldw	r17,52(sp)
  203060:	dcc00a17 	ldw	r19,40(sp)
  203064:	d8801217 	ldw	r2,72(sp)
  203068:	10006e16 	blt	r2,zero,203224 <_dtoa_r+0x914>
  20306c:	d9000617 	ldw	r4,24(sp)
  203070:	20c003c8 	cmpgei	r3,r4,15
  203074:	18006b1e 	bne	r3,zero,203224 <_dtoa_r+0x914>
  203078:	200690fa 	slli	r3,r4,3
  20307c:	00800874 	movhi	r2,33
  203080:	10bf8c04 	addi	r2,r2,-464
  203084:	10c5883a 	add	r2,r2,r3
  203088:	14000017 	ldw	r16,0(r2)
  20308c:	14800117 	ldw	r18,4(r2)
  203090:	d8801d17 	ldw	r2,116(sp)
  203094:	1000150e 	bge	r2,zero,2030ec <_dtoa_r+0x7dc>
  203098:	d8800317 	ldw	r2,12(sp)
  20309c:	00801316 	blt	zero,r2,2030ec <_dtoa_r+0x7dc>
  2030a0:	d8800317 	ldw	r2,12(sp)
  2030a4:	1002771e 	bne	r2,zero,203a84 <_dtoa_r+0x1174>
  2030a8:	8009883a 	mov	r4,r16
  2030ac:	000d883a 	mov	r6,zero
  2030b0:	01d00534 	movhi	r7,16404
  2030b4:	900b883a 	mov	r5,r18
  2030b8:	020c0540 	call	20c054 <__muldf3>
  2030bc:	100d883a 	mov	r6,r2
  2030c0:	180f883a 	mov	r7,r3
  2030c4:	9809883a 	mov	r4,r19
  2030c8:	880b883a 	mov	r5,r17
  2030cc:	020bf6c0 	call	20bf6c <__ledf2>
  2030d0:	0029883a 	mov	r20,zero
  2030d4:	0021883a 	mov	r16,zero
  2030d8:	00820916 	blt	zero,r2,203900 <_dtoa_r+0xff0>
  2030dc:	d8801d17 	ldw	r2,116(sp)
  2030e0:	da000117 	ldw	r8,4(sp)
  2030e4:	00a6303a 	nor	r19,zero,r2
  2030e8:	00020b06 	br	203918 <_dtoa_r+0x1008>
  2030ec:	800d883a 	mov	r6,r16
  2030f0:	900f883a 	mov	r7,r18
  2030f4:	9809883a 	mov	r4,r19
  2030f8:	880b883a 	mov	r5,r17
  2030fc:	020b4f00 	call	20b4f0 <__divdf3>
  203100:	180b883a 	mov	r5,r3
  203104:	1009883a 	mov	r4,r2
  203108:	020d1600 	call	20d160 <__fixdfsi>
  20310c:	1009883a 	mov	r4,r2
  203110:	102b883a 	mov	r21,r2
  203114:	020d1e00 	call	20d1e0 <__floatsidf>
  203118:	800d883a 	mov	r6,r16
  20311c:	900f883a 	mov	r7,r18
  203120:	1009883a 	mov	r4,r2
  203124:	180b883a 	mov	r5,r3
  203128:	020c0540 	call	20c054 <__muldf3>
  20312c:	100d883a 	mov	r6,r2
  203130:	9809883a 	mov	r4,r19
  203134:	880b883a 	mov	r5,r17
  203138:	180f883a 	mov	r7,r3
  20313c:	020c8000 	call	20c800 <__subdf3>
  203140:	d9800117 	ldw	r6,4(sp)
  203144:	dd800317 	ldw	r22,12(sp)
  203148:	1009883a 	mov	r4,r2
  20314c:	a8800c04 	addi	r2,r21,48
  203150:	30800005 	stb	r2,0(r6)
  203154:	b0800060 	cmpeqi	r2,r22,1
  203158:	180b883a 	mov	r5,r3
  20315c:	35000044 	addi	r20,r6,1
  203160:	10029c1e 	bne	r2,zero,203bd4 <_dtoa_r+0x12c4>
  203164:	04400044 	movi	r17,1
  203168:	ddc00215 	stw	r23,8(sp)
  20316c:	00001c06 	br	2031e0 <_dtoa_r+0x8d0>
  203170:	800d883a 	mov	r6,r16
  203174:	900f883a 	mov	r7,r18
  203178:	a809883a 	mov	r4,r21
  20317c:	980b883a 	mov	r5,r19
  203180:	020b4f00 	call	20b4f0 <__divdf3>
  203184:	180b883a 	mov	r5,r3
  203188:	1009883a 	mov	r4,r2
  20318c:	020d1600 	call	20d160 <__fixdfsi>
  203190:	1009883a 	mov	r4,r2
  203194:	102f883a 	mov	r23,r2
  203198:	020d1e00 	call	20d1e0 <__floatsidf>
  20319c:	800d883a 	mov	r6,r16
  2031a0:	900f883a 	mov	r7,r18
  2031a4:	1009883a 	mov	r4,r2
  2031a8:	180b883a 	mov	r5,r3
  2031ac:	020c0540 	call	20c054 <__muldf3>
  2031b0:	a809883a 	mov	r4,r21
  2031b4:	980b883a 	mov	r5,r19
  2031b8:	100d883a 	mov	r6,r2
  2031bc:	180f883a 	mov	r7,r3
  2031c0:	020c8000 	call	20c800 <__subdf3>
  2031c4:	b9000c04 	addi	r4,r23,48
  2031c8:	a1000005 	stb	r4,0(r20)
  2031cc:	8c400044 	addi	r17,r17,1
  2031d0:	a5000044 	addi	r20,r20,1
  2031d4:	1009883a 	mov	r4,r2
  2031d8:	180b883a 	mov	r5,r3
  2031dc:	b4427b26 	beq	r22,r17,203bcc <_dtoa_r+0x12bc>
  2031e0:	000d883a 	mov	r6,zero
  2031e4:	01d00934 	movhi	r7,16420
  2031e8:	020c0540 	call	20c054 <__muldf3>
  2031ec:	000d883a 	mov	r6,zero
  2031f0:	000f883a 	mov	r7,zero
  2031f4:	1009883a 	mov	r4,r2
  2031f8:	180b883a 	mov	r5,r3
  2031fc:	102b883a 	mov	r21,r2
  203200:	1827883a 	mov	r19,r3
  203204:	020be040 	call	20be04 <__eqdf2>
  203208:	103fd91e 	bne	r2,zero,203170 <_dtoa_r+0x860>
  20320c:	d8800617 	ldw	r2,24(sp)
  203210:	ddc00217 	ldw	r23,8(sp)
  203214:	a011883a 	mov	r8,r20
  203218:	10800044 	addi	r2,r2,1
  20321c:	d8800215 	stw	r2,8(sp)
  203220:	0000a406 	br	2034b4 <_dtoa_r+0xba4>
  203224:	d8c00517 	ldw	r3,20(sp)
  203228:	1800e726 	beq	r3,zero,2035c8 <_dtoa_r+0xcb8>
  20322c:	d8c00217 	ldw	r3,8(sp)
  203230:	18c00088 	cmpgei	r3,r3,2
  203234:	1801e526 	beq	r3,zero,2039cc <_dtoa_r+0x10bc>
  203238:	d8800317 	ldw	r2,12(sp)
  20323c:	153fffc4 	addi	r20,r2,-1
  203240:	d8800717 	ldw	r2,28(sp)
  203244:	1501c50e 	bge	r2,r20,20395c <_dtoa_r+0x104c>
  203248:	d8800717 	ldw	r2,28(sp)
  20324c:	dd000715 	stw	r20,28(sp)
  203250:	a085c83a 	sub	r2,r20,r2
  203254:	a8ab883a 	add	r21,r21,r2
  203258:	0029883a 	mov	r20,zero
  20325c:	d8800317 	ldw	r2,12(sp)
  203260:	10028b16 	blt	r2,zero,203c90 <_dtoa_r+0x1380>
  203264:	d8c00417 	ldw	r3,16(sp)
  203268:	b0ad883a 	add	r22,r22,r2
  20326c:	1885883a 	add	r2,r3,r2
  203270:	1825883a 	mov	r18,r3
  203274:	d8800415 	stw	r2,16(sp)
  203278:	01400044 	movi	r5,1
  20327c:	e009883a 	mov	r4,fp
  203280:	02063a00 	call	2063a0 <__i2b>
  203284:	1021883a 	mov	r16,r2
  203288:	0480080e 	bge	zero,r18,2032ac <_dtoa_r+0x99c>
  20328c:	0580070e 	bge	zero,r22,2032ac <_dtoa_r+0x99c>
  203290:	9005883a 	mov	r2,r18
  203294:	b481a916 	blt	r22,r18,20393c <_dtoa_r+0x102c>
  203298:	d8c00417 	ldw	r3,16(sp)
  20329c:	90a5c83a 	sub	r18,r18,r2
  2032a0:	b0adc83a 	sub	r22,r22,r2
  2032a4:	1887c83a 	sub	r3,r3,r2
  2032a8:	d8c00415 	stw	r3,16(sp)
  2032ac:	d8800717 	ldw	r2,28(sp)
  2032b0:	10001526 	beq	r2,zero,203308 <_dtoa_r+0x9f8>
  2032b4:	d8800517 	ldw	r2,20(sp)
  2032b8:	1001f526 	beq	r2,zero,203a90 <_dtoa_r+0x1180>
  2032bc:	05000f0e 	bge	zero,r20,2032fc <_dtoa_r+0x9ec>
  2032c0:	800b883a 	mov	r5,r16
  2032c4:	a00d883a 	mov	r6,r20
  2032c8:	e009883a 	mov	r4,fp
  2032cc:	02067140 	call	206714 <__pow5mult>
  2032d0:	b80d883a 	mov	r6,r23
  2032d4:	100b883a 	mov	r5,r2
  2032d8:	e009883a 	mov	r4,fp
  2032dc:	1021883a 	mov	r16,r2
  2032e0:	02064500 	call	206450 <__multiply>
  2032e4:	b80b883a 	mov	r5,r23
  2032e8:	e009883a 	mov	r4,fp
  2032ec:	d8800915 	stw	r2,36(sp)
  2032f0:	0205fd40 	call	205fd4 <_Bfree>
  2032f4:	d8800917 	ldw	r2,36(sp)
  2032f8:	102f883a 	mov	r23,r2
  2032fc:	d8800717 	ldw	r2,28(sp)
  203300:	150dc83a 	sub	r6,r2,r20
  203304:	15025d1e 	bne	r2,r20,203c7c <_dtoa_r+0x136c>
  203308:	01400044 	movi	r5,1
  20330c:	e009883a 	mov	r4,fp
  203310:	02063a00 	call	2063a0 <__i2b>
  203314:	1029883a 	mov	r20,r2
  203318:	0540bd16 	blt	zero,r21,203610 <_dtoa_r+0xd00>
  20331c:	d8800217 	ldw	r2,8(sp)
  203320:	10800088 	cmpgei	r2,r2,2
  203324:	10015626 	beq	r2,zero,203880 <_dtoa_r+0xf70>
  203328:	0023883a 	mov	r17,zero
  20332c:	00800044 	movi	r2,1
  203330:	a800c01e 	bne	r21,zero,203634 <_dtoa_r+0xd24>
  203334:	1585883a 	add	r2,r2,r22
  203338:	108007cc 	andi	r2,r2,31
  20333c:	1000ac26 	beq	r2,zero,2035f0 <_dtoa_r+0xce0>
  203340:	00c00804 	movi	r3,32
  203344:	1887c83a 	sub	r3,r3,r2
  203348:	19000150 	cmplti	r4,r3,5
  20334c:	20033d1e 	bne	r4,zero,204044 <_dtoa_r+0x1734>
  203350:	00c00704 	movi	r3,28
  203354:	1885c83a 	sub	r2,r3,r2
  203358:	d8c00417 	ldw	r3,16(sp)
  20335c:	90a5883a 	add	r18,r18,r2
  203360:	b0ad883a 	add	r22,r22,r2
  203364:	1887883a 	add	r3,r3,r2
  203368:	d8c00415 	stw	r3,16(sp)
  20336c:	d8800417 	ldw	r2,16(sp)
  203370:	00809916 	blt	zero,r2,2035d8 <_dtoa_r+0xcc8>
  203374:	0580050e 	bge	zero,r22,20338c <_dtoa_r+0xa7c>
  203378:	a00b883a 	mov	r5,r20
  20337c:	b00d883a 	mov	r6,r22
  203380:	e009883a 	mov	r4,fp
  203384:	020685c0 	call	20685c <__lshift>
  203388:	1029883a 	mov	r20,r2
  20338c:	d8800817 	ldw	r2,32(sp)
  203390:	10011d1e 	bne	r2,zero,203808 <_dtoa_r+0xef8>
  203394:	d8800317 	ldw	r2,12(sp)
  203398:	00810a0e 	bge	zero,r2,2037c4 <_dtoa_r+0xeb4>
  20339c:	d8800517 	ldw	r2,20(sp)
  2033a0:	1000b71e 	bne	r2,zero,203680 <_dtoa_r+0xd70>
  2033a4:	d8800617 	ldw	r2,24(sp)
  2033a8:	10800044 	addi	r2,r2,1
  2033ac:	d8800215 	stw	r2,8(sp)
  2033b0:	dc800317 	ldw	r18,12(sp)
  2033b4:	dd400117 	ldw	r21,4(sp)
  2033b8:	04400044 	movi	r17,1
  2033bc:	00000706 	br	2033dc <_dtoa_r+0xacc>
  2033c0:	b80b883a 	mov	r5,r23
  2033c4:	000f883a 	mov	r7,zero
  2033c8:	01800284 	movi	r6,10
  2033cc:	e009883a 	mov	r4,fp
  2033d0:	0205ff80 	call	205ff8 <__multadd>
  2033d4:	102f883a 	mov	r23,r2
  2033d8:	8c400044 	addi	r17,r17,1
  2033dc:	a00b883a 	mov	r5,r20
  2033e0:	b809883a 	mov	r4,r23
  2033e4:	02026f00 	call	2026f0 <quorem>
  2033e8:	14c00c04 	addi	r19,r2,48
  2033ec:	ac45883a 	add	r2,r21,r17
  2033f0:	14ffffc5 	stb	r19,-1(r2)
  2033f4:	8cbff216 	blt	r17,r18,2033c0 <_dtoa_r+0xab0>
  2033f8:	d8800317 	ldw	r2,12(sp)
  2033fc:	00815d0e 	bge	zero,r2,203974 <_dtoa_r+0x1064>
  203400:	d8c00117 	ldw	r3,4(sp)
  203404:	0023883a 	mov	r17,zero
  203408:	1891883a 	add	r8,r3,r2
  20340c:	b80b883a 	mov	r5,r23
  203410:	01800044 	movi	r6,1
  203414:	e009883a 	mov	r4,fp
  203418:	da000315 	stw	r8,12(sp)
  20341c:	020685c0 	call	20685c <__lshift>
  203420:	a00b883a 	mov	r5,r20
  203424:	1009883a 	mov	r4,r2
  203428:	102f883a 	mov	r23,r2
  20342c:	02069e40 	call	2069e4 <__mcmp>
  203430:	da000317 	ldw	r8,12(sp)
  203434:	0081540e 	bge	zero,r2,203988 <_dtoa_r+0x1078>
  203438:	413fffc3 	ldbu	r4,-1(r8)
  20343c:	d9400117 	ldw	r5,4(sp)
  203440:	00000306 	br	203450 <_dtoa_r+0xb40>
  203444:	28c15a26 	beq	r5,r3,2039b0 <_dtoa_r+0x10a0>
  203448:	193fffc3 	ldbu	r4,-1(r3)
  20344c:	1811883a 	mov	r8,r3
  203450:	20803fcc 	andi	r2,r4,255
  203454:	1080201c 	xori	r2,r2,128
  203458:	10bfe004 	addi	r2,r2,-128
  20345c:	10800e60 	cmpeqi	r2,r2,57
  203460:	40ffffc4 	addi	r3,r8,-1
  203464:	103ff71e 	bne	r2,zero,203444 <_dtoa_r+0xb34>
  203468:	21000044 	addi	r4,r4,1
  20346c:	19000005 	stb	r4,0(r3)
  203470:	a00b883a 	mov	r5,r20
  203474:	e009883a 	mov	r4,fp
  203478:	da000315 	stw	r8,12(sp)
  20347c:	0205fd40 	call	205fd4 <_Bfree>
  203480:	da000317 	ldw	r8,12(sp)
  203484:	80000b26 	beq	r16,zero,2034b4 <_dtoa_r+0xba4>
  203488:	88000526 	beq	r17,zero,2034a0 <_dtoa_r+0xb90>
  20348c:	8c000426 	beq	r17,r16,2034a0 <_dtoa_r+0xb90>
  203490:	880b883a 	mov	r5,r17
  203494:	e009883a 	mov	r4,fp
  203498:	0205fd40 	call	205fd4 <_Bfree>
  20349c:	da000317 	ldw	r8,12(sp)
  2034a0:	800b883a 	mov	r5,r16
  2034a4:	e009883a 	mov	r4,fp
  2034a8:	da000315 	stw	r8,12(sp)
  2034ac:	0205fd40 	call	205fd4 <_Bfree>
  2034b0:	da000317 	ldw	r8,12(sp)
  2034b4:	b80b883a 	mov	r5,r23
  2034b8:	e009883a 	mov	r4,fp
  2034bc:	da000315 	stw	r8,12(sp)
  2034c0:	0205fd40 	call	205fd4 <_Bfree>
  2034c4:	da000317 	ldw	r8,12(sp)
  2034c8:	d8801e17 	ldw	r2,120(sp)
  2034cc:	d8c00217 	ldw	r3,8(sp)
  2034d0:	40000005 	stb	zero,0(r8)
  2034d4:	10c00015 	stw	r3,0(r2)
  2034d8:	d8802017 	ldw	r2,128(sp)
  2034dc:	103d3e26 	beq	r2,zero,2029d8 <_dtoa_r+0xc8>
  2034e0:	12000015 	stw	r8,0(r2)
  2034e4:	003d3c06 	br	2029d8 <_dtoa_r+0xc8>
  2034e8:	d8000815 	stw	zero,32(sp)
  2034ec:	b0002316 	blt	r22,zero,20357c <_dtoa_r+0xc6c>
  2034f0:	d8000415 	stw	zero,16(sp)
  2034f4:	d8c00217 	ldw	r3,8(sp)
  2034f8:	dd400615 	stw	r21,24(sp)
  2034fc:	d8000715 	stw	zero,28(sp)
  203500:	188002a8 	cmpgeui	r2,r3,10
  203504:	b56d883a 	add	r22,r22,r21
  203508:	103da726 	beq	r2,zero,202ba8 <_dtoa_r+0x298>
  20350c:	00800044 	movi	r2,1
  203510:	d8800515 	stw	r2,20(sp)
  203514:	00bfffc4 	movi	r2,-1
  203518:	04000044 	movi	r16,1
  20351c:	d8000215 	stw	zero,8(sp)
  203520:	d8800315 	stw	r2,12(sp)
  203524:	d8001d15 	stw	zero,116(sp)
  203528:	d8800317 	ldw	r2,12(sp)
  20352c:	e0001115 	stw	zero,68(fp)
  203530:	000b883a 	mov	r5,zero
  203534:	d8800b15 	stw	r2,44(sp)
  203538:	003db806 	br	202c1c <_dtoa_r+0x30c>
  20353c:	188000e0 	cmpeqi	r2,r3,3
  203540:	d8000515 	stw	zero,20(sp)
  203544:	1002a526 	beq	r2,zero,203fdc <_dtoa_r+0x16cc>
  203548:	d8801d17 	ldw	r2,116(sp)
  20354c:	d8c00617 	ldw	r3,24(sp)
  203550:	10c5883a 	add	r2,r2,r3
  203554:	d8800b15 	stw	r2,44(sp)
  203558:	10800044 	addi	r2,r2,1
  20355c:	d8800315 	stw	r2,12(sp)
  203560:	100d883a 	mov	r6,r2
  203564:	00bda216 	blt	zero,r2,202bf0 <_dtoa_r+0x2e0>
  203568:	01800044 	movi	r6,1
  20356c:	003da006 	br	202bf0 <_dtoa_r+0x2e0>
  203570:	00800044 	movi	r2,1
  203574:	d8800815 	stw	r2,32(sp)
  203578:	b03d7f0e 	bge	r22,zero,202b78 <_dtoa_r+0x268>
  20357c:	00800044 	movi	r2,1
  203580:	1405c83a 	sub	r2,r2,r16
  203584:	d8800415 	stw	r2,16(sp)
  203588:	002d883a 	mov	r22,zero
  20358c:	003d7b06 	br	202b7c <_dtoa_r+0x26c>
  203590:	a809883a 	mov	r4,r21
  203594:	020d1e00 	call	20d1e0 <__floatsidf>
  203598:	900d883a 	mov	r6,r18
  20359c:	b00f883a 	mov	r7,r22
  2035a0:	1009883a 	mov	r4,r2
  2035a4:	180b883a 	mov	r5,r3
  2035a8:	020be040 	call	20be04 <__eqdf2>
  2035ac:	103d6126 	beq	r2,zero,202b34 <_dtoa_r+0x224>
  2035b0:	ad7fffc4 	addi	r21,r21,-1
  2035b4:	003d5f06 	br	202b34 <_dtoa_r+0x224>
  2035b8:	00800874 	movhi	r2,33
  2035bc:	10bf4304 	addi	r2,r2,-756
  2035c0:	d8800115 	stw	r2,4(sp)
  2035c4:	003d0406 	br	2029d8 <_dtoa_r+0xc8>
  2035c8:	dd000717 	ldw	r20,28(sp)
  2035cc:	dc800417 	ldw	r18,16(sp)
  2035d0:	0021883a 	mov	r16,zero
  2035d4:	003f2c06 	br	203288 <_dtoa_r+0x978>
  2035d8:	b80b883a 	mov	r5,r23
  2035dc:	100d883a 	mov	r6,r2
  2035e0:	e009883a 	mov	r4,fp
  2035e4:	020685c0 	call	20685c <__lshift>
  2035e8:	102f883a 	mov	r23,r2
  2035ec:	003f6106 	br	203374 <_dtoa_r+0xa64>
  2035f0:	00800704 	movi	r2,28
  2035f4:	003f5806 	br	203358 <_dtoa_r+0xa48>
  2035f8:	01000804 	movi	r4,32
  2035fc:	2089c83a 	sub	r4,r4,r2
  203600:	9908983a 	sll	r4,r19,r4
  203604:	003d1706 	br	202a64 <_dtoa_r+0x154>
  203608:	04000044 	movi	r16,1
  20360c:	003d6b06 	br	202bbc <_dtoa_r+0x2ac>
  203610:	100b883a 	mov	r5,r2
  203614:	a80d883a 	mov	r6,r21
  203618:	e009883a 	mov	r4,fp
  20361c:	02067140 	call	206714 <__pow5mult>
  203620:	d8c00217 	ldw	r3,8(sp)
  203624:	1029883a 	mov	r20,r2
  203628:	18c00090 	cmplti	r3,r3,2
  20362c:	18014b1e 	bne	r3,zero,203b5c <_dtoa_r+0x124c>
  203630:	0023883a 	mov	r17,zero
  203634:	a0800417 	ldw	r2,16(r20)
  203638:	10800104 	addi	r2,r2,4
  20363c:	100490ba 	slli	r2,r2,2
  203640:	a085883a 	add	r2,r20,r2
  203644:	11000017 	ldw	r4,0(r2)
  203648:	020628c0 	call	20628c <__hi0bits>
  20364c:	00c00804 	movi	r3,32
  203650:	1885c83a 	sub	r2,r3,r2
  203654:	003f3706 	br	203334 <_dtoa_r+0xa24>
  203658:	800b883a 	mov	r5,r16
  20365c:	000f883a 	mov	r7,zero
  203660:	01800284 	movi	r6,10
  203664:	e009883a 	mov	r4,fp
  203668:	0205ff80 	call	205ff8 <__multadd>
  20366c:	1021883a 	mov	r16,r2
  203670:	d8800b17 	ldw	r2,44(sp)
  203674:	0082460e 	bge	zero,r2,203f90 <_dtoa_r+0x1680>
  203678:	dd400615 	stw	r21,24(sp)
  20367c:	d8800315 	stw	r2,12(sp)
  203680:	0480b016 	blt	zero,r18,203944 <_dtoa_r+0x1034>
  203684:	88016c1e 	bne	r17,zero,203c38 <_dtoa_r+0x1328>
  203688:	8025883a 	mov	r18,r16
  20368c:	dd800117 	ldw	r22,4(sp)
  203690:	d9000317 	ldw	r4,12(sp)
  203694:	98c0004c 	andi	r3,r19,1
  203698:	b0bfffc4 	addi	r2,r22,-1
  20369c:	1105883a 	add	r2,r2,r4
  2036a0:	d8800515 	stw	r2,20(sp)
  2036a4:	d8800217 	ldw	r2,8(sp)
  2036a8:	d8c00815 	stw	r3,32(sp)
  2036ac:	1884b03a 	or	r2,r3,r2
  2036b0:	d8800715 	stw	r2,28(sp)
  2036b4:	00002b06 	br	203764 <_dtoa_r+0xe54>
  2036b8:	b809883a 	mov	r4,r23
  2036bc:	d9400415 	stw	r5,16(sp)
  2036c0:	02069e40 	call	2069e4 <__mcmp>
  2036c4:	d9400417 	ldw	r5,16(sp)
  2036c8:	e009883a 	mov	r4,fp
  2036cc:	d8800315 	stw	r2,12(sp)
  2036d0:	0205fd40 	call	205fd4 <_Bfree>
  2036d4:	d8800317 	ldw	r2,12(sp)
  2036d8:	1000021e 	bne	r2,zero,2036e4 <_dtoa_r+0xdd4>
  2036dc:	d8c00717 	ldw	r3,28(sp)
  2036e0:	18021d26 	beq	r3,zero,203f58 <_dtoa_r+0x1648>
  2036e4:	b2000044 	addi	r8,r22,1
  2036e8:	da000315 	stw	r8,12(sp)
  2036ec:	88012116 	blt	r17,zero,203b74 <_dtoa_r+0x1264>
  2036f0:	d8c00217 	ldw	r3,8(sp)
  2036f4:	88e2b03a 	or	r17,r17,r3
  2036f8:	d8c00817 	ldw	r3,32(sp)
  2036fc:	1c62b03a 	or	r17,r3,r17
  203700:	88011c26 	beq	r17,zero,203b74 <_dtoa_r+0x1264>
  203704:	00816616 	blt	zero,r2,203ca0 <_dtoa_r+0x1390>
  203708:	d8800517 	ldw	r2,20(sp)
  20370c:	b4c00005 	stb	r19,0(r22)
  203710:	15816d26 	beq	r2,r22,203cc8 <_dtoa_r+0x13b8>
  203714:	b80b883a 	mov	r5,r23
  203718:	000f883a 	mov	r7,zero
  20371c:	01800284 	movi	r6,10
  203720:	e009883a 	mov	r4,fp
  203724:	0205ff80 	call	205ff8 <__multadd>
  203728:	102f883a 	mov	r23,r2
  20372c:	800b883a 	mov	r5,r16
  203730:	000f883a 	mov	r7,zero
  203734:	01800284 	movi	r6,10
  203738:	e009883a 	mov	r4,fp
  20373c:	84801d26 	beq	r16,r18,2037b4 <_dtoa_r+0xea4>
  203740:	0205ff80 	call	205ff8 <__multadd>
  203744:	900b883a 	mov	r5,r18
  203748:	000f883a 	mov	r7,zero
  20374c:	01800284 	movi	r6,10
  203750:	e009883a 	mov	r4,fp
  203754:	1021883a 	mov	r16,r2
  203758:	0205ff80 	call	205ff8 <__multadd>
  20375c:	1025883a 	mov	r18,r2
  203760:	dd800317 	ldw	r22,12(sp)
  203764:	a00b883a 	mov	r5,r20
  203768:	b809883a 	mov	r4,r23
  20376c:	02026f00 	call	2026f0 <quorem>
  203770:	800b883a 	mov	r5,r16
  203774:	b809883a 	mov	r4,r23
  203778:	102b883a 	mov	r21,r2
  20377c:	02069e40 	call	2069e4 <__mcmp>
  203780:	a00b883a 	mov	r5,r20
  203784:	900d883a 	mov	r6,r18
  203788:	e009883a 	mov	r4,fp
  20378c:	1023883a 	mov	r17,r2
  203790:	0206a3c0 	call	206a3c <__mdiff>
  203794:	100b883a 	mov	r5,r2
  203798:	10800317 	ldw	r2,12(r2)
  20379c:	acc00c04 	addi	r19,r21,48
  2037a0:	103fc526 	beq	r2,zero,2036b8 <_dtoa_r+0xda8>
  2037a4:	e009883a 	mov	r4,fp
  2037a8:	0205fd40 	call	205fd4 <_Bfree>
  2037ac:	00800044 	movi	r2,1
  2037b0:	003fcc06 	br	2036e4 <_dtoa_r+0xdd4>
  2037b4:	0205ff80 	call	205ff8 <__multadd>
  2037b8:	1021883a 	mov	r16,r2
  2037bc:	1025883a 	mov	r18,r2
  2037c0:	003fe706 	br	203760 <_dtoa_r+0xe50>
  2037c4:	d8800217 	ldw	r2,8(sp)
  2037c8:	108000d0 	cmplti	r2,r2,3
  2037cc:	10004026 	beq	r2,zero,2038d0 <_dtoa_r+0xfc0>
  2037d0:	d8800517 	ldw	r2,20(sp)
  2037d4:	103faa1e 	bne	r2,zero,203680 <_dtoa_r+0xd70>
  2037d8:	a00b883a 	mov	r5,r20
  2037dc:	b809883a 	mov	r4,r23
  2037e0:	02026f00 	call	2026f0 <quorem>
  2037e4:	14c00c04 	addi	r19,r2,48
  2037e8:	d8800117 	ldw	r2,4(sp)
  2037ec:	0023883a 	mov	r17,zero
  2037f0:	12000044 	addi	r8,r2,1
  2037f4:	14c00005 	stb	r19,0(r2)
  2037f8:	d8800617 	ldw	r2,24(sp)
  2037fc:	10800044 	addi	r2,r2,1
  203800:	d8800215 	stw	r2,8(sp)
  203804:	003f0106 	br	20340c <_dtoa_r+0xafc>
  203808:	a00b883a 	mov	r5,r20
  20380c:	b809883a 	mov	r4,r23
  203810:	02069e40 	call	2069e4 <__mcmp>
  203814:	103edf0e 	bge	r2,zero,203394 <_dtoa_r+0xa84>
  203818:	b80b883a 	mov	r5,r23
  20381c:	000f883a 	mov	r7,zero
  203820:	01800284 	movi	r6,10
  203824:	e009883a 	mov	r4,fp
  203828:	0205ff80 	call	205ff8 <__multadd>
  20382c:	d8c00617 	ldw	r3,24(sp)
  203830:	102f883a 	mov	r23,r2
  203834:	d8800517 	ldw	r2,20(sp)
  203838:	1d7fffc4 	addi	r21,r3,-1
  20383c:	103f861e 	bne	r2,zero,203658 <_dtoa_r+0xd48>
  203840:	d8800b17 	ldw	r2,44(sp)
  203844:	0081cb0e 	bge	zero,r2,203f74 <_dtoa_r+0x1664>
  203848:	d8c00617 	ldw	r3,24(sp)
  20384c:	d8800315 	stw	r2,12(sp)
  203850:	d8c00215 	stw	r3,8(sp)
  203854:	003ed606 	br	2033b0 <_dtoa_r+0xaa0>
  203858:	00800874 	movhi	r2,33
  20385c:	1007883a 	mov	r3,r2
  203860:	18ff4c04 	addi	r3,r3,-720
  203864:	00800874 	movhi	r2,33
  203868:	d8c00115 	stw	r3,4(sp)
  20386c:	10bf4cc4 	addi	r2,r2,-717
  203870:	003de506 	br	203008 <_dtoa_r+0x6f8>
  203874:	00800044 	movi	r2,1
  203878:	d8800515 	stw	r2,20(sp)
  20387c:	003f3206 	br	203548 <_dtoa_r+0xc38>
  203880:	983ea91e 	bne	r19,zero,203328 <_dtoa_r+0xa18>
  203884:	00800434 	movhi	r2,16
  203888:	10bfffc4 	addi	r2,r2,-1
  20388c:	8884703a 	and	r2,r17,r2
  203890:	103ea51e 	bne	r2,zero,203328 <_dtoa_r+0xa18>
  203894:	8c5ffc2c 	andhi	r17,r17,32752
  203898:	883ea326 	beq	r17,zero,203328 <_dtoa_r+0xa18>
  20389c:	d8800417 	ldw	r2,16(sp)
  2038a0:	b5800044 	addi	r22,r22,1
  2038a4:	04400044 	movi	r17,1
  2038a8:	10800044 	addi	r2,r2,1
  2038ac:	d8800415 	stw	r2,16(sp)
  2038b0:	003e9e06 	br	20332c <_dtoa_r+0xa1c>
  2038b4:	00800044 	movi	r2,1
  2038b8:	d8800315 	stw	r2,12(sp)
  2038bc:	d8801d15 	stw	r2,116(sp)
  2038c0:	003f1906 	br	203528 <_dtoa_r+0xc18>
  2038c4:	d8800b17 	ldw	r2,44(sp)
  2038c8:	dd400615 	stw	r21,24(sp)
  2038cc:	d8800315 	stw	r2,12(sp)
  2038d0:	d8800317 	ldw	r2,12(sp)
  2038d4:	103e011e 	bne	r2,zero,2030dc <_dtoa_r+0x7cc>
  2038d8:	a00b883a 	mov	r5,r20
  2038dc:	e009883a 	mov	r4,fp
  2038e0:	000f883a 	mov	r7,zero
  2038e4:	01800144 	movi	r6,5
  2038e8:	0205ff80 	call	205ff8 <__multadd>
  2038ec:	100b883a 	mov	r5,r2
  2038f0:	b809883a 	mov	r4,r23
  2038f4:	1029883a 	mov	r20,r2
  2038f8:	02069e40 	call	2069e4 <__mcmp>
  2038fc:	00bdf70e 	bge	zero,r2,2030dc <_dtoa_r+0x7cc>
  203900:	d8c00117 	ldw	r3,4(sp)
  203904:	00800c44 	movi	r2,49
  203908:	18800005 	stb	r2,0(r3)
  20390c:	d8800617 	ldw	r2,24(sp)
  203910:	1a000044 	addi	r8,r3,1
  203914:	14c00044 	addi	r19,r2,1
  203918:	a00b883a 	mov	r5,r20
  20391c:	e009883a 	mov	r4,fp
  203920:	da000315 	stw	r8,12(sp)
  203924:	0205fd40 	call	205fd4 <_Bfree>
  203928:	98800044 	addi	r2,r19,1
  20392c:	d8800215 	stw	r2,8(sp)
  203930:	da000317 	ldw	r8,12(sp)
  203934:	803eda1e 	bne	r16,zero,2034a0 <_dtoa_r+0xb90>
  203938:	003ede06 	br	2034b4 <_dtoa_r+0xba4>
  20393c:	b005883a 	mov	r2,r22
  203940:	003e5506 	br	203298 <_dtoa_r+0x988>
  203944:	800b883a 	mov	r5,r16
  203948:	900d883a 	mov	r6,r18
  20394c:	e009883a 	mov	r4,fp
  203950:	020685c0 	call	20685c <__lshift>
  203954:	1021883a 	mov	r16,r2
  203958:	003f4a06 	br	203684 <_dtoa_r+0xd74>
  20395c:	1529c83a 	sub	r20,r2,r20
  203960:	003e3e06 	br	20325c <_dtoa_r+0x94c>
  203964:	dcc00a15 	stw	r19,40(sp)
  203968:	dc400c15 	stw	r17,48(sp)
  20396c:	04000084 	movi	r16,2
  203970:	003ccf06 	br	202cb0 <_dtoa_r+0x3a0>
  203974:	00800044 	movi	r2,1
  203978:	003ea106 	br	203400 <_dtoa_r+0xaf0>
  20397c:	00800044 	movi	r2,1
  203980:	d8800515 	stw	r2,20(sp)
  203984:	003c9506 	br	202bdc <_dtoa_r+0x2cc>
  203988:	1000021e 	bne	r2,zero,203994 <_dtoa_r+0x1084>
  20398c:	98c0004c 	andi	r3,r19,1
  203990:	183ea91e 	bne	r3,zero,203438 <_dtoa_r+0xb28>
  203994:	40bfffc7 	ldb	r2,-1(r8)
  203998:	4007883a 	mov	r3,r8
  20399c:	423fffc4 	addi	r8,r8,-1
  2039a0:	10800c20 	cmpeqi	r2,r2,48
  2039a4:	103ffb1e 	bne	r2,zero,203994 <_dtoa_r+0x1084>
  2039a8:	1811883a 	mov	r8,r3
  2039ac:	003eb006 	br	203470 <_dtoa_r+0xb60>
  2039b0:	d8c00117 	ldw	r3,4(sp)
  2039b4:	00800c44 	movi	r2,49
  2039b8:	18800005 	stb	r2,0(r3)
  2039bc:	d8800217 	ldw	r2,8(sp)
  2039c0:	10800044 	addi	r2,r2,1
  2039c4:	d8800215 	stw	r2,8(sp)
  2039c8:	003ea906 	br	203470 <_dtoa_r+0xb60>
  2039cc:	d8c00917 	ldw	r3,36(sp)
  2039d0:	18010e26 	beq	r3,zero,203e0c <_dtoa_r+0x14fc>
  2039d4:	d8c00417 	ldw	r3,16(sp)
  2039d8:	10810cc4 	addi	r2,r2,1075
  2039dc:	b0ad883a 	add	r22,r22,r2
  2039e0:	1885883a 	add	r2,r3,r2
  2039e4:	dd000717 	ldw	r20,28(sp)
  2039e8:	1825883a 	mov	r18,r3
  2039ec:	d8800415 	stw	r2,16(sp)
  2039f0:	003e2106 	br	203278 <_dtoa_r+0x968>
  2039f4:	8009883a 	mov	r4,r16
  2039f8:	020d1e00 	call	20d1e0 <__floatsidf>
  2039fc:	d9800a17 	ldw	r6,40(sp)
  203a00:	900f883a 	mov	r7,r18
  203a04:	1009883a 	mov	r4,r2
  203a08:	180b883a 	mov	r5,r3
  203a0c:	020c0540 	call	20c054 <__muldf3>
  203a10:	000d883a 	mov	r6,zero
  203a14:	01d00734 	movhi	r7,16412
  203a18:	1009883a 	mov	r4,r2
  203a1c:	180b883a 	mov	r5,r3
  203a20:	020ac000 	call	20ac00 <__adddf3>
  203a24:	1029883a 	mov	r20,r2
  203a28:	00bf3034 	movhi	r2,64704
  203a2c:	1885883a 	add	r2,r3,r2
  203a30:	d8800c15 	stw	r2,48(sp)
  203a34:	d9000a17 	ldw	r4,40(sp)
  203a38:	900b883a 	mov	r5,r18
  203a3c:	000d883a 	mov	r6,zero
  203a40:	01d00534 	movhi	r7,16404
  203a44:	020c8000 	call	20c800 <__subdf3>
  203a48:	d9c00c17 	ldw	r7,48(sp)
  203a4c:	a00d883a 	mov	r6,r20
  203a50:	1009883a 	mov	r4,r2
  203a54:	180b883a 	mov	r5,r3
  203a58:	1025883a 	mov	r18,r2
  203a5c:	1821883a 	mov	r16,r3
  203a60:	020be840 	call	20be84 <__gedf2>
  203a64:	00812b16 	blt	zero,r2,203f14 <_dtoa_r+0x1604>
  203a68:	d8800c17 	ldw	r2,48(sp)
  203a6c:	a00d883a 	mov	r6,r20
  203a70:	9009883a 	mov	r4,r18
  203a74:	11e0003c 	xorhi	r7,r2,32768
  203a78:	800b883a 	mov	r5,r16
  203a7c:	020bf6c0 	call	20bf6c <__ledf2>
  203a80:	103d780e 	bge	r2,zero,203064 <_dtoa_r+0x754>
  203a84:	0029883a 	mov	r20,zero
  203a88:	0021883a 	mov	r16,zero
  203a8c:	003d9306 	br	2030dc <_dtoa_r+0x7cc>
  203a90:	d9800717 	ldw	r6,28(sp)
  203a94:	b80b883a 	mov	r5,r23
  203a98:	e009883a 	mov	r4,fp
  203a9c:	02067140 	call	206714 <__pow5mult>
  203aa0:	102f883a 	mov	r23,r2
  203aa4:	003e1806 	br	203308 <_dtoa_r+0x9f8>
  203aa8:	d8800617 	ldw	r2,24(sp)
  203aac:	1000e326 	beq	r2,zero,203e3c <_dtoa_r+0x152c>
  203ab0:	00a9c83a 	sub	r20,zero,r2
  203ab4:	a08003cc 	andi	r2,r20,15
  203ab8:	100690fa 	slli	r3,r2,3
  203abc:	00800874 	movhi	r2,33
  203ac0:	10bf8c04 	addi	r2,r2,-464
  203ac4:	10c5883a 	add	r2,r2,r3
  203ac8:	11800017 	ldw	r6,0(r2)
  203acc:	11c00117 	ldw	r7,4(r2)
  203ad0:	9809883a 	mov	r4,r19
  203ad4:	880b883a 	mov	r5,r17
  203ad8:	a029d13a 	srai	r20,r20,4
  203adc:	020c0540 	call	20c054 <__muldf3>
  203ae0:	d8800a15 	stw	r2,40(sp)
  203ae4:	1825883a 	mov	r18,r3
  203ae8:	a0013126 	beq	r20,zero,203fb0 <_dtoa_r+0x16a0>
  203aec:	02000874 	movhi	r8,33
  203af0:	04000084 	movi	r16,2
  203af4:	423f8204 	addi	r8,r8,-504
  203af8:	180b883a 	mov	r5,r3
  203afc:	dc400c15 	stw	r17,48(sp)
  203b00:	1009883a 	mov	r4,r2
  203b04:	8023883a 	mov	r17,r16
  203b08:	0007883a 	mov	r3,zero
  203b0c:	4021883a 	mov	r16,r8
  203b10:	a180004c 	andi	r6,r20,1
  203b14:	30000726 	beq	r6,zero,203b34 <_dtoa_r+0x1224>
  203b18:	81800017 	ldw	r6,0(r16)
  203b1c:	81c00117 	ldw	r7,4(r16)
  203b20:	8c400044 	addi	r17,r17,1
  203b24:	020c0540 	call	20c054 <__muldf3>
  203b28:	180b883a 	mov	r5,r3
  203b2c:	1009883a 	mov	r4,r2
  203b30:	00c00044 	movi	r3,1
  203b34:	a029d07a 	srai	r20,r20,1
  203b38:	84000204 	addi	r16,r16,8
  203b3c:	a03ff41e 	bne	r20,zero,203b10 <_dtoa_r+0x1200>
  203b40:	18c03fcc 	andi	r3,r3,255
  203b44:	8821883a 	mov	r16,r17
  203b48:	dc400c17 	ldw	r17,48(sp)
  203b4c:	183c7126 	beq	r3,zero,202d14 <_dtoa_r+0x404>
  203b50:	d9000a15 	stw	r4,40(sp)
  203b54:	2825883a 	mov	r18,r5
  203b58:	003c6e06 	br	202d14 <_dtoa_r+0x404>
  203b5c:	983eb41e 	bne	r19,zero,203630 <_dtoa_r+0xd20>
  203b60:	00800434 	movhi	r2,16
  203b64:	10bfffc4 	addi	r2,r2,-1
  203b68:	8884703a 	and	r2,r17,r2
  203b6c:	103f4926 	beq	r2,zero,203894 <_dtoa_r+0xf84>
  203b70:	003eaf06 	br	203630 <_dtoa_r+0xd20>
  203b74:	00800e0e 	bge	zero,r2,203bb0 <_dtoa_r+0x12a0>
  203b78:	b80b883a 	mov	r5,r23
  203b7c:	01800044 	movi	r6,1
  203b80:	e009883a 	mov	r4,fp
  203b84:	da000215 	stw	r8,8(sp)
  203b88:	020685c0 	call	20685c <__lshift>
  203b8c:	a00b883a 	mov	r5,r20
  203b90:	1009883a 	mov	r4,r2
  203b94:	102f883a 	mov	r23,r2
  203b98:	02069e40 	call	2069e4 <__mcmp>
  203b9c:	da000217 	ldw	r8,8(sp)
  203ba0:	0080e30e 	bge	zero,r2,203f30 <_dtoa_r+0x1620>
  203ba4:	98c00e60 	cmpeqi	r3,r19,57
  203ba8:	1800cf1e 	bne	r3,zero,203ee8 <_dtoa_r+0x15d8>
  203bac:	acc00c44 	addi	r19,r21,49
  203bb0:	8023883a 	mov	r17,r16
  203bb4:	d8800617 	ldw	r2,24(sp)
  203bb8:	b4c00005 	stb	r19,0(r22)
  203bbc:	9021883a 	mov	r16,r18
  203bc0:	10800044 	addi	r2,r2,1
  203bc4:	d8800215 	stw	r2,8(sp)
  203bc8:	003e2906 	br	203470 <_dtoa_r+0xb60>
  203bcc:	b82b883a 	mov	r21,r23
  203bd0:	ddc00217 	ldw	r23,8(sp)
  203bd4:	200d883a 	mov	r6,r4
  203bd8:	280f883a 	mov	r7,r5
  203bdc:	020ac000 	call	20ac00 <__adddf3>
  203be0:	102d883a 	mov	r22,r2
  203be4:	1009883a 	mov	r4,r2
  203be8:	d8800617 	ldw	r2,24(sp)
  203bec:	800d883a 	mov	r6,r16
  203bf0:	900f883a 	mov	r7,r18
  203bf4:	10800044 	addi	r2,r2,1
  203bf8:	180b883a 	mov	r5,r3
  203bfc:	1823883a 	mov	r17,r3
  203c00:	1027883a 	mov	r19,r2
  203c04:	d8800215 	stw	r2,8(sp)
  203c08:	020be840 	call	20be84 <__gedf2>
  203c0c:	00808916 	blt	zero,r2,203e34 <_dtoa_r+0x1524>
  203c10:	800d883a 	mov	r6,r16
  203c14:	900f883a 	mov	r7,r18
  203c18:	b009883a 	mov	r4,r22
  203c1c:	880b883a 	mov	r5,r17
  203c20:	020be040 	call	20be04 <__eqdf2>
  203c24:	1000021e 	bne	r2,zero,203c30 <_dtoa_r+0x1320>
  203c28:	ad40004c 	andi	r21,r21,1
  203c2c:	a800811e 	bne	r21,zero,203e34 <_dtoa_r+0x1524>
  203c30:	a011883a 	mov	r8,r20
  203c34:	003e1f06 	br	2034b4 <_dtoa_r+0xba4>
  203c38:	81400117 	ldw	r5,4(r16)
  203c3c:	e009883a 	mov	r4,fp
  203c40:	0205f300 	call	205f30 <_Balloc>
  203c44:	1023883a 	mov	r17,r2
  203c48:	1000f326 	beq	r2,zero,204018 <_dtoa_r+0x1708>
  203c4c:	81800417 	ldw	r6,16(r16)
  203c50:	81400304 	addi	r5,r16,12
  203c54:	11000304 	addi	r4,r2,12
  203c58:	31800084 	addi	r6,r6,2
  203c5c:	300c90ba 	slli	r6,r6,2
  203c60:	0205c140 	call	205c14 <memcpy>
  203c64:	01800044 	movi	r6,1
  203c68:	880b883a 	mov	r5,r17
  203c6c:	e009883a 	mov	r4,fp
  203c70:	020685c0 	call	20685c <__lshift>
  203c74:	1025883a 	mov	r18,r2
  203c78:	003e8406 	br	20368c <_dtoa_r+0xd7c>
  203c7c:	b80b883a 	mov	r5,r23
  203c80:	e009883a 	mov	r4,fp
  203c84:	02067140 	call	206714 <__pow5mult>
  203c88:	102f883a 	mov	r23,r2
  203c8c:	003d9e06 	br	203308 <_dtoa_r+0x9f8>
  203c90:	d8800417 	ldw	r2,16(sp)
  203c94:	d8c00317 	ldw	r3,12(sp)
  203c98:	10e5c83a 	sub	r18,r2,r3
  203c9c:	003d7606 	br	203278 <_dtoa_r+0x968>
  203ca0:	98800e58 	cmpnei	r2,r19,57
  203ca4:	10009026 	beq	r2,zero,203ee8 <_dtoa_r+0x15d8>
  203ca8:	d8800617 	ldw	r2,24(sp)
  203cac:	98c00044 	addi	r3,r19,1
  203cb0:	8023883a 	mov	r17,r16
  203cb4:	10800044 	addi	r2,r2,1
  203cb8:	d8800215 	stw	r2,8(sp)
  203cbc:	b0c00005 	stb	r3,0(r22)
  203cc0:	9021883a 	mov	r16,r18
  203cc4:	003dea06 	br	203470 <_dtoa_r+0xb60>
  203cc8:	d8800617 	ldw	r2,24(sp)
  203ccc:	8023883a 	mov	r17,r16
  203cd0:	9021883a 	mov	r16,r18
  203cd4:	10800044 	addi	r2,r2,1
  203cd8:	d8800215 	stw	r2,8(sp)
  203cdc:	003dcb06 	br	20340c <_dtoa_r+0xafc>
  203ce0:	d9400c17 	ldw	r5,48(sp)
  203ce4:	a009883a 	mov	r4,r20
  203ce8:	020c0540 	call	20c054 <__muldf3>
  203cec:	d9400117 	ldw	r5,4(sp)
  203cf0:	d9000f17 	ldw	r4,60(sp)
  203cf4:	d9800d17 	ldw	r6,52(sp)
  203cf8:	d8800a15 	stw	r2,40(sp)
  203cfc:	29000005 	stb	r4,0(r5)
  203d00:	d8c00c15 	stw	r3,48(sp)
  203d04:	31000058 	cmpnei	r4,r6,1
  203d08:	da000e17 	ldw	r8,56(sp)
  203d0c:	29a9883a 	add	r20,r5,r6
  203d10:	20009d26 	beq	r4,zero,203f88 <_dtoa_r+0x1678>
  203d14:	dc400d15 	stw	r17,52(sp)
  203d18:	8009883a 	mov	r4,r16
  203d1c:	900b883a 	mov	r5,r18
  203d20:	4023883a 	mov	r17,r8
  203d24:	dcc00e15 	stw	r19,56(sp)
  203d28:	000d883a 	mov	r6,zero
  203d2c:	01d00934 	movhi	r7,16420
  203d30:	020c0540 	call	20c054 <__muldf3>
  203d34:	180b883a 	mov	r5,r3
  203d38:	1009883a 	mov	r4,r2
  203d3c:	1825883a 	mov	r18,r3
  203d40:	1027883a 	mov	r19,r2
  203d44:	020d1600 	call	20d160 <__fixdfsi>
  203d48:	1009883a 	mov	r4,r2
  203d4c:	1021883a 	mov	r16,r2
  203d50:	020d1e00 	call	20d1e0 <__floatsidf>
  203d54:	9809883a 	mov	r4,r19
  203d58:	900b883a 	mov	r5,r18
  203d5c:	100d883a 	mov	r6,r2
  203d60:	180f883a 	mov	r7,r3
  203d64:	8c400044 	addi	r17,r17,1
  203d68:	84000c04 	addi	r16,r16,48
  203d6c:	020c8000 	call	20c800 <__subdf3>
  203d70:	8c3fffc5 	stb	r16,-1(r17)
  203d74:	1009883a 	mov	r4,r2
  203d78:	180b883a 	mov	r5,r3
  203d7c:	a47fea1e 	bne	r20,r17,203d28 <_dtoa_r+0x1418>
  203d80:	dc400d17 	ldw	r17,52(sp)
  203d84:	dcc00e17 	ldw	r19,56(sp)
  203d88:	1021883a 	mov	r16,r2
  203d8c:	1825883a 	mov	r18,r3
  203d90:	d9000a17 	ldw	r4,40(sp)
  203d94:	d9400c17 	ldw	r5,48(sp)
  203d98:	000d883a 	mov	r6,zero
  203d9c:	01cff834 	movhi	r7,16352
  203da0:	020ac000 	call	20ac00 <__adddf3>
  203da4:	800d883a 	mov	r6,r16
  203da8:	900f883a 	mov	r7,r18
  203dac:	1009883a 	mov	r4,r2
  203db0:	180b883a 	mov	r5,r3
  203db4:	020bf6c0 	call	20bf6c <__ledf2>
  203db8:	10005916 	blt	r2,zero,203f20 <_dtoa_r+0x1610>
  203dbc:	d9800a17 	ldw	r6,40(sp)
  203dc0:	d9c00c17 	ldw	r7,48(sp)
  203dc4:	0009883a 	mov	r4,zero
  203dc8:	014ff834 	movhi	r5,16352
  203dcc:	020c8000 	call	20c800 <__subdf3>
  203dd0:	800d883a 	mov	r6,r16
  203dd4:	900f883a 	mov	r7,r18
  203dd8:	1009883a 	mov	r4,r2
  203ddc:	180b883a 	mov	r5,r3
  203de0:	020be840 	call	20be84 <__gedf2>
  203de4:	00bc9f0e 	bge	zero,r2,203064 <_dtoa_r+0x754>
  203de8:	a0bfffc7 	ldb	r2,-1(r20)
  203dec:	a011883a 	mov	r8,r20
  203df0:	a53fffc4 	addi	r20,r20,-1
  203df4:	10800c20 	cmpeqi	r2,r2,48
  203df8:	103ffb1e 	bne	r2,zero,203de8 <_dtoa_r+0x14d8>
  203dfc:	d8801017 	ldw	r2,64(sp)
  203e00:	10800044 	addi	r2,r2,1
  203e04:	d8800215 	stw	r2,8(sp)
  203e08:	003daa06 	br	2034b4 <_dtoa_r+0xba4>
  203e0c:	d8c01117 	ldw	r3,68(sp)
  203e10:	d9000417 	ldw	r4,16(sp)
  203e14:	00800d84 	movi	r2,54
  203e18:	10c5c83a 	sub	r2,r2,r3
  203e1c:	b0ad883a 	add	r22,r22,r2
  203e20:	2085883a 	add	r2,r4,r2
  203e24:	dd000717 	ldw	r20,28(sp)
  203e28:	2025883a 	mov	r18,r4
  203e2c:	d8800415 	stw	r2,16(sp)
  203e30:	003d1106 	br	203278 <_dtoa_r+0x968>
  203e34:	d9000117 	ldw	r4,4(sp)
  203e38:	003c4e06 	br	202f74 <_dtoa_r+0x664>
  203e3c:	dcc00a15 	stw	r19,40(sp)
  203e40:	8825883a 	mov	r18,r17
  203e44:	04000084 	movi	r16,2
  203e48:	003bb206 	br	202d14 <_dtoa_r+0x404>
  203e4c:	d8800317 	ldw	r2,12(sp)
  203e50:	103ee826 	beq	r2,zero,2039f4 <_dtoa_r+0x10e4>
  203e54:	d8800b17 	ldw	r2,44(sp)
  203e58:	00bc820e 	bge	zero,r2,203064 <_dtoa_r+0x754>
  203e5c:	900b883a 	mov	r5,r18
  203e60:	a009883a 	mov	r4,r20
  203e64:	000d883a 	mov	r6,zero
  203e68:	01d00934 	movhi	r7,16420
  203e6c:	020c0540 	call	20c054 <__muldf3>
  203e70:	81000044 	addi	r4,r16,1
  203e74:	1029883a 	mov	r20,r2
  203e78:	1825883a 	mov	r18,r3
  203e7c:	d8800a15 	stw	r2,40(sp)
  203e80:	020d1e00 	call	20d1e0 <__floatsidf>
  203e84:	a00d883a 	mov	r6,r20
  203e88:	900f883a 	mov	r7,r18
  203e8c:	1009883a 	mov	r4,r2
  203e90:	180b883a 	mov	r5,r3
  203e94:	020c0540 	call	20c054 <__muldf3>
  203e98:	1009883a 	mov	r4,r2
  203e9c:	000d883a 	mov	r6,zero
  203ea0:	01d00734 	movhi	r7,16412
  203ea4:	180b883a 	mov	r5,r3
  203ea8:	020ac000 	call	20ac00 <__adddf3>
  203eac:	d9000617 	ldw	r4,24(sp)
  203eb0:	1029883a 	mov	r20,r2
  203eb4:	00bf3034 	movhi	r2,64704
  203eb8:	1887883a 	add	r3,r3,r2
  203ebc:	d8800b17 	ldw	r2,44(sp)
  203ec0:	213fffc4 	addi	r4,r4,-1
  203ec4:	d9001015 	stw	r4,64(sp)
  203ec8:	d8c00c15 	stw	r3,48(sp)
  203ecc:	d8800d15 	stw	r2,52(sp)
  203ed0:	003baf06 	br	202d90 <_dtoa_r+0x480>
  203ed4:	00c00c44 	movi	r3,49
  203ed8:	9cc00044 	addi	r19,r19,1
  203edc:	003c2e06 	br	202f98 <_dtoa_r+0x688>
  203ee0:	b0800044 	addi	r2,r22,1
  203ee4:	d8800315 	stw	r2,12(sp)
  203ee8:	00800e44 	movi	r2,57
  203eec:	b0800005 	stb	r2,0(r22)
  203ef0:	d8800617 	ldw	r2,24(sp)
  203ef4:	8023883a 	mov	r17,r16
  203ef8:	da000317 	ldw	r8,12(sp)
  203efc:	10800044 	addi	r2,r2,1
  203f00:	d9400117 	ldw	r5,4(sp)
  203f04:	d8800215 	stw	r2,8(sp)
  203f08:	9021883a 	mov	r16,r18
  203f0c:	01000e44 	movi	r4,57
  203f10:	003d4f06 	br	203450 <_dtoa_r+0xb40>
  203f14:	0029883a 	mov	r20,zero
  203f18:	0021883a 	mov	r16,zero
  203f1c:	003e7806 	br	203900 <_dtoa_r+0xff0>
  203f20:	d8801017 	ldw	r2,64(sp)
  203f24:	d9000117 	ldw	r4,4(sp)
  203f28:	14c00044 	addi	r19,r2,1
  203f2c:	003c1106 	br	202f74 <_dtoa_r+0x664>
  203f30:	103f1f1e 	bne	r2,zero,203bb0 <_dtoa_r+0x12a0>
  203f34:	9880004c 	andi	r2,r19,1
  203f38:	103f1a1e 	bne	r2,zero,203ba4 <_dtoa_r+0x1294>
  203f3c:	003f1c06 	br	203bb0 <_dtoa_r+0x12a0>
  203f40:	d8801017 	ldw	r2,64(sp)
  203f44:	ddc00c17 	ldw	r23,48(sp)
  203f48:	a811883a 	mov	r8,r21
  203f4c:	10800044 	addi	r2,r2,1
  203f50:	d8800215 	stw	r2,8(sp)
  203f54:	003d5706 	br	2034b4 <_dtoa_r+0xba4>
  203f58:	98800e60 	cmpeqi	r2,r19,57
  203f5c:	103fe01e 	bne	r2,zero,203ee0 <_dtoa_r+0x15d0>
  203f60:	0440010e 	bge	zero,r17,203f68 <_dtoa_r+0x1658>
  203f64:	acc00c44 	addi	r19,r21,49
  203f68:	8023883a 	mov	r17,r16
  203f6c:	b2000044 	addi	r8,r22,1
  203f70:	003f1006 	br	203bb4 <_dtoa_r+0x12a4>
  203f74:	d8800217 	ldw	r2,8(sp)
  203f78:	108000c8 	cmpgei	r2,r2,3
  203f7c:	103e511e 	bne	r2,zero,2038c4 <_dtoa_r+0xfb4>
  203f80:	dd400615 	stw	r21,24(sp)
  203f84:	003e1406 	br	2037d8 <_dtoa_r+0xec8>
  203f88:	4029883a 	mov	r20,r8
  203f8c:	003f8006 	br	203d90 <_dtoa_r+0x1480>
  203f90:	d8800217 	ldw	r2,8(sp)
  203f94:	108000c8 	cmpgei	r2,r2,3
  203f98:	103e4a1e 	bne	r2,zero,2038c4 <_dtoa_r+0xfb4>
  203f9c:	d8800b17 	ldw	r2,44(sp)
  203fa0:	dd400615 	stw	r21,24(sp)
  203fa4:	d8800315 	stw	r2,12(sp)
  203fa8:	04bdb60e 	bge	zero,r18,203684 <_dtoa_r+0xd74>
  203fac:	003e6506 	br	203944 <_dtoa_r+0x1034>
  203fb0:	04000084 	movi	r16,2
  203fb4:	003b5706 	br	202d14 <_dtoa_r+0x404>
  203fb8:	01c00874 	movhi	r7,33
  203fbc:	01000874 	movhi	r4,33
  203fc0:	39ff5004 	addi	r7,r7,-704
  203fc4:	000d883a 	mov	r6,zero
  203fc8:	01406a84 	movi	r5,426
  203fcc:	213f5504 	addi	r4,r4,-684
  203fd0:	0208cf80 	call	208cf8 <__assert_func>
  203fd4:	000b883a 	mov	r5,zero
  203fd8:	003b1006 	br	202c1c <_dtoa_r+0x30c>
  203fdc:	e0001115 	stw	zero,68(fp)
  203fe0:	000b883a 	mov	r5,zero
  203fe4:	e009883a 	mov	r4,fp
  203fe8:	0205f300 	call	205f30 <_Balloc>
  203fec:	d8800115 	stw	r2,4(sp)
  203ff0:	103ff126 	beq	r2,zero,203fb8 <_dtoa_r+0x16a8>
  203ff4:	d8800117 	ldw	r2,4(sp)
  203ff8:	d8001d15 	stw	zero,116(sp)
  203ffc:	e0801015 	stw	r2,64(fp)
  204000:	00bfffc4 	movi	r2,-1
  204004:	d8800315 	stw	r2,12(sp)
  204008:	d8800b15 	stw	r2,44(sp)
  20400c:	00800044 	movi	r2,1
  204010:	d8800515 	stw	r2,20(sp)
  204014:	003c1306 	br	203064 <_dtoa_r+0x754>
  204018:	01c00874 	movhi	r7,33
  20401c:	01000874 	movhi	r4,33
  204020:	39ff5004 	addi	r7,r7,-704
  204024:	000d883a 	mov	r6,zero
  204028:	0140ba84 	movi	r5,746
  20402c:	213f5504 	addi	r4,r4,-684
  204030:	0208cf80 	call	208cf8 <__assert_func>
  204034:	00800874 	movhi	r2,33
  204038:	10bf4d04 	addi	r2,r2,-716
  20403c:	d8800115 	stw	r2,4(sp)
  204040:	003a6506 	br	2029d8 <_dtoa_r+0xc8>
  204044:	18c00120 	cmpeqi	r3,r3,4
  204048:	183cc81e 	bne	r3,zero,20336c <_dtoa_r+0xa5c>
  20404c:	00c00f04 	movi	r3,60
  204050:	1885c83a 	sub	r2,r3,r2
  204054:	003cc006 	br	203358 <_dtoa_r+0xa48>

00204058 <__sflush_r>:
  204058:	2880030b 	ldhu	r2,12(r5)
  20405c:	defffb04 	addi	sp,sp,-20
  204060:	dcc00315 	stw	r19,12(sp)
  204064:	dc000015 	stw	r16,0(sp)
  204068:	dfc00415 	stw	ra,16(sp)
  20406c:	dc800215 	stw	r18,8(sp)
  204070:	dc400115 	stw	r17,4(sp)
  204074:	10c0020c 	andi	r3,r2,8
  204078:	2821883a 	mov	r16,r5
  20407c:	2027883a 	mov	r19,r4
  204080:	18003f1e 	bne	r3,zero,204180 <__sflush_r+0x128>
  204084:	28c00117 	ldw	r3,4(r5)
  204088:	10820014 	ori	r2,r2,2048
  20408c:	2880030d 	sth	r2,12(r5)
  204090:	00c0550e 	bge	zero,r3,2041e8 <__sflush_r+0x190>
  204094:	82000a17 	ldw	r8,40(r16)
  204098:	40003126 	beq	r8,zero,204160 <__sflush_r+0x108>
  20409c:	9c400017 	ldw	r17,0(r19)
  2040a0:	1104000c 	andi	r4,r2,4096
  2040a4:	98000015 	stw	zero,0(r19)
  2040a8:	1007883a 	mov	r3,r2
  2040ac:	2000531e 	bne	r4,zero,2041fc <__sflush_r+0x1a4>
  2040b0:	81400717 	ldw	r5,28(r16)
  2040b4:	01c00044 	movi	r7,1
  2040b8:	000d883a 	mov	r6,zero
  2040bc:	9809883a 	mov	r4,r19
  2040c0:	403ee83a 	callr	r8
  2040c4:	10ffffd8 	cmpnei	r3,r2,-1
  2040c8:	18005826 	beq	r3,zero,20422c <__sflush_r+0x1d4>
  2040cc:	80c0030b 	ldhu	r3,12(r16)
  2040d0:	82000a17 	ldw	r8,40(r16)
  2040d4:	18c0010c 	andi	r3,r3,4
  2040d8:	18000626 	beq	r3,zero,2040f4 <__sflush_r+0x9c>
  2040dc:	81000117 	ldw	r4,4(r16)
  2040e0:	80c00c17 	ldw	r3,48(r16)
  2040e4:	1105c83a 	sub	r2,r2,r4
  2040e8:	18000226 	beq	r3,zero,2040f4 <__sflush_r+0x9c>
  2040ec:	80c00f17 	ldw	r3,60(r16)
  2040f0:	10c5c83a 	sub	r2,r2,r3
  2040f4:	81400717 	ldw	r5,28(r16)
  2040f8:	100d883a 	mov	r6,r2
  2040fc:	000f883a 	mov	r7,zero
  204100:	9809883a 	mov	r4,r19
  204104:	403ee83a 	callr	r8
  204108:	10ffffd8 	cmpnei	r3,r2,-1
  20410c:	18003d1e 	bne	r3,zero,204204 <__sflush_r+0x1ac>
  204110:	99000017 	ldw	r4,0(r19)
  204114:	80c0030b 	ldhu	r3,12(r16)
  204118:	20004e26 	beq	r4,zero,204254 <__sflush_r+0x1fc>
  20411c:	21400760 	cmpeqi	r5,r4,29
  204120:	2800021e 	bne	r5,zero,20412c <__sflush_r+0xd4>
  204124:	210005a0 	cmpeqi	r4,r4,22
  204128:	20002c26 	beq	r4,zero,2041dc <__sflush_r+0x184>
  20412c:	80800417 	ldw	r2,16(r16)
  204130:	18fdffcc 	andi	r3,r3,63487
  204134:	80c0030d 	sth	r3,12(r16)
  204138:	80000115 	stw	zero,4(r16)
  20413c:	80800015 	stw	r2,0(r16)
  204140:	81400c17 	ldw	r5,48(r16)
  204144:	9c400015 	stw	r17,0(r19)
  204148:	28000526 	beq	r5,zero,204160 <__sflush_r+0x108>
  20414c:	80801004 	addi	r2,r16,64
  204150:	28800226 	beq	r5,r2,20415c <__sflush_r+0x104>
  204154:	9809883a 	mov	r4,r19
  204158:	020482c0 	call	20482c <_free_r>
  20415c:	80000c15 	stw	zero,48(r16)
  204160:	0005883a 	mov	r2,zero
  204164:	dfc00417 	ldw	ra,16(sp)
  204168:	dcc00317 	ldw	r19,12(sp)
  20416c:	dc800217 	ldw	r18,8(sp)
  204170:	dc400117 	ldw	r17,4(sp)
  204174:	dc000017 	ldw	r16,0(sp)
  204178:	dec00504 	addi	sp,sp,20
  20417c:	f800283a 	ret
  204180:	2c800417 	ldw	r18,16(r5)
  204184:	903ff626 	beq	r18,zero,204160 <__sflush_r+0x108>
  204188:	2c400017 	ldw	r17,0(r5)
  20418c:	108000cc 	andi	r2,r2,3
  204190:	2c800015 	stw	r18,0(r5)
  204194:	8ca3c83a 	sub	r17,r17,r18
  204198:	1000161e 	bne	r2,zero,2041f4 <__sflush_r+0x19c>
  20419c:	28800517 	ldw	r2,20(r5)
  2041a0:	80800215 	stw	r2,8(r16)
  2041a4:	04400316 	blt	zero,r17,2041b4 <__sflush_r+0x15c>
  2041a8:	003fed06 	br	204160 <__sflush_r+0x108>
  2041ac:	90a5883a 	add	r18,r18,r2
  2041b0:	047feb0e 	bge	zero,r17,204160 <__sflush_r+0x108>
  2041b4:	80800917 	ldw	r2,36(r16)
  2041b8:	81400717 	ldw	r5,28(r16)
  2041bc:	880f883a 	mov	r7,r17
  2041c0:	900d883a 	mov	r6,r18
  2041c4:	9809883a 	mov	r4,r19
  2041c8:	103ee83a 	callr	r2
  2041cc:	88a3c83a 	sub	r17,r17,r2
  2041d0:	00bff616 	blt	zero,r2,2041ac <__sflush_r+0x154>
  2041d4:	80c0030b 	ldhu	r3,12(r16)
  2041d8:	00bfffc4 	movi	r2,-1
  2041dc:	18c01014 	ori	r3,r3,64
  2041e0:	80c0030d 	sth	r3,12(r16)
  2041e4:	003fdf06 	br	204164 <__sflush_r+0x10c>
  2041e8:	28c00f17 	ldw	r3,60(r5)
  2041ec:	00ffa916 	blt	zero,r3,204094 <__sflush_r+0x3c>
  2041f0:	003fdb06 	br	204160 <__sflush_r+0x108>
  2041f4:	0005883a 	mov	r2,zero
  2041f8:	003fe906 	br	2041a0 <__sflush_r+0x148>
  2041fc:	80801417 	ldw	r2,80(r16)
  204200:	003fb406 	br	2040d4 <__sflush_r+0x7c>
  204204:	80c0030b 	ldhu	r3,12(r16)
  204208:	81000417 	ldw	r4,16(r16)
  20420c:	80000115 	stw	zero,4(r16)
  204210:	197dffcc 	andi	r5,r3,63487
  204214:	8140030d 	sth	r5,12(r16)
  204218:	81000015 	stw	r4,0(r16)
  20421c:	18c4000c 	andi	r3,r3,4096
  204220:	183fc726 	beq	r3,zero,204140 <__sflush_r+0xe8>
  204224:	80801415 	stw	r2,80(r16)
  204228:	003fc506 	br	204140 <__sflush_r+0xe8>
  20422c:	98c00017 	ldw	r3,0(r19)
  204230:	183fa626 	beq	r3,zero,2040cc <__sflush_r+0x74>
  204234:	19000760 	cmpeqi	r4,r3,29
  204238:	20000e1e 	bne	r4,zero,204274 <__sflush_r+0x21c>
  20423c:	18c00598 	cmpnei	r3,r3,22
  204240:	18000c26 	beq	r3,zero,204274 <__sflush_r+0x21c>
  204244:	80c0030b 	ldhu	r3,12(r16)
  204248:	18c01014 	ori	r3,r3,64
  20424c:	80c0030d 	sth	r3,12(r16)
  204250:	003fc406 	br	204164 <__sflush_r+0x10c>
  204254:	81000417 	ldw	r4,16(r16)
  204258:	197dffcc 	andi	r5,r3,63487
  20425c:	8140030d 	sth	r5,12(r16)
  204260:	80000115 	stw	zero,4(r16)
  204264:	81000015 	stw	r4,0(r16)
  204268:	18c4000c 	andi	r3,r3,4096
  20426c:	183fb426 	beq	r3,zero,204140 <__sflush_r+0xe8>
  204270:	003fec06 	br	204224 <__sflush_r+0x1cc>
  204274:	9c400015 	stw	r17,0(r19)
  204278:	0005883a 	mov	r2,zero
  20427c:	003fb906 	br	204164 <__sflush_r+0x10c>

00204280 <_fflush_r>:
  204280:	defffd04 	addi	sp,sp,-12
  204284:	dc000115 	stw	r16,4(sp)
  204288:	dfc00215 	stw	ra,8(sp)
  20428c:	2021883a 	mov	r16,r4
  204290:	20000226 	beq	r4,zero,20429c <_fflush_r+0x1c>
  204294:	20800e17 	ldw	r2,56(r4)
  204298:	10000726 	beq	r2,zero,2042b8 <_fflush_r+0x38>
  20429c:	2880030f 	ldh	r2,12(r5)
  2042a0:	10000a1e 	bne	r2,zero,2042cc <_fflush_r+0x4c>
  2042a4:	0005883a 	mov	r2,zero
  2042a8:	dfc00217 	ldw	ra,8(sp)
  2042ac:	dc000117 	ldw	r16,4(sp)
  2042b0:	dec00304 	addi	sp,sp,12
  2042b4:	f800283a 	ret
  2042b8:	d9400015 	stw	r5,0(sp)
  2042bc:	02046c80 	call	2046c8 <__sinit>
  2042c0:	d9400017 	ldw	r5,0(sp)
  2042c4:	2880030f 	ldh	r2,12(r5)
  2042c8:	103ff626 	beq	r2,zero,2042a4 <_fflush_r+0x24>
  2042cc:	8009883a 	mov	r4,r16
  2042d0:	dfc00217 	ldw	ra,8(sp)
  2042d4:	dc000117 	ldw	r16,4(sp)
  2042d8:	dec00304 	addi	sp,sp,12
  2042dc:	02040581 	jmpi	204058 <__sflush_r>

002042e0 <fflush>:
  2042e0:	20001726 	beq	r4,zero,204340 <fflush+0x60>
  2042e4:	00800874 	movhi	r2,33
  2042e8:	200b883a 	mov	r5,r4
  2042ec:	1107b117 	ldw	r4,7876(r2)
  2042f0:	20000226 	beq	r4,zero,2042fc <fflush+0x1c>
  2042f4:	20800e17 	ldw	r2,56(r4)
  2042f8:	10000526 	beq	r2,zero,204310 <fflush+0x30>
  2042fc:	2880030f 	ldh	r2,12(r5)
  204300:	1000021e 	bne	r2,zero,20430c <fflush+0x2c>
  204304:	0005883a 	mov	r2,zero
  204308:	f800283a 	ret
  20430c:	02040581 	jmpi	204058 <__sflush_r>
  204310:	defffd04 	addi	sp,sp,-12
  204314:	d9400115 	stw	r5,4(sp)
  204318:	d9000015 	stw	r4,0(sp)
  20431c:	dfc00215 	stw	ra,8(sp)
  204320:	02046c80 	call	2046c8 <__sinit>
  204324:	d9400117 	ldw	r5,4(sp)
  204328:	d9000017 	ldw	r4,0(sp)
  20432c:	2880030f 	ldh	r2,12(r5)
  204330:	10000826 	beq	r2,zero,204354 <fflush+0x74>
  204334:	dfc00217 	ldw	ra,8(sp)
  204338:	dec00304 	addi	sp,sp,12
  20433c:	02040581 	jmpi	204058 <__sflush_r>
  204340:	00800874 	movhi	r2,33
  204344:	1107b017 	ldw	r4,7872(r2)
  204348:	01400834 	movhi	r5,32
  20434c:	2950a004 	addi	r5,r5,17024
  204350:	02050541 	jmpi	205054 <_fwalk_reent>
  204354:	0005883a 	mov	r2,zero
  204358:	dfc00217 	ldw	ra,8(sp)
  20435c:	dec00304 	addi	sp,sp,12
  204360:	f800283a 	ret

00204364 <__fp_lock>:
  204364:	0005883a 	mov	r2,zero
  204368:	f800283a 	ret

0020436c <_cleanup_r>:
  20436c:	01400874 	movhi	r5,33
  204370:	2963e404 	addi	r5,r5,-28784
  204374:	02050541 	jmpi	205054 <_fwalk_reent>

00204378 <__fp_unlock>:
  204378:	0005883a 	mov	r2,zero
  20437c:	f800283a 	ret

00204380 <__sinit.part.0>:
  204380:	00c00834 	movhi	r3,32
  204384:	20800117 	ldw	r2,4(r4)
  204388:	18d0db04 	addi	r3,r3,17260
  20438c:	20c00f15 	stw	r3,60(r4)
  204390:	2140bb04 	addi	r5,r4,748
  204394:	00c000c4 	movi	r3,3
  204398:	20c0b915 	stw	r3,740(r4)
  20439c:	2140ba15 	stw	r5,744(r4)
  2043a0:	2000b815 	stw	zero,736(r4)
  2043a4:	10001705 	stb	zero,92(r2)
  2043a8:	10001745 	stb	zero,93(r2)
  2043ac:	10001785 	stb	zero,94(r2)
  2043b0:	100017c5 	stb	zero,95(r2)
  2043b4:	10001805 	stb	zero,96(r2)
  2043b8:	10001845 	stb	zero,97(r2)
  2043bc:	10001885 	stb	zero,98(r2)
  2043c0:	100018c5 	stb	zero,99(r2)
  2043c4:	00c00104 	movi	r3,4
  2043c8:	10c00315 	stw	r3,12(r2)
  2043cc:	02000834 	movhi	r8,32
  2043d0:	20c00217 	ldw	r3,8(r4)
  2043d4:	01c00834 	movhi	r7,32
  2043d8:	01800834 	movhi	r6,32
  2043dc:	01400834 	movhi	r5,32
  2043e0:	421dad04 	addi	r8,r8,30388
  2043e4:	39ddc404 	addi	r7,r7,30480
  2043e8:	319de404 	addi	r6,r6,30608
  2043ec:	295dfb04 	addi	r5,r5,30700
  2043f0:	02400074 	movhi	r9,1
  2043f4:	10001915 	stw	zero,100(r2)
  2043f8:	10000015 	stw	zero,0(r2)
  2043fc:	10000115 	stw	zero,4(r2)
  204400:	10000215 	stw	zero,8(r2)
  204404:	10000415 	stw	zero,16(r2)
  204408:	10000515 	stw	zero,20(r2)
  20440c:	10000615 	stw	zero,24(r2)
  204410:	10800715 	stw	r2,28(r2)
  204414:	12000815 	stw	r8,32(r2)
  204418:	11c00915 	stw	r7,36(r2)
  20441c:	11800a15 	stw	r6,40(r2)
  204420:	11400b15 	stw	r5,44(r2)
  204424:	4a400284 	addi	r9,r9,10
  204428:	1a400315 	stw	r9,12(r3)
  20442c:	18001915 	stw	zero,100(r3)
  204430:	18000015 	stw	zero,0(r3)
  204434:	18000115 	stw	zero,4(r3)
  204438:	18000215 	stw	zero,8(r3)
  20443c:	18000415 	stw	zero,16(r3)
  204440:	18001705 	stb	zero,92(r3)
  204444:	18001745 	stb	zero,93(r3)
  204448:	18001785 	stb	zero,94(r3)
  20444c:	180017c5 	stb	zero,95(r3)
  204450:	18001805 	stb	zero,96(r3)
  204454:	18001845 	stb	zero,97(r3)
  204458:	18001885 	stb	zero,98(r3)
  20445c:	180018c5 	stb	zero,99(r3)
  204460:	20800317 	ldw	r2,12(r4)
  204464:	024000b4 	movhi	r9,2
  204468:	18000515 	stw	zero,20(r3)
  20446c:	18000615 	stw	zero,24(r3)
  204470:	18c00715 	stw	r3,28(r3)
  204474:	1a000815 	stw	r8,32(r3)
  204478:	19c00915 	stw	r7,36(r3)
  20447c:	19800a15 	stw	r6,40(r3)
  204480:	19400b15 	stw	r5,44(r3)
  204484:	4a400484 	addi	r9,r9,18
  204488:	10001915 	stw	zero,100(r2)
  20448c:	10000015 	stw	zero,0(r2)
  204490:	10000115 	stw	zero,4(r2)
  204494:	10000215 	stw	zero,8(r2)
  204498:	12400315 	stw	r9,12(r2)
  20449c:	10000415 	stw	zero,16(r2)
  2044a0:	10000515 	stw	zero,20(r2)
  2044a4:	10000615 	stw	zero,24(r2)
  2044a8:	10001705 	stb	zero,92(r2)
  2044ac:	10001745 	stb	zero,93(r2)
  2044b0:	10001785 	stb	zero,94(r2)
  2044b4:	100017c5 	stb	zero,95(r2)
  2044b8:	10001805 	stb	zero,96(r2)
  2044bc:	10001845 	stb	zero,97(r2)
  2044c0:	10001885 	stb	zero,98(r2)
  2044c4:	100018c5 	stb	zero,99(r2)
  2044c8:	10800715 	stw	r2,28(r2)
  2044cc:	12000815 	stw	r8,32(r2)
  2044d0:	11c00915 	stw	r7,36(r2)
  2044d4:	11800a15 	stw	r6,40(r2)
  2044d8:	11400b15 	stw	r5,44(r2)
  2044dc:	00800044 	movi	r2,1
  2044e0:	20800e15 	stw	r2,56(r4)
  2044e4:	f800283a 	ret

002044e8 <__sfmoreglue>:
  2044e8:	defffc04 	addi	sp,sp,-16
  2044ec:	dc800215 	stw	r18,8(sp)
  2044f0:	2825883a 	mov	r18,r5
  2044f4:	dc000015 	stw	r16,0(sp)
  2044f8:	01401a04 	movi	r5,104
  2044fc:	2021883a 	mov	r16,r4
  204500:	913fffc4 	addi	r4,r18,-1
  204504:	dfc00315 	stw	ra,12(sp)
  204508:	dc400115 	stw	r17,4(sp)
  20450c:	020abd80 	call	20abd8 <__mulsi3>
  204510:	8009883a 	mov	r4,r16
  204514:	11401d04 	addi	r5,r2,116
  204518:	1023883a 	mov	r17,r2
  20451c:	02053640 	call	205364 <_malloc_r>
  204520:	1021883a 	mov	r16,r2
  204524:	10000726 	beq	r2,zero,204544 <__sfmoreglue+0x5c>
  204528:	11000304 	addi	r4,r2,12
  20452c:	10000015 	stw	zero,0(r2)
  204530:	14800115 	stw	r18,4(r2)
  204534:	11000215 	stw	r4,8(r2)
  204538:	89801a04 	addi	r6,r17,104
  20453c:	000b883a 	mov	r5,zero
  204540:	0205e400 	call	205e40 <memset>
  204544:	8005883a 	mov	r2,r16
  204548:	dfc00317 	ldw	ra,12(sp)
  20454c:	dc800217 	ldw	r18,8(sp)
  204550:	dc400117 	ldw	r17,4(sp)
  204554:	dc000017 	ldw	r16,0(sp)
  204558:	dec00404 	addi	sp,sp,16
  20455c:	f800283a 	ret

00204560 <__sfp>:
  204560:	defffb04 	addi	sp,sp,-20
  204564:	00800874 	movhi	r2,33
  204568:	dc000015 	stw	r16,0(sp)
  20456c:	1407b017 	ldw	r16,7872(r2)
  204570:	dc400115 	stw	r17,4(sp)
  204574:	dfc00415 	stw	ra,16(sp)
  204578:	80800e17 	ldw	r2,56(r16)
  20457c:	dcc00315 	stw	r19,12(sp)
  204580:	dc800215 	stw	r18,8(sp)
  204584:	2023883a 	mov	r17,r4
  204588:	10003126 	beq	r2,zero,204650 <__sfp+0xf0>
  20458c:	8100ba17 	ldw	r4,744(r16)
  204590:	8140b917 	ldw	r5,740(r16)
  204594:	04c00104 	movi	r19,4
  204598:	8400b804 	addi	r16,r16,736
  20459c:	297fffc4 	addi	r5,r5,-1
  2045a0:	2800050e 	bge	r5,zero,2045b8 <__sfp+0x58>
  2045a4:	00002406 	br	204638 <__sfp+0xd8>
  2045a8:	297fffc4 	addi	r5,r5,-1
  2045ac:	28bfffd8 	cmpnei	r2,r5,-1
  2045b0:	21001a04 	addi	r4,r4,104
  2045b4:	10002026 	beq	r2,zero,204638 <__sfp+0xd8>
  2045b8:	2080030f 	ldh	r2,12(r4)
  2045bc:	103ffa1e 	bne	r2,zero,2045a8 <__sfp+0x48>
  2045c0:	00bffff4 	movhi	r2,65535
  2045c4:	10800044 	addi	r2,r2,1
  2045c8:	20001915 	stw	zero,100(r4)
  2045cc:	20000015 	stw	zero,0(r4)
  2045d0:	20000115 	stw	zero,4(r4)
  2045d4:	20000215 	stw	zero,8(r4)
  2045d8:	20800315 	stw	r2,12(r4)
  2045dc:	20000415 	stw	zero,16(r4)
  2045e0:	20000515 	stw	zero,20(r4)
  2045e4:	20000615 	stw	zero,24(r4)
  2045e8:	20001705 	stb	zero,92(r4)
  2045ec:	20001745 	stb	zero,93(r4)
  2045f0:	20001785 	stb	zero,94(r4)
  2045f4:	200017c5 	stb	zero,95(r4)
  2045f8:	20001805 	stb	zero,96(r4)
  2045fc:	20001845 	stb	zero,97(r4)
  204600:	20001885 	stb	zero,98(r4)
  204604:	200018c5 	stb	zero,99(r4)
  204608:	20000c15 	stw	zero,48(r4)
  20460c:	20000d15 	stw	zero,52(r4)
  204610:	20001115 	stw	zero,68(r4)
  204614:	20001215 	stw	zero,72(r4)
  204618:	2005883a 	mov	r2,r4
  20461c:	dfc00417 	ldw	ra,16(sp)
  204620:	dcc00317 	ldw	r19,12(sp)
  204624:	dc800217 	ldw	r18,8(sp)
  204628:	dc400117 	ldw	r17,4(sp)
  20462c:	dc000017 	ldw	r16,0(sp)
  204630:	dec00504 	addi	sp,sp,20
  204634:	f800283a 	ret
  204638:	80800017 	ldw	r2,0(r16)
  20463c:	10000726 	beq	r2,zero,20465c <__sfp+0xfc>
  204640:	11000217 	ldw	r4,8(r2)
  204644:	11400117 	ldw	r5,4(r2)
  204648:	1021883a 	mov	r16,r2
  20464c:	003fd306 	br	20459c <__sfp+0x3c>
  204650:	8009883a 	mov	r4,r16
  204654:	02043800 	call	204380 <__sinit.part.0>
  204658:	003fcc06 	br	20458c <__sfp+0x2c>
  20465c:	01406b04 	movi	r5,428
  204660:	8809883a 	mov	r4,r17
  204664:	02053640 	call	205364 <_malloc_r>
  204668:	1025883a 	mov	r18,r2
  20466c:	10000c26 	beq	r2,zero,2046a0 <__sfp+0x140>
  204670:	11000304 	addi	r4,r2,12
  204674:	11000215 	stw	r4,8(r2)
  204678:	000b883a 	mov	r5,zero
  20467c:	10000015 	stw	zero,0(r2)
  204680:	14c00115 	stw	r19,4(r2)
  204684:	01806804 	movi	r6,416
  204688:	0205e400 	call	205e40 <memset>
  20468c:	1009883a 	mov	r4,r2
  204690:	84800015 	stw	r18,0(r16)
  204694:	014000c4 	movi	r5,3
  204698:	9021883a 	mov	r16,r18
  20469c:	003fc606 	br	2045b8 <__sfp+0x58>
  2046a0:	80000015 	stw	zero,0(r16)
  2046a4:	00800304 	movi	r2,12
  2046a8:	88800015 	stw	r2,0(r17)
  2046ac:	0009883a 	mov	r4,zero
  2046b0:	003fd906 	br	204618 <__sfp+0xb8>

002046b4 <_cleanup>:
  2046b4:	00800874 	movhi	r2,33
  2046b8:	1107b017 	ldw	r4,7872(r2)
  2046bc:	01400874 	movhi	r5,33
  2046c0:	2963e404 	addi	r5,r5,-28784
  2046c4:	02050541 	jmpi	205054 <_fwalk_reent>

002046c8 <__sinit>:
  2046c8:	20800e17 	ldw	r2,56(r4)
  2046cc:	10000126 	beq	r2,zero,2046d4 <__sinit+0xc>
  2046d0:	f800283a 	ret
  2046d4:	02043801 	jmpi	204380 <__sinit.part.0>

002046d8 <__sfp_lock_acquire>:
  2046d8:	f800283a 	ret

002046dc <__sfp_lock_release>:
  2046dc:	f800283a 	ret

002046e0 <__sinit_lock_acquire>:
  2046e0:	f800283a 	ret

002046e4 <__sinit_lock_release>:
  2046e4:	f800283a 	ret

002046e8 <__fp_lock_all>:
  2046e8:	00800874 	movhi	r2,33
  2046ec:	1107b117 	ldw	r4,7876(r2)
  2046f0:	01400834 	movhi	r5,32
  2046f4:	2950d904 	addi	r5,r5,17252
  2046f8:	0204fbc1 	jmpi	204fbc <_fwalk>

002046fc <__fp_unlock_all>:
  2046fc:	00800874 	movhi	r2,33
  204700:	1107b117 	ldw	r4,7876(r2)
  204704:	01400834 	movhi	r5,32
  204708:	2950de04 	addi	r5,r5,17272
  20470c:	0204fbc1 	jmpi	204fbc <_fwalk>

00204710 <_malloc_trim_r>:
  204710:	defffb04 	addi	sp,sp,-20
  204714:	dcc00315 	stw	r19,12(sp)
  204718:	04c00874 	movhi	r19,33
  20471c:	dc800215 	stw	r18,8(sp)
  204720:	dc400115 	stw	r17,4(sp)
  204724:	dc000015 	stw	r16,0(sp)
  204728:	dfc00415 	stw	ra,16(sp)
  20472c:	2821883a 	mov	r16,r5
  204730:	9cc1d104 	addi	r19,r19,1860
  204734:	2025883a 	mov	r18,r4
  204738:	020dae80 	call	20dae8 <__malloc_lock>
  20473c:	98800217 	ldw	r2,8(r19)
  204740:	14400117 	ldw	r17,4(r2)
  204744:	00bfff04 	movi	r2,-4
  204748:	88a2703a 	and	r17,r17,r2
  20474c:	8c21c83a 	sub	r16,r17,r16
  204750:	8403fbc4 	addi	r16,r16,4079
  204754:	8020d33a 	srli	r16,r16,12
  204758:	843fffc4 	addi	r16,r16,-1
  20475c:	8020933a 	slli	r16,r16,12
  204760:	80840008 	cmpgei	r2,r16,4096
  204764:	10000626 	beq	r2,zero,204780 <_malloc_trim_r+0x70>
  204768:	000b883a 	mov	r5,zero
  20476c:	9009883a 	mov	r4,r18
  204770:	020765c0 	call	20765c <_sbrk_r>
  204774:	98c00217 	ldw	r3,8(r19)
  204778:	1c47883a 	add	r3,r3,r17
  20477c:	10c00a26 	beq	r2,r3,2047a8 <_malloc_trim_r+0x98>
  204780:	9009883a 	mov	r4,r18
  204784:	020db0c0 	call	20db0c <__malloc_unlock>
  204788:	0005883a 	mov	r2,zero
  20478c:	dfc00417 	ldw	ra,16(sp)
  204790:	dcc00317 	ldw	r19,12(sp)
  204794:	dc800217 	ldw	r18,8(sp)
  204798:	dc400117 	ldw	r17,4(sp)
  20479c:	dc000017 	ldw	r16,0(sp)
  2047a0:	dec00504 	addi	sp,sp,20
  2047a4:	f800283a 	ret
  2047a8:	040bc83a 	sub	r5,zero,r16
  2047ac:	9009883a 	mov	r4,r18
  2047b0:	020765c0 	call	20765c <_sbrk_r>
  2047b4:	10bfffd8 	cmpnei	r2,r2,-1
  2047b8:	10000d26 	beq	r2,zero,2047f0 <_malloc_trim_r+0xe0>
  2047bc:	00800874 	movhi	r2,33
  2047c0:	108ec117 	ldw	r2,15108(r2)
  2047c4:	98c00217 	ldw	r3,8(r19)
  2047c8:	8c23c83a 	sub	r17,r17,r16
  2047cc:	8c400054 	ori	r17,r17,1
  2047d0:	1421c83a 	sub	r16,r2,r16
  2047d4:	1c400115 	stw	r17,4(r3)
  2047d8:	00800874 	movhi	r2,33
  2047dc:	9009883a 	mov	r4,r18
  2047e0:	140ec115 	stw	r16,15108(r2)
  2047e4:	020db0c0 	call	20db0c <__malloc_unlock>
  2047e8:	00800044 	movi	r2,1
  2047ec:	003fe706 	br	20478c <_malloc_trim_r+0x7c>
  2047f0:	000b883a 	mov	r5,zero
  2047f4:	9009883a 	mov	r4,r18
  2047f8:	020765c0 	call	20765c <_sbrk_r>
  2047fc:	99000217 	ldw	r4,8(r19)
  204800:	1107c83a 	sub	r3,r2,r4
  204804:	19400410 	cmplti	r5,r3,16
  204808:	283fdd1e 	bne	r5,zero,204780 <_malloc_trim_r+0x70>
  20480c:	01400874 	movhi	r5,33
  204810:	2947b217 	ldw	r5,7880(r5)
  204814:	18c00054 	ori	r3,r3,1
  204818:	20c00115 	stw	r3,4(r4)
  20481c:	1145c83a 	sub	r2,r2,r5
  204820:	01400874 	movhi	r5,33
  204824:	288ec115 	stw	r2,15108(r5)
  204828:	003fd506 	br	204780 <_malloc_trim_r+0x70>

0020482c <_free_r>:
  20482c:	28004f26 	beq	r5,zero,20496c <_free_r+0x140>
  204830:	defffd04 	addi	sp,sp,-12
  204834:	dc400115 	stw	r17,4(sp)
  204838:	dc000015 	stw	r16,0(sp)
  20483c:	2023883a 	mov	r17,r4
  204840:	2821883a 	mov	r16,r5
  204844:	dfc00215 	stw	ra,8(sp)
  204848:	020dae80 	call	20dae8 <__malloc_lock>
  20484c:	81ffff17 	ldw	r7,-4(r16)
  204850:	00bfff84 	movi	r2,-2
  204854:	80fffe04 	addi	r3,r16,-8
  204858:	3884703a 	and	r2,r7,r2
  20485c:	01000874 	movhi	r4,33
  204860:	188d883a 	add	r6,r3,r2
  204864:	2101d104 	addi	r4,r4,1860
  204868:	31400117 	ldw	r5,4(r6)
  20486c:	22000217 	ldw	r8,8(r4)
  204870:	027fff04 	movi	r9,-4
  204874:	2a4a703a 	and	r5,r5,r9
  204878:	41806426 	beq	r8,r6,204a0c <_free_r+0x1e0>
  20487c:	31400115 	stw	r5,4(r6)
  204880:	39c0004c 	andi	r7,r7,1
  204884:	3151883a 	add	r8,r6,r5
  204888:	3800281e 	bne	r7,zero,20492c <_free_r+0x100>
  20488c:	82bffe17 	ldw	r10,-8(r16)
  204890:	42000117 	ldw	r8,4(r8)
  204894:	01c00874 	movhi	r7,33
  204898:	1a87c83a 	sub	r3,r3,r10
  20489c:	1a400217 	ldw	r9,8(r3)
  2048a0:	39c1d304 	addi	r7,r7,1868
  2048a4:	1285883a 	add	r2,r2,r10
  2048a8:	4200004c 	andi	r8,r8,1
  2048ac:	49c04c26 	beq	r9,r7,2049e0 <_free_r+0x1b4>
  2048b0:	1a800317 	ldw	r10,12(r3)
  2048b4:	4a800315 	stw	r10,12(r9)
  2048b8:	52400215 	stw	r9,8(r10)
  2048bc:	40007126 	beq	r8,zero,204a84 <_free_r+0x258>
  2048c0:	11400054 	ori	r5,r2,1
  2048c4:	19400115 	stw	r5,4(r3)
  2048c8:	30800015 	stw	r2,0(r6)
  2048cc:	11408028 	cmpgeui	r5,r2,512
  2048d0:	28002c1e 	bne	r5,zero,204984 <_free_r+0x158>
  2048d4:	100ad0fa 	srli	r5,r2,3
  2048d8:	100cd17a 	srli	r6,r2,5
  2048dc:	00800044 	movi	r2,1
  2048e0:	29400044 	addi	r5,r5,1
  2048e4:	280a90fa 	slli	r5,r5,3
  2048e8:	21c00117 	ldw	r7,4(r4)
  2048ec:	1184983a 	sll	r2,r2,r6
  2048f0:	214b883a 	add	r5,r4,r5
  2048f4:	29800017 	ldw	r6,0(r5)
  2048f8:	11c4b03a 	or	r2,r2,r7
  2048fc:	29fffe04 	addi	r7,r5,-8
  204900:	19c00315 	stw	r7,12(r3)
  204904:	19800215 	stw	r6,8(r3)
  204908:	20800115 	stw	r2,4(r4)
  20490c:	28c00015 	stw	r3,0(r5)
  204910:	30c00315 	stw	r3,12(r6)
  204914:	8809883a 	mov	r4,r17
  204918:	dfc00217 	ldw	ra,8(sp)
  20491c:	dc400117 	ldw	r17,4(sp)
  204920:	dc000017 	ldw	r16,0(sp)
  204924:	dec00304 	addi	sp,sp,12
  204928:	020db0c1 	jmpi	20db0c <__malloc_unlock>
  20492c:	41c00117 	ldw	r7,4(r8)
  204930:	39c0004c 	andi	r7,r7,1
  204934:	38000e1e 	bne	r7,zero,204970 <_free_r+0x144>
  204938:	01c00874 	movhi	r7,33
  20493c:	1145883a 	add	r2,r2,r5
  204940:	39c1d304 	addi	r7,r7,1868
  204944:	31400217 	ldw	r5,8(r6)
  204948:	12400054 	ori	r9,r2,1
  20494c:	1891883a 	add	r8,r3,r2
  204950:	29c05226 	beq	r5,r7,204a9c <_free_r+0x270>
  204954:	31800317 	ldw	r6,12(r6)
  204958:	29800315 	stw	r6,12(r5)
  20495c:	31400215 	stw	r5,8(r6)
  204960:	1a400115 	stw	r9,4(r3)
  204964:	40800015 	stw	r2,0(r8)
  204968:	003fd806 	br	2048cc <_free_r+0xa0>
  20496c:	f800283a 	ret
  204970:	11400054 	ori	r5,r2,1
  204974:	817fff15 	stw	r5,-4(r16)
  204978:	30800015 	stw	r2,0(r6)
  20497c:	11408028 	cmpgeui	r5,r2,512
  204980:	283fd426 	beq	r5,zero,2048d4 <_free_r+0xa8>
  204984:	100ad27a 	srli	r5,r2,9
  204988:	29800168 	cmpgeui	r6,r5,5
  20498c:	3000341e 	bne	r6,zero,204a60 <_free_r+0x234>
  204990:	100ad1ba 	srli	r5,r2,6
  204994:	29800e44 	addi	r6,r5,57
  204998:	300c90fa 	slli	r6,r6,3
  20499c:	29c00e04 	addi	r7,r5,56
  2049a0:	218d883a 	add	r6,r4,r6
  2049a4:	31400017 	ldw	r5,0(r6)
  2049a8:	31bffe04 	addi	r6,r6,-8
  2049ac:	31404226 	beq	r6,r5,204ab8 <_free_r+0x28c>
  2049b0:	01ffff04 	movi	r7,-4
  2049b4:	29000117 	ldw	r4,4(r5)
  2049b8:	21c8703a 	and	r4,r4,r7
  2049bc:	1100022e 	bgeu	r2,r4,2049c8 <_free_r+0x19c>
  2049c0:	29400217 	ldw	r5,8(r5)
  2049c4:	317ffb1e 	bne	r6,r5,2049b4 <_free_r+0x188>
  2049c8:	29800317 	ldw	r6,12(r5)
  2049cc:	19800315 	stw	r6,12(r3)
  2049d0:	19400215 	stw	r5,8(r3)
  2049d4:	30c00215 	stw	r3,8(r6)
  2049d8:	28c00315 	stw	r3,12(r5)
  2049dc:	003fcd06 	br	204914 <_free_r+0xe8>
  2049e0:	40004d1e 	bne	r8,zero,204b18 <_free_r+0x2ec>
  2049e4:	31000317 	ldw	r4,12(r6)
  2049e8:	31800217 	ldw	r6,8(r6)
  2049ec:	2885883a 	add	r2,r5,r2
  2049f0:	11400054 	ori	r5,r2,1
  2049f4:	31000315 	stw	r4,12(r6)
  2049f8:	21800215 	stw	r6,8(r4)
  2049fc:	19400115 	stw	r5,4(r3)
  204a00:	1887883a 	add	r3,r3,r2
  204a04:	18800015 	stw	r2,0(r3)
  204a08:	003fc206 	br	204914 <_free_r+0xe8>
  204a0c:	39c0004c 	andi	r7,r7,1
  204a10:	1145883a 	add	r2,r2,r5
  204a14:	3800071e 	bne	r7,zero,204a34 <_free_r+0x208>
  204a18:	81fffe17 	ldw	r7,-8(r16)
  204a1c:	19c7c83a 	sub	r3,r3,r7
  204a20:	19400317 	ldw	r5,12(r3)
  204a24:	19800217 	ldw	r6,8(r3)
  204a28:	11c5883a 	add	r2,r2,r7
  204a2c:	31400315 	stw	r5,12(r6)
  204a30:	29800215 	stw	r6,8(r5)
  204a34:	01400874 	movhi	r5,33
  204a38:	11800054 	ori	r6,r2,1
  204a3c:	2947b317 	ldw	r5,7884(r5)
  204a40:	19800115 	stw	r6,4(r3)
  204a44:	20c00215 	stw	r3,8(r4)
  204a48:	117fb236 	bltu	r2,r5,204914 <_free_r+0xe8>
  204a4c:	00800874 	movhi	r2,33
  204a50:	114eb617 	ldw	r5,15064(r2)
  204a54:	8809883a 	mov	r4,r17
  204a58:	02047100 	call	204710 <_malloc_trim_r>
  204a5c:	003fad06 	br	204914 <_free_r+0xe8>
  204a60:	29800568 	cmpgeui	r6,r5,21
  204a64:	30000926 	beq	r6,zero,204a8c <_free_r+0x260>
  204a68:	29801568 	cmpgeui	r6,r5,85
  204a6c:	3000191e 	bne	r6,zero,204ad4 <_free_r+0x2a8>
  204a70:	100ad33a 	srli	r5,r2,12
  204a74:	29801bc4 	addi	r6,r5,111
  204a78:	300c90fa 	slli	r6,r6,3
  204a7c:	29c01b84 	addi	r7,r5,110
  204a80:	003fc706 	br	2049a0 <_free_r+0x174>
  204a84:	1145883a 	add	r2,r2,r5
  204a88:	003fae06 	br	204944 <_free_r+0x118>
  204a8c:	29801704 	addi	r6,r5,92
  204a90:	300c90fa 	slli	r6,r6,3
  204a94:	29c016c4 	addi	r7,r5,91
  204a98:	003fc106 	br	2049a0 <_free_r+0x174>
  204a9c:	20c00515 	stw	r3,20(r4)
  204aa0:	20c00415 	stw	r3,16(r4)
  204aa4:	19c00315 	stw	r7,12(r3)
  204aa8:	19c00215 	stw	r7,8(r3)
  204aac:	1a400115 	stw	r9,4(r3)
  204ab0:	40800015 	stw	r2,0(r8)
  204ab4:	003f9706 	br	204914 <_free_r+0xe8>
  204ab8:	380fd0ba 	srai	r7,r7,2
  204abc:	00800044 	movi	r2,1
  204ac0:	22000117 	ldw	r8,4(r4)
  204ac4:	11ce983a 	sll	r7,r2,r7
  204ac8:	3a0eb03a 	or	r7,r7,r8
  204acc:	21c00115 	stw	r7,4(r4)
  204ad0:	003fbe06 	br	2049cc <_free_r+0x1a0>
  204ad4:	29805568 	cmpgeui	r6,r5,341
  204ad8:	3000051e 	bne	r6,zero,204af0 <_free_r+0x2c4>
  204adc:	100ad3fa 	srli	r5,r2,15
  204ae0:	29801e04 	addi	r6,r5,120
  204ae4:	300c90fa 	slli	r6,r6,3
  204ae8:	29c01dc4 	addi	r7,r5,119
  204aec:	003fac06 	br	2049a0 <_free_r+0x174>
  204af0:	29415568 	cmpgeui	r5,r5,1365
  204af4:	2800051e 	bne	r5,zero,204b0c <_free_r+0x2e0>
  204af8:	100ad4ba 	srli	r5,r2,18
  204afc:	29801f44 	addi	r6,r5,125
  204b00:	300c90fa 	slli	r6,r6,3
  204b04:	29c01f04 	addi	r7,r5,124
  204b08:	003fa506 	br	2049a0 <_free_r+0x174>
  204b0c:	0180fe04 	movi	r6,1016
  204b10:	01c01f84 	movi	r7,126
  204b14:	003fa206 	br	2049a0 <_free_r+0x174>
  204b18:	11000054 	ori	r4,r2,1
  204b1c:	19000115 	stw	r4,4(r3)
  204b20:	30800015 	stw	r2,0(r6)
  204b24:	003f7b06 	br	204914 <_free_r+0xe8>

00204b28 <__sfvwrite_r>:
  204b28:	30800217 	ldw	r2,8(r6)
  204b2c:	10009b26 	beq	r2,zero,204d9c <__sfvwrite_r+0x274>
  204b30:	2a00030b 	ldhu	r8,12(r5)
  204b34:	defff404 	addi	sp,sp,-48
  204b38:	dd400715 	stw	r21,28(sp)
  204b3c:	dd000615 	stw	r20,24(sp)
  204b40:	dc000215 	stw	r16,8(sp)
  204b44:	dfc00b15 	stw	ra,44(sp)
  204b48:	df000a15 	stw	fp,40(sp)
  204b4c:	ddc00915 	stw	r23,36(sp)
  204b50:	dd800815 	stw	r22,32(sp)
  204b54:	dcc00515 	stw	r19,20(sp)
  204b58:	dc800415 	stw	r18,16(sp)
  204b5c:	dc400315 	stw	r17,12(sp)
  204b60:	4080020c 	andi	r2,r8,8
  204b64:	3029883a 	mov	r20,r6
  204b68:	202b883a 	mov	r21,r4
  204b6c:	2821883a 	mov	r16,r5
  204b70:	10002626 	beq	r2,zero,204c0c <__sfvwrite_r+0xe4>
  204b74:	28800417 	ldw	r2,16(r5)
  204b78:	10002426 	beq	r2,zero,204c0c <__sfvwrite_r+0xe4>
  204b7c:	4080008c 	andi	r2,r8,2
  204b80:	a4400017 	ldw	r17,0(r20)
  204b84:	10002926 	beq	r2,zero,204c2c <__sfvwrite_r+0x104>
  204b88:	05a00034 	movhi	r22,32768
  204b8c:	0027883a 	mov	r19,zero
  204b90:	0025883a 	mov	r18,zero
  204b94:	b5bf0004 	addi	r22,r22,-1024
  204b98:	980d883a 	mov	r6,r19
  204b9c:	a809883a 	mov	r4,r21
  204ba0:	90007126 	beq	r18,zero,204d68 <__sfvwrite_r+0x240>
  204ba4:	900f883a 	mov	r7,r18
  204ba8:	b480012e 	bgeu	r22,r18,204bb0 <__sfvwrite_r+0x88>
  204bac:	b00f883a 	mov	r7,r22
  204bb0:	80800917 	ldw	r2,36(r16)
  204bb4:	81400717 	ldw	r5,28(r16)
  204bb8:	103ee83a 	callr	r2
  204bbc:	0080720e 	bge	zero,r2,204d88 <__sfvwrite_r+0x260>
  204bc0:	a0c00217 	ldw	r3,8(r20)
  204bc4:	98a7883a 	add	r19,r19,r2
  204bc8:	90a5c83a 	sub	r18,r18,r2
  204bcc:	1885c83a 	sub	r2,r3,r2
  204bd0:	a0800215 	stw	r2,8(r20)
  204bd4:	103ff01e 	bne	r2,zero,204b98 <__sfvwrite_r+0x70>
  204bd8:	0005883a 	mov	r2,zero
  204bdc:	dfc00b17 	ldw	ra,44(sp)
  204be0:	df000a17 	ldw	fp,40(sp)
  204be4:	ddc00917 	ldw	r23,36(sp)
  204be8:	dd800817 	ldw	r22,32(sp)
  204bec:	dd400717 	ldw	r21,28(sp)
  204bf0:	dd000617 	ldw	r20,24(sp)
  204bf4:	dcc00517 	ldw	r19,20(sp)
  204bf8:	dc800417 	ldw	r18,16(sp)
  204bfc:	dc400317 	ldw	r17,12(sp)
  204c00:	dc000217 	ldw	r16,8(sp)
  204c04:	dec00c04 	addi	sp,sp,48
  204c08:	f800283a 	ret
  204c0c:	800b883a 	mov	r5,r16
  204c10:	a809883a 	mov	r4,r21
  204c14:	020258c0 	call	20258c <__swsetup_r>
  204c18:	1000e61e 	bne	r2,zero,204fb4 <__sfvwrite_r+0x48c>
  204c1c:	8200030b 	ldhu	r8,12(r16)
  204c20:	a4400017 	ldw	r17,0(r20)
  204c24:	4080008c 	andi	r2,r8,2
  204c28:	103fd71e 	bne	r2,zero,204b88 <__sfvwrite_r+0x60>
  204c2c:	4080004c 	andi	r2,r8,1
  204c30:	10005c1e 	bne	r2,zero,204da4 <__sfvwrite_r+0x27c>
  204c34:	00a00034 	movhi	r2,32768
  204c38:	10bfff84 	addi	r2,r2,-2
  204c3c:	00e00034 	movhi	r3,32768
  204c40:	d8800015 	stw	r2,0(sp)
  204c44:	18bfffc4 	addi	r2,r3,-1
  204c48:	0039883a 	mov	fp,zero
  204c4c:	0025883a 	mov	r18,zero
  204c50:	d8800115 	stw	r2,4(sp)
  204c54:	90004026 	beq	r18,zero,204d58 <__sfvwrite_r+0x230>
  204c58:	4080800c 	andi	r2,r8,512
  204c5c:	81000017 	ldw	r4,0(r16)
  204c60:	85c00217 	ldw	r23,8(r16)
  204c64:	10008826 	beq	r2,zero,204e88 <__sfvwrite_r+0x360>
  204c68:	b82d883a 	mov	r22,r23
  204c6c:	95c0ae36 	bltu	r18,r23,204f28 <__sfvwrite_r+0x400>
  204c70:	4081200c 	andi	r2,r8,1152
  204c74:	10002626 	beq	r2,zero,204d10 <__sfvwrite_r+0x1e8>
  204c78:	81800517 	ldw	r6,20(r16)
  204c7c:	81400417 	ldw	r5,16(r16)
  204c80:	3185883a 	add	r2,r6,r6
  204c84:	1185883a 	add	r2,r2,r6
  204c88:	1026d7fa 	srli	r19,r2,31
  204c8c:	216dc83a 	sub	r22,r4,r5
  204c90:	b1000044 	addi	r4,r22,1
  204c94:	98a7883a 	add	r19,r19,r2
  204c98:	9827d07a 	srai	r19,r19,1
  204c9c:	2485883a 	add	r2,r4,r18
  204ca0:	980d883a 	mov	r6,r19
  204ca4:	9880022e 	bgeu	r19,r2,204cb0 <__sfvwrite_r+0x188>
  204ca8:	1027883a 	mov	r19,r2
  204cac:	100d883a 	mov	r6,r2
  204cb0:	4201000c 	andi	r8,r8,1024
  204cb4:	4000af26 	beq	r8,zero,204f74 <__sfvwrite_r+0x44c>
  204cb8:	300b883a 	mov	r5,r6
  204cbc:	a809883a 	mov	r4,r21
  204cc0:	02053640 	call	205364 <_malloc_r>
  204cc4:	1000b726 	beq	r2,zero,204fa4 <__sfvwrite_r+0x47c>
  204cc8:	81400417 	ldw	r5,16(r16)
  204ccc:	b00d883a 	mov	r6,r22
  204cd0:	1009883a 	mov	r4,r2
  204cd4:	0205c140 	call	205c14 <memcpy>
  204cd8:	100f883a 	mov	r7,r2
  204cdc:	8080030b 	ldhu	r2,12(r16)
  204ce0:	00fedfc4 	movi	r3,-1153
  204ce4:	10c4703a 	and	r2,r2,r3
  204ce8:	10802014 	ori	r2,r2,128
  204cec:	8080030d 	sth	r2,12(r16)
  204cf0:	3d89883a 	add	r4,r7,r22
  204cf4:	9d85c83a 	sub	r2,r19,r22
  204cf8:	81c00415 	stw	r7,16(r16)
  204cfc:	81000015 	stw	r4,0(r16)
  204d00:	84c00515 	stw	r19,20(r16)
  204d04:	902f883a 	mov	r23,r18
  204d08:	80800215 	stw	r2,8(r16)
  204d0c:	902d883a 	mov	r22,r18
  204d10:	b00d883a 	mov	r6,r22
  204d14:	e00b883a 	mov	r5,fp
  204d18:	0205d140 	call	205d14 <memmove>
  204d1c:	81000217 	ldw	r4,8(r16)
  204d20:	80800017 	ldw	r2,0(r16)
  204d24:	9027883a 	mov	r19,r18
  204d28:	25c9c83a 	sub	r4,r4,r23
  204d2c:	1585883a 	add	r2,r2,r22
  204d30:	81000215 	stw	r4,8(r16)
  204d34:	80800015 	stw	r2,0(r16)
  204d38:	0025883a 	mov	r18,zero
  204d3c:	a1800217 	ldw	r6,8(r20)
  204d40:	e4f9883a 	add	fp,fp,r19
  204d44:	34e7c83a 	sub	r19,r6,r19
  204d48:	a4c00215 	stw	r19,8(r20)
  204d4c:	983fa226 	beq	r19,zero,204bd8 <__sfvwrite_r+0xb0>
  204d50:	8200030b 	ldhu	r8,12(r16)
  204d54:	903fc01e 	bne	r18,zero,204c58 <__sfvwrite_r+0x130>
  204d58:	8f000017 	ldw	fp,0(r17)
  204d5c:	8c800117 	ldw	r18,4(r17)
  204d60:	8c400204 	addi	r17,r17,8
  204d64:	003fbb06 	br	204c54 <__sfvwrite_r+0x12c>
  204d68:	8cc00017 	ldw	r19,0(r17)
  204d6c:	8c800117 	ldw	r18,4(r17)
  204d70:	8c400204 	addi	r17,r17,8
  204d74:	003f8806 	br	204b98 <__sfvwrite_r+0x70>
  204d78:	800b883a 	mov	r5,r16
  204d7c:	a809883a 	mov	r4,r21
  204d80:	02042800 	call	204280 <_fflush_r>
  204d84:	10002226 	beq	r2,zero,204e10 <__sfvwrite_r+0x2e8>
  204d88:	8080030b 	ldhu	r2,12(r16)
  204d8c:	10801014 	ori	r2,r2,64
  204d90:	8080030d 	sth	r2,12(r16)
  204d94:	00bfffc4 	movi	r2,-1
  204d98:	003f9006 	br	204bdc <__sfvwrite_r+0xb4>
  204d9c:	0005883a 	mov	r2,zero
  204da0:	f800283a 	ret
  204da4:	002d883a 	mov	r22,zero
  204da8:	0039883a 	mov	fp,zero
  204dac:	0005883a 	mov	r2,zero
  204db0:	002f883a 	mov	r23,zero
  204db4:	b0001d26 	beq	r22,zero,204e2c <__sfvwrite_r+0x304>
  204db8:	10002026 	beq	r2,zero,204e3c <__sfvwrite_r+0x314>
  204dbc:	e027883a 	mov	r19,fp
  204dc0:	b4c0012e 	bgeu	r22,r19,204dc8 <__sfvwrite_r+0x2a0>
  204dc4:	b027883a 	mov	r19,r22
  204dc8:	81000017 	ldw	r4,0(r16)
  204dcc:	80800417 	ldw	r2,16(r16)
  204dd0:	81c00517 	ldw	r7,20(r16)
  204dd4:	1100032e 	bgeu	r2,r4,204de4 <__sfvwrite_r+0x2bc>
  204dd8:	84800217 	ldw	r18,8(r16)
  204ddc:	3ca5883a 	add	r18,r7,r18
  204de0:	94c01e16 	blt	r18,r19,204e5c <__sfvwrite_r+0x334>
  204de4:	99c05316 	blt	r19,r7,204f34 <__sfvwrite_r+0x40c>
  204de8:	80800917 	ldw	r2,36(r16)
  204dec:	81400717 	ldw	r5,28(r16)
  204df0:	b80d883a 	mov	r6,r23
  204df4:	a809883a 	mov	r4,r21
  204df8:	103ee83a 	callr	r2
  204dfc:	1025883a 	mov	r18,r2
  204e00:	00bfe10e 	bge	zero,r2,204d88 <__sfvwrite_r+0x260>
  204e04:	e4b9c83a 	sub	fp,fp,r18
  204e08:	e03fdb26 	beq	fp,zero,204d78 <__sfvwrite_r+0x250>
  204e0c:	00800044 	movi	r2,1
  204e10:	a1800217 	ldw	r6,8(r20)
  204e14:	bcaf883a 	add	r23,r23,r18
  204e18:	b4adc83a 	sub	r22,r22,r18
  204e1c:	34a5c83a 	sub	r18,r6,r18
  204e20:	a4800215 	stw	r18,8(r20)
  204e24:	903f6c26 	beq	r18,zero,204bd8 <__sfvwrite_r+0xb0>
  204e28:	b03fe31e 	bne	r22,zero,204db8 <__sfvwrite_r+0x290>
  204e2c:	8d800117 	ldw	r22,4(r17)
  204e30:	8dc00017 	ldw	r23,0(r17)
  204e34:	8c400204 	addi	r17,r17,8
  204e38:	b03ffc26 	beq	r22,zero,204e2c <__sfvwrite_r+0x304>
  204e3c:	b00d883a 	mov	r6,r22
  204e40:	01400284 	movi	r5,10
  204e44:	b809883a 	mov	r4,r23
  204e48:	0205b440 	call	205b44 <memchr>
  204e4c:	10004626 	beq	r2,zero,204f68 <__sfvwrite_r+0x440>
  204e50:	10800044 	addi	r2,r2,1
  204e54:	15f9c83a 	sub	fp,r2,r23
  204e58:	003fd806 	br	204dbc <__sfvwrite_r+0x294>
  204e5c:	b80b883a 	mov	r5,r23
  204e60:	900d883a 	mov	r6,r18
  204e64:	0205d140 	call	205d14 <memmove>
  204e68:	80800017 	ldw	r2,0(r16)
  204e6c:	800b883a 	mov	r5,r16
  204e70:	a809883a 	mov	r4,r21
  204e74:	1485883a 	add	r2,r2,r18
  204e78:	80800015 	stw	r2,0(r16)
  204e7c:	02042800 	call	204280 <_fflush_r>
  204e80:	103fe026 	beq	r2,zero,204e04 <__sfvwrite_r+0x2dc>
  204e84:	003fc006 	br	204d88 <__sfvwrite_r+0x260>
  204e88:	80800417 	ldw	r2,16(r16)
  204e8c:	11001436 	bltu	r2,r4,204ee0 <__sfvwrite_r+0x3b8>
  204e90:	84c00517 	ldw	r19,20(r16)
  204e94:	94c01236 	bltu	r18,r19,204ee0 <__sfvwrite_r+0x3b8>
  204e98:	d8800017 	ldw	r2,0(sp)
  204e9c:	1480302e 	bgeu	r2,r18,204f60 <__sfvwrite_r+0x438>
  204ea0:	d9000117 	ldw	r4,4(sp)
  204ea4:	980b883a 	mov	r5,r19
  204ea8:	020aa240 	call	20aa24 <__divsi3>
  204eac:	980b883a 	mov	r5,r19
  204eb0:	1009883a 	mov	r4,r2
  204eb4:	020abd80 	call	20abd8 <__mulsi3>
  204eb8:	82000917 	ldw	r8,36(r16)
  204ebc:	81400717 	ldw	r5,28(r16)
  204ec0:	100f883a 	mov	r7,r2
  204ec4:	e00d883a 	mov	r6,fp
  204ec8:	a809883a 	mov	r4,r21
  204ecc:	403ee83a 	callr	r8
  204ed0:	1027883a 	mov	r19,r2
  204ed4:	00bfac0e 	bge	zero,r2,204d88 <__sfvwrite_r+0x260>
  204ed8:	94e5c83a 	sub	r18,r18,r19
  204edc:	003f9706 	br	204d3c <__sfvwrite_r+0x214>
  204ee0:	b827883a 	mov	r19,r23
  204ee4:	95c0012e 	bgeu	r18,r23,204eec <__sfvwrite_r+0x3c4>
  204ee8:	9027883a 	mov	r19,r18
  204eec:	980d883a 	mov	r6,r19
  204ef0:	e00b883a 	mov	r5,fp
  204ef4:	0205d140 	call	205d14 <memmove>
  204ef8:	80800217 	ldw	r2,8(r16)
  204efc:	81000017 	ldw	r4,0(r16)
  204f00:	14c5c83a 	sub	r2,r2,r19
  204f04:	24c9883a 	add	r4,r4,r19
  204f08:	80800215 	stw	r2,8(r16)
  204f0c:	81000015 	stw	r4,0(r16)
  204f10:	103ff11e 	bne	r2,zero,204ed8 <__sfvwrite_r+0x3b0>
  204f14:	800b883a 	mov	r5,r16
  204f18:	a809883a 	mov	r4,r21
  204f1c:	02042800 	call	204280 <_fflush_r>
  204f20:	103fed26 	beq	r2,zero,204ed8 <__sfvwrite_r+0x3b0>
  204f24:	003f9806 	br	204d88 <__sfvwrite_r+0x260>
  204f28:	902f883a 	mov	r23,r18
  204f2c:	902d883a 	mov	r22,r18
  204f30:	003f7706 	br	204d10 <__sfvwrite_r+0x1e8>
  204f34:	980d883a 	mov	r6,r19
  204f38:	b80b883a 	mov	r5,r23
  204f3c:	0205d140 	call	205d14 <memmove>
  204f40:	80c00217 	ldw	r3,8(r16)
  204f44:	80800017 	ldw	r2,0(r16)
  204f48:	9825883a 	mov	r18,r19
  204f4c:	1cc7c83a 	sub	r3,r3,r19
  204f50:	14c5883a 	add	r2,r2,r19
  204f54:	80c00215 	stw	r3,8(r16)
  204f58:	80800015 	stw	r2,0(r16)
  204f5c:	003fa906 	br	204e04 <__sfvwrite_r+0x2dc>
  204f60:	9009883a 	mov	r4,r18
  204f64:	003fcf06 	br	204ea4 <__sfvwrite_r+0x37c>
  204f68:	b4c00044 	addi	r19,r22,1
  204f6c:	9839883a 	mov	fp,r19
  204f70:	003f9306 	br	204dc0 <__sfvwrite_r+0x298>
  204f74:	a809883a 	mov	r4,r21
  204f78:	02071200 	call	207120 <_realloc_r>
  204f7c:	100f883a 	mov	r7,r2
  204f80:	103f5b1e 	bne	r2,zero,204cf0 <__sfvwrite_r+0x1c8>
  204f84:	81400417 	ldw	r5,16(r16)
  204f88:	a809883a 	mov	r4,r21
  204f8c:	020482c0 	call	20482c <_free_r>
  204f90:	8080030b 	ldhu	r2,12(r16)
  204f94:	00c00304 	movi	r3,12
  204f98:	a8c00015 	stw	r3,0(r21)
  204f9c:	10bfdfcc 	andi	r2,r2,65407
  204fa0:	003f7a06 	br	204d8c <__sfvwrite_r+0x264>
  204fa4:	00c00304 	movi	r3,12
  204fa8:	8080030b 	ldhu	r2,12(r16)
  204fac:	a8c00015 	stw	r3,0(r21)
  204fb0:	003f7606 	br	204d8c <__sfvwrite_r+0x264>
  204fb4:	00bfffc4 	movi	r2,-1
  204fb8:	003f0806 	br	204bdc <__sfvwrite_r+0xb4>

00204fbc <_fwalk>:
  204fbc:	defffa04 	addi	sp,sp,-24
  204fc0:	dd000415 	stw	r20,16(sp)
  204fc4:	dcc00315 	stw	r19,12(sp)
  204fc8:	dc800215 	stw	r18,8(sp)
  204fcc:	dfc00515 	stw	ra,20(sp)
  204fd0:	dc400115 	stw	r17,4(sp)
  204fd4:	dc000015 	stw	r16,0(sp)
  204fd8:	2827883a 	mov	r19,r5
  204fdc:	2480b804 	addi	r18,r4,736
  204fe0:	0029883a 	mov	r20,zero
  204fe4:	94400117 	ldw	r17,4(r18)
  204fe8:	94000217 	ldw	r16,8(r18)
  204fec:	8c7fffc4 	addi	r17,r17,-1
  204ff0:	88000d16 	blt	r17,zero,205028 <_fwalk+0x6c>
  204ff4:	8080030b 	ldhu	r2,12(r16)
  204ff8:	8c7fffc4 	addi	r17,r17,-1
  204ffc:	108000b0 	cmpltui	r2,r2,2
  205000:	1000061e 	bne	r2,zero,20501c <_fwalk+0x60>
  205004:	8080038f 	ldh	r2,14(r16)
  205008:	8009883a 	mov	r4,r16
  20500c:	10bfffe0 	cmpeqi	r2,r2,-1
  205010:	1000021e 	bne	r2,zero,20501c <_fwalk+0x60>
  205014:	983ee83a 	callr	r19
  205018:	a0a8b03a 	or	r20,r20,r2
  20501c:	88bfffd8 	cmpnei	r2,r17,-1
  205020:	84001a04 	addi	r16,r16,104
  205024:	103ff31e 	bne	r2,zero,204ff4 <_fwalk+0x38>
  205028:	94800017 	ldw	r18,0(r18)
  20502c:	903fed1e 	bne	r18,zero,204fe4 <_fwalk+0x28>
  205030:	a005883a 	mov	r2,r20
  205034:	dfc00517 	ldw	ra,20(sp)
  205038:	dd000417 	ldw	r20,16(sp)
  20503c:	dcc00317 	ldw	r19,12(sp)
  205040:	dc800217 	ldw	r18,8(sp)
  205044:	dc400117 	ldw	r17,4(sp)
  205048:	dc000017 	ldw	r16,0(sp)
  20504c:	dec00604 	addi	sp,sp,24
  205050:	f800283a 	ret

00205054 <_fwalk_reent>:
  205054:	defff904 	addi	sp,sp,-28
  205058:	dd400515 	stw	r21,20(sp)
  20505c:	dd000415 	stw	r20,16(sp)
  205060:	dcc00315 	stw	r19,12(sp)
  205064:	dc800215 	stw	r18,8(sp)
  205068:	dfc00615 	stw	ra,24(sp)
  20506c:	dc400115 	stw	r17,4(sp)
  205070:	dc000015 	stw	r16,0(sp)
  205074:	202b883a 	mov	r21,r4
  205078:	2827883a 	mov	r19,r5
  20507c:	2480b804 	addi	r18,r4,736
  205080:	0029883a 	mov	r20,zero
  205084:	94400117 	ldw	r17,4(r18)
  205088:	94000217 	ldw	r16,8(r18)
  20508c:	8c7fffc4 	addi	r17,r17,-1
  205090:	88000e16 	blt	r17,zero,2050cc <_fwalk_reent+0x78>
  205094:	8080030b 	ldhu	r2,12(r16)
  205098:	8c7fffc4 	addi	r17,r17,-1
  20509c:	108000b0 	cmpltui	r2,r2,2
  2050a0:	1000071e 	bne	r2,zero,2050c0 <_fwalk_reent+0x6c>
  2050a4:	8080038f 	ldh	r2,14(r16)
  2050a8:	800b883a 	mov	r5,r16
  2050ac:	a809883a 	mov	r4,r21
  2050b0:	10bfffe0 	cmpeqi	r2,r2,-1
  2050b4:	1000021e 	bne	r2,zero,2050c0 <_fwalk_reent+0x6c>
  2050b8:	983ee83a 	callr	r19
  2050bc:	a0a8b03a 	or	r20,r20,r2
  2050c0:	88bfffd8 	cmpnei	r2,r17,-1
  2050c4:	84001a04 	addi	r16,r16,104
  2050c8:	103ff21e 	bne	r2,zero,205094 <_fwalk_reent+0x40>
  2050cc:	94800017 	ldw	r18,0(r18)
  2050d0:	903fec1e 	bne	r18,zero,205084 <_fwalk_reent+0x30>
  2050d4:	a005883a 	mov	r2,r20
  2050d8:	dfc00617 	ldw	ra,24(sp)
  2050dc:	dd400517 	ldw	r21,20(sp)
  2050e0:	dd000417 	ldw	r20,16(sp)
  2050e4:	dcc00317 	ldw	r19,12(sp)
  2050e8:	dc800217 	ldw	r18,8(sp)
  2050ec:	dc400117 	ldw	r17,4(sp)
  2050f0:	dc000017 	ldw	r16,0(sp)
  2050f4:	dec00704 	addi	sp,sp,28
  2050f8:	f800283a 	ret

002050fc <__localeconv_l>:
  2050fc:	20803c04 	addi	r2,r4,240
  205100:	f800283a 	ret

00205104 <_localeconv_r>:
  205104:	00800874 	movhi	r2,33
  205108:	10830f04 	addi	r2,r2,3132
  20510c:	f800283a 	ret

00205110 <localeconv>:
  205110:	00800874 	movhi	r2,33
  205114:	10830f04 	addi	r2,r2,3132
  205118:	f800283a 	ret

0020511c <__smakebuf_r>:
  20511c:	2880030b 	ldhu	r2,12(r5)
  205120:	deffe804 	addi	sp,sp,-96
  205124:	dc001215 	stw	r16,72(sp)
  205128:	dfc01715 	stw	ra,92(sp)
  20512c:	dd001615 	stw	r20,88(sp)
  205130:	dcc01515 	stw	r19,84(sp)
  205134:	dc801415 	stw	r18,80(sp)
  205138:	dc401315 	stw	r17,76(sp)
  20513c:	10c0008c 	andi	r3,r2,2
  205140:	2821883a 	mov	r16,r5
  205144:	18000d26 	beq	r3,zero,20517c <__smakebuf_r+0x60>
  205148:	288010c4 	addi	r2,r5,67
  20514c:	28800015 	stw	r2,0(r5)
  205150:	28800415 	stw	r2,16(r5)
  205154:	00800044 	movi	r2,1
  205158:	28800515 	stw	r2,20(r5)
  20515c:	dfc01717 	ldw	ra,92(sp)
  205160:	dd001617 	ldw	r20,88(sp)
  205164:	dcc01517 	ldw	r19,84(sp)
  205168:	dc801417 	ldw	r18,80(sp)
  20516c:	dc401317 	ldw	r17,76(sp)
  205170:	dc001217 	ldw	r16,72(sp)
  205174:	dec01804 	addi	sp,sp,96
  205178:	f800283a 	ret
  20517c:	2940038f 	ldh	r5,14(r5)
  205180:	2023883a 	mov	r17,r4
  205184:	28002816 	blt	r5,zero,205228 <__smakebuf_r+0x10c>
  205188:	d80d883a 	mov	r6,sp
  20518c:	02092c80 	call	2092c8 <_fstat_r>
  205190:	10002416 	blt	r2,zero,205224 <__smakebuf_r+0x108>
  205194:	d8800117 	ldw	r2,4(sp)
  205198:	10bc000c 	andi	r2,r2,61440
  20519c:	10880018 	cmpnei	r2,r2,8192
  2051a0:	1000461e 	bne	r2,zero,2052bc <__smakebuf_r+0x1a0>
  2051a4:	8140038f 	ldh	r5,14(r16)
  2051a8:	8809883a 	mov	r4,r17
  2051ac:	02093280 	call	209328 <_isatty_r>
  2051b0:	10003e26 	beq	r2,zero,2052ac <__smakebuf_r+0x190>
  2051b4:	8080030b 	ldhu	r2,12(r16)
  2051b8:	80c010c4 	addi	r3,r16,67
  2051bc:	80c00015 	stw	r3,0(r16)
  2051c0:	10800054 	ori	r2,r2,1
  2051c4:	8080030d 	sth	r2,12(r16)
  2051c8:	00800044 	movi	r2,1
  2051cc:	80c00415 	stw	r3,16(r16)
  2051d0:	80800515 	stw	r2,20(r16)
  2051d4:	04c00044 	movi	r19,1
  2051d8:	05010004 	movi	r20,1024
  2051dc:	04820004 	movi	r18,2048
  2051e0:	a00b883a 	mov	r5,r20
  2051e4:	8809883a 	mov	r4,r17
  2051e8:	02053640 	call	205364 <_malloc_r>
  2051ec:	10001726 	beq	r2,zero,20524c <__smakebuf_r+0x130>
  2051f0:	80c0030b 	ldhu	r3,12(r16)
  2051f4:	01000834 	movhi	r4,32
  2051f8:	2110db04 	addi	r4,r4,17260
  2051fc:	89000f15 	stw	r4,60(r17)
  205200:	18c02014 	ori	r3,r3,128
  205204:	80c0030d 	sth	r3,12(r16)
  205208:	80800015 	stw	r2,0(r16)
  20520c:	80800415 	stw	r2,16(r16)
  205210:	85000515 	stw	r20,20(r16)
  205214:	98001d1e 	bne	r19,zero,20528c <__smakebuf_r+0x170>
  205218:	90c6b03a 	or	r3,r18,r3
  20521c:	80c0030d 	sth	r3,12(r16)
  205220:	003fce06 	br	20515c <__smakebuf_r+0x40>
  205224:	8080030b 	ldhu	r2,12(r16)
  205228:	1080200c 	andi	r2,r2,128
  20522c:	0027883a 	mov	r19,zero
  205230:	10001326 	beq	r2,zero,205280 <__smakebuf_r+0x164>
  205234:	05001004 	movi	r20,64
  205238:	a00b883a 	mov	r5,r20
  20523c:	8809883a 	mov	r4,r17
  205240:	0025883a 	mov	r18,zero
  205244:	02053640 	call	205364 <_malloc_r>
  205248:	103fe91e 	bne	r2,zero,2051f0 <__smakebuf_r+0xd4>
  20524c:	8080030b 	ldhu	r2,12(r16)
  205250:	10c0800c 	andi	r3,r2,512
  205254:	183fc11e 	bne	r3,zero,20515c <__smakebuf_r+0x40>
  205258:	00ffff04 	movi	r3,-4
  20525c:	10c4703a 	and	r2,r2,r3
  205260:	10800094 	ori	r2,r2,2
  205264:	80c010c4 	addi	r3,r16,67
  205268:	8080030d 	sth	r2,12(r16)
  20526c:	00800044 	movi	r2,1
  205270:	80c00015 	stw	r3,0(r16)
  205274:	80c00415 	stw	r3,16(r16)
  205278:	80800515 	stw	r2,20(r16)
  20527c:	003fb706 	br	20515c <__smakebuf_r+0x40>
  205280:	05010004 	movi	r20,1024
  205284:	0025883a 	mov	r18,zero
  205288:	003fd506 	br	2051e0 <__smakebuf_r+0xc4>
  20528c:	8140038f 	ldh	r5,14(r16)
  205290:	8809883a 	mov	r4,r17
  205294:	02093280 	call	209328 <_isatty_r>
  205298:	80c0030b 	ldhu	r3,12(r16)
  20529c:	103fde26 	beq	r2,zero,205218 <__smakebuf_r+0xfc>
  2052a0:	18ffff0c 	andi	r3,r3,65532
  2052a4:	18c00054 	ori	r3,r3,1
  2052a8:	003fdb06 	br	205218 <__smakebuf_r+0xfc>
  2052ac:	04c00044 	movi	r19,1
  2052b0:	05010004 	movi	r20,1024
  2052b4:	04820004 	movi	r18,2048
  2052b8:	003fc906 	br	2051e0 <__smakebuf_r+0xc4>
  2052bc:	0027883a 	mov	r19,zero
  2052c0:	05010004 	movi	r20,1024
  2052c4:	04820004 	movi	r18,2048
  2052c8:	003fc506 	br	2051e0 <__smakebuf_r+0xc4>

002052cc <__swhatbuf_r>:
  2052cc:	deffea04 	addi	sp,sp,-88
  2052d0:	dc001215 	stw	r16,72(sp)
  2052d4:	2821883a 	mov	r16,r5
  2052d8:	2940038f 	ldh	r5,14(r5)
  2052dc:	dc801415 	stw	r18,80(sp)
  2052e0:	dc401315 	stw	r17,76(sp)
  2052e4:	dfc01515 	stw	ra,84(sp)
  2052e8:	3023883a 	mov	r17,r6
  2052ec:	3825883a 	mov	r18,r7
  2052f0:	28001016 	blt	r5,zero,205334 <__swhatbuf_r+0x68>
  2052f4:	d80d883a 	mov	r6,sp
  2052f8:	02092c80 	call	2092c8 <_fstat_r>
  2052fc:	10000d16 	blt	r2,zero,205334 <__swhatbuf_r+0x68>
  205300:	d8c00117 	ldw	r3,4(sp)
  205304:	00820004 	movi	r2,2048
  205308:	18fc000c 	andi	r3,r3,61440
  20530c:	18c80020 	cmpeqi	r3,r3,8192
  205310:	90c00015 	stw	r3,0(r18)
  205314:	00c10004 	movi	r3,1024
  205318:	88c00015 	stw	r3,0(r17)
  20531c:	dfc01517 	ldw	ra,84(sp)
  205320:	dc801417 	ldw	r18,80(sp)
  205324:	dc401317 	ldw	r17,76(sp)
  205328:	dc001217 	ldw	r16,72(sp)
  20532c:	dec01604 	addi	sp,sp,88
  205330:	f800283a 	ret
  205334:	8080030b 	ldhu	r2,12(r16)
  205338:	90000015 	stw	zero,0(r18)
  20533c:	1080200c 	andi	r2,r2,128
  205340:	10000426 	beq	r2,zero,205354 <__swhatbuf_r+0x88>
  205344:	00801004 	movi	r2,64
  205348:	88800015 	stw	r2,0(r17)
  20534c:	0005883a 	mov	r2,zero
  205350:	003ff206 	br	20531c <__swhatbuf_r+0x50>
  205354:	00810004 	movi	r2,1024
  205358:	88800015 	stw	r2,0(r17)
  20535c:	0005883a 	mov	r2,zero
  205360:	003fee06 	br	20531c <__swhatbuf_r+0x50>

00205364 <_malloc_r>:
  205364:	defff604 	addi	sp,sp,-40
  205368:	dc400115 	stw	r17,4(sp)
  20536c:	2c4002c4 	addi	r17,r5,11
  205370:	dc800215 	stw	r18,8(sp)
  205374:	dfc00915 	stw	ra,36(sp)
  205378:	df000815 	stw	fp,32(sp)
  20537c:	ddc00715 	stw	r23,28(sp)
  205380:	dd800615 	stw	r22,24(sp)
  205384:	dd400515 	stw	r21,20(sp)
  205388:	dd000415 	stw	r20,16(sp)
  20538c:	dcc00315 	stw	r19,12(sp)
  205390:	dc000015 	stw	r16,0(sp)
  205394:	888005e8 	cmpgeui	r2,r17,23
  205398:	2025883a 	mov	r18,r4
  20539c:	10001b1e 	bne	r2,zero,20540c <_malloc_r+0xa8>
  2053a0:	29400468 	cmpgeui	r5,r5,17
  2053a4:	2800821e 	bne	r5,zero,2055b0 <_malloc_r+0x24c>
  2053a8:	020dae80 	call	20dae8 <__malloc_lock>
  2053ac:	04400404 	movi	r17,16
  2053b0:	00800604 	movi	r2,24
  2053b4:	01c00084 	movi	r7,2
  2053b8:	04c00874 	movhi	r19,33
  2053bc:	9cc1d104 	addi	r19,r19,1860
  2053c0:	9885883a 	add	r2,r19,r2
  2053c4:	14000117 	ldw	r16,4(r2)
  2053c8:	10fffe04 	addi	r3,r2,-8
  2053cc:	80c08b26 	beq	r16,r3,2055fc <_malloc_r+0x298>
  2053d0:	80800117 	ldw	r2,4(r16)
  2053d4:	81000317 	ldw	r4,12(r16)
  2053d8:	00ffff04 	movi	r3,-4
  2053dc:	10c4703a 	and	r2,r2,r3
  2053e0:	81400217 	ldw	r5,8(r16)
  2053e4:	8085883a 	add	r2,r16,r2
  2053e8:	10c00117 	ldw	r3,4(r2)
  2053ec:	29000315 	stw	r4,12(r5)
  2053f0:	21400215 	stw	r5,8(r4)
  2053f4:	18c00054 	ori	r3,r3,1
  2053f8:	10c00115 	stw	r3,4(r2)
  2053fc:	9009883a 	mov	r4,r18
  205400:	020db0c0 	call	20db0c <__malloc_unlock>
  205404:	80800204 	addi	r2,r16,8
  205408:	00006c06 	br	2055bc <_malloc_r+0x258>
  20540c:	00bffe04 	movi	r2,-8
  205410:	88a2703a 	and	r17,r17,r2
  205414:	88006616 	blt	r17,zero,2055b0 <_malloc_r+0x24c>
  205418:	89406536 	bltu	r17,r5,2055b0 <_malloc_r+0x24c>
  20541c:	020dae80 	call	20dae8 <__malloc_lock>
  205420:	88807e28 	cmpgeui	r2,r17,504
  205424:	10012226 	beq	r2,zero,2058b0 <_malloc_r+0x54c>
  205428:	8804d27a 	srli	r2,r17,9
  20542c:	10006f26 	beq	r2,zero,2055ec <_malloc_r+0x288>
  205430:	10c00168 	cmpgeui	r3,r2,5
  205434:	1800fe1e 	bne	r3,zero,205830 <_malloc_r+0x4cc>
  205438:	8804d1ba 	srli	r2,r17,6
  20543c:	11c00e44 	addi	r7,r2,57
  205440:	380890fa 	slli	r4,r7,3
  205444:	12000e04 	addi	r8,r2,56
  205448:	04c00874 	movhi	r19,33
  20544c:	9cc1d104 	addi	r19,r19,1860
  205450:	9909883a 	add	r4,r19,r4
  205454:	24000117 	ldw	r16,4(r4)
  205458:	213ffe04 	addi	r4,r4,-8
  20545c:	24000b26 	beq	r4,r16,20548c <_malloc_r+0x128>
  205460:	01bfff04 	movi	r6,-4
  205464:	00000306 	br	205474 <_malloc_r+0x110>
  205468:	1800d60e 	bge	r3,zero,2057c4 <_malloc_r+0x460>
  20546c:	84000317 	ldw	r16,12(r16)
  205470:	24000626 	beq	r4,r16,20548c <_malloc_r+0x128>
  205474:	80800117 	ldw	r2,4(r16)
  205478:	1184703a 	and	r2,r2,r6
  20547c:	1447c83a 	sub	r3,r2,r17
  205480:	19400408 	cmpgei	r5,r3,16
  205484:	283ff826 	beq	r5,zero,205468 <_malloc_r+0x104>
  205488:	400f883a 	mov	r7,r8
  20548c:	9c000417 	ldw	r16,16(r19)
  205490:	02400874 	movhi	r9,33
  205494:	4a41d304 	addi	r9,r9,1868
  205498:	82405f26 	beq	r16,r9,205618 <_malloc_r+0x2b4>
  20549c:	80c00117 	ldw	r3,4(r16)
  2054a0:	00bfff04 	movi	r2,-4
  2054a4:	1884703a 	and	r2,r3,r2
  2054a8:	1447c83a 	sub	r3,r2,r17
  2054ac:	19000410 	cmplti	r4,r3,16
  2054b0:	20010a26 	beq	r4,zero,2058dc <_malloc_r+0x578>
  2054b4:	9a400515 	stw	r9,20(r19)
  2054b8:	9a400415 	stw	r9,16(r19)
  2054bc:	1800ff0e 	bge	r3,zero,2058bc <_malloc_r+0x558>
  2054c0:	10c08028 	cmpgeui	r3,r2,512
  2054c4:	1800c11e 	bne	r3,zero,2057cc <_malloc_r+0x468>
  2054c8:	1006d0fa 	srli	r3,r2,3
  2054cc:	1008d17a 	srli	r4,r2,5
  2054d0:	00800044 	movi	r2,1
  2054d4:	18c00044 	addi	r3,r3,1
  2054d8:	180690fa 	slli	r3,r3,3
  2054dc:	99400117 	ldw	r5,4(r19)
  2054e0:	1104983a 	sll	r2,r2,r4
  2054e4:	98c7883a 	add	r3,r19,r3
  2054e8:	19000017 	ldw	r4,0(r3)
  2054ec:	1144b03a 	or	r2,r2,r5
  2054f0:	197ffe04 	addi	r5,r3,-8
  2054f4:	81400315 	stw	r5,12(r16)
  2054f8:	81000215 	stw	r4,8(r16)
  2054fc:	98800115 	stw	r2,4(r19)
  205500:	1c000015 	stw	r16,0(r3)
  205504:	24000315 	stw	r16,12(r4)
  205508:	3807d0ba 	srai	r3,r7,2
  20550c:	01000044 	movi	r4,1
  205510:	20c8983a 	sll	r4,r4,r3
  205514:	11004536 	bltu	r2,r4,20562c <_malloc_r+0x2c8>
  205518:	2086703a 	and	r3,r4,r2
  20551c:	18000a1e 	bne	r3,zero,205548 <_malloc_r+0x1e4>
  205520:	00ffff04 	movi	r3,-4
  205524:	2109883a 	add	r4,r4,r4
  205528:	38ce703a 	and	r7,r7,r3
  20552c:	2086703a 	and	r3,r4,r2
  205530:	39c00104 	addi	r7,r7,4
  205534:	1800041e 	bne	r3,zero,205548 <_malloc_r+0x1e4>
  205538:	2109883a 	add	r4,r4,r4
  20553c:	2086703a 	and	r3,r4,r2
  205540:	39c00104 	addi	r7,r7,4
  205544:	183ffc26 	beq	r3,zero,205538 <_malloc_r+0x1d4>
  205548:	02bfff04 	movi	r10,-4
  20554c:	381690fa 	slli	r11,r7,3
  205550:	3819883a 	mov	r12,r7
  205554:	9ad7883a 	add	r11,r19,r11
  205558:	5811883a 	mov	r8,r11
  20555c:	40800317 	ldw	r2,12(r8)
  205560:	4080bc26 	beq	r8,r2,205854 <_malloc_r+0x4f0>
  205564:	10c00117 	ldw	r3,4(r2)
  205568:	1021883a 	mov	r16,r2
  20556c:	10800317 	ldw	r2,12(r2)
  205570:	1a86703a 	and	r3,r3,r10
  205574:	1c4bc83a 	sub	r5,r3,r17
  205578:	29800410 	cmplti	r6,r5,16
  20557c:	3000ba26 	beq	r6,zero,205868 <_malloc_r+0x504>
  205580:	283ff716 	blt	r5,zero,205560 <_malloc_r+0x1fc>
  205584:	80c7883a 	add	r3,r16,r3
  205588:	19400117 	ldw	r5,4(r3)
  20558c:	81800217 	ldw	r6,8(r16)
  205590:	9009883a 	mov	r4,r18
  205594:	29400054 	ori	r5,r5,1
  205598:	19400115 	stw	r5,4(r3)
  20559c:	30800315 	stw	r2,12(r6)
  2055a0:	11800215 	stw	r6,8(r2)
  2055a4:	020db0c0 	call	20db0c <__malloc_unlock>
  2055a8:	80800204 	addi	r2,r16,8
  2055ac:	00000306 	br	2055bc <_malloc_r+0x258>
  2055b0:	00800304 	movi	r2,12
  2055b4:	90800015 	stw	r2,0(r18)
  2055b8:	0005883a 	mov	r2,zero
  2055bc:	dfc00917 	ldw	ra,36(sp)
  2055c0:	df000817 	ldw	fp,32(sp)
  2055c4:	ddc00717 	ldw	r23,28(sp)
  2055c8:	dd800617 	ldw	r22,24(sp)
  2055cc:	dd400517 	ldw	r21,20(sp)
  2055d0:	dd000417 	ldw	r20,16(sp)
  2055d4:	dcc00317 	ldw	r19,12(sp)
  2055d8:	dc800217 	ldw	r18,8(sp)
  2055dc:	dc400117 	ldw	r17,4(sp)
  2055e0:	dc000017 	ldw	r16,0(sp)
  2055e4:	dec00a04 	addi	sp,sp,40
  2055e8:	f800283a 	ret
  2055ec:	01008004 	movi	r4,512
  2055f0:	01c01004 	movi	r7,64
  2055f4:	02000fc4 	movi	r8,63
  2055f8:	003f9306 	br	205448 <_malloc_r+0xe4>
  2055fc:	14000317 	ldw	r16,12(r2)
  205600:	39c00084 	addi	r7,r7,2
  205604:	143f721e 	bne	r2,r16,2053d0 <_malloc_r+0x6c>
  205608:	9c000417 	ldw	r16,16(r19)
  20560c:	02400874 	movhi	r9,33
  205610:	4a41d304 	addi	r9,r9,1868
  205614:	827fa11e 	bne	r16,r9,20549c <_malloc_r+0x138>
  205618:	3807d0ba 	srai	r3,r7,2
  20561c:	01000044 	movi	r4,1
  205620:	98800117 	ldw	r2,4(r19)
  205624:	20c8983a 	sll	r4,r4,r3
  205628:	113fbb2e 	bgeu	r2,r4,205518 <_malloc_r+0x1b4>
  20562c:	9c000217 	ldw	r16,8(r19)
  205630:	00bfff04 	movi	r2,-4
  205634:	85400117 	ldw	r21,4(r16)
  205638:	a8ac703a 	and	r22,r21,r2
  20563c:	b4400336 	bltu	r22,r17,20564c <_malloc_r+0x2e8>
  205640:	b445c83a 	sub	r2,r22,r17
  205644:	10c00408 	cmpgei	r3,r2,16
  205648:	1800541e 	bne	r3,zero,20579c <_malloc_r+0x438>
  20564c:	00800874 	movhi	r2,33
  205650:	1087b217 	ldw	r2,7880(r2)
  205654:	00c00874 	movhi	r3,33
  205658:	1d4eb617 	ldw	r21,15064(r3)
  20565c:	10bfffd8 	cmpnei	r2,r2,-1
  205660:	85b9883a 	add	fp,r16,r22
  205664:	8d6b883a 	add	r21,r17,r21
  205668:	1000d626 	beq	r2,zero,2059c4 <_malloc_r+0x660>
  20566c:	ad4403c4 	addi	r21,r21,4111
  205670:	00bc0004 	movi	r2,-4096
  205674:	a8aa703a 	and	r21,r21,r2
  205678:	a80b883a 	mov	r5,r21
  20567c:	9009883a 	mov	r4,r18
  205680:	020765c0 	call	20765c <_sbrk_r>
  205684:	102f883a 	mov	r23,r2
  205688:	10bfffd8 	cmpnei	r2,r2,-1
  20568c:	1000a826 	beq	r2,zero,205930 <_malloc_r+0x5cc>
  205690:	bf00a636 	bltu	r23,fp,20592c <_malloc_r+0x5c8>
  205694:	00800874 	movhi	r2,33
  205698:	150ec117 	ldw	r20,15108(r2)
  20569c:	ad29883a 	add	r20,r21,r20
  2056a0:	150ec115 	stw	r20,15108(r2)
  2056a4:	a007883a 	mov	r3,r20
  2056a8:	e5c0ec26 	beq	fp,r23,205a5c <_malloc_r+0x6f8>
  2056ac:	00800874 	movhi	r2,33
  2056b0:	1087b217 	ldw	r2,7880(r2)
  2056b4:	10bfffd8 	cmpnei	r2,r2,-1
  2056b8:	1000ef26 	beq	r2,zero,205a78 <_malloc_r+0x714>
  2056bc:	bf39c83a 	sub	fp,r23,fp
  2056c0:	e0c7883a 	add	r3,fp,r3
  2056c4:	00800874 	movhi	r2,33
  2056c8:	10cec115 	stw	r3,15108(r2)
  2056cc:	bf0001cc 	andi	fp,r23,7
  2056d0:	e000c526 	beq	fp,zero,2059e8 <_malloc_r+0x684>
  2056d4:	bf2fc83a 	sub	r23,r23,fp
  2056d8:	bdc00204 	addi	r23,r23,8
  2056dc:	05040204 	movi	r20,4104
  2056e0:	a729c83a 	sub	r20,r20,fp
  2056e4:	bd6b883a 	add	r21,r23,r21
  2056e8:	a569c83a 	sub	r20,r20,r21
  2056ec:	a503ffcc 	andi	r20,r20,4095
  2056f0:	a00b883a 	mov	r5,r20
  2056f4:	9009883a 	mov	r4,r18
  2056f8:	020765c0 	call	20765c <_sbrk_r>
  2056fc:	10ffffe0 	cmpeqi	r3,r2,-1
  205700:	1800f31e 	bne	r3,zero,205ad0 <_malloc_r+0x76c>
  205704:	15c5c83a 	sub	r2,r2,r23
  205708:	152b883a 	add	r21,r2,r20
  20570c:	00800874 	movhi	r2,33
  205710:	114ec117 	ldw	r5,15108(r2)
  205714:	9dc00215 	stw	r23,8(r19)
  205718:	ad400054 	ori	r21,r21,1
  20571c:	a169883a 	add	r20,r20,r5
  205720:	150ec115 	stw	r20,15108(r2)
  205724:	bd400115 	stw	r21,4(r23)
  205728:	84c0d626 	beq	r16,r19,205a84 <_malloc_r+0x720>
  20572c:	b0800428 	cmpgeui	r2,r22,16
  205730:	1000d626 	beq	r2,zero,205a8c <_malloc_r+0x728>
  205734:	80c00117 	ldw	r3,4(r16)
  205738:	013ffe04 	movi	r4,-8
  20573c:	b0bffd04 	addi	r2,r22,-12
  205740:	1104703a 	and	r2,r2,r4
  205744:	18c0004c 	andi	r3,r3,1
  205748:	1886b03a 	or	r3,r3,r2
  20574c:	80c00115 	stw	r3,4(r16)
  205750:	01000144 	movi	r4,5
  205754:	8087883a 	add	r3,r16,r2
  205758:	19000115 	stw	r4,4(r3)
  20575c:	19000215 	stw	r4,8(r3)
  205760:	10800428 	cmpgeui	r2,r2,16
  205764:	1000df1e 	bne	r2,zero,205ae4 <_malloc_r+0x780>
  205768:	bd400117 	ldw	r21,4(r23)
  20576c:	b821883a 	mov	r16,r23
  205770:	00800874 	movhi	r2,33
  205774:	108eb517 	ldw	r2,15060(r2)
  205778:	1500022e 	bgeu	r2,r20,205784 <_malloc_r+0x420>
  20577c:	00800874 	movhi	r2,33
  205780:	150eb515 	stw	r20,15060(r2)
  205784:	00800874 	movhi	r2,33
  205788:	108eb417 	ldw	r2,15056(r2)
  20578c:	15006a2e 	bgeu	r2,r20,205938 <_malloc_r+0x5d4>
  205790:	00800874 	movhi	r2,33
  205794:	150eb415 	stw	r20,15056(r2)
  205798:	00006706 	br	205938 <_malloc_r+0x5d4>
  20579c:	88c00054 	ori	r3,r17,1
  2057a0:	80c00115 	stw	r3,4(r16)
  2057a4:	8463883a 	add	r17,r16,r17
  2057a8:	10800054 	ori	r2,r2,1
  2057ac:	9c400215 	stw	r17,8(r19)
  2057b0:	88800115 	stw	r2,4(r17)
  2057b4:	9009883a 	mov	r4,r18
  2057b8:	020db0c0 	call	20db0c <__malloc_unlock>
  2057bc:	80800204 	addi	r2,r16,8
  2057c0:	003f7e06 	br	2055bc <_malloc_r+0x258>
  2057c4:	81000317 	ldw	r4,12(r16)
  2057c8:	003f0506 	br	2053e0 <_malloc_r+0x7c>
  2057cc:	1006d27a 	srli	r3,r2,9
  2057d0:	19000168 	cmpgeui	r4,r3,5
  2057d4:	20005026 	beq	r4,zero,205918 <_malloc_r+0x5b4>
  2057d8:	19000568 	cmpgeui	r4,r3,21
  2057dc:	20008c1e 	bne	r4,zero,205a10 <_malloc_r+0x6ac>
  2057e0:	19401704 	addi	r5,r3,92
  2057e4:	280a90fa 	slli	r5,r5,3
  2057e8:	190016c4 	addi	r4,r3,91
  2057ec:	994b883a 	add	r5,r19,r5
  2057f0:	28c00017 	ldw	r3,0(r5)
  2057f4:	297ffe04 	addi	r5,r5,-8
  2057f8:	28c07426 	beq	r5,r3,2059cc <_malloc_r+0x668>
  2057fc:	01bfff04 	movi	r6,-4
  205800:	19000117 	ldw	r4,4(r3)
  205804:	2188703a 	and	r4,r4,r6
  205808:	1100022e 	bgeu	r2,r4,205814 <_malloc_r+0x4b0>
  20580c:	18c00217 	ldw	r3,8(r3)
  205810:	28fffb1e 	bne	r5,r3,205800 <_malloc_r+0x49c>
  205814:	19400317 	ldw	r5,12(r3)
  205818:	98800117 	ldw	r2,4(r19)
  20581c:	81400315 	stw	r5,12(r16)
  205820:	80c00215 	stw	r3,8(r16)
  205824:	2c000215 	stw	r16,8(r5)
  205828:	1c000315 	stw	r16,12(r3)
  20582c:	003f3606 	br	205508 <_malloc_r+0x1a4>
  205830:	10c00568 	cmpgeui	r3,r2,21
  205834:	18004a26 	beq	r3,zero,205960 <_malloc_r+0x5fc>
  205838:	10c01568 	cmpgeui	r3,r2,85
  20583c:	18007b1e 	bne	r3,zero,205a2c <_malloc_r+0x6c8>
  205840:	8804d33a 	srli	r2,r17,12
  205844:	11c01bc4 	addi	r7,r2,111
  205848:	380890fa 	slli	r4,r7,3
  20584c:	12001b84 	addi	r8,r2,110
  205850:	003efd06 	br	205448 <_malloc_r+0xe4>
  205854:	63000044 	addi	r12,r12,1
  205858:	608000cc 	andi	r2,r12,3
  20585c:	42000204 	addi	r8,r8,8
  205860:	103f3e1e 	bne	r2,zero,20555c <_malloc_r+0x1f8>
  205864:	00004506 	br	20597c <_malloc_r+0x618>
  205868:	81000217 	ldw	r4,8(r16)
  20586c:	89800054 	ori	r6,r17,1
  205870:	81800115 	stw	r6,4(r16)
  205874:	20800315 	stw	r2,12(r4)
  205878:	11000215 	stw	r4,8(r2)
  20587c:	8463883a 	add	r17,r16,r17
  205880:	9c400515 	stw	r17,20(r19)
  205884:	9c400415 	stw	r17,16(r19)
  205888:	28800054 	ori	r2,r5,1
  20588c:	88800115 	stw	r2,4(r17)
  205890:	8a400315 	stw	r9,12(r17)
  205894:	8a400215 	stw	r9,8(r17)
  205898:	80c7883a 	add	r3,r16,r3
  20589c:	19400015 	stw	r5,0(r3)
  2058a0:	9009883a 	mov	r4,r18
  2058a4:	020db0c0 	call	20db0c <__malloc_unlock>
  2058a8:	80800204 	addi	r2,r16,8
  2058ac:	003f4306 	br	2055bc <_malloc_r+0x258>
  2058b0:	880ed0fa 	srli	r7,r17,3
  2058b4:	88800204 	addi	r2,r17,8
  2058b8:	003ebf06 	br	2053b8 <_malloc_r+0x54>
  2058bc:	8085883a 	add	r2,r16,r2
  2058c0:	10c00117 	ldw	r3,4(r2)
  2058c4:	9009883a 	mov	r4,r18
  2058c8:	18c00054 	ori	r3,r3,1
  2058cc:	10c00115 	stw	r3,4(r2)
  2058d0:	020db0c0 	call	20db0c <__malloc_unlock>
  2058d4:	80800204 	addi	r2,r16,8
  2058d8:	003f3806 	br	2055bc <_malloc_r+0x258>
  2058dc:	89000054 	ori	r4,r17,1
  2058e0:	81000115 	stw	r4,4(r16)
  2058e4:	8463883a 	add	r17,r16,r17
  2058e8:	9c400515 	stw	r17,20(r19)
  2058ec:	9c400415 	stw	r17,16(r19)
  2058f0:	19000054 	ori	r4,r3,1
  2058f4:	89000115 	stw	r4,4(r17)
  2058f8:	8085883a 	add	r2,r16,r2
  2058fc:	8a400315 	stw	r9,12(r17)
  205900:	8a400215 	stw	r9,8(r17)
  205904:	10c00015 	stw	r3,0(r2)
  205908:	9009883a 	mov	r4,r18
  20590c:	020db0c0 	call	20db0c <__malloc_unlock>
  205910:	80800204 	addi	r2,r16,8
  205914:	003f2906 	br	2055bc <_malloc_r+0x258>
  205918:	1006d1ba 	srli	r3,r2,6
  20591c:	19400e44 	addi	r5,r3,57
  205920:	280a90fa 	slli	r5,r5,3
  205924:	19000e04 	addi	r4,r3,56
  205928:	003fb006 	br	2057ec <_malloc_r+0x488>
  20592c:	84c04626 	beq	r16,r19,205a48 <_malloc_r+0x6e4>
  205930:	9c000217 	ldw	r16,8(r19)
  205934:	85400117 	ldw	r21,4(r16)
  205938:	00bfff04 	movi	r2,-4
  20593c:	a8aa703a 	and	r21,r21,r2
  205940:	ac45c83a 	sub	r2,r21,r17
  205944:	ac400236 	bltu	r21,r17,205950 <_malloc_r+0x5ec>
  205948:	10c00408 	cmpgei	r3,r2,16
  20594c:	183f931e 	bne	r3,zero,20579c <_malloc_r+0x438>
  205950:	9009883a 	mov	r4,r18
  205954:	020db0c0 	call	20db0c <__malloc_unlock>
  205958:	0005883a 	mov	r2,zero
  20595c:	003f1706 	br	2055bc <_malloc_r+0x258>
  205960:	11c01704 	addi	r7,r2,92
  205964:	380890fa 	slli	r4,r7,3
  205968:	120016c4 	addi	r8,r2,91
  20596c:	003eb606 	br	205448 <_malloc_r+0xe4>
  205970:	58800217 	ldw	r2,8(r11)
  205974:	39ffffc4 	addi	r7,r7,-1
  205978:	12c0701e 	bne	r2,r11,205b3c <_malloc_r+0x7d8>
  20597c:	388000cc 	andi	r2,r7,3
  205980:	5afffe04 	addi	r11,r11,-8
  205984:	103ffa1e 	bne	r2,zero,205970 <_malloc_r+0x60c>
  205988:	98c00117 	ldw	r3,4(r19)
  20598c:	0104303a 	nor	r2,zero,r4
  205990:	10c4703a 	and	r2,r2,r3
  205994:	98800115 	stw	r2,4(r19)
  205998:	2109883a 	add	r4,r4,r4
  20599c:	113f2336 	bltu	r2,r4,20562c <_malloc_r+0x2c8>
  2059a0:	203f2226 	beq	r4,zero,20562c <_malloc_r+0x2c8>
  2059a4:	2086703a 	and	r3,r4,r2
  2059a8:	1800041e 	bne	r3,zero,2059bc <_malloc_r+0x658>
  2059ac:	2109883a 	add	r4,r4,r4
  2059b0:	2086703a 	and	r3,r4,r2
  2059b4:	63000104 	addi	r12,r12,4
  2059b8:	183ffc26 	beq	r3,zero,2059ac <_malloc_r+0x648>
  2059bc:	600f883a 	mov	r7,r12
  2059c0:	003ee206 	br	20554c <_malloc_r+0x1e8>
  2059c4:	ad400404 	addi	r21,r21,16
  2059c8:	003f2b06 	br	205678 <_malloc_r+0x314>
  2059cc:	2009d0ba 	srai	r4,r4,2
  2059d0:	00800044 	movi	r2,1
  2059d4:	99800117 	ldw	r6,4(r19)
  2059d8:	1104983a 	sll	r2,r2,r4
  2059dc:	1184b03a 	or	r2,r2,r6
  2059e0:	98800115 	stw	r2,4(r19)
  2059e4:	003f8d06 	br	20581c <_malloc_r+0x4b8>
  2059e8:	bd69883a 	add	r20,r23,r21
  2059ec:	0529c83a 	sub	r20,zero,r20
  2059f0:	a503ffcc 	andi	r20,r20,4095
  2059f4:	a00b883a 	mov	r5,r20
  2059f8:	9009883a 	mov	r4,r18
  2059fc:	020765c0 	call	20765c <_sbrk_r>
  205a00:	10ffffe0 	cmpeqi	r3,r2,-1
  205a04:	183f3f26 	beq	r3,zero,205704 <_malloc_r+0x3a0>
  205a08:	0029883a 	mov	r20,zero
  205a0c:	003f3f06 	br	20570c <_malloc_r+0x3a8>
  205a10:	19001568 	cmpgeui	r4,r3,85
  205a14:	2000201e 	bne	r4,zero,205a98 <_malloc_r+0x734>
  205a18:	1006d33a 	srli	r3,r2,12
  205a1c:	19401bc4 	addi	r5,r3,111
  205a20:	280a90fa 	slli	r5,r5,3
  205a24:	19001b84 	addi	r4,r3,110
  205a28:	003f7006 	br	2057ec <_malloc_r+0x488>
  205a2c:	10c05568 	cmpgeui	r3,r2,341
  205a30:	1800201e 	bne	r3,zero,205ab4 <_malloc_r+0x750>
  205a34:	8804d3fa 	srli	r2,r17,15
  205a38:	11c01e04 	addi	r7,r2,120
  205a3c:	380890fa 	slli	r4,r7,3
  205a40:	12001dc4 	addi	r8,r2,119
  205a44:	003e8006 	br	205448 <_malloc_r+0xe4>
  205a48:	00800874 	movhi	r2,33
  205a4c:	10cec117 	ldw	r3,15108(r2)
  205a50:	a8c7883a 	add	r3,r21,r3
  205a54:	10cec115 	stw	r3,15108(r2)
  205a58:	003f1406 	br	2056ac <_malloc_r+0x348>
  205a5c:	e083ffcc 	andi	r2,fp,4095
  205a60:	103f121e 	bne	r2,zero,2056ac <_malloc_r+0x348>
  205a64:	9c000217 	ldw	r16,8(r19)
  205a68:	b56b883a 	add	r21,r22,r21
  205a6c:	ad400054 	ori	r21,r21,1
  205a70:	85400115 	stw	r21,4(r16)
  205a74:	003f3e06 	br	205770 <_malloc_r+0x40c>
  205a78:	00800874 	movhi	r2,33
  205a7c:	15c7b215 	stw	r23,7880(r2)
  205a80:	003f1206 	br	2056cc <_malloc_r+0x368>
  205a84:	b821883a 	mov	r16,r23
  205a88:	003f3906 	br	205770 <_malloc_r+0x40c>
  205a8c:	00800044 	movi	r2,1
  205a90:	b8800115 	stw	r2,4(r23)
  205a94:	003fae06 	br	205950 <_malloc_r+0x5ec>
  205a98:	19005568 	cmpgeui	r4,r3,341
  205a9c:	2000191e 	bne	r4,zero,205b04 <_malloc_r+0x7a0>
  205aa0:	1006d3fa 	srli	r3,r2,15
  205aa4:	19401e04 	addi	r5,r3,120
  205aa8:	280a90fa 	slli	r5,r5,3
  205aac:	19001dc4 	addi	r4,r3,119
  205ab0:	003f4e06 	br	2057ec <_malloc_r+0x488>
  205ab4:	10815568 	cmpgeui	r2,r2,1365
  205ab8:	1000191e 	bne	r2,zero,205b20 <_malloc_r+0x7bc>
  205abc:	8804d4ba 	srli	r2,r17,18
  205ac0:	11c01f44 	addi	r7,r2,125
  205ac4:	380890fa 	slli	r4,r7,3
  205ac8:	12001f04 	addi	r8,r2,124
  205acc:	003e5e06 	br	205448 <_malloc_r+0xe4>
  205ad0:	e73ffe04 	addi	fp,fp,-8
  205ad4:	af2b883a 	add	r21,r21,fp
  205ad8:	adebc83a 	sub	r21,r21,r23
  205adc:	0029883a 	mov	r20,zero
  205ae0:	003f0a06 	br	20570c <_malloc_r+0x3a8>
  205ae4:	81400204 	addi	r5,r16,8
  205ae8:	9009883a 	mov	r4,r18
  205aec:	020482c0 	call	20482c <_free_r>
  205af0:	9c000217 	ldw	r16,8(r19)
  205af4:	00800874 	movhi	r2,33
  205af8:	150ec117 	ldw	r20,15108(r2)
  205afc:	85400117 	ldw	r21,4(r16)
  205b00:	003f1b06 	br	205770 <_malloc_r+0x40c>
  205b04:	18c15568 	cmpgeui	r3,r3,1365
  205b08:	1800091e 	bne	r3,zero,205b30 <_malloc_r+0x7cc>
  205b0c:	1006d4ba 	srli	r3,r2,18
  205b10:	19401f44 	addi	r5,r3,125
  205b14:	280a90fa 	slli	r5,r5,3
  205b18:	19001f04 	addi	r4,r3,124
  205b1c:	003f3306 	br	2057ec <_malloc_r+0x488>
  205b20:	0100fe04 	movi	r4,1016
  205b24:	01c01fc4 	movi	r7,127
  205b28:	02001f84 	movi	r8,126
  205b2c:	003e4606 	br	205448 <_malloc_r+0xe4>
  205b30:	0140fe04 	movi	r5,1016
  205b34:	01001f84 	movi	r4,126
  205b38:	003f2c06 	br	2057ec <_malloc_r+0x488>
  205b3c:	98800117 	ldw	r2,4(r19)
  205b40:	003f9506 	br	205998 <_malloc_r+0x634>

00205b44 <memchr>:
  205b44:	208000cc 	andi	r2,r4,3
  205b48:	280f883a 	mov	r7,r5
  205b4c:	10000e26 	beq	r2,zero,205b88 <memchr+0x44>
  205b50:	30bfffc4 	addi	r2,r6,-1
  205b54:	30001726 	beq	r6,zero,205bb4 <memchr+0x70>
  205b58:	29803fcc 	andi	r6,r5,255
  205b5c:	00000606 	br	205b78 <memchr+0x34>
  205b60:	21000044 	addi	r4,r4,1
  205b64:	20c000cc 	andi	r3,r4,3
  205b68:	18000826 	beq	r3,zero,205b8c <memchr+0x48>
  205b6c:	10bfffc4 	addi	r2,r2,-1
  205b70:	10ffffe0 	cmpeqi	r3,r2,-1
  205b74:	18000f1e 	bne	r3,zero,205bb4 <memchr+0x70>
  205b78:	20c00003 	ldbu	r3,0(r4)
  205b7c:	19bff81e 	bne	r3,r6,205b60 <memchr+0x1c>
  205b80:	2005883a 	mov	r2,r4
  205b84:	f800283a 	ret
  205b88:	3005883a 	mov	r2,r6
  205b8c:	10c00128 	cmpgeui	r3,r2,4
  205b90:	18000a1e 	bne	r3,zero,205bbc <memchr+0x78>
  205b94:	10001e26 	beq	r2,zero,205c10 <memchr+0xcc>
  205b98:	2087883a 	add	r3,r4,r2
  205b9c:	39803fcc 	andi	r6,r7,255
  205ba0:	2005883a 	mov	r2,r4
  205ba4:	11000003 	ldbu	r4,0(r2)
  205ba8:	21bff626 	beq	r4,r6,205b84 <memchr+0x40>
  205bac:	10800044 	addi	r2,r2,1
  205bb0:	18bffc1e 	bne	r3,r2,205ba4 <memchr+0x60>
  205bb4:	0005883a 	mov	r2,zero
  205bb8:	f800283a 	ret
  205bbc:	29403fcc 	andi	r5,r5,255
  205bc0:	280c923a 	slli	r6,r5,8
  205bc4:	027fbff4 	movhi	r9,65279
  205bc8:	02202074 	movhi	r8,32897
  205bcc:	314ab03a 	or	r5,r6,r5
  205bd0:	280c943a 	slli	r6,r5,16
  205bd4:	4a7fbfc4 	addi	r9,r9,-257
  205bd8:	42202004 	addi	r8,r8,-32640
  205bdc:	314cb03a 	or	r6,r6,r5
  205be0:	20c00017 	ldw	r3,0(r4)
  205be4:	30c6f03a 	xor	r3,r6,r3
  205be8:	1a4b883a 	add	r5,r3,r9
  205bec:	00c6303a 	nor	r3,zero,r3
  205bf0:	28c6703a 	and	r3,r5,r3
  205bf4:	1a06703a 	and	r3,r3,r8
  205bf8:	183fe71e 	bne	r3,zero,205b98 <memchr+0x54>
  205bfc:	10bfff04 	addi	r2,r2,-4
  205c00:	10c00128 	cmpgeui	r3,r2,4
  205c04:	21000104 	addi	r4,r4,4
  205c08:	183ff51e 	bne	r3,zero,205be0 <memchr+0x9c>
  205c0c:	003fe106 	br	205b94 <memchr+0x50>
  205c10:	f800283a 	ret

00205c14 <memcpy>:
  205c14:	30c00430 	cmpltui	r3,r6,16
  205c18:	2005883a 	mov	r2,r4
  205c1c:	18002d1e 	bne	r3,zero,205cd4 <memcpy+0xc0>
  205c20:	2906b03a 	or	r3,r5,r4
  205c24:	18c000cc 	andi	r3,r3,3
  205c28:	1800351e 	bne	r3,zero,205d00 <memcpy+0xec>
  205c2c:	32fffc04 	addi	r11,r6,-16
  205c30:	5816d13a 	srli	r11,r11,4
  205c34:	280f883a 	mov	r7,r5
  205c38:	2007883a 	mov	r3,r4
  205c3c:	5ac00044 	addi	r11,r11,1
  205c40:	5816913a 	slli	r11,r11,4
  205c44:	22d5883a 	add	r10,r4,r11
  205c48:	39000117 	ldw	r4,4(r7)
  205c4c:	3a400017 	ldw	r9,0(r7)
  205c50:	3a000217 	ldw	r8,8(r7)
  205c54:	19000115 	stw	r4,4(r3)
  205c58:	39000317 	ldw	r4,12(r7)
  205c5c:	1a400015 	stw	r9,0(r3)
  205c60:	1a000215 	stw	r8,8(r3)
  205c64:	19000315 	stw	r4,12(r3)
  205c68:	18c00404 	addi	r3,r3,16
  205c6c:	39c00404 	addi	r7,r7,16
  205c70:	50fff51e 	bne	r10,r3,205c48 <memcpy+0x34>
  205c74:	3100030c 	andi	r4,r6,12
  205c78:	2acb883a 	add	r5,r5,r11
  205c7c:	320003cc 	andi	r8,r6,15
  205c80:	20002226 	beq	r4,zero,205d0c <memcpy+0xf8>
  205c84:	280f883a 	mov	r7,r5
  205c88:	1813883a 	mov	r9,r3
  205c8c:	39c00104 	addi	r7,r7,4
  205c90:	3abfff17 	ldw	r10,-4(r7)
  205c94:	41c9c83a 	sub	r4,r8,r7
  205c98:	2909883a 	add	r4,r5,r4
  205c9c:	4a800015 	stw	r10,0(r9)
  205ca0:	21000128 	cmpgeui	r4,r4,4
  205ca4:	4a400104 	addi	r9,r9,4
  205ca8:	203ff81e 	bne	r4,zero,205c8c <memcpy+0x78>
  205cac:	413fff04 	addi	r4,r8,-4
  205cb0:	2008d0ba 	srli	r4,r4,2
  205cb4:	318000cc 	andi	r6,r6,3
  205cb8:	31ffffc4 	addi	r7,r6,-1
  205cbc:	21000044 	addi	r4,r4,1
  205cc0:	200890ba 	slli	r4,r4,2
  205cc4:	1907883a 	add	r3,r3,r4
  205cc8:	290b883a 	add	r5,r5,r4
  205ccc:	3000041e 	bne	r6,zero,205ce0 <memcpy+0xcc>
  205cd0:	f800283a 	ret
  205cd4:	2007883a 	mov	r3,r4
  205cd8:	31ffffc4 	addi	r7,r6,-1
  205cdc:	303ffc26 	beq	r6,zero,205cd0 <memcpy+0xbc>
  205ce0:	39c00044 	addi	r7,r7,1
  205ce4:	19cf883a 	add	r7,r3,r7
  205ce8:	29800003 	ldbu	r6,0(r5)
  205cec:	18c00044 	addi	r3,r3,1
  205cf0:	29400044 	addi	r5,r5,1
  205cf4:	19bfffc5 	stb	r6,-1(r3)
  205cf8:	38fffb1e 	bne	r7,r3,205ce8 <memcpy+0xd4>
  205cfc:	f800283a 	ret
  205d00:	31ffffc4 	addi	r7,r6,-1
  205d04:	2007883a 	mov	r3,r4
  205d08:	003ff506 	br	205ce0 <memcpy+0xcc>
  205d0c:	400d883a 	mov	r6,r8
  205d10:	003ff106 	br	205cd8 <memcpy+0xc4>

00205d14 <memmove>:
  205d14:	2005883a 	mov	r2,r4
  205d18:	29000a2e 	bgeu	r5,r4,205d44 <memmove+0x30>
  205d1c:	2989883a 	add	r4,r5,r6
  205d20:	1100082e 	bgeu	r2,r4,205d44 <memmove+0x30>
  205d24:	1187883a 	add	r3,r2,r6
  205d28:	30003e26 	beq	r6,zero,205e24 <memmove+0x110>
  205d2c:	217fffc3 	ldbu	r5,-1(r4)
  205d30:	18ffffc4 	addi	r3,r3,-1
  205d34:	213fffc4 	addi	r4,r4,-1
  205d38:	19400005 	stb	r5,0(r3)
  205d3c:	10fffb1e 	bne	r2,r3,205d2c <memmove+0x18>
  205d40:	f800283a 	ret
  205d44:	30c00430 	cmpltui	r3,r6,16
  205d48:	18000b26 	beq	r3,zero,205d78 <memmove+0x64>
  205d4c:	1007883a 	mov	r3,r2
  205d50:	31ffffc4 	addi	r7,r6,-1
  205d54:	30003726 	beq	r6,zero,205e34 <memmove+0x120>
  205d58:	39c00044 	addi	r7,r7,1
  205d5c:	29cf883a 	add	r7,r5,r7
  205d60:	29800003 	ldbu	r6,0(r5)
  205d64:	29400044 	addi	r5,r5,1
  205d68:	18c00044 	addi	r3,r3,1
  205d6c:	19bfffc5 	stb	r6,-1(r3)
  205d70:	29fffb1e 	bne	r5,r7,205d60 <memmove+0x4c>
  205d74:	f800283a 	ret
  205d78:	2886b03a 	or	r3,r5,r2
  205d7c:	18c000cc 	andi	r3,r3,3
  205d80:	1800291e 	bne	r3,zero,205e28 <memmove+0x114>
  205d84:	327ffc04 	addi	r9,r6,-16
  205d88:	4812d13a 	srli	r9,r9,4
  205d8c:	280f883a 	mov	r7,r5
  205d90:	1007883a 	mov	r3,r2
  205d94:	4a400044 	addi	r9,r9,1
  205d98:	4812913a 	slli	r9,r9,4
  205d9c:	1251883a 	add	r8,r2,r9
  205da0:	39000017 	ldw	r4,0(r7)
  205da4:	39c00404 	addi	r7,r7,16
  205da8:	18c00404 	addi	r3,r3,16
  205dac:	193ffc15 	stw	r4,-16(r3)
  205db0:	393ffd17 	ldw	r4,-12(r7)
  205db4:	193ffd15 	stw	r4,-12(r3)
  205db8:	393ffe17 	ldw	r4,-8(r7)
  205dbc:	193ffe15 	stw	r4,-8(r3)
  205dc0:	393fff17 	ldw	r4,-4(r7)
  205dc4:	193fff15 	stw	r4,-4(r3)
  205dc8:	40fff51e 	bne	r8,r3,205da0 <memmove+0x8c>
  205dcc:	3100030c 	andi	r4,r6,12
  205dd0:	2a4b883a 	add	r5,r5,r9
  205dd4:	320003cc 	andi	r8,r6,15
  205dd8:	20001726 	beq	r4,zero,205e38 <memmove+0x124>
  205ddc:	2813883a 	mov	r9,r5
  205de0:	180f883a 	mov	r7,r3
  205de4:	4a800017 	ldw	r10,0(r9)
  205de8:	39c00104 	addi	r7,r7,4
  205dec:	41c9c83a 	sub	r4,r8,r7
  205df0:	1909883a 	add	r4,r3,r4
  205df4:	21000128 	cmpgeui	r4,r4,4
  205df8:	3abfff15 	stw	r10,-4(r7)
  205dfc:	4a400104 	addi	r9,r9,4
  205e00:	203ff81e 	bne	r4,zero,205de4 <memmove+0xd0>
  205e04:	413fff04 	addi	r4,r8,-4
  205e08:	2008d0ba 	srli	r4,r4,2
  205e0c:	318000cc 	andi	r6,r6,3
  205e10:	21000044 	addi	r4,r4,1
  205e14:	200890ba 	slli	r4,r4,2
  205e18:	1907883a 	add	r3,r3,r4
  205e1c:	290b883a 	add	r5,r5,r4
  205e20:	003fcb06 	br	205d50 <memmove+0x3c>
  205e24:	f800283a 	ret
  205e28:	31ffffc4 	addi	r7,r6,-1
  205e2c:	1007883a 	mov	r3,r2
  205e30:	003fc906 	br	205d58 <memmove+0x44>
  205e34:	f800283a 	ret
  205e38:	400d883a 	mov	r6,r8
  205e3c:	003fc406 	br	205d50 <memmove+0x3c>

00205e40 <memset>:
  205e40:	20c000cc 	andi	r3,r4,3
  205e44:	2005883a 	mov	r2,r4
  205e48:	18003626 	beq	r3,zero,205f24 <memset+0xe4>
  205e4c:	31ffffc4 	addi	r7,r6,-1
  205e50:	30003326 	beq	r6,zero,205f20 <memset+0xe0>
  205e54:	2811883a 	mov	r8,r5
  205e58:	2007883a 	mov	r3,r4
  205e5c:	00000306 	br	205e6c <memset+0x2c>
  205e60:	39ffffc4 	addi	r7,r7,-1
  205e64:	39bfffe0 	cmpeqi	r6,r7,-1
  205e68:	30002d1e 	bne	r6,zero,205f20 <memset+0xe0>
  205e6c:	18c00044 	addi	r3,r3,1
  205e70:	198000cc 	andi	r6,r3,3
  205e74:	1a3fffc5 	stb	r8,-1(r3)
  205e78:	303ff91e 	bne	r6,zero,205e60 <memset+0x20>
  205e7c:	39000130 	cmpltui	r4,r7,4
  205e80:	2000221e 	bne	r4,zero,205f0c <memset+0xcc>
  205e84:	29003fcc 	andi	r4,r5,255
  205e88:	200c923a 	slli	r6,r4,8
  205e8c:	3a000430 	cmpltui	r8,r7,16
  205e90:	3108b03a 	or	r4,r6,r4
  205e94:	200c943a 	slli	r6,r4,16
  205e98:	310cb03a 	or	r6,r6,r4
  205e9c:	40000e1e 	bne	r8,zero,205ed8 <memset+0x98>
  205ea0:	393ffc04 	addi	r4,r7,-16
  205ea4:	2008d13a 	srli	r4,r4,4
  205ea8:	21000044 	addi	r4,r4,1
  205eac:	2008913a 	slli	r4,r4,4
  205eb0:	1909883a 	add	r4,r3,r4
  205eb4:	19800015 	stw	r6,0(r3)
  205eb8:	19800115 	stw	r6,4(r3)
  205ebc:	19800215 	stw	r6,8(r3)
  205ec0:	19800315 	stw	r6,12(r3)
  205ec4:	18c00404 	addi	r3,r3,16
  205ec8:	20fffa1e 	bne	r4,r3,205eb4 <memset+0x74>
  205ecc:	3900030c 	andi	r4,r7,12
  205ed0:	39c003cc 	andi	r7,r7,15
  205ed4:	20000d26 	beq	r4,zero,205f0c <memset+0xcc>
  205ed8:	1811883a 	mov	r8,r3
  205edc:	42000104 	addi	r8,r8,4
  205ee0:	3a09c83a 	sub	r4,r7,r8
  205ee4:	1909883a 	add	r4,r3,r4
  205ee8:	21000128 	cmpgeui	r4,r4,4
  205eec:	41bfff15 	stw	r6,-4(r8)
  205ef0:	203ffa1e 	bne	r4,zero,205edc <memset+0x9c>
  205ef4:	393fff04 	addi	r4,r7,-4
  205ef8:	2008d0ba 	srli	r4,r4,2
  205efc:	39c000cc 	andi	r7,r7,3
  205f00:	21000044 	addi	r4,r4,1
  205f04:	200890ba 	slli	r4,r4,2
  205f08:	1907883a 	add	r3,r3,r4
  205f0c:	38000426 	beq	r7,zero,205f20 <memset+0xe0>
  205f10:	19cf883a 	add	r7,r3,r7
  205f14:	18c00044 	addi	r3,r3,1
  205f18:	197fffc5 	stb	r5,-1(r3)
  205f1c:	38fffd1e 	bne	r7,r3,205f14 <memset+0xd4>
  205f20:	f800283a 	ret
  205f24:	2007883a 	mov	r3,r4
  205f28:	300f883a 	mov	r7,r6
  205f2c:	003fd306 	br	205e7c <memset+0x3c>

00205f30 <_Balloc>:
  205f30:	20801317 	ldw	r2,76(r4)
  205f34:	defffc04 	addi	sp,sp,-16
  205f38:	dc400115 	stw	r17,4(sp)
  205f3c:	dc000015 	stw	r16,0(sp)
  205f40:	dfc00315 	stw	ra,12(sp)
  205f44:	dc800215 	stw	r18,8(sp)
  205f48:	2021883a 	mov	r16,r4
  205f4c:	2823883a 	mov	r17,r5
  205f50:	10000e26 	beq	r2,zero,205f8c <_Balloc+0x5c>
  205f54:	880690ba 	slli	r3,r17,2
  205f58:	10c7883a 	add	r3,r2,r3
  205f5c:	18800017 	ldw	r2,0(r3)
  205f60:	10001126 	beq	r2,zero,205fa8 <_Balloc+0x78>
  205f64:	11000017 	ldw	r4,0(r2)
  205f68:	19000015 	stw	r4,0(r3)
  205f6c:	10000415 	stw	zero,16(r2)
  205f70:	10000315 	stw	zero,12(r2)
  205f74:	dfc00317 	ldw	ra,12(sp)
  205f78:	dc800217 	ldw	r18,8(sp)
  205f7c:	dc400117 	ldw	r17,4(sp)
  205f80:	dc000017 	ldw	r16,0(sp)
  205f84:	dec00404 	addi	sp,sp,16
  205f88:	f800283a 	ret
  205f8c:	01800844 	movi	r6,33
  205f90:	01400104 	movi	r5,4
  205f94:	0208d700 	call	208d70 <_calloc_r>
  205f98:	80801315 	stw	r2,76(r16)
  205f9c:	103fed1e 	bne	r2,zero,205f54 <_Balloc+0x24>
  205fa0:	0005883a 	mov	r2,zero
  205fa4:	003ff306 	br	205f74 <_Balloc+0x44>
  205fa8:	04800044 	movi	r18,1
  205fac:	9464983a 	sll	r18,r18,r17
  205fb0:	01400044 	movi	r5,1
  205fb4:	8009883a 	mov	r4,r16
  205fb8:	91800144 	addi	r6,r18,5
  205fbc:	300c90ba 	slli	r6,r6,2
  205fc0:	0208d700 	call	208d70 <_calloc_r>
  205fc4:	103ff626 	beq	r2,zero,205fa0 <_Balloc+0x70>
  205fc8:	14400115 	stw	r17,4(r2)
  205fcc:	14800215 	stw	r18,8(r2)
  205fd0:	003fe606 	br	205f6c <_Balloc+0x3c>

00205fd4 <_Bfree>:
  205fd4:	28000726 	beq	r5,zero,205ff4 <_Bfree+0x20>
  205fd8:	28c00117 	ldw	r3,4(r5)
  205fdc:	20801317 	ldw	r2,76(r4)
  205fe0:	180690ba 	slli	r3,r3,2
  205fe4:	10c5883a 	add	r2,r2,r3
  205fe8:	10c00017 	ldw	r3,0(r2)
  205fec:	28c00015 	stw	r3,0(r5)
  205ff0:	11400015 	stw	r5,0(r2)
  205ff4:	f800283a 	ret

00205ff8 <__multadd>:
  205ff8:	defff704 	addi	sp,sp,-36
  205ffc:	dc800215 	stw	r18,8(sp)
  206000:	2c800417 	ldw	r18,16(r5)
  206004:	ddc00715 	stw	r23,28(sp)
  206008:	dd800615 	stw	r22,24(sp)
  20600c:	dd400515 	stw	r21,20(sp)
  206010:	dd000415 	stw	r20,16(sp)
  206014:	dcc00315 	stw	r19,12(sp)
  206018:	dc400115 	stw	r17,4(sp)
  20601c:	dfc00815 	stw	ra,32(sp)
  206020:	dc000015 	stw	r16,0(sp)
  206024:	2827883a 	mov	r19,r5
  206028:	2029883a 	mov	r20,r4
  20602c:	302b883a 	mov	r21,r6
  206030:	3823883a 	mov	r17,r7
  206034:	2d800504 	addi	r22,r5,20
  206038:	002f883a 	mov	r23,zero
  20603c:	b4000017 	ldw	r16,0(r22)
  206040:	a80b883a 	mov	r5,r21
  206044:	b5800104 	addi	r22,r22,4
  206048:	813fffcc 	andi	r4,r16,65535
  20604c:	020abd80 	call	20abd8 <__mulsi3>
  206050:	8008d43a 	srli	r4,r16,16
  206054:	a80b883a 	mov	r5,r21
  206058:	1461883a 	add	r16,r2,r17
  20605c:	020abd80 	call	20abd8 <__mulsi3>
  206060:	800ed43a 	srli	r7,r16,16
  206064:	843fffcc 	andi	r16,r16,65535
  206068:	bdc00044 	addi	r23,r23,1
  20606c:	11c5883a 	add	r2,r2,r7
  206070:	1006943a 	slli	r3,r2,16
  206074:	1022d43a 	srli	r17,r2,16
  206078:	1c21883a 	add	r16,r3,r16
  20607c:	b43fff15 	stw	r16,-4(r22)
  206080:	bcbfee16 	blt	r23,r18,20603c <__multadd+0x44>
  206084:	88000826 	beq	r17,zero,2060a8 <__multadd+0xb0>
  206088:	98800217 	ldw	r2,8(r19)
  20608c:	9080120e 	bge	r18,r2,2060d8 <__multadd+0xe0>
  206090:	90800144 	addi	r2,r18,5
  206094:	100490ba 	slli	r2,r2,2
  206098:	94800044 	addi	r18,r18,1
  20609c:	9885883a 	add	r2,r19,r2
  2060a0:	14400015 	stw	r17,0(r2)
  2060a4:	9c800415 	stw	r18,16(r19)
  2060a8:	9805883a 	mov	r2,r19
  2060ac:	dfc00817 	ldw	ra,32(sp)
  2060b0:	ddc00717 	ldw	r23,28(sp)
  2060b4:	dd800617 	ldw	r22,24(sp)
  2060b8:	dd400517 	ldw	r21,20(sp)
  2060bc:	dd000417 	ldw	r20,16(sp)
  2060c0:	dcc00317 	ldw	r19,12(sp)
  2060c4:	dc800217 	ldw	r18,8(sp)
  2060c8:	dc400117 	ldw	r17,4(sp)
  2060cc:	dc000017 	ldw	r16,0(sp)
  2060d0:	dec00904 	addi	sp,sp,36
  2060d4:	f800283a 	ret
  2060d8:	99400117 	ldw	r5,4(r19)
  2060dc:	a009883a 	mov	r4,r20
  2060e0:	29400044 	addi	r5,r5,1
  2060e4:	0205f300 	call	205f30 <_Balloc>
  2060e8:	1021883a 	mov	r16,r2
  2060ec:	10001226 	beq	r2,zero,206138 <__multadd+0x140>
  2060f0:	99800417 	ldw	r6,16(r19)
  2060f4:	99400304 	addi	r5,r19,12
  2060f8:	11000304 	addi	r4,r2,12
  2060fc:	31800084 	addi	r6,r6,2
  206100:	300c90ba 	slli	r6,r6,2
  206104:	0205c140 	call	205c14 <memcpy>
  206108:	98000926 	beq	r19,zero,206130 <__multadd+0x138>
  20610c:	98c00117 	ldw	r3,4(r19)
  206110:	a0801317 	ldw	r2,76(r20)
  206114:	180690ba 	slli	r3,r3,2
  206118:	10c5883a 	add	r2,r2,r3
  20611c:	10c00017 	ldw	r3,0(r2)
  206120:	98c00015 	stw	r3,0(r19)
  206124:	14c00015 	stw	r19,0(r2)
  206128:	8027883a 	mov	r19,r16
  20612c:	003fd806 	br	206090 <__multadd+0x98>
  206130:	8027883a 	mov	r19,r16
  206134:	003fd606 	br	206090 <__multadd+0x98>
  206138:	01c00874 	movhi	r7,33
  20613c:	01000874 	movhi	r4,33
  206140:	39ff5004 	addi	r7,r7,-704
  206144:	000d883a 	mov	r6,zero
  206148:	01402d44 	movi	r5,181
  20614c:	213f6504 	addi	r4,r4,-620
  206150:	0208cf80 	call	208cf8 <__assert_func>

00206154 <__s2b>:
  206154:	defff904 	addi	sp,sp,-28
  206158:	dc800215 	stw	r18,8(sp)
  20615c:	dc000015 	stw	r16,0(sp)
  206160:	2025883a 	mov	r18,r4
  206164:	2821883a 	mov	r16,r5
  206168:	39000204 	addi	r4,r7,8
  20616c:	01400244 	movi	r5,9
  206170:	dcc00315 	stw	r19,12(sp)
  206174:	dc400115 	stw	r17,4(sp)
  206178:	dfc00615 	stw	ra,24(sp)
  20617c:	3823883a 	mov	r17,r7
  206180:	dd400515 	stw	r21,20(sp)
  206184:	dd000415 	stw	r20,16(sp)
  206188:	3027883a 	mov	r19,r6
  20618c:	020aa240 	call	20aa24 <__divsi3>
  206190:	88c00290 	cmplti	r3,r17,10
  206194:	1800341e 	bne	r3,zero,206268 <__s2b+0x114>
  206198:	00c00044 	movi	r3,1
  20619c:	000b883a 	mov	r5,zero
  2061a0:	18c7883a 	add	r3,r3,r3
  2061a4:	29400044 	addi	r5,r5,1
  2061a8:	18bffd16 	blt	r3,r2,2061a0 <__s2b+0x4c>
  2061ac:	9009883a 	mov	r4,r18
  2061b0:	0205f300 	call	205f30 <_Balloc>
  2061b4:	100b883a 	mov	r5,r2
  2061b8:	10002d26 	beq	r2,zero,206270 <__s2b+0x11c>
  2061bc:	d8800717 	ldw	r2,28(sp)
  2061c0:	28800515 	stw	r2,20(r5)
  2061c4:	00800044 	movi	r2,1
  2061c8:	28800415 	stw	r2,16(r5)
  2061cc:	98800290 	cmplti	r2,r19,10
  2061d0:	1000221e 	bne	r2,zero,20625c <__s2b+0x108>
  2061d4:	85400244 	addi	r21,r16,9
  2061d8:	a829883a 	mov	r20,r21
  2061dc:	84e1883a 	add	r16,r16,r19
  2061e0:	a1c00007 	ldb	r7,0(r20)
  2061e4:	01800284 	movi	r6,10
  2061e8:	9009883a 	mov	r4,r18
  2061ec:	39fff404 	addi	r7,r7,-48
  2061f0:	0205ff80 	call	205ff8 <__multadd>
  2061f4:	a5000044 	addi	r20,r20,1
  2061f8:	100b883a 	mov	r5,r2
  2061fc:	a43ff81e 	bne	r20,r16,2061e0 <__s2b+0x8c>
  206200:	9c3ffe04 	addi	r16,r19,-8
  206204:	ac21883a 	add	r16,r21,r16
  206208:	9c400a0e 	bge	r19,r17,206234 <__s2b+0xe0>
  20620c:	8ce3c83a 	sub	r17,r17,r19
  206210:	8463883a 	add	r17,r16,r17
  206214:	81c00007 	ldb	r7,0(r16)
  206218:	01800284 	movi	r6,10
  20621c:	9009883a 	mov	r4,r18
  206220:	39fff404 	addi	r7,r7,-48
  206224:	0205ff80 	call	205ff8 <__multadd>
  206228:	84000044 	addi	r16,r16,1
  20622c:	100b883a 	mov	r5,r2
  206230:	8c3ff81e 	bne	r17,r16,206214 <__s2b+0xc0>
  206234:	2805883a 	mov	r2,r5
  206238:	dfc00617 	ldw	ra,24(sp)
  20623c:	dd400517 	ldw	r21,20(sp)
  206240:	dd000417 	ldw	r20,16(sp)
  206244:	dcc00317 	ldw	r19,12(sp)
  206248:	dc800217 	ldw	r18,8(sp)
  20624c:	dc400117 	ldw	r17,4(sp)
  206250:	dc000017 	ldw	r16,0(sp)
  206254:	dec00704 	addi	sp,sp,28
  206258:	f800283a 	ret
  20625c:	84000284 	addi	r16,r16,10
  206260:	04c00244 	movi	r19,9
  206264:	003fe806 	br	206208 <__s2b+0xb4>
  206268:	000b883a 	mov	r5,zero
  20626c:	003fcf06 	br	2061ac <__s2b+0x58>
  206270:	01c00874 	movhi	r7,33
  206274:	01000874 	movhi	r4,33
  206278:	39ff5004 	addi	r7,r7,-704
  20627c:	000d883a 	mov	r6,zero
  206280:	01403384 	movi	r5,206
  206284:	213f6504 	addi	r4,r4,-620
  206288:	0208cf80 	call	208cf8 <__assert_func>

0020628c <__hi0bits>:
  20628c:	20bfffec 	andhi	r2,r4,65535
  206290:	1000131e 	bne	r2,zero,2062e0 <__hi0bits+0x54>
  206294:	2008943a 	slli	r4,r4,16
  206298:	00800404 	movi	r2,16
  20629c:	20ffc02c 	andhi	r3,r4,65280
  2062a0:	1800021e 	bne	r3,zero,2062ac <__hi0bits+0x20>
  2062a4:	2008923a 	slli	r4,r4,8
  2062a8:	10800204 	addi	r2,r2,8
  2062ac:	20fc002c 	andhi	r3,r4,61440
  2062b0:	1800021e 	bne	r3,zero,2062bc <__hi0bits+0x30>
  2062b4:	2008913a 	slli	r4,r4,4
  2062b8:	10800104 	addi	r2,r2,4
  2062bc:	20f0002c 	andhi	r3,r4,49152
  2062c0:	1800021e 	bne	r3,zero,2062cc <__hi0bits+0x40>
  2062c4:	200890ba 	slli	r4,r4,2
  2062c8:	10800084 	addi	r2,r2,2
  2062cc:	20000316 	blt	r4,zero,2062dc <__hi0bits+0x50>
  2062d0:	2110002c 	andhi	r4,r4,16384
  2062d4:	10800044 	addi	r2,r2,1
  2062d8:	20000326 	beq	r4,zero,2062e8 <__hi0bits+0x5c>
  2062dc:	f800283a 	ret
  2062e0:	0005883a 	mov	r2,zero
  2062e4:	003fed06 	br	20629c <__hi0bits+0x10>
  2062e8:	00800804 	movi	r2,32
  2062ec:	f800283a 	ret

002062f0 <__lo0bits>:
  2062f0:	20c00017 	ldw	r3,0(r4)
  2062f4:	188001cc 	andi	r2,r3,7
  2062f8:	10000826 	beq	r2,zero,20631c <__lo0bits+0x2c>
  2062fc:	1880004c 	andi	r2,r3,1
  206300:	10001f1e 	bne	r2,zero,206380 <__lo0bits+0x90>
  206304:	1880008c 	andi	r2,r3,2
  206308:	10002126 	beq	r2,zero,206390 <__lo0bits+0xa0>
  20630c:	1806d07a 	srli	r3,r3,1
  206310:	00800044 	movi	r2,1
  206314:	20c00015 	stw	r3,0(r4)
  206318:	f800283a 	ret
  20631c:	18bfffcc 	andi	r2,r3,65535
  206320:	10001426 	beq	r2,zero,206374 <__lo0bits+0x84>
  206324:	0005883a 	mov	r2,zero
  206328:	19403fcc 	andi	r5,r3,255
  20632c:	2800021e 	bne	r5,zero,206338 <__lo0bits+0x48>
  206330:	1806d23a 	srli	r3,r3,8
  206334:	10800204 	addi	r2,r2,8
  206338:	194003cc 	andi	r5,r3,15
  20633c:	2800021e 	bne	r5,zero,206348 <__lo0bits+0x58>
  206340:	1806d13a 	srli	r3,r3,4
  206344:	10800104 	addi	r2,r2,4
  206348:	194000cc 	andi	r5,r3,3
  20634c:	2800021e 	bne	r5,zero,206358 <__lo0bits+0x68>
  206350:	1806d0ba 	srli	r3,r3,2
  206354:	10800084 	addi	r2,r2,2
  206358:	1940004c 	andi	r5,r3,1
  20635c:	2800031e 	bne	r5,zero,20636c <__lo0bits+0x7c>
  206360:	1806d07a 	srli	r3,r3,1
  206364:	10800044 	addi	r2,r2,1
  206368:	18000726 	beq	r3,zero,206388 <__lo0bits+0x98>
  20636c:	20c00015 	stw	r3,0(r4)
  206370:	f800283a 	ret
  206374:	1806d43a 	srli	r3,r3,16
  206378:	00800404 	movi	r2,16
  20637c:	003fea06 	br	206328 <__lo0bits+0x38>
  206380:	0005883a 	mov	r2,zero
  206384:	f800283a 	ret
  206388:	00800804 	movi	r2,32
  20638c:	f800283a 	ret
  206390:	1806d0ba 	srli	r3,r3,2
  206394:	00800084 	movi	r2,2
  206398:	20c00015 	stw	r3,0(r4)
  20639c:	f800283a 	ret

002063a0 <__i2b>:
  2063a0:	20c01317 	ldw	r3,76(r4)
  2063a4:	defffd04 	addi	sp,sp,-12
  2063a8:	dc400115 	stw	r17,4(sp)
  2063ac:	dc000015 	stw	r16,0(sp)
  2063b0:	dfc00215 	stw	ra,8(sp)
  2063b4:	2021883a 	mov	r16,r4
  2063b8:	2823883a 	mov	r17,r5
  2063bc:	18000d26 	beq	r3,zero,2063f4 <__i2b+0x54>
  2063c0:	18800117 	ldw	r2,4(r3)
  2063c4:	10001826 	beq	r2,zero,206428 <__i2b+0x88>
  2063c8:	11000017 	ldw	r4,0(r2)
  2063cc:	19000115 	stw	r4,4(r3)
  2063d0:	00c00044 	movi	r3,1
  2063d4:	10000315 	stw	zero,12(r2)
  2063d8:	14400515 	stw	r17,20(r2)
  2063dc:	10c00415 	stw	r3,16(r2)
  2063e0:	dfc00217 	ldw	ra,8(sp)
  2063e4:	dc400117 	ldw	r17,4(sp)
  2063e8:	dc000017 	ldw	r16,0(sp)
  2063ec:	dec00304 	addi	sp,sp,12
  2063f0:	f800283a 	ret
  2063f4:	01800844 	movi	r6,33
  2063f8:	01400104 	movi	r5,4
  2063fc:	0208d700 	call	208d70 <_calloc_r>
  206400:	80801315 	stw	r2,76(r16)
  206404:	1007883a 	mov	r3,r2
  206408:	103fed1e 	bne	r2,zero,2063c0 <__i2b+0x20>
  20640c:	01c00874 	movhi	r7,33
  206410:	01000874 	movhi	r4,33
  206414:	39ff5004 	addi	r7,r7,-704
  206418:	000d883a 	mov	r6,zero
  20641c:	01405004 	movi	r5,320
  206420:	213f6504 	addi	r4,r4,-620
  206424:	0208cf80 	call	208cf8 <__assert_func>
  206428:	01800704 	movi	r6,28
  20642c:	01400044 	movi	r5,1
  206430:	8009883a 	mov	r4,r16
  206434:	0208d700 	call	208d70 <_calloc_r>
  206438:	103ff426 	beq	r2,zero,20640c <__i2b+0x6c>
  20643c:	00c00044 	movi	r3,1
  206440:	10c00115 	stw	r3,4(r2)
  206444:	00c00084 	movi	r3,2
  206448:	10c00215 	stw	r3,8(r2)
  20644c:	003fe006 	br	2063d0 <__i2b+0x30>

00206450 <__multiply>:
  206450:	defff004 	addi	sp,sp,-64
  206454:	dd800c15 	stw	r22,48(sp)
  206458:	dc400715 	stw	r17,28(sp)
  20645c:	2d800417 	ldw	r22,16(r5)
  206460:	34400417 	ldw	r17,16(r6)
  206464:	dc800815 	stw	r18,32(sp)
  206468:	dc000615 	stw	r16,24(sp)
  20646c:	dfc00f15 	stw	ra,60(sp)
  206470:	df000e15 	stw	fp,56(sp)
  206474:	ddc00d15 	stw	r23,52(sp)
  206478:	dd400b15 	stw	r21,44(sp)
  20647c:	dd000a15 	stw	r20,40(sp)
  206480:	dcc00915 	stw	r19,36(sp)
  206484:	2825883a 	mov	r18,r5
  206488:	3021883a 	mov	r16,r6
  20648c:	b4400516 	blt	r22,r17,2064a4 <__multiply+0x54>
  206490:	8807883a 	mov	r3,r17
  206494:	2821883a 	mov	r16,r5
  206498:	b023883a 	mov	r17,r22
  20649c:	3025883a 	mov	r18,r6
  2064a0:	182d883a 	mov	r22,r3
  2064a4:	80800217 	ldw	r2,8(r16)
  2064a8:	8d87883a 	add	r3,r17,r22
  2064ac:	d8c00015 	stw	r3,0(sp)
  2064b0:	81400117 	ldw	r5,4(r16)
  2064b4:	10c0010e 	bge	r2,r3,2064bc <__multiply+0x6c>
  2064b8:	29400044 	addi	r5,r5,1
  2064bc:	0205f300 	call	205f30 <_Balloc>
  2064c0:	d8800515 	stw	r2,20(sp)
  2064c4:	10008c26 	beq	r2,zero,2066f8 <__multiply+0x2a8>
  2064c8:	d8800017 	ldw	r2,0(sp)
  2064cc:	102690ba 	slli	r19,r2,2
  2064d0:	d8800517 	ldw	r2,20(sp)
  2064d4:	15000504 	addi	r20,r2,20
  2064d8:	a4c5883a 	add	r2,r20,r19
  2064dc:	d8800115 	stw	r2,4(sp)
  2064e0:	a0800a2e 	bgeu	r20,r2,20650c <__multiply+0xbc>
  2064e4:	d8800117 	ldw	r2,4(sp)
  2064e8:	d8c00517 	ldw	r3,20(sp)
  2064ec:	000b883a 	mov	r5,zero
  2064f0:	a009883a 	mov	r4,r20
  2064f4:	10cdc83a 	sub	r6,r2,r3
  2064f8:	31bffac4 	addi	r6,r6,-21
  2064fc:	300cd0ba 	srli	r6,r6,2
  206500:	31800044 	addi	r6,r6,1
  206504:	300c90ba 	slli	r6,r6,2
  206508:	0205e400 	call	205e40 <memset>
  20650c:	b02c90ba 	slli	r22,r22,2
  206510:	882290ba 	slli	r17,r17,2
  206514:	94800504 	addi	r18,r18,20
  206518:	80800504 	addi	r2,r16,20
  20651c:	9587883a 	add	r3,r18,r22
  206520:	d8800315 	stw	r2,12(sp)
  206524:	d8c00215 	stw	r3,8(sp)
  206528:	1463883a 	add	r17,r2,r17
  20652c:	90c0542e 	bgeu	r18,r3,206680 <__multiply+0x230>
  206530:	80800544 	addi	r2,r16,21
  206534:	88806d36 	bltu	r17,r2,2066ec <__multiply+0x29c>
  206538:	8c05c83a 	sub	r2,r17,r16
  20653c:	10bffac4 	addi	r2,r2,-21
  206540:	1004d0ba 	srli	r2,r2,2
  206544:	10800044 	addi	r2,r2,1
  206548:	100490ba 	slli	r2,r2,2
  20654c:	d8800415 	stw	r2,16(sp)
  206550:	00000606 	br	20656c <__multiply+0x11c>
  206554:	102ad43a 	srli	r21,r2,16
  206558:	a800271e 	bne	r21,zero,2065f8 <__multiply+0x1a8>
  20655c:	d8800217 	ldw	r2,8(sp)
  206560:	94800104 	addi	r18,r18,4
  206564:	a5000104 	addi	r20,r20,4
  206568:	9080452e 	bgeu	r18,r2,206680 <__multiply+0x230>
  20656c:	90800017 	ldw	r2,0(r18)
  206570:	15ffffcc 	andi	r23,r2,65535
  206574:	b83ff726 	beq	r23,zero,206554 <__multiply+0x104>
  206578:	dd400317 	ldw	r21,12(sp)
  20657c:	a02d883a 	mov	r22,r20
  206580:	0027883a 	mov	r19,zero
  206584:	af000017 	ldw	fp,0(r21)
  206588:	b4000017 	ldw	r16,0(r22)
  20658c:	b80b883a 	mov	r5,r23
  206590:	e13fffcc 	andi	r4,fp,65535
  206594:	020abd80 	call	20abd8 <__mulsi3>
  206598:	e008d43a 	srli	r4,fp,16
  20659c:	823fffcc 	andi	r8,r16,65535
  2065a0:	1205883a 	add	r2,r2,r8
  2065a4:	b80b883a 	mov	r5,r23
  2065a8:	14e7883a 	add	r19,r2,r19
  2065ac:	8020d43a 	srli	r16,r16,16
  2065b0:	020abd80 	call	20abd8 <__mulsi3>
  2065b4:	9808d43a 	srli	r4,r19,16
  2065b8:	1405883a 	add	r2,r2,r16
  2065bc:	98ffffcc 	andi	r3,r19,65535
  2065c0:	1105883a 	add	r2,r2,r4
  2065c4:	1008943a 	slli	r4,r2,16
  2065c8:	b5800104 	addi	r22,r22,4
  2065cc:	ad400104 	addi	r21,r21,4
  2065d0:	20c6b03a 	or	r3,r4,r3
  2065d4:	b0ffff15 	stw	r3,-4(r22)
  2065d8:	1026d43a 	srli	r19,r2,16
  2065dc:	ac7fe936 	bltu	r21,r17,206584 <__multiply+0x134>
  2065e0:	d8800417 	ldw	r2,16(sp)
  2065e4:	a085883a 	add	r2,r20,r2
  2065e8:	14c00015 	stw	r19,0(r2)
  2065ec:	90800017 	ldw	r2,0(r18)
  2065f0:	102ad43a 	srli	r21,r2,16
  2065f4:	a83fd926 	beq	r21,zero,20655c <__multiply+0x10c>
  2065f8:	a5c00017 	ldw	r23,0(r20)
  2065fc:	dd800317 	ldw	r22,12(sp)
  206600:	a027883a 	mov	r19,r20
  206604:	b821883a 	mov	r16,r23
  206608:	0039883a 	mov	fp,zero
  20660c:	b100000b 	ldhu	r4,0(r22)
  206610:	a80b883a 	mov	r5,r21
  206614:	9cc00104 	addi	r19,r19,4
  206618:	020abd80 	call	20abd8 <__mulsi3>
  20661c:	800cd43a 	srli	r6,r16,16
  206620:	b8ffffcc 	andi	r3,r23,65535
  206624:	b5800104 	addi	r22,r22,4
  206628:	118d883a 	add	r6,r2,r6
  20662c:	3739883a 	add	fp,r6,fp
  206630:	e004943a 	slli	r2,fp,16
  206634:	9c000017 	ldw	r16,0(r19)
  206638:	a80b883a 	mov	r5,r21
  20663c:	10c6b03a 	or	r3,r2,r3
  206640:	98ffff15 	stw	r3,-4(r19)
  206644:	b13fff8b 	ldhu	r4,-2(r22)
  206648:	020abd80 	call	20abd8 <__mulsi3>
  20664c:	e00cd43a 	srli	r6,fp,16
  206650:	80ffffcc 	andi	r3,r16,65535
  206654:	10c7883a 	add	r3,r2,r3
  206658:	19af883a 	add	r23,r3,r6
  20665c:	b838d43a 	srli	fp,r23,16
  206660:	b47fea36 	bltu	r22,r17,20660c <__multiply+0x1bc>
  206664:	d8800417 	ldw	r2,16(sp)
  206668:	94800104 	addi	r18,r18,4
  20666c:	a085883a 	add	r2,r20,r2
  206670:	15c00015 	stw	r23,0(r2)
  206674:	d8800217 	ldw	r2,8(sp)
  206678:	a5000104 	addi	r20,r20,4
  20667c:	90bfbb36 	bltu	r18,r2,20656c <__multiply+0x11c>
  206680:	d8800017 	ldw	r2,0(sp)
  206684:	00800516 	blt	zero,r2,20669c <__multiply+0x24c>
  206688:	00000906 	br	2066b0 <__multiply+0x260>
  20668c:	d8800017 	ldw	r2,0(sp)
  206690:	10bfffc4 	addi	r2,r2,-1
  206694:	d8800015 	stw	r2,0(sp)
  206698:	10000526 	beq	r2,zero,2066b0 <__multiply+0x260>
  20669c:	d8c00117 	ldw	r3,4(sp)
  2066a0:	18bfff17 	ldw	r2,-4(r3)
  2066a4:	18ffff04 	addi	r3,r3,-4
  2066a8:	d8c00115 	stw	r3,4(sp)
  2066ac:	103ff726 	beq	r2,zero,20668c <__multiply+0x23c>
  2066b0:	d8800517 	ldw	r2,20(sp)
  2066b4:	d8c00017 	ldw	r3,0(sp)
  2066b8:	10c00415 	stw	r3,16(r2)
  2066bc:	dfc00f17 	ldw	ra,60(sp)
  2066c0:	df000e17 	ldw	fp,56(sp)
  2066c4:	ddc00d17 	ldw	r23,52(sp)
  2066c8:	dd800c17 	ldw	r22,48(sp)
  2066cc:	dd400b17 	ldw	r21,44(sp)
  2066d0:	dd000a17 	ldw	r20,40(sp)
  2066d4:	dcc00917 	ldw	r19,36(sp)
  2066d8:	dc800817 	ldw	r18,32(sp)
  2066dc:	dc400717 	ldw	r17,28(sp)
  2066e0:	dc000617 	ldw	r16,24(sp)
  2066e4:	dec01004 	addi	sp,sp,64
  2066e8:	f800283a 	ret
  2066ec:	00800104 	movi	r2,4
  2066f0:	d8800415 	stw	r2,16(sp)
  2066f4:	003f9d06 	br	20656c <__multiply+0x11c>
  2066f8:	01c00874 	movhi	r7,33
  2066fc:	01000874 	movhi	r4,33
  206700:	39ff5004 	addi	r7,r7,-704
  206704:	000d883a 	mov	r6,zero
  206708:	01405744 	movi	r5,349
  20670c:	213f6504 	addi	r4,r4,-620
  206710:	0208cf80 	call	208cf8 <__assert_func>

00206714 <__pow5mult>:
  206714:	defffb04 	addi	sp,sp,-20
  206718:	dcc00315 	stw	r19,12(sp)
  20671c:	dc000015 	stw	r16,0(sp)
  206720:	dfc00415 	stw	ra,16(sp)
  206724:	dc800215 	stw	r18,8(sp)
  206728:	dc400115 	stw	r17,4(sp)
  20672c:	308000cc 	andi	r2,r6,3
  206730:	3021883a 	mov	r16,r6
  206734:	2027883a 	mov	r19,r4
  206738:	10002d1e 	bne	r2,zero,2067f0 <__pow5mult+0xdc>
  20673c:	2825883a 	mov	r18,r5
  206740:	8021d0ba 	srai	r16,r16,2
  206744:	80001926 	beq	r16,zero,2067ac <__pow5mult+0x98>
  206748:	9c401217 	ldw	r17,72(r19)
  20674c:	8800061e 	bne	r17,zero,206768 <__pow5mult+0x54>
  206750:	00002f06 	br	206810 <__pow5mult+0xfc>
  206754:	8021d07a 	srai	r16,r16,1
  206758:	80001426 	beq	r16,zero,2067ac <__pow5mult+0x98>
  20675c:	88800017 	ldw	r2,0(r17)
  206760:	10001a26 	beq	r2,zero,2067cc <__pow5mult+0xb8>
  206764:	1023883a 	mov	r17,r2
  206768:	8080004c 	andi	r2,r16,1
  20676c:	103ff926 	beq	r2,zero,206754 <__pow5mult+0x40>
  206770:	880d883a 	mov	r6,r17
  206774:	900b883a 	mov	r5,r18
  206778:	9809883a 	mov	r4,r19
  20677c:	02064500 	call	206450 <__multiply>
  206780:	90001926 	beq	r18,zero,2067e8 <__pow5mult+0xd4>
  206784:	91000117 	ldw	r4,4(r18)
  206788:	98c01317 	ldw	r3,76(r19)
  20678c:	8021d07a 	srai	r16,r16,1
  206790:	200890ba 	slli	r4,r4,2
  206794:	1907883a 	add	r3,r3,r4
  206798:	19000017 	ldw	r4,0(r3)
  20679c:	91000015 	stw	r4,0(r18)
  2067a0:	1c800015 	stw	r18,0(r3)
  2067a4:	1025883a 	mov	r18,r2
  2067a8:	803fec1e 	bne	r16,zero,20675c <__pow5mult+0x48>
  2067ac:	9005883a 	mov	r2,r18
  2067b0:	dfc00417 	ldw	ra,16(sp)
  2067b4:	dcc00317 	ldw	r19,12(sp)
  2067b8:	dc800217 	ldw	r18,8(sp)
  2067bc:	dc400117 	ldw	r17,4(sp)
  2067c0:	dc000017 	ldw	r16,0(sp)
  2067c4:	dec00504 	addi	sp,sp,20
  2067c8:	f800283a 	ret
  2067cc:	880d883a 	mov	r6,r17
  2067d0:	880b883a 	mov	r5,r17
  2067d4:	9809883a 	mov	r4,r19
  2067d8:	02064500 	call	206450 <__multiply>
  2067dc:	88800015 	stw	r2,0(r17)
  2067e0:	10000015 	stw	zero,0(r2)
  2067e4:	003fdf06 	br	206764 <__pow5mult+0x50>
  2067e8:	1025883a 	mov	r18,r2
  2067ec:	003fd906 	br	206754 <__pow5mult+0x40>
  2067f0:	100490ba 	slli	r2,r2,2
  2067f4:	00c00874 	movhi	r3,33
  2067f8:	000f883a 	mov	r7,zero
  2067fc:	10c7883a 	add	r3,r2,r3
  206800:	19bf7417 	ldw	r6,-560(r3)
  206804:	0205ff80 	call	205ff8 <__multadd>
  206808:	1025883a 	mov	r18,r2
  20680c:	003fcc06 	br	206740 <__pow5mult+0x2c>
  206810:	01400044 	movi	r5,1
  206814:	9809883a 	mov	r4,r19
  206818:	0205f300 	call	205f30 <_Balloc>
  20681c:	1023883a 	mov	r17,r2
  206820:	10000726 	beq	r2,zero,206840 <__pow5mult+0x12c>
  206824:	00809c44 	movi	r2,625
  206828:	88800515 	stw	r2,20(r17)
  20682c:	00800044 	movi	r2,1
  206830:	88800415 	stw	r2,16(r17)
  206834:	9c401215 	stw	r17,72(r19)
  206838:	88000015 	stw	zero,0(r17)
  20683c:	003fca06 	br	206768 <__pow5mult+0x54>
  206840:	01c00874 	movhi	r7,33
  206844:	01000874 	movhi	r4,33
  206848:	39ff5004 	addi	r7,r7,-704
  20684c:	000d883a 	mov	r6,zero
  206850:	01405004 	movi	r5,320
  206854:	213f6504 	addi	r4,r4,-620
  206858:	0208cf80 	call	208cf8 <__assert_func>

0020685c <__lshift>:
  20685c:	defff804 	addi	sp,sp,-32
  206860:	dd800615 	stw	r22,24(sp)
  206864:	dc000015 	stw	r16,0(sp)
  206868:	302dd17a 	srai	r22,r6,5
  20686c:	2c000417 	ldw	r16,16(r5)
  206870:	28800217 	ldw	r2,8(r5)
  206874:	dd000415 	stw	r20,16(sp)
  206878:	b421883a 	add	r16,r22,r16
  20687c:	dcc00315 	stw	r19,12(sp)
  206880:	dc800215 	stw	r18,8(sp)
  206884:	dc400115 	stw	r17,4(sp)
  206888:	dfc00715 	stw	ra,28(sp)
  20688c:	dd400515 	stw	r21,20(sp)
  206890:	85000044 	addi	r20,r16,1
  206894:	2827883a 	mov	r19,r5
  206898:	3025883a 	mov	r18,r6
  20689c:	29400117 	ldw	r5,4(r5)
  2068a0:	2023883a 	mov	r17,r4
  2068a4:	1500030e 	bge	r2,r20,2068b4 <__lshift+0x58>
  2068a8:	1085883a 	add	r2,r2,r2
  2068ac:	29400044 	addi	r5,r5,1
  2068b0:	153ffd16 	blt	r2,r20,2068a8 <__lshift+0x4c>
  2068b4:	8809883a 	mov	r4,r17
  2068b8:	0205f300 	call	205f30 <_Balloc>
  2068bc:	102b883a 	mov	r21,r2
  2068c0:	10004126 	beq	r2,zero,2069c8 <__lshift+0x16c>
  2068c4:	11000504 	addi	r4,r2,20
  2068c8:	0580050e 	bge	zero,r22,2068e0 <__lshift+0x84>
  2068cc:	b02c90ba 	slli	r22,r22,2
  2068d0:	000b883a 	mov	r5,zero
  2068d4:	b00d883a 	mov	r6,r22
  2068d8:	0205e400 	call	205e40 <memset>
  2068dc:	1589883a 	add	r4,r2,r22
  2068e0:	9a000417 	ldw	r8,16(r19)
  2068e4:	98c00504 	addi	r3,r19,20
  2068e8:	948007cc 	andi	r18,r18,31
  2068ec:	401090ba 	slli	r8,r8,2
  2068f0:	1a11883a 	add	r8,r3,r8
  2068f4:	90002c26 	beq	r18,zero,2069a8 <__lshift+0x14c>
  2068f8:	01400804 	movi	r5,32
  2068fc:	2c8bc83a 	sub	r5,r5,r18
  206900:	2005883a 	mov	r2,r4
  206904:	000f883a 	mov	r7,zero
  206908:	19800017 	ldw	r6,0(r3)
  20690c:	10800104 	addi	r2,r2,4
  206910:	18c00104 	addi	r3,r3,4
  206914:	348c983a 	sll	r6,r6,r18
  206918:	31ccb03a 	or	r6,r6,r7
  20691c:	11bfff15 	stw	r6,-4(r2)
  206920:	19bfff17 	ldw	r6,-4(r3)
  206924:	314ed83a 	srl	r7,r6,r5
  206928:	1a3ff736 	bltu	r3,r8,206908 <__lshift+0xac>
  20692c:	98800544 	addi	r2,r19,21
  206930:	40802336 	bltu	r8,r2,2069c0 <__lshift+0x164>
  206934:	44c7c83a 	sub	r3,r8,r19
  206938:	18fffac4 	addi	r3,r3,-21
  20693c:	1806d0ba 	srli	r3,r3,2
  206940:	18c00044 	addi	r3,r3,1
  206944:	180690ba 	slli	r3,r3,2
  206948:	20c9883a 	add	r4,r4,r3
  20694c:	21c00015 	stw	r7,0(r4)
  206950:	38000126 	beq	r7,zero,206958 <__lshift+0xfc>
  206954:	a021883a 	mov	r16,r20
  206958:	ac000415 	stw	r16,16(r21)
  20695c:	98000726 	beq	r19,zero,20697c <__lshift+0x120>
  206960:	98c00117 	ldw	r3,4(r19)
  206964:	88801317 	ldw	r2,76(r17)
  206968:	180690ba 	slli	r3,r3,2
  20696c:	10c5883a 	add	r2,r2,r3
  206970:	10c00017 	ldw	r3,0(r2)
  206974:	98c00015 	stw	r3,0(r19)
  206978:	14c00015 	stw	r19,0(r2)
  20697c:	a805883a 	mov	r2,r21
  206980:	dfc00717 	ldw	ra,28(sp)
  206984:	dd800617 	ldw	r22,24(sp)
  206988:	dd400517 	ldw	r21,20(sp)
  20698c:	dd000417 	ldw	r20,16(sp)
  206990:	dcc00317 	ldw	r19,12(sp)
  206994:	dc800217 	ldw	r18,8(sp)
  206998:	dc400117 	ldw	r17,4(sp)
  20699c:	dc000017 	ldw	r16,0(sp)
  2069a0:	dec00804 	addi	sp,sp,32
  2069a4:	f800283a 	ret
  2069a8:	18800017 	ldw	r2,0(r3)
  2069ac:	18c00104 	addi	r3,r3,4
  2069b0:	21000104 	addi	r4,r4,4
  2069b4:	20bfff15 	stw	r2,-4(r4)
  2069b8:	1a3ffb36 	bltu	r3,r8,2069a8 <__lshift+0x14c>
  2069bc:	003fe606 	br	206958 <__lshift+0xfc>
  2069c0:	00c00104 	movi	r3,4
  2069c4:	003fe006 	br	206948 <__lshift+0xec>
  2069c8:	01c00874 	movhi	r7,33
  2069cc:	01000874 	movhi	r4,33
  2069d0:	39ff5004 	addi	r7,r7,-704
  2069d4:	000d883a 	mov	r6,zero
  2069d8:	01407644 	movi	r5,473
  2069dc:	213f6504 	addi	r4,r4,-620
  2069e0:	0208cf80 	call	208cf8 <__assert_func>

002069e4 <__mcmp>:
  2069e4:	21800417 	ldw	r6,16(r4)
  2069e8:	28c00417 	ldw	r3,16(r5)
  2069ec:	30c5c83a 	sub	r2,r6,r3
  2069f0:	30c00e1e 	bne	r6,r3,206a2c <__mcmp+0x48>
  2069f4:	180690ba 	slli	r3,r3,2
  2069f8:	21c00504 	addi	r7,r4,20
  2069fc:	29400504 	addi	r5,r5,20
  206a00:	38c9883a 	add	r4,r7,r3
  206a04:	28c7883a 	add	r3,r5,r3
  206a08:	00000106 	br	206a10 <__mcmp+0x2c>
  206a0c:	3900082e 	bgeu	r7,r4,206a30 <__mcmp+0x4c>
  206a10:	21bfff17 	ldw	r6,-4(r4)
  206a14:	197fff17 	ldw	r5,-4(r3)
  206a18:	213fff04 	addi	r4,r4,-4
  206a1c:	18ffff04 	addi	r3,r3,-4
  206a20:	317ffa26 	beq	r6,r5,206a0c <__mcmp+0x28>
  206a24:	3140032e 	bgeu	r6,r5,206a34 <__mcmp+0x50>
  206a28:	00bfffc4 	movi	r2,-1
  206a2c:	f800283a 	ret
  206a30:	f800283a 	ret
  206a34:	00800044 	movi	r2,1
  206a38:	f800283a 	ret

00206a3c <__mdiff>:
  206a3c:	28800417 	ldw	r2,16(r5)
  206a40:	30c00417 	ldw	r3,16(r6)
  206a44:	defffc04 	addi	sp,sp,-16
  206a48:	dc800215 	stw	r18,8(sp)
  206a4c:	dc400115 	stw	r17,4(sp)
  206a50:	dc000015 	stw	r16,0(sp)
  206a54:	dfc00315 	stw	ra,12(sp)
  206a58:	2823883a 	mov	r17,r5
  206a5c:	3021883a 	mov	r16,r6
  206a60:	10e5c83a 	sub	r18,r2,r3
  206a64:	10c0641e 	bne	r2,r3,206bf8 <__mdiff+0x1bc>
  206a68:	180c90ba 	slli	r6,r3,2
  206a6c:	29400504 	addi	r5,r5,20
  206a70:	80c00504 	addi	r3,r16,20
  206a74:	2985883a 	add	r2,r5,r6
  206a78:	1987883a 	add	r3,r3,r6
  206a7c:	00000106 	br	206a84 <__mdiff+0x48>
  206a80:	2880642e 	bgeu	r5,r2,206c14 <__mdiff+0x1d8>
  206a84:	11bfff17 	ldw	r6,-4(r2)
  206a88:	19ffff17 	ldw	r7,-4(r3)
  206a8c:	10bfff04 	addi	r2,r2,-4
  206a90:	18ffff04 	addi	r3,r3,-4
  206a94:	31fffa26 	beq	r6,r7,206a80 <__mdiff+0x44>
  206a98:	31c05236 	bltu	r6,r7,206be4 <__mdiff+0x1a8>
  206a9c:	89400117 	ldw	r5,4(r17)
  206aa0:	0205f300 	call	205f30 <_Balloc>
  206aa4:	10006226 	beq	r2,zero,206c30 <__mdiff+0x1f4>
  206aa8:	8a400417 	ldw	r9,16(r17)
  206aac:	83000417 	ldw	r12,16(r16)
  206ab0:	8ac00504 	addi	r11,r17,20
  206ab4:	481090ba 	slli	r8,r9,2
  206ab8:	601890ba 	slli	r12,r12,2
  206abc:	81800504 	addi	r6,r16,20
  206ac0:	13400504 	addi	r13,r2,20
  206ac4:	14800315 	stw	r18,12(r2)
  206ac8:	5a11883a 	add	r8,r11,r8
  206acc:	3319883a 	add	r12,r6,r12
  206ad0:	681d883a 	mov	r14,r13
  206ad4:	5815883a 	mov	r10,r11
  206ad8:	0007883a 	mov	r3,zero
  206adc:	51000017 	ldw	r4,0(r10)
  206ae0:	31c00017 	ldw	r7,0(r6)
  206ae4:	73800104 	addi	r14,r14,4
  206ae8:	217fffcc 	andi	r5,r4,65535
  206aec:	28cb883a 	add	r5,r5,r3
  206af0:	38ffffcc 	andi	r3,r7,65535
  206af4:	28cbc83a 	sub	r5,r5,r3
  206af8:	380ed43a 	srli	r7,r7,16
  206afc:	2006d43a 	srli	r3,r4,16
  206b00:	2809d43a 	srai	r4,r5,16
  206b04:	297fffcc 	andi	r5,r5,65535
  206b08:	19c7c83a 	sub	r3,r3,r7
  206b0c:	1907883a 	add	r3,r3,r4
  206b10:	1808943a 	slli	r4,r3,16
  206b14:	31800104 	addi	r6,r6,4
  206b18:	1807d43a 	srai	r3,r3,16
  206b1c:	214ab03a 	or	r5,r4,r5
  206b20:	717fff15 	stw	r5,-4(r14)
  206b24:	52800104 	addi	r10,r10,4
  206b28:	333fec36 	bltu	r6,r12,206adc <__mdiff+0xa0>
  206b2c:	640fc83a 	sub	r7,r12,r16
  206b30:	39fffac4 	addi	r7,r7,-21
  206b34:	84000544 	addi	r16,r16,21
  206b38:	380ed0ba 	srli	r7,r7,2
  206b3c:	64003336 	bltu	r12,r16,206c0c <__mdiff+0x1d0>
  206b40:	380890ba 	slli	r4,r7,2
  206b44:	6909883a 	add	r4,r13,r4
  206b48:	64002e36 	bltu	r12,r16,206c04 <__mdiff+0x1c8>
  206b4c:	39800044 	addi	r6,r7,1
  206b50:	300c90ba 	slli	r6,r6,2
  206b54:	5997883a 	add	r11,r11,r6
  206b58:	699b883a 	add	r13,r13,r6
  206b5c:	5a00152e 	bgeu	r11,r8,206bb4 <__mdiff+0x178>
  206b60:	680f883a 	mov	r7,r13
  206b64:	580d883a 	mov	r6,r11
  206b68:	31000017 	ldw	r4,0(r6)
  206b6c:	39c00104 	addi	r7,r7,4
  206b70:	31800104 	addi	r6,r6,4
  206b74:	217fffcc 	andi	r5,r4,65535
  206b78:	28cb883a 	add	r5,r5,r3
  206b7c:	2815d43a 	srai	r10,r5,16
  206b80:	2006d43a 	srli	r3,r4,16
  206b84:	297fffcc 	andi	r5,r5,65535
  206b88:	1a87883a 	add	r3,r3,r10
  206b8c:	1814943a 	slli	r10,r3,16
  206b90:	1807d43a 	srai	r3,r3,16
  206b94:	514ab03a 	or	r5,r10,r5
  206b98:	397fff15 	stw	r5,-4(r7)
  206b9c:	323ff236 	bltu	r6,r8,206b68 <__mdiff+0x12c>
  206ba0:	413fffc4 	addi	r4,r8,-1
  206ba4:	22c9c83a 	sub	r4,r4,r11
  206ba8:	2008d0ba 	srli	r4,r4,2
  206bac:	200890ba 	slli	r4,r4,2
  206bb0:	6909883a 	add	r4,r13,r4
  206bb4:	2800041e 	bne	r5,zero,206bc8 <__mdiff+0x18c>
  206bb8:	20ffff17 	ldw	r3,-4(r4)
  206bbc:	4a7fffc4 	addi	r9,r9,-1
  206bc0:	213fff04 	addi	r4,r4,-4
  206bc4:	183ffc26 	beq	r3,zero,206bb8 <__mdiff+0x17c>
  206bc8:	12400415 	stw	r9,16(r2)
  206bcc:	dfc00317 	ldw	ra,12(sp)
  206bd0:	dc800217 	ldw	r18,8(sp)
  206bd4:	dc400117 	ldw	r17,4(sp)
  206bd8:	dc000017 	ldw	r16,0(sp)
  206bdc:	dec00404 	addi	sp,sp,16
  206be0:	f800283a 	ret
  206be4:	8805883a 	mov	r2,r17
  206be8:	04800044 	movi	r18,1
  206bec:	8023883a 	mov	r17,r16
  206bf0:	1021883a 	mov	r16,r2
  206bf4:	003fa906 	br	206a9c <__mdiff+0x60>
  206bf8:	903ffa16 	blt	r18,zero,206be4 <__mdiff+0x1a8>
  206bfc:	0025883a 	mov	r18,zero
  206c00:	003fa606 	br	206a9c <__mdiff+0x60>
  206c04:	01800104 	movi	r6,4
  206c08:	003fd206 	br	206b54 <__mdiff+0x118>
  206c0c:	0009883a 	mov	r4,zero
  206c10:	003fcc06 	br	206b44 <__mdiff+0x108>
  206c14:	000b883a 	mov	r5,zero
  206c18:	0205f300 	call	205f30 <_Balloc>
  206c1c:	10000b26 	beq	r2,zero,206c4c <__mdiff+0x210>
  206c20:	00c00044 	movi	r3,1
  206c24:	10c00415 	stw	r3,16(r2)
  206c28:	10000515 	stw	zero,20(r2)
  206c2c:	003fe706 	br	206bcc <__mdiff+0x190>
  206c30:	01c00874 	movhi	r7,33
  206c34:	01000874 	movhi	r4,33
  206c38:	39ff5004 	addi	r7,r7,-704
  206c3c:	000d883a 	mov	r6,zero
  206c40:	01409004 	movi	r5,576
  206c44:	213f6504 	addi	r4,r4,-620
  206c48:	0208cf80 	call	208cf8 <__assert_func>
  206c4c:	01c00874 	movhi	r7,33
  206c50:	01000874 	movhi	r4,33
  206c54:	39ff5004 	addi	r7,r7,-704
  206c58:	000d883a 	mov	r6,zero
  206c5c:	01408c84 	movi	r5,562
  206c60:	213f6504 	addi	r4,r4,-620
  206c64:	0208cf80 	call	208cf8 <__assert_func>

00206c68 <__ulp>:
  206c68:	28dffc2c 	andhi	r3,r5,32752
  206c6c:	017f3034 	movhi	r5,64704
  206c70:	1947883a 	add	r3,r3,r5
  206c74:	00c0020e 	bge	zero,r3,206c80 <__ulp+0x18>
  206c78:	0005883a 	mov	r2,zero
  206c7c:	f800283a 	ret
  206c80:	00c7c83a 	sub	r3,zero,r3
  206c84:	1807d53a 	srai	r3,r3,20
  206c88:	18800508 	cmpgei	r2,r3,20
  206c8c:	1000041e 	bne	r2,zero,206ca0 <__ulp+0x38>
  206c90:	00800234 	movhi	r2,8
  206c94:	10c7d83a 	sra	r3,r2,r3
  206c98:	0005883a 	mov	r2,zero
  206c9c:	f800283a 	ret
  206ca0:	193ffb04 	addi	r4,r3,-20
  206ca4:	208007c8 	cmpgei	r2,r4,31
  206ca8:	0007883a 	mov	r3,zero
  206cac:	1000031e 	bne	r2,zero,206cbc <__ulp+0x54>
  206cb0:	00a00034 	movhi	r2,32768
  206cb4:	1104d83a 	srl	r2,r2,r4
  206cb8:	f800283a 	ret
  206cbc:	00800044 	movi	r2,1
  206cc0:	f800283a 	ret

00206cc4 <__b2d>:
  206cc4:	defffa04 	addi	sp,sp,-24
  206cc8:	dc400115 	stw	r17,4(sp)
  206ccc:	24400417 	ldw	r17,16(r4)
  206cd0:	dc000015 	stw	r16,0(sp)
  206cd4:	24000504 	addi	r16,r4,20
  206cd8:	882290ba 	slli	r17,r17,2
  206cdc:	dc800215 	stw	r18,8(sp)
  206ce0:	dd000415 	stw	r20,16(sp)
  206ce4:	8463883a 	add	r17,r16,r17
  206ce8:	8cbfff17 	ldw	r18,-4(r17)
  206cec:	dcc00315 	stw	r19,12(sp)
  206cf0:	dfc00515 	stw	ra,20(sp)
  206cf4:	9009883a 	mov	r4,r18
  206cf8:	2827883a 	mov	r19,r5
  206cfc:	020628c0 	call	20628c <__hi0bits>
  206d00:	00c00804 	movi	r3,32
  206d04:	1889c83a 	sub	r4,r3,r2
  206d08:	99000015 	stw	r4,0(r19)
  206d0c:	110002c8 	cmpgei	r4,r2,11
  206d10:	8d3fff04 	addi	r20,r17,-4
  206d14:	20002026 	beq	r4,zero,206d98 <__b2d+0xd4>
  206d18:	10bffd44 	addi	r2,r2,-11
  206d1c:	85000e2e 	bgeu	r16,r20,206d58 <__b2d+0x94>
  206d20:	897ffe17 	ldw	r5,-8(r17)
  206d24:	10001226 	beq	r2,zero,206d70 <__b2d+0xac>
  206d28:	1889c83a 	sub	r4,r3,r2
  206d2c:	90a4983a 	sll	r18,r18,r2
  206d30:	2906d83a 	srl	r3,r5,r4
  206d34:	89bffe04 	addi	r6,r17,-8
  206d38:	2884983a 	sll	r2,r5,r2
  206d3c:	90e4b03a 	or	r18,r18,r3
  206d40:	90cffc34 	orhi	r3,r18,16368
  206d44:	81800c2e 	bgeu	r16,r6,206d78 <__b2d+0xb4>
  206d48:	897ffd17 	ldw	r5,-12(r17)
  206d4c:	2908d83a 	srl	r4,r5,r4
  206d50:	1104b03a 	or	r2,r2,r4
  206d54:	00000806 	br	206d78 <__b2d+0xb4>
  206d58:	10000426 	beq	r2,zero,206d6c <__b2d+0xa8>
  206d5c:	90a4983a 	sll	r18,r18,r2
  206d60:	0005883a 	mov	r2,zero
  206d64:	90cffc34 	orhi	r3,r18,16368
  206d68:	00000306 	br	206d78 <__b2d+0xb4>
  206d6c:	000b883a 	mov	r5,zero
  206d70:	90cffc34 	orhi	r3,r18,16368
  206d74:	2805883a 	mov	r2,r5
  206d78:	dfc00517 	ldw	ra,20(sp)
  206d7c:	dd000417 	ldw	r20,16(sp)
  206d80:	dcc00317 	ldw	r19,12(sp)
  206d84:	dc800217 	ldw	r18,8(sp)
  206d88:	dc400117 	ldw	r17,4(sp)
  206d8c:	dc000017 	ldw	r16,0(sp)
  206d90:	dec00604 	addi	sp,sp,24
  206d94:	f800283a 	ret
  206d98:	014002c4 	movi	r5,11
  206d9c:	2889c83a 	sub	r4,r5,r2
  206da0:	9106d83a 	srl	r3,r18,r4
  206da4:	18cffc34 	orhi	r3,r3,16368
  206da8:	85000536 	bltu	r16,r20,206dc0 <__b2d+0xfc>
  206dac:	000b883a 	mov	r5,zero
  206db0:	10800544 	addi	r2,r2,21
  206db4:	9084983a 	sll	r2,r18,r2
  206db8:	1144b03a 	or	r2,r2,r5
  206dbc:	003fee06 	br	206d78 <__b2d+0xb4>
  206dc0:	897ffe17 	ldw	r5,-8(r17)
  206dc4:	290ad83a 	srl	r5,r5,r4
  206dc8:	003ff906 	br	206db0 <__b2d+0xec>

00206dcc <__d2b>:
  206dcc:	defff804 	addi	sp,sp,-32
  206dd0:	dd000615 	stw	r20,24(sp)
  206dd4:	2829883a 	mov	r20,r5
  206dd8:	01400044 	movi	r5,1
  206ddc:	dcc00515 	stw	r19,20(sp)
  206de0:	dc000215 	stw	r16,8(sp)
  206de4:	dfc00715 	stw	ra,28(sp)
  206de8:	dc800415 	stw	r18,16(sp)
  206dec:	dc400315 	stw	r17,12(sp)
  206df0:	3021883a 	mov	r16,r6
  206df4:	3827883a 	mov	r19,r7
  206df8:	0205f300 	call	205f30 <_Balloc>
  206dfc:	10004526 	beq	r2,zero,206f14 <__d2b+0x148>
  206e00:	8024d53a 	srli	r18,r16,20
  206e04:	01800434 	movhi	r6,16
  206e08:	31bfffc4 	addi	r6,r6,-1
  206e0c:	9481ffcc 	andi	r18,r18,2047
  206e10:	1023883a 	mov	r17,r2
  206e14:	81a0703a 	and	r16,r16,r6
  206e18:	90000126 	beq	r18,zero,206e20 <__d2b+0x54>
  206e1c:	84000434 	orhi	r16,r16,16
  206e20:	dc000115 	stw	r16,4(sp)
  206e24:	a0002226 	beq	r20,zero,206eb0 <__d2b+0xe4>
  206e28:	d809883a 	mov	r4,sp
  206e2c:	dd000015 	stw	r20,0(sp)
  206e30:	02062f00 	call	2062f0 <__lo0bits>
  206e34:	d8c00117 	ldw	r3,4(sp)
  206e38:	10003326 	beq	r2,zero,206f08 <__d2b+0x13c>
  206e3c:	01000804 	movi	r4,32
  206e40:	2089c83a 	sub	r4,r4,r2
  206e44:	1908983a 	sll	r4,r3,r4
  206e48:	d9400017 	ldw	r5,0(sp)
  206e4c:	1886d83a 	srl	r3,r3,r2
  206e50:	2148b03a 	or	r4,r4,r5
  206e54:	89000515 	stw	r4,20(r17)
  206e58:	d8c00115 	stw	r3,4(sp)
  206e5c:	88c00615 	stw	r3,24(r17)
  206e60:	1800271e 	bne	r3,zero,206f00 <__d2b+0x134>
  206e64:	04000044 	movi	r16,1
  206e68:	8c000415 	stw	r16,16(r17)
  206e6c:	90001926 	beq	r18,zero,206ed4 <__d2b+0x108>
  206e70:	00c00d44 	movi	r3,53
  206e74:	94bef344 	addi	r18,r18,-1075
  206e78:	90a5883a 	add	r18,r18,r2
  206e7c:	1885c83a 	sub	r2,r3,r2
  206e80:	d8c00817 	ldw	r3,32(sp)
  206e84:	9c800015 	stw	r18,0(r19)
  206e88:	18800015 	stw	r2,0(r3)
  206e8c:	8805883a 	mov	r2,r17
  206e90:	dfc00717 	ldw	ra,28(sp)
  206e94:	dd000617 	ldw	r20,24(sp)
  206e98:	dcc00517 	ldw	r19,20(sp)
  206e9c:	dc800417 	ldw	r18,16(sp)
  206ea0:	dc400317 	ldw	r17,12(sp)
  206ea4:	dc000217 	ldw	r16,8(sp)
  206ea8:	dec00804 	addi	sp,sp,32
  206eac:	f800283a 	ret
  206eb0:	d9000104 	addi	r4,sp,4
  206eb4:	02062f00 	call	2062f0 <__lo0bits>
  206eb8:	00c00044 	movi	r3,1
  206ebc:	88c00415 	stw	r3,16(r17)
  206ec0:	d8c00117 	ldw	r3,4(sp)
  206ec4:	10800804 	addi	r2,r2,32
  206ec8:	04000044 	movi	r16,1
  206ecc:	88c00515 	stw	r3,20(r17)
  206ed0:	903fe71e 	bne	r18,zero,206e70 <__d2b+0xa4>
  206ed4:	800690ba 	slli	r3,r16,2
  206ed8:	10bef384 	addi	r2,r2,-1074
  206edc:	98800015 	stw	r2,0(r19)
  206ee0:	88c5883a 	add	r2,r17,r3
  206ee4:	11000417 	ldw	r4,16(r2)
  206ee8:	8020917a 	slli	r16,r16,5
  206eec:	020628c0 	call	20628c <__hi0bits>
  206ef0:	80a1c83a 	sub	r16,r16,r2
  206ef4:	d8800817 	ldw	r2,32(sp)
  206ef8:	14000015 	stw	r16,0(r2)
  206efc:	003fe306 	br	206e8c <__d2b+0xc0>
  206f00:	04000084 	movi	r16,2
  206f04:	003fd806 	br	206e68 <__d2b+0x9c>
  206f08:	d9000017 	ldw	r4,0(sp)
  206f0c:	89000515 	stw	r4,20(r17)
  206f10:	003fd206 	br	206e5c <__d2b+0x90>
  206f14:	01c00874 	movhi	r7,33
  206f18:	01000874 	movhi	r4,33
  206f1c:	39ff5004 	addi	r7,r7,-704
  206f20:	000d883a 	mov	r6,zero
  206f24:	0140c284 	movi	r5,778
  206f28:	213f6504 	addi	r4,r4,-620
  206f2c:	0208cf80 	call	208cf8 <__assert_func>

00206f30 <__ratio>:
  206f30:	defff904 	addi	sp,sp,-28
  206f34:	dc400315 	stw	r17,12(sp)
  206f38:	2823883a 	mov	r17,r5
  206f3c:	d80b883a 	mov	r5,sp
  206f40:	dfc00615 	stw	ra,24(sp)
  206f44:	dcc00515 	stw	r19,20(sp)
  206f48:	dc800415 	stw	r18,16(sp)
  206f4c:	2027883a 	mov	r19,r4
  206f50:	dc000215 	stw	r16,8(sp)
  206f54:	0206cc40 	call	206cc4 <__b2d>
  206f58:	d9400104 	addi	r5,sp,4
  206f5c:	8809883a 	mov	r4,r17
  206f60:	1025883a 	mov	r18,r2
  206f64:	1821883a 	mov	r16,r3
  206f68:	0206cc40 	call	206cc4 <__b2d>
  206f6c:	89000417 	ldw	r4,16(r17)
  206f70:	9a000417 	ldw	r8,16(r19)
  206f74:	d9400117 	ldw	r5,4(sp)
  206f78:	100d883a 	mov	r6,r2
  206f7c:	4111c83a 	sub	r8,r8,r4
  206f80:	d9000017 	ldw	r4,0(sp)
  206f84:	4010917a 	slli	r8,r8,5
  206f88:	180f883a 	mov	r7,r3
  206f8c:	2149c83a 	sub	r4,r4,r5
  206f90:	4111883a 	add	r8,r8,r4
  206f94:	02000c0e 	bge	zero,r8,206fc8 <__ratio+0x98>
  206f98:	4010953a 	slli	r8,r8,20
  206f9c:	4421883a 	add	r16,r8,r16
  206fa0:	9009883a 	mov	r4,r18
  206fa4:	800b883a 	mov	r5,r16
  206fa8:	020b4f00 	call	20b4f0 <__divdf3>
  206fac:	dfc00617 	ldw	ra,24(sp)
  206fb0:	dcc00517 	ldw	r19,20(sp)
  206fb4:	dc800417 	ldw	r18,16(sp)
  206fb8:	dc400317 	ldw	r17,12(sp)
  206fbc:	dc000217 	ldw	r16,8(sp)
  206fc0:	dec00704 	addi	sp,sp,28
  206fc4:	f800283a 	ret
  206fc8:	4010953a 	slli	r8,r8,20
  206fcc:	1a0fc83a 	sub	r7,r3,r8
  206fd0:	003ff306 	br	206fa0 <__ratio+0x70>

00206fd4 <_mprec_log10>:
  206fd4:	defffe04 	addi	sp,sp,-8
  206fd8:	dc000015 	stw	r16,0(sp)
  206fdc:	dfc00115 	stw	ra,4(sp)
  206fe0:	20800608 	cmpgei	r2,r4,24
  206fe4:	2021883a 	mov	r16,r4
  206fe8:	10000f26 	beq	r2,zero,207028 <_mprec_log10+0x54>
  206fec:	0009883a 	mov	r4,zero
  206ff0:	014ffc34 	movhi	r5,16368
  206ff4:	000d883a 	mov	r6,zero
  206ff8:	01d00934 	movhi	r7,16420
  206ffc:	020c0540 	call	20c054 <__muldf3>
  207000:	843fffc4 	addi	r16,r16,-1
  207004:	1009883a 	mov	r4,r2
  207008:	180b883a 	mov	r5,r3
  20700c:	803ff91e 	bne	r16,zero,206ff4 <_mprec_log10+0x20>
  207010:	2005883a 	mov	r2,r4
  207014:	2807883a 	mov	r3,r5
  207018:	dfc00117 	ldw	ra,4(sp)
  20701c:	dc000017 	ldw	r16,0(sp)
  207020:	dec00204 	addi	sp,sp,8
  207024:	f800283a 	ret
  207028:	202090fa 	slli	r16,r4,3
  20702c:	00800874 	movhi	r2,33
  207030:	10bf8c04 	addi	r2,r2,-464
  207034:	1421883a 	add	r16,r2,r16
  207038:	81000017 	ldw	r4,0(r16)
  20703c:	81400117 	ldw	r5,4(r16)
  207040:	003ff306 	br	207010 <_mprec_log10+0x3c>

00207044 <__copybits>:
  207044:	297fffc4 	addi	r5,r5,-1
  207048:	280fd17a 	srai	r7,r5,5
  20704c:	31400417 	ldw	r5,16(r6)
  207050:	30800504 	addi	r2,r6,20
  207054:	39c00044 	addi	r7,r7,1
  207058:	280a90ba 	slli	r5,r5,2
  20705c:	380e90ba 	slli	r7,r7,2
  207060:	114b883a 	add	r5,r2,r5
  207064:	21cf883a 	add	r7,r4,r7
  207068:	11400c2e 	bgeu	r2,r5,20709c <__copybits+0x58>
  20706c:	2007883a 	mov	r3,r4
  207070:	12000017 	ldw	r8,0(r2)
  207074:	10800104 	addi	r2,r2,4
  207078:	18c00104 	addi	r3,r3,4
  20707c:	1a3fff15 	stw	r8,-4(r3)
  207080:	117ffb36 	bltu	r2,r5,207070 <__copybits+0x2c>
  207084:	2985c83a 	sub	r2,r5,r6
  207088:	10bffac4 	addi	r2,r2,-21
  20708c:	1004d0ba 	srli	r2,r2,2
  207090:	10800044 	addi	r2,r2,1
  207094:	100490ba 	slli	r2,r2,2
  207098:	2089883a 	add	r4,r4,r2
  20709c:	21c0072e 	bgeu	r4,r7,2070bc <__copybits+0x78>
  2070a0:	39bfffc4 	addi	r6,r7,-1
  2070a4:	310dc83a 	sub	r6,r6,r4
  2070a8:	300cd0ba 	srli	r6,r6,2
  2070ac:	000b883a 	mov	r5,zero
  2070b0:	31800044 	addi	r6,r6,1
  2070b4:	300c90ba 	slli	r6,r6,2
  2070b8:	0205e401 	jmpi	205e40 <memset>
  2070bc:	f800283a 	ret

002070c0 <__any_on>:
  2070c0:	20c00417 	ldw	r3,16(r4)
  2070c4:	280dd17a 	srai	r6,r5,5
  2070c8:	21000504 	addi	r4,r4,20
  2070cc:	1980080e 	bge	r3,r6,2070f0 <__any_on+0x30>
  2070d0:	180490ba 	slli	r2,r3,2
  2070d4:	2085883a 	add	r2,r4,r2
  2070d8:	20800f2e 	bgeu	r4,r2,207118 <__any_on+0x58>
  2070dc:	10ffff17 	ldw	r3,-4(r2)
  2070e0:	10bfff04 	addi	r2,r2,-4
  2070e4:	183ffc26 	beq	r3,zero,2070d8 <__any_on+0x18>
  2070e8:	00800044 	movi	r2,1
  2070ec:	f800283a 	ret
  2070f0:	300490ba 	slli	r2,r6,2
  2070f4:	2085883a 	add	r2,r4,r2
  2070f8:	30fff70e 	bge	r6,r3,2070d8 <__any_on+0x18>
  2070fc:	294007cc 	andi	r5,r5,31
  207100:	283ff526 	beq	r5,zero,2070d8 <__any_on+0x18>
  207104:	11800017 	ldw	r6,0(r2)
  207108:	3146d83a 	srl	r3,r6,r5
  20710c:	194a983a 	sll	r5,r3,r5
  207110:	317ff51e 	bne	r6,r5,2070e8 <__any_on+0x28>
  207114:	003ff006 	br	2070d8 <__any_on+0x18>
  207118:	0005883a 	mov	r2,zero
  20711c:	f800283a 	ret

00207120 <_realloc_r>:
  207120:	defff604 	addi	sp,sp,-40
  207124:	dc800215 	stw	r18,8(sp)
  207128:	dfc00915 	stw	ra,36(sp)
  20712c:	df000815 	stw	fp,32(sp)
  207130:	ddc00715 	stw	r23,28(sp)
  207134:	dd800615 	stw	r22,24(sp)
  207138:	dd400515 	stw	r21,20(sp)
  20713c:	dd000415 	stw	r20,16(sp)
  207140:	dcc00315 	stw	r19,12(sp)
  207144:	dc400115 	stw	r17,4(sp)
  207148:	dc000015 	stw	r16,0(sp)
  20714c:	3025883a 	mov	r18,r6
  207150:	28008b26 	beq	r5,zero,207380 <_realloc_r+0x260>
  207154:	2821883a 	mov	r16,r5
  207158:	2027883a 	mov	r19,r4
  20715c:	944002c4 	addi	r17,r18,11
  207160:	020dae80 	call	20dae8 <__malloc_lock>
  207164:	888005f0 	cmpltui	r2,r17,23
  207168:	1000521e 	bne	r2,zero,2072b4 <_realloc_r+0x194>
  20716c:	017ffe04 	movi	r5,-8
  207170:	8962703a 	and	r17,r17,r5
  207174:	8807883a 	mov	r3,r17
  207178:	88005116 	blt	r17,zero,2072c0 <_realloc_r+0x1a0>
  20717c:	8c805036 	bltu	r17,r18,2072c0 <_realloc_r+0x1a0>
  207180:	80bfff17 	ldw	r2,-4(r16)
  207184:	017fff04 	movi	r5,-4
  207188:	857ffe04 	addi	r21,r16,-8
  20718c:	1168703a 	and	r20,r2,r5
  207190:	a0c0390e 	bge	r20,r3,207278 <_realloc_r+0x158>
  207194:	05c00874 	movhi	r23,33
  207198:	bdc1d104 	addi	r23,r23,1860
  20719c:	ba000217 	ldw	r8,8(r23)
  2071a0:	ad0f883a 	add	r7,r21,r20
  2071a4:	39000117 	ldw	r4,4(r7)
  2071a8:	41c08e26 	beq	r8,r7,2073e4 <_realloc_r+0x2c4>
  2071ac:	01bfff84 	movi	r6,-2
  2071b0:	218c703a 	and	r6,r4,r6
  2071b4:	398d883a 	add	r6,r7,r6
  2071b8:	31800117 	ldw	r6,4(r6)
  2071bc:	3180004c 	andi	r6,r6,1
  2071c0:	30004f1e 	bne	r6,zero,207300 <_realloc_r+0x1e0>
  2071c4:	2148703a 	and	r4,r4,r5
  2071c8:	a10b883a 	add	r5,r20,r4
  2071cc:	28c0bb0e 	bge	r5,r3,2074bc <_realloc_r+0x39c>
  2071d0:	1080004c 	andi	r2,r2,1
  2071d4:	10004c1e 	bne	r2,zero,207308 <_realloc_r+0x1e8>
  2071d8:	873ffe17 	ldw	fp,-8(r16)
  2071dc:	00bfff04 	movi	r2,-4
  2071e0:	af39c83a 	sub	fp,r21,fp
  2071e4:	e1400117 	ldw	r5,4(fp)
  2071e8:	288a703a 	and	r5,r5,r2
  2071ec:	38000426 	beq	r7,zero,207200 <_realloc_r+0xe0>
  2071f0:	a16d883a 	add	r22,r20,r5
  2071f4:	b12d883a 	add	r22,r22,r4
  2071f8:	41c0ba26 	beq	r8,r7,2074e4 <_realloc_r+0x3c4>
  2071fc:	b0c0930e 	bge	r22,r3,20744c <_realloc_r+0x32c>
  207200:	e0004126 	beq	fp,zero,207308 <_realloc_r+0x1e8>
  207204:	a16d883a 	add	r22,r20,r5
  207208:	b0c03f16 	blt	r22,r3,207308 <_realloc_r+0x1e8>
  20720c:	e0800317 	ldw	r2,12(fp)
  207210:	e0c00217 	ldw	r3,8(fp)
  207214:	a1bfff04 	addi	r6,r20,-4
  207218:	31400968 	cmpgeui	r5,r6,37
  20721c:	18800315 	stw	r2,12(r3)
  207220:	10c00215 	stw	r3,8(r2)
  207224:	e1000204 	addi	r4,fp,8
  207228:	2800941e 	bne	r5,zero,20747c <_realloc_r+0x35c>
  20722c:	30800530 	cmpltui	r2,r6,20
  207230:	1000db1e 	bne	r2,zero,2075a0 <_realloc_r+0x480>
  207234:	80c00017 	ldw	r3,0(r16)
  207238:	30800728 	cmpgeui	r2,r6,28
  20723c:	e0c00215 	stw	r3,8(fp)
  207240:	80c00117 	ldw	r3,4(r16)
  207244:	e0c00315 	stw	r3,12(fp)
  207248:	1000d71e 	bne	r2,zero,2075a8 <_realloc_r+0x488>
  20724c:	84000204 	addi	r16,r16,8
  207250:	e0800404 	addi	r2,fp,16
  207254:	80c00017 	ldw	r3,0(r16)
  207258:	b029883a 	mov	r20,r22
  20725c:	e02b883a 	mov	r21,fp
  207260:	10c00015 	stw	r3,0(r2)
  207264:	80c00117 	ldw	r3,4(r16)
  207268:	10c00115 	stw	r3,4(r2)
  20726c:	80c00217 	ldw	r3,8(r16)
  207270:	2021883a 	mov	r16,r4
  207274:	10c00215 	stw	r3,8(r2)
  207278:	a9800117 	ldw	r6,4(r21)
  20727c:	a447c83a 	sub	r3,r20,r17
  207280:	19000430 	cmpltui	r4,r3,16
  207284:	3180004c 	andi	r6,r6,1
  207288:	ad05883a 	add	r2,r21,r20
  20728c:	20004926 	beq	r4,zero,2073b4 <_realloc_r+0x294>
  207290:	a18cb03a 	or	r6,r20,r6
  207294:	a9800115 	stw	r6,4(r21)
  207298:	10c00117 	ldw	r3,4(r2)
  20729c:	18c00054 	ori	r3,r3,1
  2072a0:	10c00115 	stw	r3,4(r2)
  2072a4:	9809883a 	mov	r4,r19
  2072a8:	020db0c0 	call	20db0c <__malloc_unlock>
  2072ac:	8025883a 	mov	r18,r16
  2072b0:	00000606 	br	2072cc <_realloc_r+0x1ac>
  2072b4:	04400404 	movi	r17,16
  2072b8:	00c00404 	movi	r3,16
  2072bc:	8cbfb02e 	bgeu	r17,r18,207180 <_realloc_r+0x60>
  2072c0:	00800304 	movi	r2,12
  2072c4:	98800015 	stw	r2,0(r19)
  2072c8:	0025883a 	mov	r18,zero
  2072cc:	9005883a 	mov	r2,r18
  2072d0:	dfc00917 	ldw	ra,36(sp)
  2072d4:	df000817 	ldw	fp,32(sp)
  2072d8:	ddc00717 	ldw	r23,28(sp)
  2072dc:	dd800617 	ldw	r22,24(sp)
  2072e0:	dd400517 	ldw	r21,20(sp)
  2072e4:	dd000417 	ldw	r20,16(sp)
  2072e8:	dcc00317 	ldw	r19,12(sp)
  2072ec:	dc800217 	ldw	r18,8(sp)
  2072f0:	dc400117 	ldw	r17,4(sp)
  2072f4:	dc000017 	ldw	r16,0(sp)
  2072f8:	dec00a04 	addi	sp,sp,40
  2072fc:	f800283a 	ret
  207300:	1080004c 	andi	r2,r2,1
  207304:	10006826 	beq	r2,zero,2074a8 <_realloc_r+0x388>
  207308:	900b883a 	mov	r5,r18
  20730c:	9809883a 	mov	r4,r19
  207310:	02053640 	call	205364 <_malloc_r>
  207314:	1025883a 	mov	r18,r2
  207318:	10001626 	beq	r2,zero,207374 <_realloc_r+0x254>
  20731c:	80bfff17 	ldw	r2,-4(r16)
  207320:	013fff84 	movi	r4,-2
  207324:	90fffe04 	addi	r3,r18,-8
  207328:	1104703a 	and	r2,r2,r4
  20732c:	a885883a 	add	r2,r21,r2
  207330:	10c05826 	beq	r2,r3,207494 <_realloc_r+0x374>
  207334:	a1bfff04 	addi	r6,r20,-4
  207338:	30800968 	cmpgeui	r2,r6,37
  20733c:	1000651e 	bne	r2,zero,2074d4 <_realloc_r+0x3b4>
  207340:	30800530 	cmpltui	r2,r6,20
  207344:	10003826 	beq	r2,zero,207428 <_realloc_r+0x308>
  207348:	9005883a 	mov	r2,r18
  20734c:	8007883a 	mov	r3,r16
  207350:	19000017 	ldw	r4,0(r3)
  207354:	11000015 	stw	r4,0(r2)
  207358:	19000117 	ldw	r4,4(r3)
  20735c:	11000115 	stw	r4,4(r2)
  207360:	18c00217 	ldw	r3,8(r3)
  207364:	10c00215 	stw	r3,8(r2)
  207368:	800b883a 	mov	r5,r16
  20736c:	9809883a 	mov	r4,r19
  207370:	020482c0 	call	20482c <_free_r>
  207374:	9809883a 	mov	r4,r19
  207378:	020db0c0 	call	20db0c <__malloc_unlock>
  20737c:	003fd306 	br	2072cc <_realloc_r+0x1ac>
  207380:	300b883a 	mov	r5,r6
  207384:	dfc00917 	ldw	ra,36(sp)
  207388:	df000817 	ldw	fp,32(sp)
  20738c:	ddc00717 	ldw	r23,28(sp)
  207390:	dd800617 	ldw	r22,24(sp)
  207394:	dd400517 	ldw	r21,20(sp)
  207398:	dd000417 	ldw	r20,16(sp)
  20739c:	dcc00317 	ldw	r19,12(sp)
  2073a0:	dc800217 	ldw	r18,8(sp)
  2073a4:	dc400117 	ldw	r17,4(sp)
  2073a8:	dc000017 	ldw	r16,0(sp)
  2073ac:	dec00a04 	addi	sp,sp,40
  2073b0:	02053641 	jmpi	205364 <_malloc_r>
  2073b4:	344cb03a 	or	r6,r6,r17
  2073b8:	a9800115 	stw	r6,4(r21)
  2073bc:	ac4b883a 	add	r5,r21,r17
  2073c0:	18c00054 	ori	r3,r3,1
  2073c4:	28c00115 	stw	r3,4(r5)
  2073c8:	10c00117 	ldw	r3,4(r2)
  2073cc:	29400204 	addi	r5,r5,8
  2073d0:	9809883a 	mov	r4,r19
  2073d4:	18c00054 	ori	r3,r3,1
  2073d8:	10c00115 	stw	r3,4(r2)
  2073dc:	020482c0 	call	20482c <_free_r>
  2073e0:	003fb006 	br	2072a4 <_realloc_r+0x184>
  2073e4:	2148703a 	and	r4,r4,r5
  2073e8:	a10b883a 	add	r5,r20,r4
  2073ec:	89800404 	addi	r6,r17,16
  2073f0:	29bf7716 	blt	r5,r6,2071d0 <_realloc_r+0xb0>
  2073f4:	ac6b883a 	add	r21,r21,r17
  2073f8:	2c45c83a 	sub	r2,r5,r17
  2073fc:	bd400215 	stw	r21,8(r23)
  207400:	10800054 	ori	r2,r2,1
  207404:	a8800115 	stw	r2,4(r21)
  207408:	80bfff17 	ldw	r2,-4(r16)
  20740c:	9809883a 	mov	r4,r19
  207410:	8025883a 	mov	r18,r16
  207414:	1080004c 	andi	r2,r2,1
  207418:	1462b03a 	or	r17,r2,r17
  20741c:	847fff15 	stw	r17,-4(r16)
  207420:	020db0c0 	call	20db0c <__malloc_unlock>
  207424:	003fa906 	br	2072cc <_realloc_r+0x1ac>
  207428:	80c00017 	ldw	r3,0(r16)
  20742c:	30800728 	cmpgeui	r2,r6,28
  207430:	90c00015 	stw	r3,0(r18)
  207434:	80c00117 	ldw	r3,4(r16)
  207438:	90c00115 	stw	r3,4(r18)
  20743c:	10004f1e 	bne	r2,zero,20757c <_realloc_r+0x45c>
  207440:	80c00204 	addi	r3,r16,8
  207444:	90800204 	addi	r2,r18,8
  207448:	003fc106 	br	207350 <_realloc_r+0x230>
  20744c:	38800317 	ldw	r2,12(r7)
  207450:	38c00217 	ldw	r3,8(r7)
  207454:	a1bfff04 	addi	r6,r20,-4
  207458:	31400968 	cmpgeui	r5,r6,37
  20745c:	18800315 	stw	r2,12(r3)
  207460:	10c00215 	stw	r3,8(r2)
  207464:	e0c00217 	ldw	r3,8(fp)
  207468:	e0800317 	ldw	r2,12(fp)
  20746c:	e1000204 	addi	r4,fp,8
  207470:	18800315 	stw	r2,12(r3)
  207474:	10c00215 	stw	r3,8(r2)
  207478:	283f6c26 	beq	r5,zero,20722c <_realloc_r+0x10c>
  20747c:	800b883a 	mov	r5,r16
  207480:	0205d140 	call	205d14 <memmove>
  207484:	1021883a 	mov	r16,r2
  207488:	b029883a 	mov	r20,r22
  20748c:	e02b883a 	mov	r21,fp
  207490:	003f7906 	br	207278 <_realloc_r+0x158>
  207494:	90bfff17 	ldw	r2,-4(r18)
  207498:	00ffff04 	movi	r3,-4
  20749c:	10c4703a 	and	r2,r2,r3
  2074a0:	a0a9883a 	add	r20,r20,r2
  2074a4:	003f7406 	br	207278 <_realloc_r+0x158>
  2074a8:	873ffe17 	ldw	fp,-8(r16)
  2074ac:	af39c83a 	sub	fp,r21,fp
  2074b0:	e0800117 	ldw	r2,4(fp)
  2074b4:	114a703a 	and	r5,r2,r5
  2074b8:	003f5106 	br	207200 <_realloc_r+0xe0>
  2074bc:	38800317 	ldw	r2,12(r7)
  2074c0:	38c00217 	ldw	r3,8(r7)
  2074c4:	2829883a 	mov	r20,r5
  2074c8:	18800315 	stw	r2,12(r3)
  2074cc:	10c00215 	stw	r3,8(r2)
  2074d0:	003f6906 	br	207278 <_realloc_r+0x158>
  2074d4:	800b883a 	mov	r5,r16
  2074d8:	9009883a 	mov	r4,r18
  2074dc:	0205d140 	call	205d14 <memmove>
  2074e0:	003fa106 	br	207368 <_realloc_r+0x248>
  2074e4:	88800404 	addi	r2,r17,16
  2074e8:	b0bf4516 	blt	r22,r2,207200 <_realloc_r+0xe0>
  2074ec:	e0800317 	ldw	r2,12(fp)
  2074f0:	e0c00217 	ldw	r3,8(fp)
  2074f4:	a1bfff04 	addi	r6,r20,-4
  2074f8:	31000968 	cmpgeui	r4,r6,37
  2074fc:	18800315 	stw	r2,12(r3)
  207500:	10c00215 	stw	r3,8(r2)
  207504:	e4800204 	addi	r18,fp,8
  207508:	2000391e 	bne	r4,zero,2075f0 <_realloc_r+0x4d0>
  20750c:	30800530 	cmpltui	r2,r6,20
  207510:	1000351e 	bne	r2,zero,2075e8 <_realloc_r+0x4c8>
  207514:	80c00017 	ldw	r3,0(r16)
  207518:	30800728 	cmpgeui	r2,r6,28
  20751c:	e0c00215 	stw	r3,8(fp)
  207520:	80c00117 	ldw	r3,4(r16)
  207524:	e0c00315 	stw	r3,12(fp)
  207528:	10003c1e 	bne	r2,zero,20761c <_realloc_r+0x4fc>
  20752c:	84000204 	addi	r16,r16,8
  207530:	e0800404 	addi	r2,fp,16
  207534:	80c00017 	ldw	r3,0(r16)
  207538:	10c00015 	stw	r3,0(r2)
  20753c:	80c00117 	ldw	r3,4(r16)
  207540:	10c00115 	stw	r3,4(r2)
  207544:	80c00217 	ldw	r3,8(r16)
  207548:	10c00215 	stw	r3,8(r2)
  20754c:	e447883a 	add	r3,fp,r17
  207550:	b445c83a 	sub	r2,r22,r17
  207554:	b8c00215 	stw	r3,8(r23)
  207558:	10800054 	ori	r2,r2,1
  20755c:	18800115 	stw	r2,4(r3)
  207560:	e0800117 	ldw	r2,4(fp)
  207564:	9809883a 	mov	r4,r19
  207568:	1080004c 	andi	r2,r2,1
  20756c:	1462b03a 	or	r17,r2,r17
  207570:	e4400115 	stw	r17,4(fp)
  207574:	020db0c0 	call	20db0c <__malloc_unlock>
  207578:	003f5406 	br	2072cc <_realloc_r+0x1ac>
  20757c:	80800217 	ldw	r2,8(r16)
  207580:	31800920 	cmpeqi	r6,r6,36
  207584:	90800215 	stw	r2,8(r18)
  207588:	80800317 	ldw	r2,12(r16)
  20758c:	90800315 	stw	r2,12(r18)
  207590:	30000e1e 	bne	r6,zero,2075cc <_realloc_r+0x4ac>
  207594:	80c00404 	addi	r3,r16,16
  207598:	90800404 	addi	r2,r18,16
  20759c:	003f6c06 	br	207350 <_realloc_r+0x230>
  2075a0:	2005883a 	mov	r2,r4
  2075a4:	003f2b06 	br	207254 <_realloc_r+0x134>
  2075a8:	80800217 	ldw	r2,8(r16)
  2075ac:	31800920 	cmpeqi	r6,r6,36
  2075b0:	e0800415 	stw	r2,16(fp)
  2075b4:	80800317 	ldw	r2,12(r16)
  2075b8:	e0800515 	stw	r2,20(fp)
  2075bc:	3000101e 	bne	r6,zero,207600 <_realloc_r+0x4e0>
  2075c0:	84000404 	addi	r16,r16,16
  2075c4:	e0800604 	addi	r2,fp,24
  2075c8:	003f2206 	br	207254 <_realloc_r+0x134>
  2075cc:	81000417 	ldw	r4,16(r16)
  2075d0:	80c00604 	addi	r3,r16,24
  2075d4:	90800604 	addi	r2,r18,24
  2075d8:	91000415 	stw	r4,16(r18)
  2075dc:	81000517 	ldw	r4,20(r16)
  2075e0:	91000515 	stw	r4,20(r18)
  2075e4:	003f5a06 	br	207350 <_realloc_r+0x230>
  2075e8:	9005883a 	mov	r2,r18
  2075ec:	003fd106 	br	207534 <_realloc_r+0x414>
  2075f0:	800b883a 	mov	r5,r16
  2075f4:	9009883a 	mov	r4,r18
  2075f8:	0205d140 	call	205d14 <memmove>
  2075fc:	003fd306 	br	20754c <_realloc_r+0x42c>
  207600:	80c00417 	ldw	r3,16(r16)
  207604:	84000604 	addi	r16,r16,24
  207608:	e0800804 	addi	r2,fp,32
  20760c:	e0c00615 	stw	r3,24(fp)
  207610:	80ffff17 	ldw	r3,-4(r16)
  207614:	e0c00715 	stw	r3,28(fp)
  207618:	003f0e06 	br	207254 <_realloc_r+0x134>
  20761c:	80800217 	ldw	r2,8(r16)
  207620:	31800920 	cmpeqi	r6,r6,36
  207624:	e0800415 	stw	r2,16(fp)
  207628:	80800317 	ldw	r2,12(r16)
  20762c:	e0800515 	stw	r2,20(fp)
  207630:	3000031e 	bne	r6,zero,207640 <_realloc_r+0x520>
  207634:	84000404 	addi	r16,r16,16
  207638:	e0800604 	addi	r2,fp,24
  20763c:	003fbd06 	br	207534 <_realloc_r+0x414>
  207640:	80c00417 	ldw	r3,16(r16)
  207644:	84000604 	addi	r16,r16,24
  207648:	e0800804 	addi	r2,fp,32
  20764c:	e0c00615 	stw	r3,24(fp)
  207650:	80ffff17 	ldw	r3,-4(r16)
  207654:	e0c00715 	stw	r3,28(fp)
  207658:	003fb606 	br	207534 <_realloc_r+0x414>

0020765c <_sbrk_r>:
  20765c:	defffe04 	addi	sp,sp,-8
  207660:	dc000015 	stw	r16,0(sp)
  207664:	00800874 	movhi	r2,33
  207668:	2021883a 	mov	r16,r4
  20766c:	2809883a 	mov	r4,r5
  207670:	dfc00115 	stw	ra,4(sp)
  207674:	100eb715 	stw	zero,15068(r2)
  207678:	020dce40 	call	20dce4 <sbrk>
  20767c:	10ffffd8 	cmpnei	r3,r2,-1
  207680:	18000426 	beq	r3,zero,207694 <_sbrk_r+0x38>
  207684:	dfc00117 	ldw	ra,4(sp)
  207688:	dc000017 	ldw	r16,0(sp)
  20768c:	dec00204 	addi	sp,sp,8
  207690:	f800283a 	ret
  207694:	00c00874 	movhi	r3,33
  207698:	18ceb717 	ldw	r3,15068(r3)
  20769c:	183ff926 	beq	r3,zero,207684 <_sbrk_r+0x28>
  2076a0:	80c00015 	stw	r3,0(r16)
  2076a4:	dfc00117 	ldw	ra,4(sp)
  2076a8:	dc000017 	ldw	r16,0(sp)
  2076ac:	dec00204 	addi	sp,sp,8
  2076b0:	f800283a 	ret

002076b4 <__sread>:
  2076b4:	defffe04 	addi	sp,sp,-8
  2076b8:	dc000015 	stw	r16,0(sp)
  2076bc:	2821883a 	mov	r16,r5
  2076c0:	2940038f 	ldh	r5,14(r5)
  2076c4:	dfc00115 	stw	ra,4(sp)
  2076c8:	02095280 	call	209528 <_read_r>
  2076cc:	10000716 	blt	r2,zero,2076ec <__sread+0x38>
  2076d0:	80c01417 	ldw	r3,80(r16)
  2076d4:	1887883a 	add	r3,r3,r2
  2076d8:	80c01415 	stw	r3,80(r16)
  2076dc:	dfc00117 	ldw	ra,4(sp)
  2076e0:	dc000017 	ldw	r16,0(sp)
  2076e4:	dec00204 	addi	sp,sp,8
  2076e8:	f800283a 	ret
  2076ec:	80c0030b 	ldhu	r3,12(r16)
  2076f0:	18fbffcc 	andi	r3,r3,61439
  2076f4:	80c0030d 	sth	r3,12(r16)
  2076f8:	dfc00117 	ldw	ra,4(sp)
  2076fc:	dc000017 	ldw	r16,0(sp)
  207700:	dec00204 	addi	sp,sp,8
  207704:	f800283a 	ret

00207708 <__seofread>:
  207708:	0005883a 	mov	r2,zero
  20770c:	f800283a 	ret

00207710 <__swrite>:
  207710:	2880030b 	ldhu	r2,12(r5)
  207714:	defffb04 	addi	sp,sp,-20
  207718:	dcc00315 	stw	r19,12(sp)
  20771c:	dc800215 	stw	r18,8(sp)
  207720:	dc400115 	stw	r17,4(sp)
  207724:	dc000015 	stw	r16,0(sp)
  207728:	dfc00415 	stw	ra,16(sp)
  20772c:	10c0400c 	andi	r3,r2,256
  207730:	2821883a 	mov	r16,r5
  207734:	2023883a 	mov	r17,r4
  207738:	3025883a 	mov	r18,r6
  20773c:	3827883a 	mov	r19,r7
  207740:	18000d1e 	bne	r3,zero,207778 <__swrite+0x68>
  207744:	8140038f 	ldh	r5,14(r16)
  207748:	10bbffcc 	andi	r2,r2,61439
  20774c:	980f883a 	mov	r7,r19
  207750:	900d883a 	mov	r6,r18
  207754:	8809883a 	mov	r4,r17
  207758:	8080030d 	sth	r2,12(r16)
  20775c:	dfc00417 	ldw	ra,16(sp)
  207760:	dcc00317 	ldw	r19,12(sp)
  207764:	dc800217 	ldw	r18,8(sp)
  207768:	dc400117 	ldw	r17,4(sp)
  20776c:	dc000017 	ldw	r16,0(sp)
  207770:	dec00504 	addi	sp,sp,20
  207774:	0208c3c1 	jmpi	208c3c <_write_r>
  207778:	2940038f 	ldh	r5,14(r5)
  20777c:	01c00084 	movi	r7,2
  207780:	000d883a 	mov	r6,zero
  207784:	02094740 	call	209474 <_lseek_r>
  207788:	8080030b 	ldhu	r2,12(r16)
  20778c:	003fed06 	br	207744 <__swrite+0x34>

00207790 <__sseek>:
  207790:	defffe04 	addi	sp,sp,-8
  207794:	dc000015 	stw	r16,0(sp)
  207798:	2821883a 	mov	r16,r5
  20779c:	2940038f 	ldh	r5,14(r5)
  2077a0:	dfc00115 	stw	ra,4(sp)
  2077a4:	02094740 	call	209474 <_lseek_r>
  2077a8:	10ffffd8 	cmpnei	r3,r2,-1
  2077ac:	18000826 	beq	r3,zero,2077d0 <__sseek+0x40>
  2077b0:	80c0030b 	ldhu	r3,12(r16)
  2077b4:	80801415 	stw	r2,80(r16)
  2077b8:	18c40014 	ori	r3,r3,4096
  2077bc:	80c0030d 	sth	r3,12(r16)
  2077c0:	dfc00117 	ldw	ra,4(sp)
  2077c4:	dc000017 	ldw	r16,0(sp)
  2077c8:	dec00204 	addi	sp,sp,8
  2077cc:	f800283a 	ret
  2077d0:	80c0030b 	ldhu	r3,12(r16)
  2077d4:	18fbffcc 	andi	r3,r3,61439
  2077d8:	80c0030d 	sth	r3,12(r16)
  2077dc:	dfc00117 	ldw	ra,4(sp)
  2077e0:	dc000017 	ldw	r16,0(sp)
  2077e4:	dec00204 	addi	sp,sp,8
  2077e8:	f800283a 	ret

002077ec <__sclose>:
  2077ec:	2940038f 	ldh	r5,14(r5)
  2077f0:	0208ca01 	jmpi	208ca0 <_close_r>

002077f4 <__sprint_r.part.0>:
  2077f4:	28801917 	ldw	r2,100(r5)
  2077f8:	defff604 	addi	sp,sp,-40
  2077fc:	dcc00315 	stw	r19,12(sp)
  207800:	dfc00915 	stw	ra,36(sp)
  207804:	df000815 	stw	fp,32(sp)
  207808:	ddc00715 	stw	r23,28(sp)
  20780c:	dd800615 	stw	r22,24(sp)
  207810:	dd400515 	stw	r21,20(sp)
  207814:	dd000415 	stw	r20,16(sp)
  207818:	dc800215 	stw	r18,8(sp)
  20781c:	dc400115 	stw	r17,4(sp)
  207820:	dc000015 	stw	r16,0(sp)
  207824:	1088000c 	andi	r2,r2,8192
  207828:	3027883a 	mov	r19,r6
  20782c:	10002c26 	beq	r2,zero,2078e0 <__sprint_r.part.0+0xec>
  207830:	30800217 	ldw	r2,8(r6)
  207834:	35000017 	ldw	r20,0(r6)
  207838:	2821883a 	mov	r16,r5
  20783c:	2023883a 	mov	r17,r4
  207840:	05bfff04 	movi	r22,-4
  207844:	10002426 	beq	r2,zero,2078d8 <__sprint_r.part.0+0xe4>
  207848:	a5400117 	ldw	r21,4(r20)
  20784c:	a5c00017 	ldw	r23,0(r20)
  207850:	a824d0ba 	srli	r18,r21,2
  207854:	90001b26 	beq	r18,zero,2078c4 <__sprint_r.part.0+0xd0>
  207858:	0039883a 	mov	fp,zero
  20785c:	00000206 	br	207868 <__sprint_r.part.0+0x74>
  207860:	bdc00104 	addi	r23,r23,4
  207864:	97001626 	beq	r18,fp,2078c0 <__sprint_r.part.0+0xcc>
  207868:	b9400017 	ldw	r5,0(r23)
  20786c:	800d883a 	mov	r6,r16
  207870:	8809883a 	mov	r4,r17
  207874:	020922c0 	call	20922c <_fputwc_r>
  207878:	10bfffe0 	cmpeqi	r2,r2,-1
  20787c:	e7000044 	addi	fp,fp,1
  207880:	103ff726 	beq	r2,zero,207860 <__sprint_r.part.0+0x6c>
  207884:	00bfffc4 	movi	r2,-1
  207888:	98000215 	stw	zero,8(r19)
  20788c:	98000115 	stw	zero,4(r19)
  207890:	dfc00917 	ldw	ra,36(sp)
  207894:	df000817 	ldw	fp,32(sp)
  207898:	ddc00717 	ldw	r23,28(sp)
  20789c:	dd800617 	ldw	r22,24(sp)
  2078a0:	dd400517 	ldw	r21,20(sp)
  2078a4:	dd000417 	ldw	r20,16(sp)
  2078a8:	dcc00317 	ldw	r19,12(sp)
  2078ac:	dc800217 	ldw	r18,8(sp)
  2078b0:	dc400117 	ldw	r17,4(sp)
  2078b4:	dc000017 	ldw	r16,0(sp)
  2078b8:	dec00a04 	addi	sp,sp,40
  2078bc:	f800283a 	ret
  2078c0:	98800217 	ldw	r2,8(r19)
  2078c4:	adaa703a 	and	r21,r21,r22
  2078c8:	1545c83a 	sub	r2,r2,r21
  2078cc:	98800215 	stw	r2,8(r19)
  2078d0:	a5000204 	addi	r20,r20,8
  2078d4:	103fdc1e 	bne	r2,zero,207848 <__sprint_r.part.0+0x54>
  2078d8:	0005883a 	mov	r2,zero
  2078dc:	003fea06 	br	207888 <__sprint_r.part.0+0x94>
  2078e0:	0204b280 	call	204b28 <__sfvwrite_r>
  2078e4:	003fe806 	br	207888 <__sprint_r.part.0+0x94>

002078e8 <__sprint_r>:
  2078e8:	30c00217 	ldw	r3,8(r6)
  2078ec:	18000126 	beq	r3,zero,2078f4 <__sprint_r+0xc>
  2078f0:	02077f41 	jmpi	2077f4 <__sprint_r.part.0>
  2078f4:	30000115 	stw	zero,4(r6)
  2078f8:	0005883a 	mov	r2,zero
  2078fc:	f800283a 	ret

00207900 <___vfiprintf_internal_r>:
  207900:	deffcf04 	addi	sp,sp,-196
  207904:	dd802d15 	stw	r22,180(sp)
  207908:	dd402c15 	stw	r21,176(sp)
  20790c:	dd002b15 	stw	r20,172(sp)
  207910:	dfc03015 	stw	ra,192(sp)
  207914:	df002f15 	stw	fp,188(sp)
  207918:	ddc02e15 	stw	r23,184(sp)
  20791c:	dcc02a15 	stw	r19,168(sp)
  207920:	dc802915 	stw	r18,164(sp)
  207924:	dc402815 	stw	r17,160(sp)
  207928:	dc002715 	stw	r16,156(sp)
  20792c:	d9c00415 	stw	r7,16(sp)
  207930:	202d883a 	mov	r22,r4
  207934:	282b883a 	mov	r21,r5
  207938:	3029883a 	mov	r20,r6
  20793c:	20000226 	beq	r4,zero,207948 <___vfiprintf_internal_r+0x48>
  207940:	20800e17 	ldw	r2,56(r4)
  207944:	1001ba26 	beq	r2,zero,208030 <___vfiprintf_internal_r+0x730>
  207948:	a880030b 	ldhu	r2,12(r21)
  20794c:	10c8000c 	andi	r3,r2,8192
  207950:	1800061e 	bne	r3,zero,20796c <___vfiprintf_internal_r+0x6c>
  207954:	a8c01917 	ldw	r3,100(r21)
  207958:	0137ffc4 	movi	r4,-8193
  20795c:	10880014 	ori	r2,r2,8192
  207960:	1906703a 	and	r3,r3,r4
  207964:	a880030d 	sth	r2,12(r21)
  207968:	a8c01915 	stw	r3,100(r21)
  20796c:	10c0020c 	andi	r3,r2,8
  207970:	18010526 	beq	r3,zero,207d88 <___vfiprintf_internal_r+0x488>
  207974:	a8c00417 	ldw	r3,16(r21)
  207978:	18010326 	beq	r3,zero,207d88 <___vfiprintf_internal_r+0x488>
  20797c:	1080068c 	andi	r2,r2,26
  207980:	10800298 	cmpnei	r2,r2,10
  207984:	10010826 	beq	r2,zero,207da8 <___vfiprintf_internal_r+0x4a8>
  207988:	dc801704 	addi	r18,sp,92
  20798c:	dc800a15 	stw	r18,40(sp)
  207990:	d8000c15 	stw	zero,48(sp)
  207994:	d8000b15 	stw	zero,44(sp)
  207998:	9021883a 	mov	r16,r18
  20799c:	d8000515 	stw	zero,20(sp)
  2079a0:	d8000115 	stw	zero,4(sp)
  2079a4:	a0800007 	ldb	r2,0(r20)
  2079a8:	1000e526 	beq	r2,zero,207d40 <___vfiprintf_internal_r+0x440>
  2079ac:	a023883a 	mov	r17,r20
  2079b0:	00000306 	br	2079c0 <___vfiprintf_internal_r+0xc0>
  2079b4:	88800047 	ldb	r2,1(r17)
  2079b8:	8c400044 	addi	r17,r17,1
  2079bc:	10013026 	beq	r2,zero,207e80 <___vfiprintf_internal_r+0x580>
  2079c0:	10800958 	cmpnei	r2,r2,37
  2079c4:	103ffb1e 	bne	r2,zero,2079b4 <___vfiprintf_internal_r+0xb4>
  2079c8:	8d27c83a 	sub	r19,r17,r20
  2079cc:	8d012e1e 	bne	r17,r20,207e88 <___vfiprintf_internal_r+0x588>
  2079d0:	88800003 	ldbu	r2,0(r17)
  2079d4:	10803fcc 	andi	r2,r2,255
  2079d8:	1080201c 	xori	r2,r2,128
  2079dc:	10bfe004 	addi	r2,r2,-128
  2079e0:	1000d726 	beq	r2,zero,207d40 <___vfiprintf_internal_r+0x440>
  2079e4:	88800047 	ldb	r2,1(r17)
  2079e8:	8d000044 	addi	r20,r17,1
  2079ec:	d8000945 	stb	zero,37(sp)
  2079f0:	000b883a 	mov	r5,zero
  2079f4:	000d883a 	mov	r6,zero
  2079f8:	023fffc4 	movi	r8,-1
  2079fc:	0023883a 	mov	r17,zero
  207a00:	001b883a 	mov	r13,zero
  207a04:	a5000044 	addi	r20,r20,1
  207a08:	10fff804 	addi	r3,r2,-32
  207a0c:	19001668 	cmpgeui	r4,r3,89
  207a10:	20006c1e 	bne	r4,zero,207bc4 <___vfiprintf_internal_r+0x2c4>
  207a14:	180690ba 	slli	r3,r3,2
  207a18:	01000834 	movhi	r4,32
  207a1c:	1909883a 	add	r4,r3,r4
  207a20:	20de8a17 	ldw	r3,31272(r4)
  207a24:	1800683a 	jmp	r3
  207a28:	00208250 	cmplti	zero,zero,-32247
  207a2c:	00207bc4 	movi	zero,-32273
  207a30:	00207bc4 	movi	zero,-32273
  207a34:	00208244 	movi	zero,-32247
  207a38:	00207bc4 	movi	zero,-32273
  207a3c:	00207bc4 	movi	zero,-32273
  207a40:	00207bc4 	movi	zero,-32273
  207a44:	00207bc4 	movi	zero,-32273
  207a48:	00207bc4 	movi	zero,-32273
  207a4c:	00207bc4 	movi	zero,-32273
  207a50:	002080ac 	andhi	zero,zero,33282
  207a54:	00208234 	movhi	zero,33288
  207a58:	00207bc4 	movi	zero,-32273
  207a5c:	002080c4 	movi	zero,-32253
  207a60:	002080d0 	cmplti	zero,zero,-32253
  207a64:	00207bc4 	movi	zero,-32273
  207a68:	00208228 	cmpgeui	zero,zero,33288
  207a6c:	00207b8c 	andi	zero,zero,33262
  207a70:	00207b8c 	andi	zero,zero,33262
  207a74:	00207b8c 	andi	zero,zero,33262
  207a78:	00207b8c 	andi	zero,zero,33262
  207a7c:	00207b8c 	andi	zero,zero,33262
  207a80:	00207b8c 	andi	zero,zero,33262
  207a84:	00207b8c 	andi	zero,zero,33262
  207a88:	00207b8c 	andi	zero,zero,33262
  207a8c:	00207b8c 	andi	zero,zero,33262
  207a90:	00207bc4 	movi	zero,-32273
  207a94:	00207bc4 	movi	zero,-32273
  207a98:	00207bc4 	movi	zero,-32273
  207a9c:	00207bc4 	movi	zero,-32273
  207aa0:	00207bc4 	movi	zero,-32273
  207aa4:	00207bc4 	movi	zero,-32273
  207aa8:	00207bc4 	movi	zero,-32273
  207aac:	00207bc4 	movi	zero,-32273
  207ab0:	00207bc4 	movi	zero,-32273
  207ab4:	00207bc4 	movi	zero,-32273
  207ab8:	0020811c 	xori	zero,zero,33284
  207abc:	00207bc4 	movi	zero,-32273
  207ac0:	00207bc4 	movi	zero,-32273
  207ac4:	00207bc4 	movi	zero,-32273
  207ac8:	00207bc4 	movi	zero,-32273
  207acc:	00207bc4 	movi	zero,-32273
  207ad0:	00207bc4 	movi	zero,-32273
  207ad4:	00207bc4 	movi	zero,-32273
  207ad8:	00207bc4 	movi	zero,-32273
  207adc:	00207bc4 	movi	zero,-32273
  207ae0:	00207bc4 	movi	zero,-32273
  207ae4:	00207e18 	cmpnei	zero,zero,-32264
  207ae8:	00207bc4 	movi	zero,-32273
  207aec:	00207bc4 	movi	zero,-32273
  207af0:	00207bc4 	movi	zero,-32273
  207af4:	00207bc4 	movi	zero,-32273
  207af8:	00207bc4 	movi	zero,-32273
  207afc:	00207df0 	cmpltui	zero,zero,33271
  207b00:	00207bc4 	movi	zero,-32273
  207b04:	00207bc4 	movi	zero,-32273
  207b08:	00208320 	cmpeqi	zero,zero,-32244
  207b0c:	00207bc4 	movi	zero,-32273
  207b10:	00207bc4 	movi	zero,-32273
  207b14:	00207bc4 	movi	zero,-32273
  207b18:	00207bc4 	movi	zero,-32273
  207b1c:	00207bc4 	movi	zero,-32273
  207b20:	00207bc4 	movi	zero,-32273
  207b24:	00207bc4 	movi	zero,-32273
  207b28:	00207bc4 	movi	zero,-32273
  207b2c:	00207bc4 	movi	zero,-32273
  207b30:	00207bc4 	movi	zero,-32273
  207b34:	002082f8 	rdprs	zero,zero,-32245
  207b38:	00208038 	rdprs	zero,zero,-32256
  207b3c:	00207bc4 	movi	zero,-32273
  207b40:	00207bc4 	movi	zero,-32273
  207b44:	00207bc4 	movi	zero,-32273
  207b48:	00208298 	cmpnei	zero,zero,-32246
  207b4c:	00208038 	rdprs	zero,zero,-32256
  207b50:	00207bc4 	movi	zero,-32273
  207b54:	00207bc4 	movi	zero,-32273
  207b58:	002082e4 	muli	zero,zero,-32245
  207b5c:	00207bc4 	movi	zero,-32273
  207b60:	002082a4 	muli	zero,zero,-32246
  207b64:	00207e1c 	xori	zero,zero,33272
  207b68:	00208414 	movui	zero,33296
  207b6c:	00208408 	cmpgei	zero,zero,-32240
  207b70:	00207bc4 	movi	zero,-32273
  207b74:	002083b0 	cmpltui	zero,zero,33294
  207b78:	00207bc4 	movi	zero,-32273
  207b7c:	00207df4 	movhi	zero,33271
  207b80:	00207bc4 	movi	zero,-32273
  207b84:	00207bc4 	movi	zero,-32273
  207b88:	00208368 	cmpgeui	zero,zero,33293
  207b8c:	0023883a 	mov	r17,zero
  207b90:	113ff404 	addi	r4,r2,-48
  207b94:	880690ba 	slli	r3,r17,2
  207b98:	a0800007 	ldb	r2,0(r20)
  207b9c:	a5000044 	addi	r20,r20,1
  207ba0:	1c63883a 	add	r17,r3,r17
  207ba4:	8c63883a 	add	r17,r17,r17
  207ba8:	2463883a 	add	r17,r4,r17
  207bac:	113ff404 	addi	r4,r2,-48
  207bb0:	20c002b0 	cmpltui	r3,r4,10
  207bb4:	183ff71e 	bne	r3,zero,207b94 <___vfiprintf_internal_r+0x294>
  207bb8:	10fff804 	addi	r3,r2,-32
  207bbc:	19001668 	cmpgeui	r4,r3,89
  207bc0:	203f9426 	beq	r4,zero,207a14 <___vfiprintf_internal_r+0x114>
  207bc4:	29403fcc 	andi	r5,r5,255
  207bc8:	2803b61e 	bne	r5,zero,208aa4 <___vfiprintf_internal_r+0x11a4>
  207bcc:	10005c26 	beq	r2,zero,207d40 <___vfiprintf_internal_r+0x440>
  207bd0:	d8800d05 	stb	r2,52(sp)
  207bd4:	d8000945 	stb	zero,37(sp)
  207bd8:	05c00044 	movi	r23,1
  207bdc:	07000044 	movi	fp,1
  207be0:	dcc00d04 	addi	r19,sp,52
  207be4:	db400015 	stw	r13,0(sp)
  207be8:	0011883a 	mov	r8,zero
  207bec:	d8800017 	ldw	r2,0(sp)
  207bf0:	1380008c 	andi	r14,r2,2
  207bf4:	70000126 	beq	r14,zero,207bfc <___vfiprintf_internal_r+0x2fc>
  207bf8:	bdc00084 	addi	r23,r23,2
  207bfc:	d8800017 	ldw	r2,0(sp)
  207c00:	d9000b17 	ldw	r4,44(sp)
  207c04:	1340210c 	andi	r13,r2,132
  207c08:	21800044 	addi	r6,r4,1
  207c0c:	d8800c17 	ldw	r2,48(sp)
  207c10:	300b883a 	mov	r5,r6
  207c14:	6800021e 	bne	r13,zero,207c20 <___vfiprintf_internal_r+0x320>
  207c18:	8dc7c83a 	sub	r3,r17,r23
  207c1c:	00c2e516 	blt	zero,r3,2087b4 <___vfiprintf_internal_r+0xeb4>
  207c20:	d8c00947 	ldb	r3,37(sp)
  207c24:	18000c26 	beq	r3,zero,207c58 <___vfiprintf_internal_r+0x358>
  207c28:	d8c00944 	addi	r3,sp,37
  207c2c:	10800044 	addi	r2,r2,1
  207c30:	80c00015 	stw	r3,0(r16)
  207c34:	00c00044 	movi	r3,1
  207c38:	80c00115 	stw	r3,4(r16)
  207c3c:	d8800c15 	stw	r2,48(sp)
  207c40:	d9400b15 	stw	r5,44(sp)
  207c44:	28c00208 	cmpgei	r3,r5,8
  207c48:	1802a01e 	bne	r3,zero,2086cc <___vfiprintf_internal_r+0xdcc>
  207c4c:	2809883a 	mov	r4,r5
  207c50:	84000204 	addi	r16,r16,8
  207c54:	29400044 	addi	r5,r5,1
  207c58:	70001726 	beq	r14,zero,207cb8 <___vfiprintf_internal_r+0x3b8>
  207c5c:	d8c00984 	addi	r3,sp,38
  207c60:	10800084 	addi	r2,r2,2
  207c64:	80c00015 	stw	r3,0(r16)
  207c68:	00c00084 	movi	r3,2
  207c6c:	80c00115 	stw	r3,4(r16)
  207c70:	d8800c15 	stw	r2,48(sp)
  207c74:	d9400b15 	stw	r5,44(sp)
  207c78:	28c00208 	cmpgei	r3,r5,8
  207c7c:	1802aa26 	beq	r3,zero,208728 <___vfiprintf_internal_r+0xe28>
  207c80:	10032526 	beq	r2,zero,208918 <___vfiprintf_internal_r+0x1018>
  207c84:	d9800a04 	addi	r6,sp,40
  207c88:	a80b883a 	mov	r5,r21
  207c8c:	b009883a 	mov	r4,r22
  207c90:	da000315 	stw	r8,12(sp)
  207c94:	db400215 	stw	r13,8(sp)
  207c98:	02077f40 	call	2077f4 <__sprint_r.part.0>
  207c9c:	10002a1e 	bne	r2,zero,207d48 <___vfiprintf_internal_r+0x448>
  207ca0:	d9000b17 	ldw	r4,44(sp)
  207ca4:	d8800c17 	ldw	r2,48(sp)
  207ca8:	da000317 	ldw	r8,12(sp)
  207cac:	db400217 	ldw	r13,8(sp)
  207cb0:	9021883a 	mov	r16,r18
  207cb4:	21400044 	addi	r5,r4,1
  207cb8:	6b402018 	cmpnei	r13,r13,128
  207cbc:	6801f126 	beq	r13,zero,208484 <___vfiprintf_internal_r+0xb84>
  207cc0:	4711c83a 	sub	r8,r8,fp
  207cc4:	02022e16 	blt	zero,r8,208580 <___vfiprintf_internal_r+0xc80>
  207cc8:	e085883a 	add	r2,fp,r2
  207ccc:	d9400b15 	stw	r5,44(sp)
  207cd0:	84c00015 	stw	r19,0(r16)
  207cd4:	87000115 	stw	fp,4(r16)
  207cd8:	d8800c15 	stw	r2,48(sp)
  207cdc:	29400208 	cmpgei	r5,r5,8
  207ce0:	2801e226 	beq	r5,zero,20846c <___vfiprintf_internal_r+0xb6c>
  207ce4:	10009826 	beq	r2,zero,207f48 <___vfiprintf_internal_r+0x648>
  207ce8:	d9800a04 	addi	r6,sp,40
  207cec:	a80b883a 	mov	r5,r21
  207cf0:	b009883a 	mov	r4,r22
  207cf4:	02077f40 	call	2077f4 <__sprint_r.part.0>
  207cf8:	1000131e 	bne	r2,zero,207d48 <___vfiprintf_internal_r+0x448>
  207cfc:	d8800c17 	ldw	r2,48(sp)
  207d00:	9021883a 	mov	r16,r18
  207d04:	d8c00017 	ldw	r3,0(sp)
  207d08:	1cc0010c 	andi	r19,r3,4
  207d0c:	98000226 	beq	r19,zero,207d18 <___vfiprintf_internal_r+0x418>
  207d10:	8de7c83a 	sub	r19,r17,r23
  207d14:	04c09316 	blt	zero,r19,207f64 <___vfiprintf_internal_r+0x664>
  207d18:	8dc0010e 	bge	r17,r23,207d20 <___vfiprintf_internal_r+0x420>
  207d1c:	b823883a 	mov	r17,r23
  207d20:	d8c00117 	ldw	r3,4(sp)
  207d24:	1c47883a 	add	r3,r3,r17
  207d28:	d8c00115 	stw	r3,4(sp)
  207d2c:	10025d1e 	bne	r2,zero,2086a4 <___vfiprintf_internal_r+0xda4>
  207d30:	a0800007 	ldb	r2,0(r20)
  207d34:	d8000b15 	stw	zero,44(sp)
  207d38:	9021883a 	mov	r16,r18
  207d3c:	103f1b1e 	bne	r2,zero,2079ac <___vfiprintf_internal_r+0xac>
  207d40:	d8800c17 	ldw	r2,48(sp)
  207d44:	1003591e 	bne	r2,zero,208aac <___vfiprintf_internal_r+0x11ac>
  207d48:	a880030b 	ldhu	r2,12(r21)
  207d4c:	1080100c 	andi	r2,r2,64
  207d50:	1003741e 	bne	r2,zero,208b24 <___vfiprintf_internal_r+0x1224>
  207d54:	d8800117 	ldw	r2,4(sp)
  207d58:	dfc03017 	ldw	ra,192(sp)
  207d5c:	df002f17 	ldw	fp,188(sp)
  207d60:	ddc02e17 	ldw	r23,184(sp)
  207d64:	dd802d17 	ldw	r22,180(sp)
  207d68:	dd402c17 	ldw	r21,176(sp)
  207d6c:	dd002b17 	ldw	r20,172(sp)
  207d70:	dcc02a17 	ldw	r19,168(sp)
  207d74:	dc802917 	ldw	r18,164(sp)
  207d78:	dc402817 	ldw	r17,160(sp)
  207d7c:	dc002717 	ldw	r16,156(sp)
  207d80:	dec03104 	addi	sp,sp,196
  207d84:	f800283a 	ret
  207d88:	a80b883a 	mov	r5,r21
  207d8c:	b009883a 	mov	r4,r22
  207d90:	020258c0 	call	20258c <__swsetup_r>
  207d94:	1003631e 	bne	r2,zero,208b24 <___vfiprintf_internal_r+0x1224>
  207d98:	a880030b 	ldhu	r2,12(r21)
  207d9c:	1080068c 	andi	r2,r2,26
  207da0:	10800298 	cmpnei	r2,r2,10
  207da4:	103ef81e 	bne	r2,zero,207988 <___vfiprintf_internal_r+0x88>
  207da8:	a880038f 	ldh	r2,14(r21)
  207dac:	103ef616 	blt	r2,zero,207988 <___vfiprintf_internal_r+0x88>
  207db0:	d9c00417 	ldw	r7,16(sp)
  207db4:	a00d883a 	mov	r6,r20
  207db8:	a80b883a 	mov	r5,r21
  207dbc:	b009883a 	mov	r4,r22
  207dc0:	dfc03017 	ldw	ra,192(sp)
  207dc4:	df002f17 	ldw	fp,188(sp)
  207dc8:	ddc02e17 	ldw	r23,184(sp)
  207dcc:	dd802d17 	ldw	r22,180(sp)
  207dd0:	dd402c17 	ldw	r21,176(sp)
  207dd4:	dd002b17 	ldw	r20,172(sp)
  207dd8:	dcc02a17 	ldw	r19,168(sp)
  207ddc:	dc802917 	ldw	r18,164(sp)
  207de0:	dc402817 	ldw	r17,160(sp)
  207de4:	dc002717 	ldw	r16,156(sp)
  207de8:	dec03104 	addi	sp,sp,196
  207dec:	0208b7c1 	jmpi	208b7c <__sbprintf>
  207df0:	6b400414 	ori	r13,r13,16
  207df4:	6880080c 	andi	r2,r13,32
  207df8:	10004726 	beq	r2,zero,207f18 <___vfiprintf_internal_r+0x618>
  207dfc:	d8c00417 	ldw	r3,16(sp)
  207e00:	00800044 	movi	r2,1
  207e04:	1dc00017 	ldw	r23,0(r3)
  207e08:	1f000117 	ldw	fp,4(r3)
  207e0c:	18c00204 	addi	r3,r3,8
  207e10:	d8c00415 	stw	r3,16(sp)
  207e14:	00000906 	br	207e3c <___vfiprintf_internal_r+0x53c>
  207e18:	6b400414 	ori	r13,r13,16
  207e1c:	6880080c 	andi	r2,r13,32
  207e20:	10003126 	beq	r2,zero,207ee8 <___vfiprintf_internal_r+0x5e8>
  207e24:	d8c00417 	ldw	r3,16(sp)
  207e28:	0005883a 	mov	r2,zero
  207e2c:	1dc00017 	ldw	r23,0(r3)
  207e30:	1f000117 	ldw	fp,4(r3)
  207e34:	18c00204 	addi	r3,r3,8
  207e38:	d8c00415 	stw	r3,16(sp)
  207e3c:	d8000945 	stb	zero,37(sp)
  207e40:	40ffffe0 	cmpeqi	r3,r8,-1
  207e44:	001d883a 	mov	r14,zero
  207e48:	1800d11e 	bne	r3,zero,208190 <___vfiprintf_internal_r+0x890>
  207e4c:	04ffdfc4 	movi	r19,-129
  207e50:	6cc8703a 	and	r4,r13,r19
  207e54:	bf06b03a 	or	r3,r23,fp
  207e58:	d9000015 	stw	r4,0(sp)
  207e5c:	1802361e 	bne	r3,zero,208738 <___vfiprintf_internal_r+0xe38>
  207e60:	4001fb1e 	bne	r8,zero,208650 <___vfiprintf_internal_r+0xd50>
  207e64:	1002a31e 	bne	r2,zero,2088f4 <___vfiprintf_internal_r+0xff4>
  207e68:	6f00004c 	andi	fp,r13,1
  207e6c:	e002c726 	beq	fp,zero,20898c <___vfiprintf_internal_r+0x108c>
  207e70:	00800c04 	movi	r2,48
  207e74:	d88016c5 	stb	r2,91(sp)
  207e78:	dcc016c4 	addi	r19,sp,91
  207e7c:	0000e106 	br	208204 <___vfiprintf_internal_r+0x904>
  207e80:	8d27c83a 	sub	r19,r17,r20
  207e84:	8d3fae26 	beq	r17,r20,207d40 <___vfiprintf_internal_r+0x440>
  207e88:	d8c00c17 	ldw	r3,48(sp)
  207e8c:	d8800b17 	ldw	r2,44(sp)
  207e90:	85000015 	stw	r20,0(r16)
  207e94:	98c7883a 	add	r3,r19,r3
  207e98:	10800044 	addi	r2,r2,1
  207e9c:	d8800b15 	stw	r2,44(sp)
  207ea0:	84c00115 	stw	r19,4(r16)
  207ea4:	d8c00c15 	stw	r3,48(sp)
  207ea8:	10800208 	cmpgei	r2,r2,8
  207eac:	1000061e 	bne	r2,zero,207ec8 <___vfiprintf_internal_r+0x5c8>
  207eb0:	84000204 	addi	r16,r16,8
  207eb4:	d8c00117 	ldw	r3,4(sp)
  207eb8:	88800003 	ldbu	r2,0(r17)
  207ebc:	1cc7883a 	add	r3,r3,r19
  207ec0:	d8c00115 	stw	r3,4(sp)
  207ec4:	003ec306 	br	2079d4 <___vfiprintf_internal_r+0xd4>
  207ec8:	18028626 	beq	r3,zero,2088e4 <___vfiprintf_internal_r+0xfe4>
  207ecc:	d9800a04 	addi	r6,sp,40
  207ed0:	a80b883a 	mov	r5,r21
  207ed4:	b009883a 	mov	r4,r22
  207ed8:	02077f40 	call	2077f4 <__sprint_r.part.0>
  207edc:	103f9a1e 	bne	r2,zero,207d48 <___vfiprintf_internal_r+0x448>
  207ee0:	9021883a 	mov	r16,r18
  207ee4:	003ff306 	br	207eb4 <___vfiprintf_internal_r+0x5b4>
  207ee8:	d8c00417 	ldw	r3,16(sp)
  207eec:	6880040c 	andi	r2,r13,16
  207ef0:	1dc00017 	ldw	r23,0(r3)
  207ef4:	18c00104 	addi	r3,r3,4
  207ef8:	d8c00415 	stw	r3,16(sp)
  207efc:	1000031e 	bne	r2,zero,207f0c <___vfiprintf_internal_r+0x60c>
  207f00:	6880100c 	andi	r2,r13,64
  207f04:	10000126 	beq	r2,zero,207f0c <___vfiprintf_internal_r+0x60c>
  207f08:	bdffffcc 	andi	r23,r23,65535
  207f0c:	0039883a 	mov	fp,zero
  207f10:	0005883a 	mov	r2,zero
  207f14:	003fc906 	br	207e3c <___vfiprintf_internal_r+0x53c>
  207f18:	d8c00417 	ldw	r3,16(sp)
  207f1c:	6880040c 	andi	r2,r13,16
  207f20:	1dc00017 	ldw	r23,0(r3)
  207f24:	18c00104 	addi	r3,r3,4
  207f28:	d8c00415 	stw	r3,16(sp)
  207f2c:	1000031e 	bne	r2,zero,207f3c <___vfiprintf_internal_r+0x63c>
  207f30:	6880100c 	andi	r2,r13,64
  207f34:	10000126 	beq	r2,zero,207f3c <___vfiprintf_internal_r+0x63c>
  207f38:	bdffffcc 	andi	r23,r23,65535
  207f3c:	0039883a 	mov	fp,zero
  207f40:	00800044 	movi	r2,1
  207f44:	003fbd06 	br	207e3c <___vfiprintf_internal_r+0x53c>
  207f48:	d8c00017 	ldw	r3,0(sp)
  207f4c:	d8000b15 	stw	zero,44(sp)
  207f50:	1cc0010c 	andi	r19,r3,4
  207f54:	98025226 	beq	r19,zero,2088a0 <___vfiprintf_internal_r+0xfa0>
  207f58:	8de7c83a 	sub	r19,r17,r23
  207f5c:	04c2500e 	bge	zero,r19,2088a0 <___vfiprintf_internal_r+0xfa0>
  207f60:	9021883a 	mov	r16,r18
  207f64:	98c00450 	cmplti	r3,r19,17
  207f68:	d9000b17 	ldw	r4,44(sp)
  207f6c:	01c00874 	movhi	r7,33
  207f70:	1802e61e 	bne	r3,zero,208b0c <___vfiprintf_internal_r+0x120c>
  207f74:	39ffc204 	addi	r7,r7,-248
  207f78:	07000404 	movi	fp,16
  207f7c:	00000606 	br	207f98 <___vfiprintf_internal_r+0x698>
  207f80:	21400084 	addi	r5,r4,2
  207f84:	84000204 	addi	r16,r16,8
  207f88:	1809883a 	mov	r4,r3
  207f8c:	9cfffc04 	addi	r19,r19,-16
  207f90:	98c00448 	cmpgei	r3,r19,17
  207f94:	18001726 	beq	r3,zero,207ff4 <___vfiprintf_internal_r+0x6f4>
  207f98:	20c00044 	addi	r3,r4,1
  207f9c:	10800404 	addi	r2,r2,16
  207fa0:	81c00015 	stw	r7,0(r16)
  207fa4:	87000115 	stw	fp,4(r16)
  207fa8:	d8800c15 	stw	r2,48(sp)
  207fac:	d8c00b15 	stw	r3,44(sp)
  207fb0:	19400208 	cmpgei	r5,r3,8
  207fb4:	283ff226 	beq	r5,zero,207f80 <___vfiprintf_internal_r+0x680>
  207fb8:	d9800a04 	addi	r6,sp,40
  207fbc:	a80b883a 	mov	r5,r21
  207fc0:	b009883a 	mov	r4,r22
  207fc4:	10012b26 	beq	r2,zero,208474 <___vfiprintf_internal_r+0xb74>
  207fc8:	d9c00015 	stw	r7,0(sp)
  207fcc:	02077f40 	call	2077f4 <__sprint_r.part.0>
  207fd0:	103f5d1e 	bne	r2,zero,207d48 <___vfiprintf_internal_r+0x448>
  207fd4:	d9000b17 	ldw	r4,44(sp)
  207fd8:	9cfffc04 	addi	r19,r19,-16
  207fdc:	98c00448 	cmpgei	r3,r19,17
  207fe0:	d8800c17 	ldw	r2,48(sp)
  207fe4:	d9c00017 	ldw	r7,0(sp)
  207fe8:	9021883a 	mov	r16,r18
  207fec:	21400044 	addi	r5,r4,1
  207ff0:	183fe91e 	bne	r3,zero,207f98 <___vfiprintf_internal_r+0x698>
  207ff4:	14c5883a 	add	r2,r2,r19
  207ff8:	d9400b15 	stw	r5,44(sp)
  207ffc:	81c00015 	stw	r7,0(r16)
  208000:	84c00115 	stw	r19,4(r16)
  208004:	d8800c15 	stw	r2,48(sp)
  208008:	29400210 	cmplti	r5,r5,8
  20800c:	283f421e 	bne	r5,zero,207d18 <___vfiprintf_internal_r+0x418>
  208010:	10022326 	beq	r2,zero,2088a0 <___vfiprintf_internal_r+0xfa0>
  208014:	d9800a04 	addi	r6,sp,40
  208018:	a80b883a 	mov	r5,r21
  20801c:	b009883a 	mov	r4,r22
  208020:	02077f40 	call	2077f4 <__sprint_r.part.0>
  208024:	103f481e 	bne	r2,zero,207d48 <___vfiprintf_internal_r+0x448>
  208028:	d8800c17 	ldw	r2,48(sp)
  20802c:	003f3a06 	br	207d18 <___vfiprintf_internal_r+0x418>
  208030:	02046c80 	call	2046c8 <__sinit>
  208034:	003e4406 	br	207948 <___vfiprintf_internal_r+0x48>
  208038:	29403fcc 	andi	r5,r5,255
  20803c:	2802b11e 	bne	r5,zero,208b04 <___vfiprintf_internal_r+0x1204>
  208040:	6880080c 	andi	r2,r13,32
  208044:	10003a26 	beq	r2,zero,208130 <___vfiprintf_internal_r+0x830>
  208048:	d8c00417 	ldw	r3,16(sp)
  20804c:	18800117 	ldw	r2,4(r3)
  208050:	1dc00017 	ldw	r23,0(r3)
  208054:	18c00204 	addi	r3,r3,8
  208058:	d8c00415 	stw	r3,16(sp)
  20805c:	1039883a 	mov	fp,r2
  208060:	10004116 	blt	r2,zero,208168 <___vfiprintf_internal_r+0x868>
  208064:	40bfffd8 	cmpnei	r2,r8,-1
  208068:	db800943 	ldbu	r14,37(sp)
  20806c:	10000626 	beq	r2,zero,208088 <___vfiprintf_internal_r+0x788>
  208070:	04ffdfc4 	movi	r19,-129
  208074:	6cc6703a 	and	r3,r13,r19
  208078:	bf04b03a 	or	r2,r23,fp
  20807c:	d8c00015 	stw	r3,0(sp)
  208080:	10021b26 	beq	r2,zero,2088f0 <___vfiprintf_internal_r+0xff0>
  208084:	db400017 	ldw	r13,0(sp)
  208088:	e001ad1e 	bne	fp,zero,208740 <___vfiprintf_internal_r+0xe40>
  20808c:	b88002a8 	cmpgeui	r2,r23,10
  208090:	1001ab1e 	bne	r2,zero,208740 <___vfiprintf_internal_r+0xe40>
  208094:	bdc00c04 	addi	r23,r23,48
  208098:	ddc016c5 	stb	r23,91(sp)
  20809c:	db400015 	stw	r13,0(sp)
  2080a0:	07000044 	movi	fp,1
  2080a4:	dcc016c4 	addi	r19,sp,91
  2080a8:	00005606 	br	208204 <___vfiprintf_internal_r+0x904>
  2080ac:	d8800417 	ldw	r2,16(sp)
  2080b0:	14400017 	ldw	r17,0(r2)
  2080b4:	10c00104 	addi	r3,r2,4
  2080b8:	8802310e 	bge	r17,zero,208980 <___vfiprintf_internal_r+0x1080>
  2080bc:	0463c83a 	sub	r17,zero,r17
  2080c0:	d8c00415 	stw	r3,16(sp)
  2080c4:	a0800007 	ldb	r2,0(r20)
  2080c8:	6b400114 	ori	r13,r13,4
  2080cc:	003e4d06 	br	207a04 <___vfiprintf_internal_r+0x104>
  2080d0:	a0800007 	ldb	r2,0(r20)
  2080d4:	a0c00044 	addi	r3,r20,1
  2080d8:	11000aa0 	cmpeqi	r4,r2,42
  2080dc:	2002941e 	bne	r4,zero,208b30 <___vfiprintf_internal_r+0x1230>
  2080e0:	113ff404 	addi	r4,r2,-48
  2080e4:	21c002b0 	cmpltui	r7,r4,10
  2080e8:	1829883a 	mov	r20,r3
  2080ec:	0011883a 	mov	r8,zero
  2080f0:	383e4526 	beq	r7,zero,207a08 <___vfiprintf_internal_r+0x108>
  2080f4:	400690ba 	slli	r3,r8,2
  2080f8:	a0800007 	ldb	r2,0(r20)
  2080fc:	a5000044 	addi	r20,r20,1
  208100:	1a11883a 	add	r8,r3,r8
  208104:	4211883a 	add	r8,r8,r8
  208108:	4111883a 	add	r8,r8,r4
  20810c:	113ff404 	addi	r4,r2,-48
  208110:	20c002b0 	cmpltui	r3,r4,10
  208114:	183ff71e 	bne	r3,zero,2080f4 <___vfiprintf_internal_r+0x7f4>
  208118:	003e3b06 	br	207a08 <___vfiprintf_internal_r+0x108>
  20811c:	29403fcc 	andi	r5,r5,255
  208120:	28026d1e 	bne	r5,zero,208ad8 <___vfiprintf_internal_r+0x11d8>
  208124:	6b400414 	ori	r13,r13,16
  208128:	6880080c 	andi	r2,r13,32
  20812c:	103fc61e 	bne	r2,zero,208048 <___vfiprintf_internal_r+0x748>
  208130:	d8c00417 	ldw	r3,16(sp)
  208134:	6880040c 	andi	r2,r13,16
  208138:	1dc00017 	ldw	r23,0(r3)
  20813c:	18c00104 	addi	r3,r3,4
  208140:	d8c00415 	stw	r3,16(sp)
  208144:	1001f11e 	bne	r2,zero,20890c <___vfiprintf_internal_r+0x100c>
  208148:	6880100c 	andi	r2,r13,64
  20814c:	1001ef26 	beq	r2,zero,20890c <___vfiprintf_internal_r+0x100c>
  208150:	bdffffcc 	andi	r23,r23,65535
  208154:	bde0001c 	xori	r23,r23,32768
  208158:	bde00004 	addi	r23,r23,-32768
  20815c:	b839d7fa 	srai	fp,r23,31
  208160:	e005883a 	mov	r2,fp
  208164:	103fbf0e 	bge	r2,zero,208064 <___vfiprintf_internal_r+0x764>
  208168:	b804c03a 	cmpne	r2,r23,zero
  20816c:	0739c83a 	sub	fp,zero,fp
  208170:	e0b9c83a 	sub	fp,fp,r2
  208174:	00800b44 	movi	r2,45
  208178:	d8800945 	stb	r2,37(sp)
  20817c:	40ffffe0 	cmpeqi	r3,r8,-1
  208180:	05efc83a 	sub	r23,zero,r23
  208184:	03800b44 	movi	r14,45
  208188:	00800044 	movi	r2,1
  20818c:	183f2f26 	beq	r3,zero,207e4c <___vfiprintf_internal_r+0x54c>
  208190:	10c00060 	cmpeqi	r3,r2,1
  208194:	183fbc1e 	bne	r3,zero,208088 <___vfiprintf_internal_r+0x788>
  208198:	108000a0 	cmpeqi	r2,r2,2
  20819c:	1001311e 	bne	r2,zero,208664 <___vfiprintf_internal_r+0xd64>
  2081a0:	9027883a 	mov	r19,r18
  2081a4:	e008977a 	slli	r4,fp,29
  2081a8:	b806d0fa 	srli	r3,r23,3
  2081ac:	e038d0fa 	srli	fp,fp,3
  2081b0:	b88001cc 	andi	r2,r23,7
  2081b4:	10800c04 	addi	r2,r2,48
  2081b8:	20eeb03a 	or	r23,r4,r3
  2081bc:	98bfffc5 	stb	r2,-1(r19)
  2081c0:	bf06b03a 	or	r3,r23,fp
  2081c4:	980b883a 	mov	r5,r19
  2081c8:	9cffffc4 	addi	r19,r19,-1
  2081cc:	183ff51e 	bne	r3,zero,2081a4 <___vfiprintf_internal_r+0x8a4>
  2081d0:	68c0004c 	andi	r3,r13,1
  2081d4:	18013026 	beq	r3,zero,208698 <___vfiprintf_internal_r+0xd98>
  2081d8:	10803fcc 	andi	r2,r2,255
  2081dc:	1080201c 	xori	r2,r2,128
  2081e0:	10bfe004 	addi	r2,r2,-128
  2081e4:	10800c18 	cmpnei	r2,r2,48
  2081e8:	10012b26 	beq	r2,zero,208698 <___vfiprintf_internal_r+0xd98>
  2081ec:	297fff84 	addi	r5,r5,-2
  2081f0:	00800c04 	movi	r2,48
  2081f4:	98bfffc5 	stb	r2,-1(r19)
  2081f8:	9179c83a 	sub	fp,r18,r5
  2081fc:	db400015 	stw	r13,0(sp)
  208200:	2827883a 	mov	r19,r5
  208204:	e02f883a 	mov	r23,fp
  208208:	e200010e 	bge	fp,r8,208210 <___vfiprintf_internal_r+0x910>
  20820c:	402f883a 	mov	r23,r8
  208210:	73803fcc 	andi	r14,r14,255
  208214:	7380201c 	xori	r14,r14,128
  208218:	73bfe004 	addi	r14,r14,-128
  20821c:	703e7326 	beq	r14,zero,207bec <___vfiprintf_internal_r+0x2ec>
  208220:	bdc00044 	addi	r23,r23,1
  208224:	003e7106 	br	207bec <___vfiprintf_internal_r+0x2ec>
  208228:	a0800007 	ldb	r2,0(r20)
  20822c:	6b402014 	ori	r13,r13,128
  208230:	003df406 	br	207a04 <___vfiprintf_internal_r+0x104>
  208234:	a0800007 	ldb	r2,0(r20)
  208238:	01400044 	movi	r5,1
  20823c:	01800ac4 	movi	r6,43
  208240:	003df006 	br	207a04 <___vfiprintf_internal_r+0x104>
  208244:	a0800007 	ldb	r2,0(r20)
  208248:	6b400054 	ori	r13,r13,1
  20824c:	003ded06 	br	207a04 <___vfiprintf_internal_r+0x104>
  208250:	30c03fcc 	andi	r3,r6,255
  208254:	18c0201c 	xori	r3,r3,128
  208258:	18ffe004 	addi	r3,r3,-128
  20825c:	a0800003 	ldbu	r2,0(r20)
  208260:	1800091e 	bne	r3,zero,208288 <___vfiprintf_internal_r+0x988>
  208264:	10803fcc 	andi	r2,r2,255
  208268:	1080201c 	xori	r2,r2,128
  20826c:	01400044 	movi	r5,1
  208270:	01800804 	movi	r6,32
  208274:	10bfe004 	addi	r2,r2,-128
  208278:	003de206 	br	207a04 <___vfiprintf_internal_r+0x104>
  20827c:	a0800043 	ldbu	r2,1(r20)
  208280:	6b400814 	ori	r13,r13,32
  208284:	a5000044 	addi	r20,r20,1
  208288:	10803fcc 	andi	r2,r2,255
  20828c:	1080201c 	xori	r2,r2,128
  208290:	10bfe004 	addi	r2,r2,-128
  208294:	003ddb06 	br	207a04 <___vfiprintf_internal_r+0x104>
  208298:	a0800007 	ldb	r2,0(r20)
  20829c:	6b401014 	ori	r13,r13,64
  2082a0:	003dd806 	br	207a04 <___vfiprintf_internal_r+0x104>
  2082a4:	29403fcc 	andi	r5,r5,255
  2082a8:	28020f1e 	bne	r5,zero,208ae8 <___vfiprintf_internal_r+0x11e8>
  2082ac:	d9000417 	ldw	r4,16(sp)
  2082b0:	6880080c 	andi	r2,r13,32
  2082b4:	20c00104 	addi	r3,r4,4
  2082b8:	1001c01e 	bne	r2,zero,2089bc <___vfiprintf_internal_r+0x10bc>
  2082bc:	6880040c 	andi	r2,r13,16
  2082c0:	1001df1e 	bne	r2,zero,208a40 <___vfiprintf_internal_r+0x1140>
  2082c4:	6b40100c 	andi	r13,r13,64
  2082c8:	6801dd26 	beq	r13,zero,208a40 <___vfiprintf_internal_r+0x1140>
  2082cc:	d8800417 	ldw	r2,16(sp)
  2082d0:	d8c00415 	stw	r3,16(sp)
  2082d4:	d8c00117 	ldw	r3,4(sp)
  2082d8:	10800017 	ldw	r2,0(r2)
  2082dc:	10c0000d 	sth	r3,0(r2)
  2082e0:	003db006 	br	2079a4 <___vfiprintf_internal_r+0xa4>
  2082e4:	a0800007 	ldb	r2,0(r20)
  2082e8:	10c01b18 	cmpnei	r3,r2,108
  2082ec:	183fe326 	beq	r3,zero,20827c <___vfiprintf_internal_r+0x97c>
  2082f0:	6b400414 	ori	r13,r13,16
  2082f4:	003dc306 	br	207a04 <___vfiprintf_internal_r+0x104>
  2082f8:	d8c00417 	ldw	r3,16(sp)
  2082fc:	d8000945 	stb	zero,37(sp)
  208300:	05c00044 	movi	r23,1
  208304:	18800017 	ldw	r2,0(r3)
  208308:	18c00104 	addi	r3,r3,4
  20830c:	d8c00415 	stw	r3,16(sp)
  208310:	d8800d05 	stb	r2,52(sp)
  208314:	07000044 	movi	fp,1
  208318:	dcc00d04 	addi	r19,sp,52
  20831c:	003e3106 	br	207be4 <___vfiprintf_internal_r+0x2e4>
  208320:	29403fcc 	andi	r5,r5,255
  208324:	2801ee1e 	bne	r5,zero,208ae0 <___vfiprintf_internal_r+0x11e0>
  208328:	00c00874 	movhi	r3,33
  20832c:	18ff3c04 	addi	r3,r3,-784
  208330:	d8c00515 	stw	r3,20(sp)
  208334:	68c0080c 	andi	r3,r13,32
  208338:	18001226 	beq	r3,zero,208384 <___vfiprintf_internal_r+0xa84>
  20833c:	d8c00417 	ldw	r3,16(sp)
  208340:	1dc00017 	ldw	r23,0(r3)
  208344:	1f000117 	ldw	fp,4(r3)
  208348:	18c00204 	addi	r3,r3,8
  20834c:	d8c00415 	stw	r3,16(sp)
  208350:	68c0004c 	andi	r3,r13,1
  208354:	18000226 	beq	r3,zero,208360 <___vfiprintf_internal_r+0xa60>
  208358:	bf06b03a 	or	r3,r23,fp
  20835c:	1801911e 	bne	r3,zero,2089a4 <___vfiprintf_internal_r+0x10a4>
  208360:	00800084 	movi	r2,2
  208364:	003eb506 	br	207e3c <___vfiprintf_internal_r+0x53c>
  208368:	29403fcc 	andi	r5,r5,255
  20836c:	2801e01e 	bne	r5,zero,208af0 <___vfiprintf_internal_r+0x11f0>
  208370:	00c00874 	movhi	r3,33
  208374:	18ff3704 	addi	r3,r3,-804
  208378:	d8c00515 	stw	r3,20(sp)
  20837c:	68c0080c 	andi	r3,r13,32
  208380:	183fee1e 	bne	r3,zero,20833c <___vfiprintf_internal_r+0xa3c>
  208384:	d9000417 	ldw	r4,16(sp)
  208388:	68c0040c 	andi	r3,r13,16
  20838c:	25c00017 	ldw	r23,0(r4)
  208390:	21000104 	addi	r4,r4,4
  208394:	d9000415 	stw	r4,16(sp)
  208398:	18015a1e 	bne	r3,zero,208904 <___vfiprintf_internal_r+0x1004>
  20839c:	68c0100c 	andi	r3,r13,64
  2083a0:	18015826 	beq	r3,zero,208904 <___vfiprintf_internal_r+0x1004>
  2083a4:	bdffffcc 	andi	r23,r23,65535
  2083a8:	0039883a 	mov	fp,zero
  2083ac:	003fe806 	br	208350 <___vfiprintf_internal_r+0xa50>
  2083b0:	d8800417 	ldw	r2,16(sp)
  2083b4:	d8000945 	stb	zero,37(sp)
  2083b8:	14c00017 	ldw	r19,0(r2)
  2083bc:	10c00104 	addi	r3,r2,4
  2083c0:	9801a526 	beq	r19,zero,208a58 <___vfiprintf_internal_r+0x1158>
  2083c4:	40bfffe0 	cmpeqi	r2,r8,-1
  2083c8:	10018a1e 	bne	r2,zero,2089f4 <___vfiprintf_internal_r+0x10f4>
  2083cc:	400d883a 	mov	r6,r8
  2083d0:	000b883a 	mov	r5,zero
  2083d4:	9809883a 	mov	r4,r19
  2083d8:	d8c00315 	stw	r3,12(sp)
  2083dc:	db400215 	stw	r13,8(sp)
  2083e0:	da000015 	stw	r8,0(sp)
  2083e4:	0205b440 	call	205b44 <memchr>
  2083e8:	da000017 	ldw	r8,0(sp)
  2083ec:	db400217 	ldw	r13,8(sp)
  2083f0:	d8c00317 	ldw	r3,12(sp)
  2083f4:	1001b426 	beq	r2,zero,208ac8 <___vfiprintf_internal_r+0x11c8>
  2083f8:	14f9c83a 	sub	fp,r2,r19
  2083fc:	e02f883a 	mov	r23,fp
  208400:	d8c00415 	stw	r3,16(sp)
  208404:	003df706 	br	207be4 <___vfiprintf_internal_r+0x2e4>
  208408:	a0800007 	ldb	r2,0(r20)
  20840c:	6b400814 	ori	r13,r13,32
  208410:	003d7c06 	br	207a04 <___vfiprintf_internal_r+0x104>
  208414:	d8c00417 	ldw	r3,16(sp)
  208418:	00800c04 	movi	r2,48
  20841c:	d8800985 	stb	r2,38(sp)
  208420:	00801e04 	movi	r2,120
  208424:	01000874 	movhi	r4,33
  208428:	d88009c5 	stb	r2,39(sp)
  20842c:	18800104 	addi	r2,r3,4
  208430:	d8800415 	stw	r2,16(sp)
  208434:	20bf3704 	addi	r2,r4,-804
  208438:	d8800515 	stw	r2,20(sp)
  20843c:	1dc00017 	ldw	r23,0(r3)
  208440:	0039883a 	mov	fp,zero
  208444:	6b400094 	ori	r13,r13,2
  208448:	00800084 	movi	r2,2
  20844c:	003e7b06 	br	207e3c <___vfiprintf_internal_r+0x53c>
  208450:	00c00044 	movi	r3,1
  208454:	e005883a 	mov	r2,fp
  208458:	dcc01715 	stw	r19,92(sp)
  20845c:	df001815 	stw	fp,96(sp)
  208460:	df000c15 	stw	fp,48(sp)
  208464:	d8c00b15 	stw	r3,44(sp)
  208468:	9021883a 	mov	r16,r18
  20846c:	84000204 	addi	r16,r16,8
  208470:	003e2406 	br	207d04 <___vfiprintf_internal_r+0x404>
  208474:	01400044 	movi	r5,1
  208478:	0009883a 	mov	r4,zero
  20847c:	9021883a 	mov	r16,r18
  208480:	003ec206 	br	207f8c <___vfiprintf_internal_r+0x68c>
  208484:	8dc7c83a 	sub	r3,r17,r23
  208488:	00fe0d0e 	bge	zero,r3,207cc0 <___vfiprintf_internal_r+0x3c0>
  20848c:	19800450 	cmplti	r6,r3,17
  208490:	01c00874 	movhi	r7,33
  208494:	3001a01e 	bne	r6,zero,208b18 <___vfiprintf_internal_r+0x1218>
  208498:	39ffbe04 	addi	r7,r7,-264
  20849c:	03400404 	movi	r13,16
  2084a0:	00000606 	br	2084bc <___vfiprintf_internal_r+0xbbc>
  2084a4:	21800084 	addi	r6,r4,2
  2084a8:	84000204 	addi	r16,r16,8
  2084ac:	2809883a 	mov	r4,r5
  2084b0:	18fffc04 	addi	r3,r3,-16
  2084b4:	19400448 	cmpgei	r5,r3,17
  2084b8:	28001c26 	beq	r5,zero,20852c <___vfiprintf_internal_r+0xc2c>
  2084bc:	21400044 	addi	r5,r4,1
  2084c0:	10800404 	addi	r2,r2,16
  2084c4:	81c00015 	stw	r7,0(r16)
  2084c8:	83400115 	stw	r13,4(r16)
  2084cc:	d8800c15 	stw	r2,48(sp)
  2084d0:	d9400b15 	stw	r5,44(sp)
  2084d4:	29800208 	cmpgei	r6,r5,8
  2084d8:	303ff226 	beq	r6,zero,2084a4 <___vfiprintf_internal_r+0xba4>
  2084dc:	d9800a04 	addi	r6,sp,40
  2084e0:	a80b883a 	mov	r5,r21
  2084e4:	b009883a 	mov	r4,r22
  2084e8:	10007426 	beq	r2,zero,2086bc <___vfiprintf_internal_r+0xdbc>
  2084ec:	d9c00615 	stw	r7,24(sp)
  2084f0:	d8c00315 	stw	r3,12(sp)
  2084f4:	da000215 	stw	r8,8(sp)
  2084f8:	02077f40 	call	2077f4 <__sprint_r.part.0>
  2084fc:	103e121e 	bne	r2,zero,207d48 <___vfiprintf_internal_r+0x448>
  208500:	d8c00317 	ldw	r3,12(sp)
  208504:	d9000b17 	ldw	r4,44(sp)
  208508:	d8800c17 	ldw	r2,48(sp)
  20850c:	18fffc04 	addi	r3,r3,-16
  208510:	19400448 	cmpgei	r5,r3,17
  208514:	d9c00617 	ldw	r7,24(sp)
  208518:	da000217 	ldw	r8,8(sp)
  20851c:	9021883a 	mov	r16,r18
  208520:	21800044 	addi	r6,r4,1
  208524:	03400404 	movi	r13,16
  208528:	283fe41e 	bne	r5,zero,2084bc <___vfiprintf_internal_r+0xbbc>
  20852c:	10c5883a 	add	r2,r2,r3
  208530:	80c00115 	stw	r3,4(r16)
  208534:	81c00015 	stw	r7,0(r16)
  208538:	d8800c15 	stw	r2,48(sp)
  20853c:	d9800b15 	stw	r6,44(sp)
  208540:	30c00208 	cmpgei	r3,r6,8
  208544:	18011326 	beq	r3,zero,208994 <___vfiprintf_internal_r+0x1094>
  208548:	10014b26 	beq	r2,zero,208a78 <___vfiprintf_internal_r+0x1178>
  20854c:	d9800a04 	addi	r6,sp,40
  208550:	a80b883a 	mov	r5,r21
  208554:	b009883a 	mov	r4,r22
  208558:	da000215 	stw	r8,8(sp)
  20855c:	02077f40 	call	2077f4 <__sprint_r.part.0>
  208560:	103df91e 	bne	r2,zero,207d48 <___vfiprintf_internal_r+0x448>
  208564:	da000217 	ldw	r8,8(sp)
  208568:	d9000b17 	ldw	r4,44(sp)
  20856c:	d8800c17 	ldw	r2,48(sp)
  208570:	4711c83a 	sub	r8,r8,fp
  208574:	9021883a 	mov	r16,r18
  208578:	21400044 	addi	r5,r4,1
  20857c:	023dd20e 	bge	zero,r8,207cc8 <___vfiprintf_internal_r+0x3c8>
  208580:	01c00874 	movhi	r7,33
  208584:	40c00450 	cmplti	r3,r8,17
  208588:	39ffbe04 	addi	r7,r7,-264
  20858c:	03400404 	movi	r13,16
  208590:	18000726 	beq	r3,zero,2085b0 <___vfiprintf_internal_r+0xcb0>
  208594:	00002006 	br	208618 <___vfiprintf_internal_r+0xd18>
  208598:	21400084 	addi	r5,r4,2
  20859c:	84000204 	addi	r16,r16,8
  2085a0:	1809883a 	mov	r4,r3
  2085a4:	423ffc04 	addi	r8,r8,-16
  2085a8:	40c00448 	cmpgei	r3,r8,17
  2085ac:	18001a26 	beq	r3,zero,208618 <___vfiprintf_internal_r+0xd18>
  2085b0:	20c00044 	addi	r3,r4,1
  2085b4:	10800404 	addi	r2,r2,16
  2085b8:	81c00015 	stw	r7,0(r16)
  2085bc:	83400115 	stw	r13,4(r16)
  2085c0:	d8800c15 	stw	r2,48(sp)
  2085c4:	d8c00b15 	stw	r3,44(sp)
  2085c8:	19400208 	cmpgei	r5,r3,8
  2085cc:	283ff226 	beq	r5,zero,208598 <___vfiprintf_internal_r+0xc98>
  2085d0:	d9800a04 	addi	r6,sp,40
  2085d4:	a80b883a 	mov	r5,r21
  2085d8:	b009883a 	mov	r4,r22
  2085dc:	10001826 	beq	r2,zero,208640 <___vfiprintf_internal_r+0xd40>
  2085e0:	d9c00315 	stw	r7,12(sp)
  2085e4:	da000215 	stw	r8,8(sp)
  2085e8:	02077f40 	call	2077f4 <__sprint_r.part.0>
  2085ec:	103dd61e 	bne	r2,zero,207d48 <___vfiprintf_internal_r+0x448>
  2085f0:	da000217 	ldw	r8,8(sp)
  2085f4:	d9000b17 	ldw	r4,44(sp)
  2085f8:	d8800c17 	ldw	r2,48(sp)
  2085fc:	423ffc04 	addi	r8,r8,-16
  208600:	40c00448 	cmpgei	r3,r8,17
  208604:	d9c00317 	ldw	r7,12(sp)
  208608:	9021883a 	mov	r16,r18
  20860c:	21400044 	addi	r5,r4,1
  208610:	03400404 	movi	r13,16
  208614:	183fe61e 	bne	r3,zero,2085b0 <___vfiprintf_internal_r+0xcb0>
  208618:	1205883a 	add	r2,r2,r8
  20861c:	81c00015 	stw	r7,0(r16)
  208620:	82000115 	stw	r8,4(r16)
  208624:	d8800c15 	stw	r2,48(sp)
  208628:	d9400b15 	stw	r5,44(sp)
  20862c:	28c00208 	cmpgei	r3,r5,8
  208630:	1800a11e 	bne	r3,zero,2088b8 <___vfiprintf_internal_r+0xfb8>
  208634:	84000204 	addi	r16,r16,8
  208638:	29400044 	addi	r5,r5,1
  20863c:	003da206 	br	207cc8 <___vfiprintf_internal_r+0x3c8>
  208640:	01400044 	movi	r5,1
  208644:	0009883a 	mov	r4,zero
  208648:	9021883a 	mov	r16,r18
  20864c:	003fd506 	br	2085a4 <___vfiprintf_internal_r+0xca4>
  208650:	10c00060 	cmpeqi	r3,r2,1
  208654:	18011a1e 	bne	r3,zero,208ac0 <___vfiprintf_internal_r+0x11c0>
  208658:	108000a0 	cmpeqi	r2,r2,2
  20865c:	db400017 	ldw	r13,0(sp)
  208660:	103ecf26 	beq	r2,zero,2081a0 <___vfiprintf_internal_r+0x8a0>
  208664:	9027883a 	mov	r19,r18
  208668:	d9000517 	ldw	r4,20(sp)
  20866c:	b88003cc 	andi	r2,r23,15
  208670:	e006973a 	slli	r3,fp,28
  208674:	b82ed13a 	srli	r23,r23,4
  208678:	2085883a 	add	r2,r4,r2
  20867c:	10800003 	ldbu	r2,0(r2)
  208680:	e038d13a 	srli	fp,fp,4
  208684:	1deeb03a 	or	r23,r3,r23
  208688:	98bfffc5 	stb	r2,-1(r19)
  20868c:	bf04b03a 	or	r2,r23,fp
  208690:	9cffffc4 	addi	r19,r19,-1
  208694:	103ff41e 	bne	r2,zero,208668 <___vfiprintf_internal_r+0xd68>
  208698:	94f9c83a 	sub	fp,r18,r19
  20869c:	db400015 	stw	r13,0(sp)
  2086a0:	003ed806 	br	208204 <___vfiprintf_internal_r+0x904>
  2086a4:	d9800a04 	addi	r6,sp,40
  2086a8:	a80b883a 	mov	r5,r21
  2086ac:	b009883a 	mov	r4,r22
  2086b0:	02077f40 	call	2077f4 <__sprint_r.part.0>
  2086b4:	103d9e26 	beq	r2,zero,207d30 <___vfiprintf_internal_r+0x430>
  2086b8:	003da306 	br	207d48 <___vfiprintf_internal_r+0x448>
  2086bc:	01800044 	movi	r6,1
  2086c0:	0009883a 	mov	r4,zero
  2086c4:	9021883a 	mov	r16,r18
  2086c8:	003f7906 	br	2084b0 <___vfiprintf_internal_r+0xbb0>
  2086cc:	10009626 	beq	r2,zero,208928 <___vfiprintf_internal_r+0x1028>
  2086d0:	d9800a04 	addi	r6,sp,40
  2086d4:	a80b883a 	mov	r5,r21
  2086d8:	b009883a 	mov	r4,r22
  2086dc:	da000615 	stw	r8,24(sp)
  2086e0:	db400315 	stw	r13,12(sp)
  2086e4:	db800215 	stw	r14,8(sp)
  2086e8:	02077f40 	call	2077f4 <__sprint_r.part.0>
  2086ec:	103d961e 	bne	r2,zero,207d48 <___vfiprintf_internal_r+0x448>
  2086f0:	d9000b17 	ldw	r4,44(sp)
  2086f4:	d8800c17 	ldw	r2,48(sp)
  2086f8:	da000617 	ldw	r8,24(sp)
  2086fc:	db400317 	ldw	r13,12(sp)
  208700:	db800217 	ldw	r14,8(sp)
  208704:	9021883a 	mov	r16,r18
  208708:	21400044 	addi	r5,r4,1
  20870c:	003d5206 	br	207c58 <___vfiprintf_internal_r+0x358>
  208710:	d8800984 	addi	r2,sp,38
  208714:	d8801715 	stw	r2,92(sp)
  208718:	00800084 	movi	r2,2
  20871c:	d8801815 	stw	r2,96(sp)
  208720:	01400044 	movi	r5,1
  208724:	9021883a 	mov	r16,r18
  208728:	2809883a 	mov	r4,r5
  20872c:	84000204 	addi	r16,r16,8
  208730:	21400044 	addi	r5,r4,1
  208734:	003d6006 	br	207cb8 <___vfiprintf_internal_r+0x3b8>
  208738:	db400017 	ldw	r13,0(sp)
  20873c:	003e9406 	br	208190 <___vfiprintf_internal_r+0x890>
  208740:	9027883a 	mov	r19,r18
  208744:	b809883a 	mov	r4,r23
  208748:	e00b883a 	mov	r5,fp
  20874c:	01800284 	movi	r6,10
  208750:	000f883a 	mov	r7,zero
  208754:	db800315 	stw	r14,12(sp)
  208758:	da000215 	stw	r8,8(sp)
  20875c:	db400015 	stw	r13,0(sp)
  208760:	020a4600 	call	20a460 <__umoddi3>
  208764:	10800c04 	addi	r2,r2,48
  208768:	b809883a 	mov	r4,r23
  20876c:	e00b883a 	mov	r5,fp
  208770:	98bfffc5 	stb	r2,-1(r19)
  208774:	01800284 	movi	r6,10
  208778:	000f883a 	mov	r7,zero
  20877c:	0209e400 	call	209e40 <__udivdi3>
  208780:	e009883a 	mov	r4,fp
  208784:	b80b883a 	mov	r5,r23
  208788:	db400017 	ldw	r13,0(sp)
  20878c:	da000217 	ldw	r8,8(sp)
  208790:	db800317 	ldw	r14,12(sp)
  208794:	9cffffc4 	addi	r19,r19,-1
  208798:	102f883a 	mov	r23,r2
  20879c:	1839883a 	mov	fp,r3
  2087a0:	203fe81e 	bne	r4,zero,208744 <___vfiprintf_internal_r+0xe44>
  2087a4:	294002a8 	cmpgeui	r5,r5,10
  2087a8:	283fe61e 	bne	r5,zero,208744 <___vfiprintf_internal_r+0xe44>
  2087ac:	94f9c83a 	sub	fp,r18,r19
  2087b0:	003e9406 	br	208204 <___vfiprintf_internal_r+0x904>
  2087b4:	19400450 	cmplti	r5,r3,17
  2087b8:	01c00874 	movhi	r7,33
  2087bc:	2800ce1e 	bne	r5,zero,208af8 <___vfiprintf_internal_r+0x11f8>
  2087c0:	39ffc204 	addi	r7,r7,-248
  2087c4:	03c00404 	movi	r15,16
  2087c8:	00000706 	br	2087e8 <___vfiprintf_internal_r+0xee8>
  2087cc:	27c00084 	addi	ra,r4,2
  2087d0:	84000204 	addi	r16,r16,8
  2087d4:	3009883a 	mov	r4,r6
  2087d8:	18fffc04 	addi	r3,r3,-16
  2087dc:	19400448 	cmpgei	r5,r3,17
  2087e0:	28002026 	beq	r5,zero,208864 <___vfiprintf_internal_r+0xf64>
  2087e4:	21800044 	addi	r6,r4,1
  2087e8:	10800404 	addi	r2,r2,16
  2087ec:	81c00015 	stw	r7,0(r16)
  2087f0:	83c00115 	stw	r15,4(r16)
  2087f4:	d8800c15 	stw	r2,48(sp)
  2087f8:	d9800b15 	stw	r6,44(sp)
  2087fc:	31400208 	cmpgei	r5,r6,8
  208800:	283ff226 	beq	r5,zero,2087cc <___vfiprintf_internal_r+0xecc>
  208804:	d9800a04 	addi	r6,sp,40
  208808:	a80b883a 	mov	r5,r21
  20880c:	b009883a 	mov	r4,r22
  208810:	10001f26 	beq	r2,zero,208890 <___vfiprintf_internal_r+0xf90>
  208814:	d9c00815 	stw	r7,32(sp)
  208818:	d8c00715 	stw	r3,28(sp)
  20881c:	da000615 	stw	r8,24(sp)
  208820:	db400315 	stw	r13,12(sp)
  208824:	db800215 	stw	r14,8(sp)
  208828:	02077f40 	call	2077f4 <__sprint_r.part.0>
  20882c:	103d461e 	bne	r2,zero,207d48 <___vfiprintf_internal_r+0x448>
  208830:	d8c00717 	ldw	r3,28(sp)
  208834:	d9000b17 	ldw	r4,44(sp)
  208838:	d8800c17 	ldw	r2,48(sp)
  20883c:	18fffc04 	addi	r3,r3,-16
  208840:	19400448 	cmpgei	r5,r3,17
  208844:	d9c00817 	ldw	r7,32(sp)
  208848:	da000617 	ldw	r8,24(sp)
  20884c:	db400317 	ldw	r13,12(sp)
  208850:	db800217 	ldw	r14,8(sp)
  208854:	9021883a 	mov	r16,r18
  208858:	27c00044 	addi	ra,r4,1
  20885c:	03c00404 	movi	r15,16
  208860:	283fe01e 	bne	r5,zero,2087e4 <___vfiprintf_internal_r+0xee4>
  208864:	10c5883a 	add	r2,r2,r3
  208868:	80c00115 	stw	r3,4(r16)
  20886c:	81c00015 	stw	r7,0(r16)
  208870:	d8800c15 	stw	r2,48(sp)
  208874:	dfc00b15 	stw	ra,44(sp)
  208878:	f8c00208 	cmpgei	r3,ra,8
  20887c:	18002f1e 	bne	r3,zero,20893c <___vfiprintf_internal_r+0x103c>
  208880:	84000204 	addi	r16,r16,8
  208884:	f9400044 	addi	r5,ra,1
  208888:	f809883a 	mov	r4,ra
  20888c:	003ce406 	br	207c20 <___vfiprintf_internal_r+0x320>
  208890:	0009883a 	mov	r4,zero
  208894:	07c00044 	movi	ra,1
  208898:	9021883a 	mov	r16,r18
  20889c:	003fce06 	br	2087d8 <___vfiprintf_internal_r+0xed8>
  2088a0:	8dc0010e 	bge	r17,r23,2088a8 <___vfiprintf_internal_r+0xfa8>
  2088a4:	b823883a 	mov	r17,r23
  2088a8:	d8800117 	ldw	r2,4(sp)
  2088ac:	1445883a 	add	r2,r2,r17
  2088b0:	d8800115 	stw	r2,4(sp)
  2088b4:	003d1e06 	br	207d30 <___vfiprintf_internal_r+0x430>
  2088b8:	103ee526 	beq	r2,zero,208450 <___vfiprintf_internal_r+0xb50>
  2088bc:	d9800a04 	addi	r6,sp,40
  2088c0:	a80b883a 	mov	r5,r21
  2088c4:	b009883a 	mov	r4,r22
  2088c8:	02077f40 	call	2077f4 <__sprint_r.part.0>
  2088cc:	103d1e1e 	bne	r2,zero,207d48 <___vfiprintf_internal_r+0x448>
  2088d0:	d9400b17 	ldw	r5,44(sp)
  2088d4:	d8800c17 	ldw	r2,48(sp)
  2088d8:	9021883a 	mov	r16,r18
  2088dc:	29400044 	addi	r5,r5,1
  2088e0:	003cf906 	br	207cc8 <___vfiprintf_internal_r+0x3c8>
  2088e4:	d8000b15 	stw	zero,44(sp)
  2088e8:	9021883a 	mov	r16,r18
  2088ec:	003d7106 	br	207eb4 <___vfiprintf_internal_r+0x5b4>
  2088f0:	4000731e 	bne	r8,zero,208ac0 <___vfiprintf_internal_r+0x11c0>
  2088f4:	0011883a 	mov	r8,zero
  2088f8:	0039883a 	mov	fp,zero
  2088fc:	9027883a 	mov	r19,r18
  208900:	003e4006 	br	208204 <___vfiprintf_internal_r+0x904>
  208904:	0039883a 	mov	fp,zero
  208908:	003e9106 	br	208350 <___vfiprintf_internal_r+0xa50>
  20890c:	b839d7fa 	srai	fp,r23,31
  208910:	e005883a 	mov	r2,fp
  208914:	003dd206 	br	208060 <___vfiprintf_internal_r+0x760>
  208918:	01400044 	movi	r5,1
  20891c:	0009883a 	mov	r4,zero
  208920:	9021883a 	mov	r16,r18
  208924:	003ce406 	br	207cb8 <___vfiprintf_internal_r+0x3b8>
  208928:	70002b1e 	bne	r14,zero,2089d8 <___vfiprintf_internal_r+0x10d8>
  20892c:	0009883a 	mov	r4,zero
  208930:	01400044 	movi	r5,1
  208934:	9021883a 	mov	r16,r18
  208938:	003cdf06 	br	207cb8 <___vfiprintf_internal_r+0x3b8>
  20893c:	10003726 	beq	r2,zero,208a1c <___vfiprintf_internal_r+0x111c>
  208940:	d9800a04 	addi	r6,sp,40
  208944:	a80b883a 	mov	r5,r21
  208948:	b009883a 	mov	r4,r22
  20894c:	da000615 	stw	r8,24(sp)
  208950:	db400315 	stw	r13,12(sp)
  208954:	db800215 	stw	r14,8(sp)
  208958:	02077f40 	call	2077f4 <__sprint_r.part.0>
  20895c:	103cfa1e 	bne	r2,zero,207d48 <___vfiprintf_internal_r+0x448>
  208960:	d9000b17 	ldw	r4,44(sp)
  208964:	d8800c17 	ldw	r2,48(sp)
  208968:	da000617 	ldw	r8,24(sp)
  20896c:	db400317 	ldw	r13,12(sp)
  208970:	db800217 	ldw	r14,8(sp)
  208974:	9021883a 	mov	r16,r18
  208978:	21400044 	addi	r5,r4,1
  20897c:	003ca806 	br	207c20 <___vfiprintf_internal_r+0x320>
  208980:	a0800007 	ldb	r2,0(r20)
  208984:	d8c00415 	stw	r3,16(sp)
  208988:	003c1e06 	br	207a04 <___vfiprintf_internal_r+0x104>
  20898c:	9027883a 	mov	r19,r18
  208990:	003e1c06 	br	208204 <___vfiprintf_internal_r+0x904>
  208994:	84000204 	addi	r16,r16,8
  208998:	31400044 	addi	r5,r6,1
  20899c:	3009883a 	mov	r4,r6
  2089a0:	003cc706 	br	207cc0 <___vfiprintf_internal_r+0x3c0>
  2089a4:	00c00c04 	movi	r3,48
  2089a8:	d88009c5 	stb	r2,39(sp)
  2089ac:	d8c00985 	stb	r3,38(sp)
  2089b0:	6b400094 	ori	r13,r13,2
  2089b4:	00800084 	movi	r2,2
  2089b8:	003d2006 	br	207e3c <___vfiprintf_internal_r+0x53c>
  2089bc:	d9400117 	ldw	r5,4(sp)
  2089c0:	20800017 	ldw	r2,0(r4)
  2089c4:	d8c00415 	stw	r3,16(sp)
  2089c8:	2809d7fa 	srai	r4,r5,31
  2089cc:	11400015 	stw	r5,0(r2)
  2089d0:	11000115 	stw	r4,4(r2)
  2089d4:	003bf306 	br	2079a4 <___vfiprintf_internal_r+0xa4>
  2089d8:	d8800984 	addi	r2,sp,38
  2089dc:	d8801715 	stw	r2,92(sp)
  2089e0:	00800084 	movi	r2,2
  2089e4:	d8801815 	stw	r2,96(sp)
  2089e8:	01000044 	movi	r4,1
  2089ec:	9021883a 	mov	r16,r18
  2089f0:	003f4e06 	br	20872c <___vfiprintf_internal_r+0xe2c>
  2089f4:	9809883a 	mov	r4,r19
  2089f8:	d8c00215 	stw	r3,8(sp)
  2089fc:	db400015 	stw	r13,0(sp)
  208a00:	02004000 	call	200400 <strlen>
  208a04:	d8c00217 	ldw	r3,8(sp)
  208a08:	db400017 	ldw	r13,0(sp)
  208a0c:	1039883a 	mov	fp,r2
  208a10:	102f883a 	mov	r23,r2
  208a14:	d8c00415 	stw	r3,16(sp)
  208a18:	003c7206 	br	207be4 <___vfiprintf_internal_r+0x2e4>
  208a1c:	d8c00947 	ldb	r3,37(sp)
  208a20:	18001b26 	beq	r3,zero,208a90 <___vfiprintf_internal_r+0x1190>
  208a24:	d8800944 	addi	r2,sp,37
  208a28:	d8801715 	stw	r2,92(sp)
  208a2c:	00800044 	movi	r2,1
  208a30:	d8801815 	stw	r2,96(sp)
  208a34:	01400044 	movi	r5,1
  208a38:	9021883a 	mov	r16,r18
  208a3c:	003c8306 	br	207c4c <___vfiprintf_internal_r+0x34c>
  208a40:	d8800417 	ldw	r2,16(sp)
  208a44:	10800017 	ldw	r2,0(r2)
  208a48:	d8c00415 	stw	r3,16(sp)
  208a4c:	d8c00117 	ldw	r3,4(sp)
  208a50:	10c00015 	stw	r3,0(r2)
  208a54:	003bd306 	br	2079a4 <___vfiprintf_internal_r+0xa4>
  208a58:	408001f0 	cmpltui	r2,r8,7
  208a5c:	4039883a 	mov	fp,r8
  208a60:	10000926 	beq	r2,zero,208a88 <___vfiprintf_internal_r+0x1188>
  208a64:	04c00874 	movhi	r19,33
  208a68:	e02f883a 	mov	r23,fp
  208a6c:	d8c00415 	stw	r3,16(sp)
  208a70:	9cff4104 	addi	r19,r19,-764
  208a74:	003c5b06 	br	207be4 <___vfiprintf_internal_r+0x2e4>
  208a78:	01400044 	movi	r5,1
  208a7c:	0009883a 	mov	r4,zero
  208a80:	9021883a 	mov	r16,r18
  208a84:	003c8e06 	br	207cc0 <___vfiprintf_internal_r+0x3c0>
  208a88:	07000184 	movi	fp,6
  208a8c:	003ff506 	br	208a64 <___vfiprintf_internal_r+0x1164>
  208a90:	703f1f1e 	bne	r14,zero,208710 <___vfiprintf_internal_r+0xe10>
  208a94:	0009883a 	mov	r4,zero
  208a98:	01400044 	movi	r5,1
  208a9c:	9021883a 	mov	r16,r18
  208aa0:	003c8706 	br	207cc0 <___vfiprintf_internal_r+0x3c0>
  208aa4:	d9800945 	stb	r6,37(sp)
  208aa8:	003c4806 	br	207bcc <___vfiprintf_internal_r+0x2cc>
  208aac:	d9800a04 	addi	r6,sp,40
  208ab0:	a80b883a 	mov	r5,r21
  208ab4:	b009883a 	mov	r4,r22
  208ab8:	02077f40 	call	2077f4 <__sprint_r.part.0>
  208abc:	003ca206 	br	207d48 <___vfiprintf_internal_r+0x448>
  208ac0:	db400017 	ldw	r13,0(sp)
  208ac4:	003d7306 	br	208094 <___vfiprintf_internal_r+0x794>
  208ac8:	402f883a 	mov	r23,r8
  208acc:	d8c00415 	stw	r3,16(sp)
  208ad0:	4039883a 	mov	fp,r8
  208ad4:	003c4306 	br	207be4 <___vfiprintf_internal_r+0x2e4>
  208ad8:	d9800945 	stb	r6,37(sp)
  208adc:	003d9106 	br	208124 <___vfiprintf_internal_r+0x824>
  208ae0:	d9800945 	stb	r6,37(sp)
  208ae4:	003e1006 	br	208328 <___vfiprintf_internal_r+0xa28>
  208ae8:	d9800945 	stb	r6,37(sp)
  208aec:	003def06 	br	2082ac <___vfiprintf_internal_r+0x9ac>
  208af0:	d9800945 	stb	r6,37(sp)
  208af4:	003e1e06 	br	208370 <___vfiprintf_internal_r+0xa70>
  208af8:	303f883a 	mov	ra,r6
  208afc:	39ffc204 	addi	r7,r7,-248
  208b00:	003f5806 	br	208864 <___vfiprintf_internal_r+0xf64>
  208b04:	d9800945 	stb	r6,37(sp)
  208b08:	003d4d06 	br	208040 <___vfiprintf_internal_r+0x740>
  208b0c:	21400044 	addi	r5,r4,1
  208b10:	39ffc204 	addi	r7,r7,-248
  208b14:	003d3706 	br	207ff4 <___vfiprintf_internal_r+0x6f4>
  208b18:	280d883a 	mov	r6,r5
  208b1c:	39ffbe04 	addi	r7,r7,-264
  208b20:	003e8206 	br	20852c <___vfiprintf_internal_r+0xc2c>
  208b24:	00bfffc4 	movi	r2,-1
  208b28:	d8800115 	stw	r2,4(sp)
  208b2c:	003c8906 	br	207d54 <___vfiprintf_internal_r+0x454>
  208b30:	d8800417 	ldw	r2,16(sp)
  208b34:	12000017 	ldw	r8,0(r2)
  208b38:	11000104 	addi	r4,r2,4
  208b3c:	4000010e 	bge	r8,zero,208b44 <___vfiprintf_internal_r+0x1244>
  208b40:	023fffc4 	movi	r8,-1
  208b44:	a0800043 	ldbu	r2,1(r20)
  208b48:	d9000415 	stw	r4,16(sp)
  208b4c:	1829883a 	mov	r20,r3
  208b50:	10803fcc 	andi	r2,r2,255
  208b54:	1080201c 	xori	r2,r2,128
  208b58:	10bfe004 	addi	r2,r2,-128
  208b5c:	003ba906 	br	207a04 <___vfiprintf_internal_r+0x104>

00208b60 <__vfiprintf_internal>:
  208b60:	00c00874 	movhi	r3,33
  208b64:	2005883a 	mov	r2,r4
  208b68:	1907b117 	ldw	r4,7876(r3)
  208b6c:	300f883a 	mov	r7,r6
  208b70:	280d883a 	mov	r6,r5
  208b74:	100b883a 	mov	r5,r2
  208b78:	02079001 	jmpi	207900 <___vfiprintf_internal_r>

00208b7c <__sbprintf>:
  208b7c:	2880030b 	ldhu	r2,12(r5)
  208b80:	2b001917 	ldw	r12,100(r5)
  208b84:	2ac0038b 	ldhu	r11,14(r5)
  208b88:	2a800717 	ldw	r10,28(r5)
  208b8c:	2a400917 	ldw	r9,36(r5)
  208b90:	defee204 	addi	sp,sp,-1144
  208b94:	da001a04 	addi	r8,sp,104
  208b98:	00c10004 	movi	r3,1024
  208b9c:	dc011a15 	stw	r16,1128(sp)
  208ba0:	10bfff4c 	andi	r2,r2,65533
  208ba4:	2821883a 	mov	r16,r5
  208ba8:	d80b883a 	mov	r5,sp
  208bac:	dc811c15 	stw	r18,1136(sp)
  208bb0:	dc411b15 	stw	r17,1132(sp)
  208bb4:	dfc11d15 	stw	ra,1140(sp)
  208bb8:	2025883a 	mov	r18,r4
  208bbc:	d880030d 	sth	r2,12(sp)
  208bc0:	db001915 	stw	r12,100(sp)
  208bc4:	dac0038d 	sth	r11,14(sp)
  208bc8:	da800715 	stw	r10,28(sp)
  208bcc:	da400915 	stw	r9,36(sp)
  208bd0:	da000015 	stw	r8,0(sp)
  208bd4:	da000415 	stw	r8,16(sp)
  208bd8:	d8c00215 	stw	r3,8(sp)
  208bdc:	d8c00515 	stw	r3,20(sp)
  208be0:	d8000615 	stw	zero,24(sp)
  208be4:	02079000 	call	207900 <___vfiprintf_internal_r>
  208be8:	1023883a 	mov	r17,r2
  208bec:	10000d0e 	bge	r2,zero,208c24 <__sbprintf+0xa8>
  208bf0:	d880030b 	ldhu	r2,12(sp)
  208bf4:	1080100c 	andi	r2,r2,64
  208bf8:	10000326 	beq	r2,zero,208c08 <__sbprintf+0x8c>
  208bfc:	8080030b 	ldhu	r2,12(r16)
  208c00:	10801014 	ori	r2,r2,64
  208c04:	8080030d 	sth	r2,12(r16)
  208c08:	8805883a 	mov	r2,r17
  208c0c:	dfc11d17 	ldw	ra,1140(sp)
  208c10:	dc811c17 	ldw	r18,1136(sp)
  208c14:	dc411b17 	ldw	r17,1132(sp)
  208c18:	dc011a17 	ldw	r16,1128(sp)
  208c1c:	dec11e04 	addi	sp,sp,1144
  208c20:	f800283a 	ret
  208c24:	d80b883a 	mov	r5,sp
  208c28:	9009883a 	mov	r4,r18
  208c2c:	02042800 	call	204280 <_fflush_r>
  208c30:	103fef26 	beq	r2,zero,208bf0 <__sbprintf+0x74>
  208c34:	047fffc4 	movi	r17,-1
  208c38:	003fed06 	br	208bf0 <__sbprintf+0x74>

00208c3c <_write_r>:
  208c3c:	2807883a 	mov	r3,r5
  208c40:	defffe04 	addi	sp,sp,-8
  208c44:	dc000015 	stw	r16,0(sp)
  208c48:	300b883a 	mov	r5,r6
  208c4c:	00800874 	movhi	r2,33
  208c50:	380d883a 	mov	r6,r7
  208c54:	2021883a 	mov	r16,r4
  208c58:	1809883a 	mov	r4,r3
  208c5c:	dfc00115 	stw	ra,4(sp)
  208c60:	100eb715 	stw	zero,15068(r2)
  208c64:	020de080 	call	20de08 <write>
  208c68:	10ffffd8 	cmpnei	r3,r2,-1
  208c6c:	18000426 	beq	r3,zero,208c80 <_write_r+0x44>
  208c70:	dfc00117 	ldw	ra,4(sp)
  208c74:	dc000017 	ldw	r16,0(sp)
  208c78:	dec00204 	addi	sp,sp,8
  208c7c:	f800283a 	ret
  208c80:	00c00874 	movhi	r3,33
  208c84:	18ceb717 	ldw	r3,15068(r3)
  208c88:	183ff926 	beq	r3,zero,208c70 <_write_r+0x34>
  208c8c:	80c00015 	stw	r3,0(r16)
  208c90:	dfc00117 	ldw	ra,4(sp)
  208c94:	dc000017 	ldw	r16,0(sp)
  208c98:	dec00204 	addi	sp,sp,8
  208c9c:	f800283a 	ret

00208ca0 <_close_r>:
  208ca0:	defffe04 	addi	sp,sp,-8
  208ca4:	dc000015 	stw	r16,0(sp)
  208ca8:	00800874 	movhi	r2,33
  208cac:	2021883a 	mov	r16,r4
  208cb0:	2809883a 	mov	r4,r5
  208cb4:	dfc00115 	stw	ra,4(sp)
  208cb8:	100eb715 	stw	zero,15068(r2)
  208cbc:	020d3b80 	call	20d3b8 <close>
  208cc0:	10ffffd8 	cmpnei	r3,r2,-1
  208cc4:	18000426 	beq	r3,zero,208cd8 <_close_r+0x38>
  208cc8:	dfc00117 	ldw	ra,4(sp)
  208ccc:	dc000017 	ldw	r16,0(sp)
  208cd0:	dec00204 	addi	sp,sp,8
  208cd4:	f800283a 	ret
  208cd8:	00c00874 	movhi	r3,33
  208cdc:	18ceb717 	ldw	r3,15068(r3)
  208ce0:	183ff926 	beq	r3,zero,208cc8 <_close_r+0x28>
  208ce4:	80c00015 	stw	r3,0(r16)
  208ce8:	dfc00117 	ldw	ra,4(sp)
  208cec:	dc000017 	ldw	r16,0(sp)
  208cf0:	dec00204 	addi	sp,sp,8
  208cf4:	f800283a 	ret

00208cf8 <__assert_func>:
  208cf8:	00800874 	movhi	r2,33
  208cfc:	1207b117 	ldw	r8,7876(r2)
  208d00:	defffc04 	addi	sp,sp,-16
  208d04:	3807883a 	mov	r3,r7
  208d08:	3005883a 	mov	r2,r6
  208d0c:	dfc00315 	stw	ra,12(sp)
  208d10:	42400317 	ldw	r9,12(r8)
  208d14:	200f883a 	mov	r7,r4
  208d18:	2811883a 	mov	r8,r5
  208d1c:	180d883a 	mov	r6,r3
  208d20:	10000a26 	beq	r2,zero,208d4c <__assert_func+0x54>
  208d24:	00c00874 	movhi	r3,33
  208d28:	18ffc604 	addi	r3,r3,-232
  208d2c:	01400874 	movhi	r5,33
  208d30:	297fca04 	addi	r5,r5,-216
  208d34:	4809883a 	mov	r4,r9
  208d38:	d8c00115 	stw	r3,4(sp)
  208d3c:	da000015 	stw	r8,0(sp)
  208d40:	d8800215 	stw	r2,8(sp)
  208d44:	02090900 	call	209090 <fiprintf>
  208d48:	02098d80 	call	2098d8 <abort>
  208d4c:	00c00874 	movhi	r3,33
  208d50:	18ffc904 	addi	r3,r3,-220
  208d54:	1805883a 	mov	r2,r3
  208d58:	003ff406 	br	208d2c <__assert_func+0x34>

00208d5c <__assert>:
  208d5c:	deffff04 	addi	sp,sp,-4
  208d60:	300f883a 	mov	r7,r6
  208d64:	000d883a 	mov	r6,zero
  208d68:	dfc00015 	stw	ra,0(sp)
  208d6c:	0208cf80 	call	208cf8 <__assert_func>

00208d70 <_calloc_r>:
  208d70:	2806d43a 	srli	r3,r5,16
  208d74:	defffb04 	addi	sp,sp,-20
  208d78:	dc400115 	stw	r17,4(sp)
  208d7c:	dc000015 	stw	r16,0(sp)
  208d80:	dfc00415 	stw	ra,16(sp)
  208d84:	dcc00315 	stw	r19,12(sp)
  208d88:	dc800215 	stw	r18,8(sp)
  208d8c:	3022d43a 	srli	r17,r6,16
  208d90:	2805883a 	mov	r2,r5
  208d94:	2021883a 	mov	r16,r4
  208d98:	18002d1e 	bne	r3,zero,208e50 <_calloc_r+0xe0>
  208d9c:	88003e1e 	bne	r17,zero,208e98 <_calloc_r+0x128>
  208da0:	317fffcc 	andi	r5,r6,65535
  208da4:	113fffcc 	andi	r4,r2,65535
  208da8:	020abd80 	call	20abd8 <__mulsi3>
  208dac:	100b883a 	mov	r5,r2
  208db0:	8009883a 	mov	r4,r16
  208db4:	02053640 	call	205364 <_malloc_r>
  208db8:	1009883a 	mov	r4,r2
  208dbc:	10001626 	beq	r2,zero,208e18 <_calloc_r+0xa8>
  208dc0:	11bfff17 	ldw	r6,-4(r2)
  208dc4:	00bfff04 	movi	r2,-4
  208dc8:	308c703a 	and	r6,r6,r2
  208dcc:	31bfff04 	addi	r6,r6,-4
  208dd0:	30800968 	cmpgeui	r2,r6,37
  208dd4:	1000181e 	bne	r2,zero,208e38 <_calloc_r+0xc8>
  208dd8:	30800530 	cmpltui	r2,r6,20
  208ddc:	10000a1e 	bne	r2,zero,208e08 <_calloc_r+0x98>
  208de0:	20000015 	stw	zero,0(r4)
  208de4:	20000115 	stw	zero,4(r4)
  208de8:	30800728 	cmpgeui	r2,r6,28
  208dec:	10001626 	beq	r2,zero,208e48 <_calloc_r+0xd8>
  208df0:	20000215 	stw	zero,8(r4)
  208df4:	20000315 	stw	zero,12(r4)
  208df8:	31800920 	cmpeqi	r6,r6,36
  208dfc:	30002d1e 	bne	r6,zero,208eb4 <_calloc_r+0x144>
  208e00:	20800404 	addi	r2,r4,16
  208e04:	00000106 	br	208e0c <_calloc_r+0x9c>
  208e08:	2005883a 	mov	r2,r4
  208e0c:	10000015 	stw	zero,0(r2)
  208e10:	10000115 	stw	zero,4(r2)
  208e14:	10000215 	stw	zero,8(r2)
  208e18:	2005883a 	mov	r2,r4
  208e1c:	dfc00417 	ldw	ra,16(sp)
  208e20:	dcc00317 	ldw	r19,12(sp)
  208e24:	dc800217 	ldw	r18,8(sp)
  208e28:	dc400117 	ldw	r17,4(sp)
  208e2c:	dc000017 	ldw	r16,0(sp)
  208e30:	dec00504 	addi	sp,sp,20
  208e34:	f800283a 	ret
  208e38:	000b883a 	mov	r5,zero
  208e3c:	0205e400 	call	205e40 <memset>
  208e40:	1009883a 	mov	r4,r2
  208e44:	003ff406 	br	208e18 <_calloc_r+0xa8>
  208e48:	20800204 	addi	r2,r4,8
  208e4c:	003fef06 	br	208e0c <_calloc_r+0x9c>
  208e50:	8800131e 	bne	r17,zero,208ea0 <_calloc_r+0x130>
  208e54:	1823883a 	mov	r17,r3
  208e58:	3027883a 	mov	r19,r6
  208e5c:	317fffcc 	andi	r5,r6,65535
  208e60:	113fffcc 	andi	r4,r2,65535
  208e64:	020abd80 	call	20abd8 <__mulsi3>
  208e68:	897fffcc 	andi	r5,r17,65535
  208e6c:	993fffcc 	andi	r4,r19,65535
  208e70:	1025883a 	mov	r18,r2
  208e74:	020abd80 	call	20abd8 <__mulsi3>
  208e78:	900ad43a 	srli	r5,r18,16
  208e7c:	114b883a 	add	r5,r2,r5
  208e80:	2804d43a 	srli	r2,r5,16
  208e84:	1000061e 	bne	r2,zero,208ea0 <_calloc_r+0x130>
  208e88:	280a943a 	slli	r5,r5,16
  208e8c:	94bfffcc 	andi	r18,r18,65535
  208e90:	2c8ab03a 	or	r5,r5,r18
  208e94:	003fc606 	br	208db0 <_calloc_r+0x40>
  208e98:	2827883a 	mov	r19,r5
  208e9c:	003fef06 	br	208e5c <_calloc_r+0xec>
  208ea0:	0208ec40 	call	208ec4 <__errno>
  208ea4:	00c00304 	movi	r3,12
  208ea8:	10c00015 	stw	r3,0(r2)
  208eac:	0009883a 	mov	r4,zero
  208eb0:	003fd906 	br	208e18 <_calloc_r+0xa8>
  208eb4:	20000415 	stw	zero,16(r4)
  208eb8:	20800604 	addi	r2,r4,24
  208ebc:	20000515 	stw	zero,20(r4)
  208ec0:	003fd206 	br	208e0c <_calloc_r+0x9c>

00208ec4 <__errno>:
  208ec4:	00800874 	movhi	r2,33
  208ec8:	1087b117 	ldw	r2,7876(r2)
  208ecc:	f800283a 	ret

00208ed0 <_fclose_r.part.0>:
  208ed0:	defffc04 	addi	sp,sp,-16
  208ed4:	dc800215 	stw	r18,8(sp)
  208ed8:	dc400115 	stw	r17,4(sp)
  208edc:	dc000015 	stw	r16,0(sp)
  208ee0:	dfc00315 	stw	ra,12(sp)
  208ee4:	2821883a 	mov	r16,r5
  208ee8:	2023883a 	mov	r17,r4
  208eec:	02040580 	call	204058 <__sflush_r>
  208ef0:	80c00b17 	ldw	r3,44(r16)
  208ef4:	1025883a 	mov	r18,r2
  208ef8:	18000426 	beq	r3,zero,208f0c <_fclose_r.part.0+0x3c>
  208efc:	81400717 	ldw	r5,28(r16)
  208f00:	8809883a 	mov	r4,r17
  208f04:	183ee83a 	callr	r3
  208f08:	10001916 	blt	r2,zero,208f70 <_fclose_r.part.0+0xa0>
  208f0c:	8080030b 	ldhu	r2,12(r16)
  208f10:	1080200c 	andi	r2,r2,128
  208f14:	10001a1e 	bne	r2,zero,208f80 <_fclose_r.part.0+0xb0>
  208f18:	81400c17 	ldw	r5,48(r16)
  208f1c:	28000526 	beq	r5,zero,208f34 <_fclose_r.part.0+0x64>
  208f20:	80801004 	addi	r2,r16,64
  208f24:	28800226 	beq	r5,r2,208f30 <_fclose_r.part.0+0x60>
  208f28:	8809883a 	mov	r4,r17
  208f2c:	020482c0 	call	20482c <_free_r>
  208f30:	80000c15 	stw	zero,48(r16)
  208f34:	81401117 	ldw	r5,68(r16)
  208f38:	28000326 	beq	r5,zero,208f48 <_fclose_r.part.0+0x78>
  208f3c:	8809883a 	mov	r4,r17
  208f40:	020482c0 	call	20482c <_free_r>
  208f44:	80001115 	stw	zero,68(r16)
  208f48:	02046d80 	call	2046d8 <__sfp_lock_acquire>
  208f4c:	8000030d 	sth	zero,12(r16)
  208f50:	02046dc0 	call	2046dc <__sfp_lock_release>
  208f54:	9005883a 	mov	r2,r18
  208f58:	dfc00317 	ldw	ra,12(sp)
  208f5c:	dc800217 	ldw	r18,8(sp)
  208f60:	dc400117 	ldw	r17,4(sp)
  208f64:	dc000017 	ldw	r16,0(sp)
  208f68:	dec00404 	addi	sp,sp,16
  208f6c:	f800283a 	ret
  208f70:	8080030b 	ldhu	r2,12(r16)
  208f74:	04bfffc4 	movi	r18,-1
  208f78:	1080200c 	andi	r2,r2,128
  208f7c:	103fe626 	beq	r2,zero,208f18 <_fclose_r.part.0+0x48>
  208f80:	81400417 	ldw	r5,16(r16)
  208f84:	8809883a 	mov	r4,r17
  208f88:	020482c0 	call	20482c <_free_r>
  208f8c:	003fe206 	br	208f18 <_fclose_r.part.0+0x48>

00208f90 <_fclose_r>:
  208f90:	28001926 	beq	r5,zero,208ff8 <_fclose_r+0x68>
  208f94:	defffd04 	addi	sp,sp,-12
  208f98:	dc000115 	stw	r16,4(sp)
  208f9c:	dfc00215 	stw	ra,8(sp)
  208fa0:	2021883a 	mov	r16,r4
  208fa4:	20000226 	beq	r4,zero,208fb0 <_fclose_r+0x20>
  208fa8:	20800e17 	ldw	r2,56(r4)
  208fac:	10000c26 	beq	r2,zero,208fe0 <_fclose_r+0x50>
  208fb0:	2880030f 	ldh	r2,12(r5)
  208fb4:	1000051e 	bne	r2,zero,208fcc <_fclose_r+0x3c>
  208fb8:	0005883a 	mov	r2,zero
  208fbc:	dfc00217 	ldw	ra,8(sp)
  208fc0:	dc000117 	ldw	r16,4(sp)
  208fc4:	dec00304 	addi	sp,sp,12
  208fc8:	f800283a 	ret
  208fcc:	8009883a 	mov	r4,r16
  208fd0:	dfc00217 	ldw	ra,8(sp)
  208fd4:	dc000117 	ldw	r16,4(sp)
  208fd8:	dec00304 	addi	sp,sp,12
  208fdc:	0208ed01 	jmpi	208ed0 <_fclose_r.part.0>
  208fe0:	d9400015 	stw	r5,0(sp)
  208fe4:	02046c80 	call	2046c8 <__sinit>
  208fe8:	d9400017 	ldw	r5,0(sp)
  208fec:	2880030f 	ldh	r2,12(r5)
  208ff0:	103ff126 	beq	r2,zero,208fb8 <_fclose_r+0x28>
  208ff4:	003ff506 	br	208fcc <_fclose_r+0x3c>
  208ff8:	0005883a 	mov	r2,zero
  208ffc:	f800283a 	ret

00209000 <fclose>:
  209000:	20000826 	beq	r4,zero,209024 <fclose+0x24>
  209004:	00800874 	movhi	r2,33
  209008:	200b883a 	mov	r5,r4
  20900c:	1107b117 	ldw	r4,7876(r2)
  209010:	20000226 	beq	r4,zero,20901c <fclose+0x1c>
  209014:	20800e17 	ldw	r2,56(r4)
  209018:	10000526 	beq	r2,zero,209030 <fclose+0x30>
  20901c:	2880030f 	ldh	r2,12(r5)
  209020:	1000021e 	bne	r2,zero,20902c <fclose+0x2c>
  209024:	0005883a 	mov	r2,zero
  209028:	f800283a 	ret
  20902c:	0208ed01 	jmpi	208ed0 <_fclose_r.part.0>
  209030:	defffd04 	addi	sp,sp,-12
  209034:	d9400115 	stw	r5,4(sp)
  209038:	d9000015 	stw	r4,0(sp)
  20903c:	dfc00215 	stw	ra,8(sp)
  209040:	02046c80 	call	2046c8 <__sinit>
  209044:	d9400117 	ldw	r5,4(sp)
  209048:	d9000017 	ldw	r4,0(sp)
  20904c:	2880030f 	ldh	r2,12(r5)
  209050:	10000326 	beq	r2,zero,209060 <fclose+0x60>
  209054:	dfc00217 	ldw	ra,8(sp)
  209058:	dec00304 	addi	sp,sp,12
  20905c:	0208ed01 	jmpi	208ed0 <_fclose_r.part.0>
  209060:	0005883a 	mov	r2,zero
  209064:	dfc00217 	ldw	ra,8(sp)
  209068:	dec00304 	addi	sp,sp,12
  20906c:	f800283a 	ret

00209070 <_fiprintf_r>:
  209070:	defffe04 	addi	sp,sp,-8
  209074:	dfc00015 	stw	ra,0(sp)
  209078:	d9c00115 	stw	r7,4(sp)
  20907c:	d9c00104 	addi	r7,sp,4
  209080:	02096440 	call	209644 <_vfiprintf_r>
  209084:	dfc00017 	ldw	ra,0(sp)
  209088:	dec00204 	addi	sp,sp,8
  20908c:	f800283a 	ret

00209090 <fiprintf>:
  209090:	defffd04 	addi	sp,sp,-12
  209094:	2005883a 	mov	r2,r4
  209098:	dfc00015 	stw	ra,0(sp)
  20909c:	d9800115 	stw	r6,4(sp)
  2090a0:	d9c00215 	stw	r7,8(sp)
  2090a4:	00c00874 	movhi	r3,33
  2090a8:	1907b117 	ldw	r4,7876(r3)
  2090ac:	280d883a 	mov	r6,r5
  2090b0:	d9c00104 	addi	r7,sp,4
  2090b4:	100b883a 	mov	r5,r2
  2090b8:	02096440 	call	209644 <_vfiprintf_r>
  2090bc:	dfc00017 	ldw	ra,0(sp)
  2090c0:	dec00304 	addi	sp,sp,12
  2090c4:	f800283a 	ret

002090c8 <__fputwc>:
  2090c8:	defff904 	addi	sp,sp,-28
  2090cc:	dcc00415 	stw	r19,16(sp)
  2090d0:	dc800315 	stw	r18,12(sp)
  2090d4:	dc000115 	stw	r16,4(sp)
  2090d8:	dfc00615 	stw	ra,24(sp)
  2090dc:	dd000515 	stw	r20,20(sp)
  2090e0:	dc400215 	stw	r17,8(sp)
  2090e4:	2025883a 	mov	r18,r4
  2090e8:	2827883a 	mov	r19,r5
  2090ec:	3021883a 	mov	r16,r6
  2090f0:	02093f40 	call	2093f4 <__locale_mb_cur_max>
  2090f4:	10800058 	cmpnei	r2,r2,1
  2090f8:	1000071e 	bne	r2,zero,209118 <__fputwc+0x50>
  2090fc:	98bfffc4 	addi	r2,r19,-1
  209100:	10803fe8 	cmpgeui	r2,r2,255
  209104:	1000041e 	bne	r2,zero,209118 <__fputwc+0x50>
  209108:	980b883a 	mov	r5,r19
  20910c:	dcc000c5 	stb	r19,3(sp)
  209110:	05000044 	movi	r20,1
  209114:	00000a06 	br	209140 <__fputwc+0x78>
  209118:	81c01704 	addi	r7,r16,92
  20911c:	980d883a 	mov	r6,r19
  209120:	d94000c4 	addi	r5,sp,3
  209124:	9009883a 	mov	r4,r18
  209128:	02097a80 	call	2097a8 <_wcrtomb_r>
  20912c:	1029883a 	mov	r20,r2
  209130:	10bfffd8 	cmpnei	r2,r2,-1
  209134:	10003926 	beq	r2,zero,20921c <__fputwc+0x154>
  209138:	a0001f26 	beq	r20,zero,2091b8 <__fputwc+0xf0>
  20913c:	d94000c3 	ldbu	r5,3(sp)
  209140:	0023883a 	mov	r17,zero
  209144:	00000a06 	br	209170 <__fputwc+0xa8>
  209148:	80800017 	ldw	r2,0(r16)
  20914c:	11400005 	stb	r5,0(r2)
  209150:	80c00017 	ldw	r3,0(r16)
  209154:	18c00044 	addi	r3,r3,1
  209158:	80c00015 	stw	r3,0(r16)
  20915c:	8c400044 	addi	r17,r17,1
  209160:	d88000c4 	addi	r2,sp,3
  209164:	1447883a 	add	r3,r2,r17
  209168:	8d00132e 	bgeu	r17,r20,2091b8 <__fputwc+0xf0>
  20916c:	19400003 	ldbu	r5,0(r3)
  209170:	80c00217 	ldw	r3,8(r16)
  209174:	18ffffc4 	addi	r3,r3,-1
  209178:	80c00215 	stw	r3,8(r16)
  20917c:	183ff20e 	bge	r3,zero,209148 <__fputwc+0x80>
  209180:	80800617 	ldw	r2,24(r16)
  209184:	18801616 	blt	r3,r2,2091e0 <__fputwc+0x118>
  209188:	80800017 	ldw	r2,0(r16)
  20918c:	11400005 	stb	r5,0(r2)
  209190:	80800017 	ldw	r2,0(r16)
  209194:	10c00003 	ldbu	r3,0(r2)
  209198:	10800044 	addi	r2,r2,1
  20919c:	18c002a0 	cmpeqi	r3,r3,10
  2091a0:	1800171e 	bne	r3,zero,209200 <__fputwc+0x138>
  2091a4:	80800015 	stw	r2,0(r16)
  2091a8:	8c400044 	addi	r17,r17,1
  2091ac:	d88000c4 	addi	r2,sp,3
  2091b0:	1447883a 	add	r3,r2,r17
  2091b4:	8d3fed36 	bltu	r17,r20,20916c <__fputwc+0xa4>
  2091b8:	9829883a 	mov	r20,r19
  2091bc:	a005883a 	mov	r2,r20
  2091c0:	dfc00617 	ldw	ra,24(sp)
  2091c4:	dd000517 	ldw	r20,20(sp)
  2091c8:	dcc00417 	ldw	r19,16(sp)
  2091cc:	dc800317 	ldw	r18,12(sp)
  2091d0:	dc400217 	ldw	r17,8(sp)
  2091d4:	dc000117 	ldw	r16,4(sp)
  2091d8:	dec00704 	addi	sp,sp,28
  2091dc:	f800283a 	ret
  2091e0:	29403fcc 	andi	r5,r5,255
  2091e4:	800d883a 	mov	r6,r16
  2091e8:	9009883a 	mov	r4,r18
  2091ec:	02096480 	call	209648 <__swbuf_r>
  2091f0:	10bfffe0 	cmpeqi	r2,r2,-1
  2091f4:	103fd926 	beq	r2,zero,20915c <__fputwc+0x94>
  2091f8:	053fffc4 	movi	r20,-1
  2091fc:	003fef06 	br	2091bc <__fputwc+0xf4>
  209200:	800d883a 	mov	r6,r16
  209204:	01400284 	movi	r5,10
  209208:	9009883a 	mov	r4,r18
  20920c:	02096480 	call	209648 <__swbuf_r>
  209210:	10bfffe0 	cmpeqi	r2,r2,-1
  209214:	103fd126 	beq	r2,zero,20915c <__fputwc+0x94>
  209218:	003ff706 	br	2091f8 <__fputwc+0x130>
  20921c:	8080030b 	ldhu	r2,12(r16)
  209220:	10801014 	ori	r2,r2,64
  209224:	8080030d 	sth	r2,12(r16)
  209228:	003fe406 	br	2091bc <__fputwc+0xf4>

0020922c <_fputwc_r>:
  20922c:	3080030b 	ldhu	r2,12(r6)
  209230:	10c8000c 	andi	r3,r2,8192
  209234:	1800051e 	bne	r3,zero,20924c <_fputwc_r+0x20>
  209238:	30c01917 	ldw	r3,100(r6)
  20923c:	10880014 	ori	r2,r2,8192
  209240:	3080030d 	sth	r2,12(r6)
  209244:	18880014 	ori	r2,r3,8192
  209248:	30801915 	stw	r2,100(r6)
  20924c:	02090c81 	jmpi	2090c8 <__fputwc>

00209250 <fputwc>:
  209250:	defffc04 	addi	sp,sp,-16
  209254:	00800874 	movhi	r2,33
  209258:	dc000215 	stw	r16,8(sp)
  20925c:	1407b117 	ldw	r16,7876(r2)
  209260:	dfc00315 	stw	ra,12(sp)
  209264:	280d883a 	mov	r6,r5
  209268:	200b883a 	mov	r5,r4
  20926c:	80000226 	beq	r16,zero,209278 <fputwc+0x28>
  209270:	80800e17 	ldw	r2,56(r16)
  209274:	10000d26 	beq	r2,zero,2092ac <fputwc+0x5c>
  209278:	3080030b 	ldhu	r2,12(r6)
  20927c:	10c8000c 	andi	r3,r2,8192
  209280:	1800051e 	bne	r3,zero,209298 <fputwc+0x48>
  209284:	30c01917 	ldw	r3,100(r6)
  209288:	10880014 	ori	r2,r2,8192
  20928c:	3080030d 	sth	r2,12(r6)
  209290:	18880014 	ori	r2,r3,8192
  209294:	30801915 	stw	r2,100(r6)
  209298:	8009883a 	mov	r4,r16
  20929c:	dfc00317 	ldw	ra,12(sp)
  2092a0:	dc000217 	ldw	r16,8(sp)
  2092a4:	dec00404 	addi	sp,sp,16
  2092a8:	02090c81 	jmpi	2090c8 <__fputwc>
  2092ac:	d9000015 	stw	r4,0(sp)
  2092b0:	8009883a 	mov	r4,r16
  2092b4:	d9800115 	stw	r6,4(sp)
  2092b8:	02046c80 	call	2046c8 <__sinit>
  2092bc:	d9800117 	ldw	r6,4(sp)
  2092c0:	d9400017 	ldw	r5,0(sp)
  2092c4:	003fec06 	br	209278 <fputwc+0x28>

002092c8 <_fstat_r>:
  2092c8:	2807883a 	mov	r3,r5
  2092cc:	defffe04 	addi	sp,sp,-8
  2092d0:	dc000015 	stw	r16,0(sp)
  2092d4:	00800874 	movhi	r2,33
  2092d8:	300b883a 	mov	r5,r6
  2092dc:	2021883a 	mov	r16,r4
  2092e0:	1809883a 	mov	r4,r3
  2092e4:	dfc00115 	stw	ra,4(sp)
  2092e8:	100eb715 	stw	zero,15068(r2)
  2092ec:	020d5340 	call	20d534 <fstat>
  2092f0:	10ffffd8 	cmpnei	r3,r2,-1
  2092f4:	18000426 	beq	r3,zero,209308 <_fstat_r+0x40>
  2092f8:	dfc00117 	ldw	ra,4(sp)
  2092fc:	dc000017 	ldw	r16,0(sp)
  209300:	dec00204 	addi	sp,sp,8
  209304:	f800283a 	ret
  209308:	00c00874 	movhi	r3,33
  20930c:	18ceb717 	ldw	r3,15068(r3)
  209310:	183ff926 	beq	r3,zero,2092f8 <_fstat_r+0x30>
  209314:	80c00015 	stw	r3,0(r16)
  209318:	dfc00117 	ldw	ra,4(sp)
  20931c:	dc000017 	ldw	r16,0(sp)
  209320:	dec00204 	addi	sp,sp,8
  209324:	f800283a 	ret

00209328 <_isatty_r>:
  209328:	defffe04 	addi	sp,sp,-8
  20932c:	dc000015 	stw	r16,0(sp)
  209330:	00800874 	movhi	r2,33
  209334:	2021883a 	mov	r16,r4
  209338:	2809883a 	mov	r4,r5
  20933c:	dfc00115 	stw	ra,4(sp)
  209340:	100eb715 	stw	zero,15068(r2)
  209344:	020d64c0 	call	20d64c <isatty>
  209348:	10ffffd8 	cmpnei	r3,r2,-1
  20934c:	18000426 	beq	r3,zero,209360 <_isatty_r+0x38>
  209350:	dfc00117 	ldw	ra,4(sp)
  209354:	dc000017 	ldw	r16,0(sp)
  209358:	dec00204 	addi	sp,sp,8
  20935c:	f800283a 	ret
  209360:	00c00874 	movhi	r3,33
  209364:	18ceb717 	ldw	r3,15068(r3)
  209368:	183ff926 	beq	r3,zero,209350 <_isatty_r+0x28>
  20936c:	80c00015 	stw	r3,0(r16)
  209370:	dfc00117 	ldw	ra,4(sp)
  209374:	dc000017 	ldw	r16,0(sp)
  209378:	dec00204 	addi	sp,sp,8
  20937c:	f800283a 	ret

00209380 <_setlocale_r>:
  209380:	30001626 	beq	r6,zero,2093dc <_setlocale_r+0x5c>
  209384:	01400874 	movhi	r5,33
  209388:	defffe04 	addi	sp,sp,-8
  20938c:	297fd704 	addi	r5,r5,-164
  209390:	3009883a 	mov	r4,r6
  209394:	dc000015 	stw	r16,0(sp)
  209398:	dfc00115 	stw	ra,4(sp)
  20939c:	3021883a 	mov	r16,r6
  2093a0:	020958c0 	call	20958c <strcmp>
  2093a4:	1000061e 	bne	r2,zero,2093c0 <_setlocale_r+0x40>
  2093a8:	00800874 	movhi	r2,33
  2093ac:	10bfd604 	addi	r2,r2,-168
  2093b0:	dfc00117 	ldw	ra,4(sp)
  2093b4:	dc000017 	ldw	r16,0(sp)
  2093b8:	dec00204 	addi	sp,sp,8
  2093bc:	f800283a 	ret
  2093c0:	80800003 	ldbu	r2,0(r16)
  2093c4:	10bfef44 	addi	r2,r2,-67
  2093c8:	10000726 	beq	r2,zero,2093e8 <_setlocale_r+0x68>
  2093cc:	80800003 	ldbu	r2,0(r16)
  2093d0:	103ff526 	beq	r2,zero,2093a8 <_setlocale_r+0x28>
  2093d4:	0005883a 	mov	r2,zero
  2093d8:	003ff506 	br	2093b0 <_setlocale_r+0x30>
  2093dc:	00800874 	movhi	r2,33
  2093e0:	10bfd604 	addi	r2,r2,-168
  2093e4:	f800283a 	ret
  2093e8:	80800043 	ldbu	r2,1(r16)
  2093ec:	103fee26 	beq	r2,zero,2093a8 <_setlocale_r+0x28>
  2093f0:	003ff606 	br	2093cc <_setlocale_r+0x4c>

002093f4 <__locale_mb_cur_max>:
  2093f4:	00800874 	movhi	r2,33
  2093f8:	10831d07 	ldb	r2,3188(r2)
  2093fc:	f800283a 	ret

00209400 <setlocale>:
  209400:	28001626 	beq	r5,zero,20945c <setlocale+0x5c>
  209404:	defffe04 	addi	sp,sp,-8
  209408:	dc000015 	stw	r16,0(sp)
  20940c:	2821883a 	mov	r16,r5
  209410:	01400874 	movhi	r5,33
  209414:	297fd704 	addi	r5,r5,-164
  209418:	8009883a 	mov	r4,r16
  20941c:	dfc00115 	stw	ra,4(sp)
  209420:	020958c0 	call	20958c <strcmp>
  209424:	1000061e 	bne	r2,zero,209440 <setlocale+0x40>
  209428:	00800874 	movhi	r2,33
  20942c:	10bfd604 	addi	r2,r2,-168
  209430:	dfc00117 	ldw	ra,4(sp)
  209434:	dc000017 	ldw	r16,0(sp)
  209438:	dec00204 	addi	sp,sp,8
  20943c:	f800283a 	ret
  209440:	80800003 	ldbu	r2,0(r16)
  209444:	10bfef44 	addi	r2,r2,-67
  209448:	10000726 	beq	r2,zero,209468 <setlocale+0x68>
  20944c:	80800003 	ldbu	r2,0(r16)
  209450:	103ff526 	beq	r2,zero,209428 <setlocale+0x28>
  209454:	0005883a 	mov	r2,zero
  209458:	003ff506 	br	209430 <setlocale+0x30>
  20945c:	00800874 	movhi	r2,33
  209460:	10bfd604 	addi	r2,r2,-168
  209464:	f800283a 	ret
  209468:	80800043 	ldbu	r2,1(r16)
  20946c:	103fee26 	beq	r2,zero,209428 <setlocale+0x28>
  209470:	003ff606 	br	20944c <setlocale+0x4c>

00209474 <_lseek_r>:
  209474:	2807883a 	mov	r3,r5
  209478:	defffe04 	addi	sp,sp,-8
  20947c:	dc000015 	stw	r16,0(sp)
  209480:	300b883a 	mov	r5,r6
  209484:	00800874 	movhi	r2,33
  209488:	380d883a 	mov	r6,r7
  20948c:	2021883a 	mov	r16,r4
  209490:	1809883a 	mov	r4,r3
  209494:	dfc00115 	stw	ra,4(sp)
  209498:	100eb715 	stw	zero,15068(r2)
  20949c:	020d98c0 	call	20d98c <lseek>
  2094a0:	10ffffd8 	cmpnei	r3,r2,-1
  2094a4:	18000426 	beq	r3,zero,2094b8 <_lseek_r+0x44>
  2094a8:	dfc00117 	ldw	ra,4(sp)
  2094ac:	dc000017 	ldw	r16,0(sp)
  2094b0:	dec00204 	addi	sp,sp,8
  2094b4:	f800283a 	ret
  2094b8:	00c00874 	movhi	r3,33
  2094bc:	18ceb717 	ldw	r3,15068(r3)
  2094c0:	183ff926 	beq	r3,zero,2094a8 <_lseek_r+0x34>
  2094c4:	80c00015 	stw	r3,0(r16)
  2094c8:	dfc00117 	ldw	ra,4(sp)
  2094cc:	dc000017 	ldw	r16,0(sp)
  2094d0:	dec00204 	addi	sp,sp,8
  2094d4:	f800283a 	ret

002094d8 <_mbtowc_r>:
  2094d8:	00800874 	movhi	r2,33
  2094dc:	10830c17 	ldw	r2,3120(r2)
  2094e0:	1000683a 	jmp	r2

002094e4 <__ascii_mbtowc>:
  2094e4:	deffff04 	addi	sp,sp,-4
  2094e8:	28000826 	beq	r5,zero,20950c <__ascii_mbtowc+0x28>
  2094ec:	30000926 	beq	r6,zero,209514 <__ascii_mbtowc+0x30>
  2094f0:	38000b26 	beq	r7,zero,209520 <__ascii_mbtowc+0x3c>
  2094f4:	30800003 	ldbu	r2,0(r6)
  2094f8:	28800015 	stw	r2,0(r5)
  2094fc:	30800003 	ldbu	r2,0(r6)
  209500:	1004c03a 	cmpne	r2,r2,zero
  209504:	dec00104 	addi	sp,sp,4
  209508:	f800283a 	ret
  20950c:	d80b883a 	mov	r5,sp
  209510:	303ff71e 	bne	r6,zero,2094f0 <__ascii_mbtowc+0xc>
  209514:	0005883a 	mov	r2,zero
  209518:	dec00104 	addi	sp,sp,4
  20951c:	f800283a 	ret
  209520:	00bfff84 	movi	r2,-2
  209524:	003ff706 	br	209504 <__ascii_mbtowc+0x20>

00209528 <_read_r>:
  209528:	2807883a 	mov	r3,r5
  20952c:	defffe04 	addi	sp,sp,-8
  209530:	dc000015 	stw	r16,0(sp)
  209534:	300b883a 	mov	r5,r6
  209538:	00800874 	movhi	r2,33
  20953c:	380d883a 	mov	r6,r7
  209540:	2021883a 	mov	r16,r4
  209544:	1809883a 	mov	r4,r3
  209548:	dfc00115 	stw	ra,4(sp)
  20954c:	100eb715 	stw	zero,15068(r2)
  209550:	020db6c0 	call	20db6c <read>
  209554:	10ffffd8 	cmpnei	r3,r2,-1
  209558:	18000426 	beq	r3,zero,20956c <_read_r+0x44>
  20955c:	dfc00117 	ldw	ra,4(sp)
  209560:	dc000017 	ldw	r16,0(sp)
  209564:	dec00204 	addi	sp,sp,8
  209568:	f800283a 	ret
  20956c:	00c00874 	movhi	r3,33
  209570:	18ceb717 	ldw	r3,15068(r3)
  209574:	183ff926 	beq	r3,zero,20955c <_read_r+0x34>
  209578:	80c00015 	stw	r3,0(r16)
  20957c:	dfc00117 	ldw	ra,4(sp)
  209580:	dc000017 	ldw	r16,0(sp)
  209584:	dec00204 	addi	sp,sp,8
  209588:	f800283a 	ret

0020958c <strcmp>:
  20958c:	2144b03a 	or	r2,r4,r5
  209590:	108000cc 	andi	r2,r2,3
  209594:	1000141e 	bne	r2,zero,2095e8 <strcmp+0x5c>
  209598:	20800017 	ldw	r2,0(r4)
  20959c:	28c00017 	ldw	r3,0(r5)
  2095a0:	10c0111e 	bne	r2,r3,2095e8 <strcmp+0x5c>
  2095a4:	01ffbff4 	movhi	r7,65279
  2095a8:	01a02074 	movhi	r6,32897
  2095ac:	39ffbfc4 	addi	r7,r7,-257
  2095b0:	31a02004 	addi	r6,r6,-32640
  2095b4:	00000306 	br	2095c4 <strcmp+0x38>
  2095b8:	20800017 	ldw	r2,0(r4)
  2095bc:	28c00017 	ldw	r3,0(r5)
  2095c0:	10c0091e 	bne	r2,r3,2095e8 <strcmp+0x5c>
  2095c4:	11c7883a 	add	r3,r2,r7
  2095c8:	0084303a 	nor	r2,zero,r2
  2095cc:	1884703a 	and	r2,r3,r2
  2095d0:	1184703a 	and	r2,r2,r6
  2095d4:	21000104 	addi	r4,r4,4
  2095d8:	29400104 	addi	r5,r5,4
  2095dc:	103ff626 	beq	r2,zero,2095b8 <strcmp+0x2c>
  2095e0:	0005883a 	mov	r2,zero
  2095e4:	f800283a 	ret
  2095e8:	20c00003 	ldbu	r3,0(r4)
  2095ec:	18803fcc 	andi	r2,r3,255
  2095f0:	1080201c 	xori	r2,r2,128
  2095f4:	10bfe004 	addi	r2,r2,-128
  2095f8:	1000071e 	bne	r2,zero,209618 <strcmp+0x8c>
  2095fc:	00000a06 	br	209628 <strcmp+0x9c>
  209600:	20c00003 	ldbu	r3,0(r4)
  209604:	29400044 	addi	r5,r5,1
  209608:	18803fcc 	andi	r2,r3,255
  20960c:	1080201c 	xori	r2,r2,128
  209610:	10bfe004 	addi	r2,r2,-128
  209614:	10000726 	beq	r2,zero,209634 <strcmp+0xa8>
  209618:	29800007 	ldb	r6,0(r5)
  20961c:	21000044 	addi	r4,r4,1
  209620:	30bff726 	beq	r6,r2,209600 <strcmp+0x74>
  209624:	18803fcc 	andi	r2,r3,255
  209628:	28c00003 	ldbu	r3,0(r5)
  20962c:	10c5c83a 	sub	r2,r2,r3
  209630:	f800283a 	ret
  209634:	28c00003 	ldbu	r3,0(r5)
  209638:	0005883a 	mov	r2,zero
  20963c:	10c5c83a 	sub	r2,r2,r3
  209640:	f800283a 	ret

00209644 <_vfiprintf_r>:
  209644:	02079001 	jmpi	207900 <___vfiprintf_internal_r>

00209648 <__swbuf_r>:
  209648:	defffb04 	addi	sp,sp,-20
  20964c:	dcc00315 	stw	r19,12(sp)
  209650:	dc400115 	stw	r17,4(sp)
  209654:	dc000015 	stw	r16,0(sp)
  209658:	dfc00415 	stw	ra,16(sp)
  20965c:	dc800215 	stw	r18,8(sp)
  209660:	2027883a 	mov	r19,r4
  209664:	2823883a 	mov	r17,r5
  209668:	3021883a 	mov	r16,r6
  20966c:	20000226 	beq	r4,zero,209678 <__swbuf_r+0x30>
  209670:	20800e17 	ldw	r2,56(r4)
  209674:	10003e26 	beq	r2,zero,209770 <__swbuf_r+0x128>
  209678:	80800617 	ldw	r2,24(r16)
  20967c:	80c0030b 	ldhu	r3,12(r16)
  209680:	80800215 	stw	r2,8(r16)
  209684:	1880020c 	andi	r2,r3,8
  209688:	10001f26 	beq	r2,zero,209708 <__swbuf_r+0xc0>
  20968c:	80800417 	ldw	r2,16(r16)
  209690:	10001d26 	beq	r2,zero,209708 <__swbuf_r+0xc0>
  209694:	1948000c 	andi	r5,r3,8192
  209698:	8c803fcc 	andi	r18,r17,255
  20969c:	28002326 	beq	r5,zero,20972c <__swbuf_r+0xe4>
  2096a0:	80c00017 	ldw	r3,0(r16)
  2096a4:	81000517 	ldw	r4,20(r16)
  2096a8:	1885c83a 	sub	r2,r3,r2
  2096ac:	1100290e 	bge	r2,r4,209754 <__swbuf_r+0x10c>
  2096b0:	10800044 	addi	r2,r2,1
  2096b4:	81400217 	ldw	r5,8(r16)
  2096b8:	19000044 	addi	r4,r3,1
  2096bc:	81000015 	stw	r4,0(r16)
  2096c0:	297fffc4 	addi	r5,r5,-1
  2096c4:	81400215 	stw	r5,8(r16)
  2096c8:	1c400005 	stb	r17,0(r3)
  2096cc:	80c00517 	ldw	r3,20(r16)
  2096d0:	18802926 	beq	r3,r2,209778 <__swbuf_r+0x130>
  2096d4:	8080030b 	ldhu	r2,12(r16)
  2096d8:	1080004c 	andi	r2,r2,1
  2096dc:	10000226 	beq	r2,zero,2096e8 <__swbuf_r+0xa0>
  2096e0:	90800298 	cmpnei	r2,r18,10
  2096e4:	10002426 	beq	r2,zero,209778 <__swbuf_r+0x130>
  2096e8:	9005883a 	mov	r2,r18
  2096ec:	dfc00417 	ldw	ra,16(sp)
  2096f0:	dcc00317 	ldw	r19,12(sp)
  2096f4:	dc800217 	ldw	r18,8(sp)
  2096f8:	dc400117 	ldw	r17,4(sp)
  2096fc:	dc000017 	ldw	r16,0(sp)
  209700:	dec00504 	addi	sp,sp,20
  209704:	f800283a 	ret
  209708:	800b883a 	mov	r5,r16
  20970c:	9809883a 	mov	r4,r19
  209710:	020258c0 	call	20258c <__swsetup_r>
  209714:	10001c1e 	bne	r2,zero,209788 <__swbuf_r+0x140>
  209718:	80c0030b 	ldhu	r3,12(r16)
  20971c:	80800417 	ldw	r2,16(r16)
  209720:	8c803fcc 	andi	r18,r17,255
  209724:	1948000c 	andi	r5,r3,8192
  209728:	283fdd1e 	bne	r5,zero,2096a0 <__swbuf_r+0x58>
  20972c:	81001917 	ldw	r4,100(r16)
  209730:	18c80014 	ori	r3,r3,8192
  209734:	0177ffc4 	movi	r5,-8193
  209738:	2148703a 	and	r4,r4,r5
  20973c:	80c0030d 	sth	r3,12(r16)
  209740:	80c00017 	ldw	r3,0(r16)
  209744:	81001915 	stw	r4,100(r16)
  209748:	81000517 	ldw	r4,20(r16)
  20974c:	1885c83a 	sub	r2,r3,r2
  209750:	113fd716 	blt	r2,r4,2096b0 <__swbuf_r+0x68>
  209754:	800b883a 	mov	r5,r16
  209758:	9809883a 	mov	r4,r19
  20975c:	02042800 	call	204280 <_fflush_r>
  209760:	1000091e 	bne	r2,zero,209788 <__swbuf_r+0x140>
  209764:	80c00017 	ldw	r3,0(r16)
  209768:	00800044 	movi	r2,1
  20976c:	003fd106 	br	2096b4 <__swbuf_r+0x6c>
  209770:	02046c80 	call	2046c8 <__sinit>
  209774:	003fc006 	br	209678 <__swbuf_r+0x30>
  209778:	800b883a 	mov	r5,r16
  20977c:	9809883a 	mov	r4,r19
  209780:	02042800 	call	204280 <_fflush_r>
  209784:	103fd826 	beq	r2,zero,2096e8 <__swbuf_r+0xa0>
  209788:	04bfffc4 	movi	r18,-1
  20978c:	003fd606 	br	2096e8 <__swbuf_r+0xa0>

00209790 <__swbuf>:
  209790:	00c00874 	movhi	r3,33
  209794:	2005883a 	mov	r2,r4
  209798:	1907b117 	ldw	r4,7876(r3)
  20979c:	280d883a 	mov	r6,r5
  2097a0:	100b883a 	mov	r5,r2
  2097a4:	02096481 	jmpi	209648 <__swbuf_r>

002097a8 <_wcrtomb_r>:
  2097a8:	defffa04 	addi	sp,sp,-24
  2097ac:	dc400415 	stw	r17,16(sp)
  2097b0:	dc000315 	stw	r16,12(sp)
  2097b4:	00800874 	movhi	r2,33
  2097b8:	dfc00515 	stw	ra,20(sp)
  2097bc:	10830b17 	ldw	r2,3116(r2)
  2097c0:	2023883a 	mov	r17,r4
  2097c4:	3821883a 	mov	r16,r7
  2097c8:	28000826 	beq	r5,zero,2097ec <_wcrtomb_r+0x44>
  2097cc:	103ee83a 	callr	r2
  2097d0:	10ffffd8 	cmpnei	r3,r2,-1
  2097d4:	18000a26 	beq	r3,zero,209800 <_wcrtomb_r+0x58>
  2097d8:	dfc00517 	ldw	ra,20(sp)
  2097dc:	dc400417 	ldw	r17,16(sp)
  2097e0:	dc000317 	ldw	r16,12(sp)
  2097e4:	dec00604 	addi	sp,sp,24
  2097e8:	f800283a 	ret
  2097ec:	000d883a 	mov	r6,zero
  2097f0:	d9400084 	addi	r5,sp,2
  2097f4:	103ee83a 	callr	r2
  2097f8:	10ffffd8 	cmpnei	r3,r2,-1
  2097fc:	183ff61e 	bne	r3,zero,2097d8 <_wcrtomb_r+0x30>
  209800:	00802284 	movi	r2,138
  209804:	80000015 	stw	zero,0(r16)
  209808:	88800015 	stw	r2,0(r17)
  20980c:	00bfffc4 	movi	r2,-1
  209810:	003ff106 	br	2097d8 <_wcrtomb_r+0x30>

00209814 <wcrtomb>:
  209814:	defffa04 	addi	sp,sp,-24
  209818:	00c00874 	movhi	r3,33
  20981c:	dc400415 	stw	r17,16(sp)
  209820:	dc000315 	stw	r16,12(sp)
  209824:	1c47b117 	ldw	r17,7876(r3)
  209828:	dfc00515 	stw	ra,20(sp)
  20982c:	00c00874 	movhi	r3,33
  209830:	18c30b17 	ldw	r3,3116(r3)
  209834:	3021883a 	mov	r16,r6
  209838:	20000c26 	beq	r4,zero,20986c <wcrtomb+0x58>
  20983c:	280d883a 	mov	r6,r5
  209840:	800f883a 	mov	r7,r16
  209844:	200b883a 	mov	r5,r4
  209848:	8809883a 	mov	r4,r17
  20984c:	183ee83a 	callr	r3
  209850:	10ffffd8 	cmpnei	r3,r2,-1
  209854:	18000c26 	beq	r3,zero,209888 <wcrtomb+0x74>
  209858:	dfc00517 	ldw	ra,20(sp)
  20985c:	dc400417 	ldw	r17,16(sp)
  209860:	dc000317 	ldw	r16,12(sp)
  209864:	dec00604 	addi	sp,sp,24
  209868:	f800283a 	ret
  20986c:	300f883a 	mov	r7,r6
  209870:	d9400084 	addi	r5,sp,2
  209874:	000d883a 	mov	r6,zero
  209878:	8809883a 	mov	r4,r17
  20987c:	183ee83a 	callr	r3
  209880:	10ffffd8 	cmpnei	r3,r2,-1
  209884:	183ff41e 	bne	r3,zero,209858 <wcrtomb+0x44>
  209888:	00802284 	movi	r2,138
  20988c:	80000015 	stw	zero,0(r16)
  209890:	88800015 	stw	r2,0(r17)
  209894:	00bfffc4 	movi	r2,-1
  209898:	003fef06 	br	209858 <wcrtomb+0x44>

0020989c <_wctomb_r>:
  20989c:	00800874 	movhi	r2,33
  2098a0:	10830b17 	ldw	r2,3116(r2)
  2098a4:	1000683a 	jmp	r2

002098a8 <__ascii_wctomb>:
  2098a8:	28000926 	beq	r5,zero,2098d0 <__ascii_wctomb+0x28>
  2098ac:	30804030 	cmpltui	r2,r6,256
  2098b0:	10000326 	beq	r2,zero,2098c0 <__ascii_wctomb+0x18>
  2098b4:	29800005 	stb	r6,0(r5)
  2098b8:	00800044 	movi	r2,1
  2098bc:	f800283a 	ret
  2098c0:	00802284 	movi	r2,138
  2098c4:	20800015 	stw	r2,0(r4)
  2098c8:	00bfffc4 	movi	r2,-1
  2098cc:	f800283a 	ret
  2098d0:	0005883a 	mov	r2,zero
  2098d4:	f800283a 	ret

002098d8 <abort>:
  2098d8:	deffff04 	addi	sp,sp,-4
  2098dc:	01000184 	movi	r4,6
  2098e0:	dfc00015 	stw	ra,0(sp)
  2098e4:	0209b640 	call	209b64 <raise>
  2098e8:	01000044 	movi	r4,1
  2098ec:	020d4c00 	call	20d4c0 <_exit>

002098f0 <_init_signal_r>:
  2098f0:	2080b717 	ldw	r2,732(r4)
  2098f4:	10000226 	beq	r2,zero,209900 <_init_signal_r+0x10>
  2098f8:	0005883a 	mov	r2,zero
  2098fc:	f800283a 	ret
  209900:	defffe04 	addi	sp,sp,-8
  209904:	01402004 	movi	r5,128
  209908:	dc000015 	stw	r16,0(sp)
  20990c:	dfc00115 	stw	ra,4(sp)
  209910:	2021883a 	mov	r16,r4
  209914:	02053640 	call	205364 <_malloc_r>
  209918:	8080b715 	stw	r2,732(r16)
  20991c:	1009883a 	mov	r4,r2
  209920:	10000826 	beq	r2,zero,209944 <_init_signal_r+0x54>
  209924:	01802004 	movi	r6,128
  209928:	000b883a 	mov	r5,zero
  20992c:	0205e400 	call	205e40 <memset>
  209930:	0005883a 	mov	r2,zero
  209934:	dfc00117 	ldw	ra,4(sp)
  209938:	dc000017 	ldw	r16,0(sp)
  20993c:	dec00204 	addi	sp,sp,8
  209940:	f800283a 	ret
  209944:	00bfffc4 	movi	r2,-1
  209948:	003ffa06 	br	209934 <_init_signal_r+0x44>

0020994c <_signal_r>:
  20994c:	defffc04 	addi	sp,sp,-16
  209950:	dc400115 	stw	r17,4(sp)
  209954:	dfc00315 	stw	ra,12(sp)
  209958:	dc800215 	stw	r18,8(sp)
  20995c:	dc000015 	stw	r16,0(sp)
  209960:	28800830 	cmpltui	r2,r5,32
  209964:	2023883a 	mov	r17,r4
  209968:	10000e26 	beq	r2,zero,2099a4 <_signal_r+0x58>
  20996c:	20c0b717 	ldw	r3,732(r4)
  209970:	2821883a 	mov	r16,r5
  209974:	3025883a 	mov	r18,r6
  209978:	18000e26 	beq	r3,zero,2099b4 <_signal_r+0x68>
  20997c:	802090ba 	slli	r16,r16,2
  209980:	1c21883a 	add	r16,r3,r16
  209984:	80800017 	ldw	r2,0(r16)
  209988:	84800015 	stw	r18,0(r16)
  20998c:	dfc00317 	ldw	ra,12(sp)
  209990:	dc800217 	ldw	r18,8(sp)
  209994:	dc400117 	ldw	r17,4(sp)
  209998:	dc000017 	ldw	r16,0(sp)
  20999c:	dec00404 	addi	sp,sp,16
  2099a0:	f800283a 	ret
  2099a4:	00800584 	movi	r2,22
  2099a8:	20800015 	stw	r2,0(r4)
  2099ac:	00bfffc4 	movi	r2,-1
  2099b0:	003ff606 	br	20998c <_signal_r+0x40>
  2099b4:	01402004 	movi	r5,128
  2099b8:	02053640 	call	205364 <_malloc_r>
  2099bc:	8880b715 	stw	r2,732(r17)
  2099c0:	10000626 	beq	r2,zero,2099dc <_signal_r+0x90>
  2099c4:	01802004 	movi	r6,128
  2099c8:	000b883a 	mov	r5,zero
  2099cc:	1009883a 	mov	r4,r2
  2099d0:	0205e400 	call	205e40 <memset>
  2099d4:	1007883a 	mov	r3,r2
  2099d8:	003fe806 	br	20997c <_signal_r+0x30>
  2099dc:	00bfffc4 	movi	r2,-1
  2099e0:	003fea06 	br	20998c <_signal_r+0x40>

002099e4 <_raise_r>:
  2099e4:	28800830 	cmpltui	r2,r5,32
  2099e8:	10002b26 	beq	r2,zero,209a98 <_raise_r+0xb4>
  2099ec:	2080b717 	ldw	r2,732(r4)
  2099f0:	defffd04 	addi	sp,sp,-12
  2099f4:	dc000115 	stw	r16,4(sp)
  2099f8:	dfc00215 	stw	ra,8(sp)
  2099fc:	2821883a 	mov	r16,r5
  209a00:	10001026 	beq	r2,zero,209a44 <_raise_r+0x60>
  209a04:	280690ba 	slli	r3,r5,2
  209a08:	10c5883a 	add	r2,r2,r3
  209a0c:	10c00017 	ldw	r3,0(r2)
  209a10:	18000c26 	beq	r3,zero,209a44 <_raise_r+0x60>
  209a14:	19400060 	cmpeqi	r5,r3,1
  209a18:	28001a1e 	bne	r5,zero,209a84 <_raise_r+0xa0>
  209a1c:	197fffd8 	cmpnei	r5,r3,-1
  209a20:	28001126 	beq	r5,zero,209a68 <_raise_r+0x84>
  209a24:	10000015 	stw	zero,0(r2)
  209a28:	8009883a 	mov	r4,r16
  209a2c:	183ee83a 	callr	r3
  209a30:	0005883a 	mov	r2,zero
  209a34:	dfc00217 	ldw	ra,8(sp)
  209a38:	dc000117 	ldw	r16,4(sp)
  209a3c:	dec00304 	addi	sp,sp,12
  209a40:	f800283a 	ret
  209a44:	d9000015 	stw	r4,0(sp)
  209a48:	0209e3c0 	call	209e3c <_getpid_r>
  209a4c:	d9000017 	ldw	r4,0(sp)
  209a50:	800d883a 	mov	r6,r16
  209a54:	100b883a 	mov	r5,r2
  209a58:	dfc00217 	ldw	ra,8(sp)
  209a5c:	dc000117 	ldw	r16,4(sp)
  209a60:	dec00304 	addi	sp,sp,12
  209a64:	0209ddc1 	jmpi	209ddc <_kill_r>
  209a68:	00800584 	movi	r2,22
  209a6c:	20800015 	stw	r2,0(r4)
  209a70:	00800044 	movi	r2,1
  209a74:	dfc00217 	ldw	ra,8(sp)
  209a78:	dc000117 	ldw	r16,4(sp)
  209a7c:	dec00304 	addi	sp,sp,12
  209a80:	f800283a 	ret
  209a84:	0005883a 	mov	r2,zero
  209a88:	dfc00217 	ldw	ra,8(sp)
  209a8c:	dc000117 	ldw	r16,4(sp)
  209a90:	dec00304 	addi	sp,sp,12
  209a94:	f800283a 	ret
  209a98:	00800584 	movi	r2,22
  209a9c:	20800015 	stw	r2,0(r4)
  209aa0:	00bfffc4 	movi	r2,-1
  209aa4:	f800283a 	ret

00209aa8 <__sigtramp_r>:
  209aa8:	28800830 	cmpltui	r2,r5,32
  209aac:	10002b26 	beq	r2,zero,209b5c <__sigtramp_r+0xb4>
  209ab0:	20c0b717 	ldw	r3,732(r4)
  209ab4:	defffd04 	addi	sp,sp,-12
  209ab8:	dc400115 	stw	r17,4(sp)
  209abc:	dc000015 	stw	r16,0(sp)
  209ac0:	dfc00215 	stw	ra,8(sp)
  209ac4:	2821883a 	mov	r16,r5
  209ac8:	2023883a 	mov	r17,r4
  209acc:	18001326 	beq	r3,zero,209b1c <__sigtramp_r+0x74>
  209ad0:	800490ba 	slli	r2,r16,2
  209ad4:	1887883a 	add	r3,r3,r2
  209ad8:	18800017 	ldw	r2,0(r3)
  209adc:	10000d26 	beq	r2,zero,209b14 <__sigtramp_r+0x6c>
  209ae0:	113fffe0 	cmpeqi	r4,r2,-1
  209ae4:	2000191e 	bne	r4,zero,209b4c <__sigtramp_r+0xa4>
  209ae8:	11000060 	cmpeqi	r4,r2,1
  209aec:	2000151e 	bne	r4,zero,209b44 <__sigtramp_r+0x9c>
  209af0:	18000015 	stw	zero,0(r3)
  209af4:	8009883a 	mov	r4,r16
  209af8:	103ee83a 	callr	r2
  209afc:	0005883a 	mov	r2,zero
  209b00:	dfc00217 	ldw	ra,8(sp)
  209b04:	dc400117 	ldw	r17,4(sp)
  209b08:	dc000017 	ldw	r16,0(sp)
  209b0c:	dec00304 	addi	sp,sp,12
  209b10:	f800283a 	ret
  209b14:	00800044 	movi	r2,1
  209b18:	003ff906 	br	209b00 <__sigtramp_r+0x58>
  209b1c:	01402004 	movi	r5,128
  209b20:	02053640 	call	205364 <_malloc_r>
  209b24:	8880b715 	stw	r2,732(r17)
  209b28:	10000a26 	beq	r2,zero,209b54 <__sigtramp_r+0xac>
  209b2c:	01802004 	movi	r6,128
  209b30:	000b883a 	mov	r5,zero
  209b34:	1009883a 	mov	r4,r2
  209b38:	0205e400 	call	205e40 <memset>
  209b3c:	1007883a 	mov	r3,r2
  209b40:	003fe306 	br	209ad0 <__sigtramp_r+0x28>
  209b44:	008000c4 	movi	r2,3
  209b48:	003fed06 	br	209b00 <__sigtramp_r+0x58>
  209b4c:	00800084 	movi	r2,2
  209b50:	003feb06 	br	209b00 <__sigtramp_r+0x58>
  209b54:	00bfffc4 	movi	r2,-1
  209b58:	003fe906 	br	209b00 <__sigtramp_r+0x58>
  209b5c:	00bfffc4 	movi	r2,-1
  209b60:	f800283a 	ret

00209b64 <raise>:
  209b64:	defffd04 	addi	sp,sp,-12
  209b68:	dc400115 	stw	r17,4(sp)
  209b6c:	00c00874 	movhi	r3,33
  209b70:	dfc00215 	stw	ra,8(sp)
  209b74:	dc000015 	stw	r16,0(sp)
  209b78:	20800830 	cmpltui	r2,r4,32
  209b7c:	1c47b117 	ldw	r17,7876(r3)
  209b80:	10002326 	beq	r2,zero,209c10 <raise+0xac>
  209b84:	8880b717 	ldw	r2,732(r17)
  209b88:	2021883a 	mov	r16,r4
  209b8c:	10001026 	beq	r2,zero,209bd0 <raise+0x6c>
  209b90:	200690ba 	slli	r3,r4,2
  209b94:	10c5883a 	add	r2,r2,r3
  209b98:	10c00017 	ldw	r3,0(r2)
  209b9c:	18000c26 	beq	r3,zero,209bd0 <raise+0x6c>
  209ba0:	19400060 	cmpeqi	r5,r3,1
  209ba4:	2800181e 	bne	r5,zero,209c08 <raise+0xa4>
  209ba8:	197fffd8 	cmpnei	r5,r3,-1
  209bac:	28001226 	beq	r5,zero,209bf8 <raise+0x94>
  209bb0:	10000015 	stw	zero,0(r2)
  209bb4:	183ee83a 	callr	r3
  209bb8:	0005883a 	mov	r2,zero
  209bbc:	dfc00217 	ldw	ra,8(sp)
  209bc0:	dc400117 	ldw	r17,4(sp)
  209bc4:	dc000017 	ldw	r16,0(sp)
  209bc8:	dec00304 	addi	sp,sp,12
  209bcc:	f800283a 	ret
  209bd0:	8809883a 	mov	r4,r17
  209bd4:	0209e3c0 	call	209e3c <_getpid_r>
  209bd8:	800d883a 	mov	r6,r16
  209bdc:	100b883a 	mov	r5,r2
  209be0:	8809883a 	mov	r4,r17
  209be4:	dfc00217 	ldw	ra,8(sp)
  209be8:	dc400117 	ldw	r17,4(sp)
  209bec:	dc000017 	ldw	r16,0(sp)
  209bf0:	dec00304 	addi	sp,sp,12
  209bf4:	0209ddc1 	jmpi	209ddc <_kill_r>
  209bf8:	00800584 	movi	r2,22
  209bfc:	88800015 	stw	r2,0(r17)
  209c00:	00800044 	movi	r2,1
  209c04:	003fed06 	br	209bbc <raise+0x58>
  209c08:	0005883a 	mov	r2,zero
  209c0c:	003feb06 	br	209bbc <raise+0x58>
  209c10:	00800584 	movi	r2,22
  209c14:	88800015 	stw	r2,0(r17)
  209c18:	00bfffc4 	movi	r2,-1
  209c1c:	003fe706 	br	209bbc <raise+0x58>

00209c20 <signal>:
  209c20:	defffc04 	addi	sp,sp,-16
  209c24:	dc800215 	stw	r18,8(sp)
  209c28:	00c00874 	movhi	r3,33
  209c2c:	dfc00315 	stw	ra,12(sp)
  209c30:	dc400115 	stw	r17,4(sp)
  209c34:	dc000015 	stw	r16,0(sp)
  209c38:	20800830 	cmpltui	r2,r4,32
  209c3c:	1c87b117 	ldw	r18,7876(r3)
  209c40:	10000e26 	beq	r2,zero,209c7c <signal+0x5c>
  209c44:	2021883a 	mov	r16,r4
  209c48:	9100b717 	ldw	r4,732(r18)
  209c4c:	2823883a 	mov	r17,r5
  209c50:	20000e26 	beq	r4,zero,209c8c <signal+0x6c>
  209c54:	802090ba 	slli	r16,r16,2
  209c58:	2421883a 	add	r16,r4,r16
  209c5c:	80800017 	ldw	r2,0(r16)
  209c60:	84400015 	stw	r17,0(r16)
  209c64:	dfc00317 	ldw	ra,12(sp)
  209c68:	dc800217 	ldw	r18,8(sp)
  209c6c:	dc400117 	ldw	r17,4(sp)
  209c70:	dc000017 	ldw	r16,0(sp)
  209c74:	dec00404 	addi	sp,sp,16
  209c78:	f800283a 	ret
  209c7c:	00800584 	movi	r2,22
  209c80:	90800015 	stw	r2,0(r18)
  209c84:	00bfffc4 	movi	r2,-1
  209c88:	003ff606 	br	209c64 <signal+0x44>
  209c8c:	9009883a 	mov	r4,r18
  209c90:	01402004 	movi	r5,128
  209c94:	02053640 	call	205364 <_malloc_r>
  209c98:	9080b715 	stw	r2,732(r18)
  209c9c:	1009883a 	mov	r4,r2
  209ca0:	10000526 	beq	r2,zero,209cb8 <signal+0x98>
  209ca4:	01802004 	movi	r6,128
  209ca8:	000b883a 	mov	r5,zero
  209cac:	0205e400 	call	205e40 <memset>
  209cb0:	1009883a 	mov	r4,r2
  209cb4:	003fe706 	br	209c54 <signal+0x34>
  209cb8:	00bfffc4 	movi	r2,-1
  209cbc:	003fe906 	br	209c64 <signal+0x44>

00209cc0 <_init_signal>:
  209cc0:	defffe04 	addi	sp,sp,-8
  209cc4:	00800874 	movhi	r2,33
  209cc8:	dc000015 	stw	r16,0(sp)
  209ccc:	1407b117 	ldw	r16,7876(r2)
  209cd0:	dfc00115 	stw	ra,4(sp)
  209cd4:	8080b717 	ldw	r2,732(r16)
  209cd8:	10000526 	beq	r2,zero,209cf0 <_init_signal+0x30>
  209cdc:	0005883a 	mov	r2,zero
  209ce0:	dfc00117 	ldw	ra,4(sp)
  209ce4:	dc000017 	ldw	r16,0(sp)
  209ce8:	dec00204 	addi	sp,sp,8
  209cec:	f800283a 	ret
  209cf0:	8009883a 	mov	r4,r16
  209cf4:	01402004 	movi	r5,128
  209cf8:	02053640 	call	205364 <_malloc_r>
  209cfc:	8080b715 	stw	r2,732(r16)
  209d00:	1009883a 	mov	r4,r2
  209d04:	10000426 	beq	r2,zero,209d18 <_init_signal+0x58>
  209d08:	01802004 	movi	r6,128
  209d0c:	000b883a 	mov	r5,zero
  209d10:	0205e400 	call	205e40 <memset>
  209d14:	003ff106 	br	209cdc <_init_signal+0x1c>
  209d18:	00bfffc4 	movi	r2,-1
  209d1c:	003ff006 	br	209ce0 <_init_signal+0x20>

00209d20 <__sigtramp>:
  209d20:	defffd04 	addi	sp,sp,-12
  209d24:	dc400115 	stw	r17,4(sp)
  209d28:	00c00874 	movhi	r3,33
  209d2c:	dfc00215 	stw	ra,8(sp)
  209d30:	dc000015 	stw	r16,0(sp)
  209d34:	20800830 	cmpltui	r2,r4,32
  209d38:	1c47b117 	ldw	r17,7876(r3)
  209d3c:	10002526 	beq	r2,zero,209dd4 <__sigtramp+0xb4>
  209d40:	88c0b717 	ldw	r3,732(r17)
  209d44:	2021883a 	mov	r16,r4
  209d48:	18001326 	beq	r3,zero,209d98 <__sigtramp+0x78>
  209d4c:	800890ba 	slli	r4,r16,2
  209d50:	1907883a 	add	r3,r3,r4
  209d54:	18800017 	ldw	r2,0(r3)
  209d58:	10000d26 	beq	r2,zero,209d90 <__sigtramp+0x70>
  209d5c:	113fffe0 	cmpeqi	r4,r2,-1
  209d60:	20001a1e 	bne	r4,zero,209dcc <__sigtramp+0xac>
  209d64:	11000060 	cmpeqi	r4,r2,1
  209d68:	2000161e 	bne	r4,zero,209dc4 <__sigtramp+0xa4>
  209d6c:	18000015 	stw	zero,0(r3)
  209d70:	8009883a 	mov	r4,r16
  209d74:	103ee83a 	callr	r2
  209d78:	0005883a 	mov	r2,zero
  209d7c:	dfc00217 	ldw	ra,8(sp)
  209d80:	dc400117 	ldw	r17,4(sp)
  209d84:	dc000017 	ldw	r16,0(sp)
  209d88:	dec00304 	addi	sp,sp,12
  209d8c:	f800283a 	ret
  209d90:	00800044 	movi	r2,1
  209d94:	003ff906 	br	209d7c <__sigtramp+0x5c>
  209d98:	01402004 	movi	r5,128
  209d9c:	8809883a 	mov	r4,r17
  209da0:	02053640 	call	205364 <_malloc_r>
  209da4:	8880b715 	stw	r2,732(r17)
  209da8:	10000a26 	beq	r2,zero,209dd4 <__sigtramp+0xb4>
  209dac:	01802004 	movi	r6,128
  209db0:	000b883a 	mov	r5,zero
  209db4:	1009883a 	mov	r4,r2
  209db8:	0205e400 	call	205e40 <memset>
  209dbc:	1007883a 	mov	r3,r2
  209dc0:	003fe206 	br	209d4c <__sigtramp+0x2c>
  209dc4:	008000c4 	movi	r2,3
  209dc8:	003fec06 	br	209d7c <__sigtramp+0x5c>
  209dcc:	00800084 	movi	r2,2
  209dd0:	003fea06 	br	209d7c <__sigtramp+0x5c>
  209dd4:	00bfffc4 	movi	r2,-1
  209dd8:	003fe806 	br	209d7c <__sigtramp+0x5c>

00209ddc <_kill_r>:
  209ddc:	2807883a 	mov	r3,r5
  209de0:	defffe04 	addi	sp,sp,-8
  209de4:	dc000015 	stw	r16,0(sp)
  209de8:	00800874 	movhi	r2,33
  209dec:	300b883a 	mov	r5,r6
  209df0:	2021883a 	mov	r16,r4
  209df4:	1809883a 	mov	r4,r3
  209df8:	dfc00115 	stw	ra,4(sp)
  209dfc:	100eb715 	stw	zero,15068(r2)
  209e00:	020d7380 	call	20d738 <kill>
  209e04:	10ffffd8 	cmpnei	r3,r2,-1
  209e08:	18000426 	beq	r3,zero,209e1c <_kill_r+0x40>
  209e0c:	dfc00117 	ldw	ra,4(sp)
  209e10:	dc000017 	ldw	r16,0(sp)
  209e14:	dec00204 	addi	sp,sp,8
  209e18:	f800283a 	ret
  209e1c:	00c00874 	movhi	r3,33
  209e20:	18ceb717 	ldw	r3,15068(r3)
  209e24:	183ff926 	beq	r3,zero,209e0c <_kill_r+0x30>
  209e28:	80c00015 	stw	r3,0(r16)
  209e2c:	dfc00117 	ldw	ra,4(sp)
  209e30:	dc000017 	ldw	r16,0(sp)
  209e34:	dec00204 	addi	sp,sp,8
  209e38:	f800283a 	ret

00209e3c <_getpid_r>:
  209e3c:	020d5f01 	jmpi	20d5f0 <getpid>

00209e40 <__udivdi3>:
  209e40:	defff504 	addi	sp,sp,-44
  209e44:	dd000515 	stw	r20,20(sp)
  209e48:	dc800315 	stw	r18,12(sp)
  209e4c:	dfc00a15 	stw	ra,40(sp)
  209e50:	df000915 	stw	fp,36(sp)
  209e54:	ddc00815 	stw	r23,32(sp)
  209e58:	dd800715 	stw	r22,28(sp)
  209e5c:	dd400615 	stw	r21,24(sp)
  209e60:	dcc00415 	stw	r19,16(sp)
  209e64:	dc400215 	stw	r17,8(sp)
  209e68:	dc000115 	stw	r16,4(sp)
  209e6c:	2029883a 	mov	r20,r4
  209e70:	2825883a 	mov	r18,r5
  209e74:	3800461e 	bne	r7,zero,209f90 <__udivdi3+0x150>
  209e78:	3823883a 	mov	r17,r7
  209e7c:	3021883a 	mov	r16,r6
  209e80:	2027883a 	mov	r19,r4
  209e84:	2980622e 	bgeu	r5,r6,20a010 <__udivdi3+0x1d0>
  209e88:	00bfffd4 	movui	r2,65535
  209e8c:	282b883a 	mov	r21,r5
  209e90:	1180aa2e 	bgeu	r2,r6,20a13c <__udivdi3+0x2fc>
  209e94:	00804034 	movhi	r2,256
  209e98:	30815a36 	bltu	r6,r2,20a404 <__udivdi3+0x5c4>
  209e9c:	3006d63a 	srli	r3,r6,24
  209ea0:	04400604 	movi	r17,24
  209ea4:	00800874 	movhi	r2,33
  209ea8:	1885883a 	add	r2,r3,r2
  209eac:	10807b03 	ldbu	r2,492(r2)
  209eb0:	00c00804 	movi	r3,32
  209eb4:	1463883a 	add	r17,r2,r17
  209eb8:	1c45c83a 	sub	r2,r3,r17
  209ebc:	1c400526 	beq	r3,r17,209ed4 <__udivdi3+0x94>
  209ec0:	9086983a 	sll	r3,r18,r2
  209ec4:	a462d83a 	srl	r17,r20,r17
  209ec8:	30a0983a 	sll	r16,r6,r2
  209ecc:	a0a6983a 	sll	r19,r20,r2
  209ed0:	88eab03a 	or	r21,r17,r3
  209ed4:	802cd43a 	srli	r22,r16,16
  209ed8:	a809883a 	mov	r4,r21
  209edc:	853fffcc 	andi	r20,r16,65535
  209ee0:	b00b883a 	mov	r5,r22
  209ee4:	020ab7c0 	call	20ab7c <__umodsi3>
  209ee8:	a809883a 	mov	r4,r21
  209eec:	b00b883a 	mov	r5,r22
  209ef0:	1025883a 	mov	r18,r2
  209ef4:	020ab180 	call	20ab18 <__udivsi3>
  209ef8:	a009883a 	mov	r4,r20
  209efc:	100b883a 	mov	r5,r2
  209f00:	102b883a 	mov	r21,r2
  209f04:	020abd80 	call	20abd8 <__mulsi3>
  209f08:	9024943a 	slli	r18,r18,16
  209f0c:	9808d43a 	srli	r4,r19,16
  209f10:	9108b03a 	or	r4,r18,r4
  209f14:	2080052e 	bgeu	r4,r2,209f2c <__udivdi3+0xec>
  209f18:	2409883a 	add	r4,r4,r16
  209f1c:	a8ffffc4 	addi	r3,r21,-1
  209f20:	24000136 	bltu	r4,r16,209f28 <__udivdi3+0xe8>
  209f24:	20814836 	bltu	r4,r2,20a448 <__udivdi3+0x608>
  209f28:	182b883a 	mov	r21,r3
  209f2c:	20a3c83a 	sub	r17,r4,r2
  209f30:	8809883a 	mov	r4,r17
  209f34:	b00b883a 	mov	r5,r22
  209f38:	020ab7c0 	call	20ab7c <__umodsi3>
  209f3c:	8809883a 	mov	r4,r17
  209f40:	1023883a 	mov	r17,r2
  209f44:	b00b883a 	mov	r5,r22
  209f48:	8822943a 	slli	r17,r17,16
  209f4c:	020ab180 	call	20ab18 <__udivsi3>
  209f50:	100b883a 	mov	r5,r2
  209f54:	a009883a 	mov	r4,r20
  209f58:	9cffffcc 	andi	r19,r19,65535
  209f5c:	1025883a 	mov	r18,r2
  209f60:	8ce6b03a 	or	r19,r17,r19
  209f64:	020abd80 	call	20abd8 <__mulsi3>
  209f68:	9880052e 	bgeu	r19,r2,209f80 <__udivdi3+0x140>
  209f6c:	84e7883a 	add	r19,r16,r19
  209f70:	90ffffc4 	addi	r3,r18,-1
  209f74:	9c000136 	bltu	r19,r16,209f7c <__udivdi3+0x13c>
  209f78:	98813136 	bltu	r19,r2,20a440 <__udivdi3+0x600>
  209f7c:	1825883a 	mov	r18,r3
  209f80:	a80c943a 	slli	r6,r21,16
  209f84:	0007883a 	mov	r3,zero
  209f88:	3484b03a 	or	r2,r6,r18
  209f8c:	00000306 	br	209f9c <__udivdi3+0x15c>
  209f90:	29c00e2e 	bgeu	r5,r7,209fcc <__udivdi3+0x18c>
  209f94:	0007883a 	mov	r3,zero
  209f98:	0005883a 	mov	r2,zero
  209f9c:	dfc00a17 	ldw	ra,40(sp)
  209fa0:	df000917 	ldw	fp,36(sp)
  209fa4:	ddc00817 	ldw	r23,32(sp)
  209fa8:	dd800717 	ldw	r22,28(sp)
  209fac:	dd400617 	ldw	r21,24(sp)
  209fb0:	dd000517 	ldw	r20,20(sp)
  209fb4:	dcc00417 	ldw	r19,16(sp)
  209fb8:	dc800317 	ldw	r18,12(sp)
  209fbc:	dc400217 	ldw	r17,8(sp)
  209fc0:	dc000117 	ldw	r16,4(sp)
  209fc4:	dec00b04 	addi	sp,sp,44
  209fc8:	f800283a 	ret
  209fcc:	00bfffd4 	movui	r2,65535
  209fd0:	11c05f2e 	bgeu	r2,r7,20a150 <__udivdi3+0x310>
  209fd4:	00804034 	movhi	r2,256
  209fd8:	3880fc36 	bltu	r7,r2,20a3cc <__udivdi3+0x58c>
  209fdc:	3804d63a 	srli	r2,r7,24
  209fe0:	01000604 	movi	r4,24
  209fe4:	00c00874 	movhi	r3,33
  209fe8:	10c7883a 	add	r3,r2,r3
  209fec:	18807b03 	ldbu	r2,492(r3)
  209ff0:	00c00804 	movi	r3,32
  209ff4:	1105883a 	add	r2,r2,r4
  209ff8:	18a3c83a 	sub	r17,r3,r2
  209ffc:	1880901e 	bne	r3,r2,20a240 <__udivdi3+0x400>
  20a000:	3c80f736 	bltu	r7,r18,20a3e0 <__udivdi3+0x5a0>
  20a004:	a185403a 	cmpgeu	r2,r20,r6
  20a008:	0007883a 	mov	r3,zero
  20a00c:	003fe306 	br	209f9c <__udivdi3+0x15c>
  20a010:	3000041e 	bne	r6,zero,20a024 <__udivdi3+0x1e4>
  20a014:	000b883a 	mov	r5,zero
  20a018:	01000044 	movi	r4,1
  20a01c:	020ab180 	call	20ab18 <__udivsi3>
  20a020:	1021883a 	mov	r16,r2
  20a024:	00bfffd4 	movui	r2,65535
  20a028:	14003f2e 	bgeu	r2,r16,20a128 <__udivdi3+0x2e8>
  20a02c:	00804034 	movhi	r2,256
  20a030:	8080f136 	bltu	r16,r2,20a3f8 <__udivdi3+0x5b8>
  20a034:	8006d63a 	srli	r3,r16,24
  20a038:	04400604 	movi	r17,24
  20a03c:	00800874 	movhi	r2,33
  20a040:	1885883a 	add	r2,r3,r2
  20a044:	10807b03 	ldbu	r2,492(r2)
  20a048:	00c00804 	movi	r3,32
  20a04c:	1463883a 	add	r17,r2,r17
  20a050:	1c45c83a 	sub	r2,r3,r17
  20a054:	1c40431e 	bne	r3,r17,20a164 <__udivdi3+0x324>
  20a058:	802cd43a 	srli	r22,r16,16
  20a05c:	9423c83a 	sub	r17,r18,r16
  20a060:	853fffcc 	andi	r20,r16,65535
  20a064:	00c00044 	movi	r3,1
  20a068:	b00b883a 	mov	r5,r22
  20a06c:	8809883a 	mov	r4,r17
  20a070:	d8c00015 	stw	r3,0(sp)
  20a074:	020ab7c0 	call	20ab7c <__umodsi3>
  20a078:	b00b883a 	mov	r5,r22
  20a07c:	8809883a 	mov	r4,r17
  20a080:	1025883a 	mov	r18,r2
  20a084:	020ab180 	call	20ab18 <__udivsi3>
  20a088:	1009883a 	mov	r4,r2
  20a08c:	a00b883a 	mov	r5,r20
  20a090:	102b883a 	mov	r21,r2
  20a094:	020abd80 	call	20abd8 <__mulsi3>
  20a098:	9024943a 	slli	r18,r18,16
  20a09c:	9808d43a 	srli	r4,r19,16
  20a0a0:	d8c00017 	ldw	r3,0(sp)
  20a0a4:	9108b03a 	or	r4,r18,r4
  20a0a8:	2080052e 	bgeu	r4,r2,20a0c0 <__udivdi3+0x280>
  20a0ac:	2409883a 	add	r4,r4,r16
  20a0b0:	a97fffc4 	addi	r5,r21,-1
  20a0b4:	24000136 	bltu	r4,r16,20a0bc <__udivdi3+0x27c>
  20a0b8:	2080e636 	bltu	r4,r2,20a454 <__udivdi3+0x614>
  20a0bc:	282b883a 	mov	r21,r5
  20a0c0:	20a3c83a 	sub	r17,r4,r2
  20a0c4:	8809883a 	mov	r4,r17
  20a0c8:	b00b883a 	mov	r5,r22
  20a0cc:	d8c00015 	stw	r3,0(sp)
  20a0d0:	020ab7c0 	call	20ab7c <__umodsi3>
  20a0d4:	8809883a 	mov	r4,r17
  20a0d8:	1023883a 	mov	r17,r2
  20a0dc:	b00b883a 	mov	r5,r22
  20a0e0:	8822943a 	slli	r17,r17,16
  20a0e4:	020ab180 	call	20ab18 <__udivsi3>
  20a0e8:	a00b883a 	mov	r5,r20
  20a0ec:	1009883a 	mov	r4,r2
  20a0f0:	9cffffcc 	andi	r19,r19,65535
  20a0f4:	1025883a 	mov	r18,r2
  20a0f8:	8ce6b03a 	or	r19,r17,r19
  20a0fc:	020abd80 	call	20abd8 <__mulsi3>
  20a100:	d8c00017 	ldw	r3,0(sp)
  20a104:	9880052e 	bgeu	r19,r2,20a11c <__udivdi3+0x2dc>
  20a108:	84e7883a 	add	r19,r16,r19
  20a10c:	913fffc4 	addi	r4,r18,-1
  20a110:	9c000136 	bltu	r19,r16,20a118 <__udivdi3+0x2d8>
  20a114:	9880c836 	bltu	r19,r2,20a438 <__udivdi3+0x5f8>
  20a118:	2025883a 	mov	r18,r4
  20a11c:	a80c943a 	slli	r6,r21,16
  20a120:	3484b03a 	or	r2,r6,r18
  20a124:	003f9d06 	br	209f9c <__udivdi3+0x15c>
  20a128:	80804030 	cmpltui	r2,r16,256
  20a12c:	1000b81e 	bne	r2,zero,20a410 <__udivdi3+0x5d0>
  20a130:	8006d23a 	srli	r3,r16,8
  20a134:	04400204 	movi	r17,8
  20a138:	003fc006 	br	20a03c <__udivdi3+0x1fc>
  20a13c:	30804030 	cmpltui	r2,r6,256
  20a140:	1000a51e 	bne	r2,zero,20a3d8 <__udivdi3+0x598>
  20a144:	3006d23a 	srli	r3,r6,8
  20a148:	04400204 	movi	r17,8
  20a14c:	003f5506 	br	209ea4 <__udivdi3+0x64>
  20a150:	38804030 	cmpltui	r2,r7,256
  20a154:	1000a51e 	bne	r2,zero,20a3ec <__udivdi3+0x5ac>
  20a158:	3804d23a 	srli	r2,r7,8
  20a15c:	01000204 	movi	r4,8
  20a160:	003fa006 	br	209fe4 <__udivdi3+0x1a4>
  20a164:	80a0983a 	sll	r16,r16,r2
  20a168:	946ed83a 	srl	r23,r18,r17
  20a16c:	9086983a 	sll	r3,r18,r2
  20a170:	802cd43a 	srli	r22,r16,16
  20a174:	a462d83a 	srl	r17,r20,r17
  20a178:	b809883a 	mov	r4,r23
  20a17c:	b00b883a 	mov	r5,r22
  20a180:	88eab03a 	or	r21,r17,r3
  20a184:	a0a6983a 	sll	r19,r20,r2
  20a188:	020ab7c0 	call	20ab7c <__umodsi3>
  20a18c:	b809883a 	mov	r4,r23
  20a190:	b00b883a 	mov	r5,r22
  20a194:	1025883a 	mov	r18,r2
  20a198:	853fffcc 	andi	r20,r16,65535
  20a19c:	020ab180 	call	20ab18 <__udivsi3>
  20a1a0:	a009883a 	mov	r4,r20
  20a1a4:	100b883a 	mov	r5,r2
  20a1a8:	102f883a 	mov	r23,r2
  20a1ac:	020abd80 	call	20abd8 <__mulsi3>
  20a1b0:	9024943a 	slli	r18,r18,16
  20a1b4:	a808d43a 	srli	r4,r21,16
  20a1b8:	9108b03a 	or	r4,r18,r4
  20a1bc:	2080062e 	bgeu	r4,r2,20a1d8 <__udivdi3+0x398>
  20a1c0:	2409883a 	add	r4,r4,r16
  20a1c4:	b8ffffc4 	addi	r3,r23,-1
  20a1c8:	24009936 	bltu	r4,r16,20a430 <__udivdi3+0x5f0>
  20a1cc:	2080982e 	bgeu	r4,r2,20a430 <__udivdi3+0x5f0>
  20a1d0:	bdffff84 	addi	r23,r23,-2
  20a1d4:	2409883a 	add	r4,r4,r16
  20a1d8:	20a3c83a 	sub	r17,r4,r2
  20a1dc:	8809883a 	mov	r4,r17
  20a1e0:	b00b883a 	mov	r5,r22
  20a1e4:	020ab7c0 	call	20ab7c <__umodsi3>
  20a1e8:	1025883a 	mov	r18,r2
  20a1ec:	8809883a 	mov	r4,r17
  20a1f0:	b00b883a 	mov	r5,r22
  20a1f4:	9024943a 	slli	r18,r18,16
  20a1f8:	020ab180 	call	20ab18 <__udivsi3>
  20a1fc:	100b883a 	mov	r5,r2
  20a200:	a009883a 	mov	r4,r20
  20a204:	ac7fffcc 	andi	r17,r21,65535
  20a208:	1039883a 	mov	fp,r2
  20a20c:	9462b03a 	or	r17,r18,r17
  20a210:	020abd80 	call	20abd8 <__mulsi3>
  20a214:	8880062e 	bgeu	r17,r2,20a230 <__udivdi3+0x3f0>
  20a218:	8c23883a 	add	r17,r17,r16
  20a21c:	e0ffffc4 	addi	r3,fp,-1
  20a220:	8c007f36 	bltu	r17,r16,20a420 <__udivdi3+0x5e0>
  20a224:	88807e2e 	bgeu	r17,r2,20a420 <__udivdi3+0x5e0>
  20a228:	e73fff84 	addi	fp,fp,-2
  20a22c:	8c23883a 	add	r17,r17,r16
  20a230:	b806943a 	slli	r3,r23,16
  20a234:	88a3c83a 	sub	r17,r17,r2
  20a238:	1f06b03a 	or	r3,r3,fp
  20a23c:	003f8a06 	br	20a068 <__udivdi3+0x228>
  20a240:	30a6d83a 	srl	r19,r6,r2
  20a244:	3c4e983a 	sll	r7,r7,r17
  20a248:	90a0d83a 	srl	r16,r18,r2
  20a24c:	9446983a 	sll	r3,r18,r17
  20a250:	99e6b03a 	or	r19,r19,r7
  20a254:	a084d83a 	srl	r2,r20,r2
  20a258:	9838d43a 	srli	fp,r19,16
  20a25c:	8009883a 	mov	r4,r16
  20a260:	10eab03a 	or	r21,r2,r3
  20a264:	e00b883a 	mov	r5,fp
  20a268:	346c983a 	sll	r22,r6,r17
  20a26c:	dd400015 	stw	r21,0(sp)
  20a270:	020ab7c0 	call	20ab7c <__umodsi3>
  20a274:	8009883a 	mov	r4,r16
  20a278:	e00b883a 	mov	r5,fp
  20a27c:	102f883a 	mov	r23,r2
  20a280:	9cbfffcc 	andi	r18,r19,65535
  20a284:	020ab180 	call	20ab18 <__udivsi3>
  20a288:	9009883a 	mov	r4,r18
  20a28c:	100b883a 	mov	r5,r2
  20a290:	1021883a 	mov	r16,r2
  20a294:	020abd80 	call	20abd8 <__mulsi3>
  20a298:	b82e943a 	slli	r23,r23,16
  20a29c:	a808d43a 	srli	r4,r21,16
  20a2a0:	b908b03a 	or	r4,r23,r4
  20a2a4:	2080062e 	bgeu	r4,r2,20a2c0 <__udivdi3+0x480>
  20a2a8:	24c9883a 	add	r4,r4,r19
  20a2ac:	817fffc4 	addi	r5,r16,-1
  20a2b0:	24c05d36 	bltu	r4,r19,20a428 <__udivdi3+0x5e8>
  20a2b4:	20805c2e 	bgeu	r4,r2,20a428 <__udivdi3+0x5e8>
  20a2b8:	843fff84 	addi	r16,r16,-2
  20a2bc:	24c9883a 	add	r4,r4,r19
  20a2c0:	20abc83a 	sub	r21,r4,r2
  20a2c4:	a809883a 	mov	r4,r21
  20a2c8:	e00b883a 	mov	r5,fp
  20a2cc:	020ab7c0 	call	20ab7c <__umodsi3>
  20a2d0:	a809883a 	mov	r4,r21
  20a2d4:	e00b883a 	mov	r5,fp
  20a2d8:	102b883a 	mov	r21,r2
  20a2dc:	020ab180 	call	20ab18 <__udivsi3>
  20a2e0:	9009883a 	mov	r4,r18
  20a2e4:	100b883a 	mov	r5,r2
  20a2e8:	102f883a 	mov	r23,r2
  20a2ec:	020abd80 	call	20abd8 <__mulsi3>
  20a2f0:	d8c00017 	ldw	r3,0(sp)
  20a2f4:	a82a943a 	slli	r21,r21,16
  20a2f8:	100d883a 	mov	r6,r2
  20a2fc:	1cbfffcc 	andi	r18,r3,65535
  20a300:	aca4b03a 	or	r18,r21,r18
  20a304:	9080062e 	bgeu	r18,r2,20a320 <__udivdi3+0x4e0>
  20a308:	94e5883a 	add	r18,r18,r19
  20a30c:	b8bfffc4 	addi	r2,r23,-1
  20a310:	94c04136 	bltu	r18,r19,20a418 <__udivdi3+0x5d8>
  20a314:	9180402e 	bgeu	r18,r6,20a418 <__udivdi3+0x5d8>
  20a318:	bdffff84 	addi	r23,r23,-2
  20a31c:	94e5883a 	add	r18,r18,r19
  20a320:	8004943a 	slli	r2,r16,16
  20a324:	bd7fffcc 	andi	r21,r23,65535
  20a328:	b73fffcc 	andi	fp,r22,65535
  20a32c:	15e0b03a 	or	r16,r2,r23
  20a330:	8026d43a 	srli	r19,r16,16
  20a334:	a809883a 	mov	r4,r21
  20a338:	e00b883a 	mov	r5,fp
  20a33c:	91a5c83a 	sub	r18,r18,r6
  20a340:	b02cd43a 	srli	r22,r22,16
  20a344:	020abd80 	call	20abd8 <__mulsi3>
  20a348:	9809883a 	mov	r4,r19
  20a34c:	e00b883a 	mov	r5,fp
  20a350:	102f883a 	mov	r23,r2
  20a354:	020abd80 	call	20abd8 <__mulsi3>
  20a358:	9809883a 	mov	r4,r19
  20a35c:	b00b883a 	mov	r5,r22
  20a360:	1027883a 	mov	r19,r2
  20a364:	020abd80 	call	20abd8 <__mulsi3>
  20a368:	a809883a 	mov	r4,r21
  20a36c:	b00b883a 	mov	r5,r22
  20a370:	102b883a 	mov	r21,r2
  20a374:	020abd80 	call	20abd8 <__mulsi3>
  20a378:	b806d43a 	srli	r3,r23,16
  20a37c:	14c5883a 	add	r2,r2,r19
  20a380:	1887883a 	add	r3,r3,r2
  20a384:	1cc0022e 	bgeu	r3,r19,20a390 <__udivdi3+0x550>
  20a388:	00800074 	movhi	r2,1
  20a38c:	a8ab883a 	add	r21,r21,r2
  20a390:	1804d43a 	srli	r2,r3,16
  20a394:	156b883a 	add	r21,r2,r21
  20a398:	95400936 	bltu	r18,r21,20a3c0 <__udivdi3+0x580>
  20a39c:	95400326 	beq	r18,r21,20a3ac <__udivdi3+0x56c>
  20a3a0:	8005883a 	mov	r2,r16
  20a3a4:	0007883a 	mov	r3,zero
  20a3a8:	003efc06 	br	209f9c <__udivdi3+0x15c>
  20a3ac:	1806943a 	slli	r3,r3,16
  20a3b0:	a44c983a 	sll	r6,r20,r17
  20a3b4:	bdffffcc 	andi	r23,r23,65535
  20a3b8:	1dc7883a 	add	r3,r3,r23
  20a3bc:	30fff82e 	bgeu	r6,r3,20a3a0 <__udivdi3+0x560>
  20a3c0:	80bfffc4 	addi	r2,r16,-1
  20a3c4:	0007883a 	mov	r3,zero
  20a3c8:	003ef406 	br	209f9c <__udivdi3+0x15c>
  20a3cc:	3804d43a 	srli	r2,r7,16
  20a3d0:	01000404 	movi	r4,16
  20a3d4:	003f0306 	br	209fe4 <__udivdi3+0x1a4>
  20a3d8:	3007883a 	mov	r3,r6
  20a3dc:	003eb106 	br	209ea4 <__udivdi3+0x64>
  20a3e0:	0007883a 	mov	r3,zero
  20a3e4:	00800044 	movi	r2,1
  20a3e8:	003eec06 	br	209f9c <__udivdi3+0x15c>
  20a3ec:	3805883a 	mov	r2,r7
  20a3f0:	0009883a 	mov	r4,zero
  20a3f4:	003efb06 	br	209fe4 <__udivdi3+0x1a4>
  20a3f8:	8006d43a 	srli	r3,r16,16
  20a3fc:	04400404 	movi	r17,16
  20a400:	003f0e06 	br	20a03c <__udivdi3+0x1fc>
  20a404:	3006d43a 	srli	r3,r6,16
  20a408:	04400404 	movi	r17,16
  20a40c:	003ea506 	br	209ea4 <__udivdi3+0x64>
  20a410:	8007883a 	mov	r3,r16
  20a414:	003f0906 	br	20a03c <__udivdi3+0x1fc>
  20a418:	102f883a 	mov	r23,r2
  20a41c:	003fc006 	br	20a320 <__udivdi3+0x4e0>
  20a420:	1839883a 	mov	fp,r3
  20a424:	003f8206 	br	20a230 <__udivdi3+0x3f0>
  20a428:	2821883a 	mov	r16,r5
  20a42c:	003fa406 	br	20a2c0 <__udivdi3+0x480>
  20a430:	182f883a 	mov	r23,r3
  20a434:	003f6806 	br	20a1d8 <__udivdi3+0x398>
  20a438:	94bfff84 	addi	r18,r18,-2
  20a43c:	003f3706 	br	20a11c <__udivdi3+0x2dc>
  20a440:	94bfff84 	addi	r18,r18,-2
  20a444:	003ece06 	br	209f80 <__udivdi3+0x140>
  20a448:	ad7fff84 	addi	r21,r21,-2
  20a44c:	2409883a 	add	r4,r4,r16
  20a450:	003eb606 	br	209f2c <__udivdi3+0xec>
  20a454:	ad7fff84 	addi	r21,r21,-2
  20a458:	2409883a 	add	r4,r4,r16
  20a45c:	003f1806 	br	20a0c0 <__udivdi3+0x280>

0020a460 <__umoddi3>:
  20a460:	defff304 	addi	sp,sp,-52
  20a464:	dc400415 	stw	r17,16(sp)
  20a468:	dc000315 	stw	r16,12(sp)
  20a46c:	dfc00c15 	stw	ra,48(sp)
  20a470:	df000b15 	stw	fp,44(sp)
  20a474:	ddc00a15 	stw	r23,40(sp)
  20a478:	dd800915 	stw	r22,36(sp)
  20a47c:	dd400815 	stw	r21,32(sp)
  20a480:	dd000715 	stw	r20,28(sp)
  20a484:	dcc00615 	stw	r19,24(sp)
  20a488:	dc800515 	stw	r18,20(sp)
  20a48c:	2823883a 	mov	r17,r5
  20a490:	2021883a 	mov	r16,r4
  20a494:	38003b1e 	bne	r7,zero,20a584 <__umoddi3+0x124>
  20a498:	3825883a 	mov	r18,r7
  20a49c:	3029883a 	mov	r20,r6
  20a4a0:	2027883a 	mov	r19,r4
  20a4a4:	29805b2e 	bgeu	r5,r6,20a614 <__umoddi3+0x1b4>
  20a4a8:	00bfffd4 	movui	r2,65535
  20a4ac:	282d883a 	mov	r22,r5
  20a4b0:	11809a2e 	bgeu	r2,r6,20a71c <__umoddi3+0x2bc>
  20a4b4:	00804034 	movhi	r2,256
  20a4b8:	30814436 	bltu	r6,r2,20a9cc <__umoddi3+0x56c>
  20a4bc:	3006d63a 	srli	r3,r6,24
  20a4c0:	04800604 	movi	r18,24
  20a4c4:	00800874 	movhi	r2,33
  20a4c8:	1885883a 	add	r2,r3,r2
  20a4cc:	10807b03 	ldbu	r2,492(r2)
  20a4d0:	00c00804 	movi	r3,32
  20a4d4:	1485883a 	add	r2,r2,r18
  20a4d8:	18a5c83a 	sub	r18,r3,r2
  20a4dc:	18800526 	beq	r3,r2,20a4f4 <__umoddi3+0x94>
  20a4e0:	8ca2983a 	sll	r17,r17,r18
  20a4e4:	8084d83a 	srl	r2,r16,r2
  20a4e8:	34a8983a 	sll	r20,r6,r18
  20a4ec:	84a6983a 	sll	r19,r16,r18
  20a4f0:	146cb03a 	or	r22,r2,r17
  20a4f4:	a02ed43a 	srli	r23,r20,16
  20a4f8:	b009883a 	mov	r4,r22
  20a4fc:	a57fffcc 	andi	r21,r20,65535
  20a500:	b80b883a 	mov	r5,r23
  20a504:	020ab7c0 	call	20ab7c <__umodsi3>
  20a508:	b80b883a 	mov	r5,r23
  20a50c:	b009883a 	mov	r4,r22
  20a510:	1023883a 	mov	r17,r2
  20a514:	020ab180 	call	20ab18 <__udivsi3>
  20a518:	a809883a 	mov	r4,r21
  20a51c:	100b883a 	mov	r5,r2
  20a520:	020abd80 	call	20abd8 <__mulsi3>
  20a524:	8822943a 	slli	r17,r17,16
  20a528:	9808d43a 	srli	r4,r19,16
  20a52c:	8908b03a 	or	r4,r17,r4
  20a530:	2080042e 	bgeu	r4,r2,20a544 <__umoddi3+0xe4>
  20a534:	2509883a 	add	r4,r4,r20
  20a538:	25000236 	bltu	r4,r20,20a544 <__umoddi3+0xe4>
  20a53c:	2080012e 	bgeu	r4,r2,20a544 <__umoddi3+0xe4>
  20a540:	2509883a 	add	r4,r4,r20
  20a544:	20a1c83a 	sub	r16,r4,r2
  20a548:	b80b883a 	mov	r5,r23
  20a54c:	8009883a 	mov	r4,r16
  20a550:	020ab7c0 	call	20ab7c <__umodsi3>
  20a554:	b80b883a 	mov	r5,r23
  20a558:	8009883a 	mov	r4,r16
  20a55c:	1023883a 	mov	r17,r2
  20a560:	020ab180 	call	20ab18 <__udivsi3>
  20a564:	8822943a 	slli	r17,r17,16
  20a568:	100b883a 	mov	r5,r2
  20a56c:	a809883a 	mov	r4,r21
  20a570:	020abd80 	call	20abd8 <__mulsi3>
  20a574:	98ffffcc 	andi	r3,r19,65535
  20a578:	88c6b03a 	or	r3,r17,r3
  20a57c:	18805e2e 	bgeu	r3,r2,20a6f8 <__umoddi3+0x298>
  20a580:	00005906 	br	20a6e8 <__umoddi3+0x288>
  20a584:	2005883a 	mov	r2,r4
  20a588:	29c00d2e 	bgeu	r5,r7,20a5c0 <__umoddi3+0x160>
  20a58c:	2807883a 	mov	r3,r5
  20a590:	dfc00c17 	ldw	ra,48(sp)
  20a594:	df000b17 	ldw	fp,44(sp)
  20a598:	ddc00a17 	ldw	r23,40(sp)
  20a59c:	dd800917 	ldw	r22,36(sp)
  20a5a0:	dd400817 	ldw	r21,32(sp)
  20a5a4:	dd000717 	ldw	r20,28(sp)
  20a5a8:	dcc00617 	ldw	r19,24(sp)
  20a5ac:	dc800517 	ldw	r18,20(sp)
  20a5b0:	dc400417 	ldw	r17,16(sp)
  20a5b4:	dc000317 	ldw	r16,12(sp)
  20a5b8:	dec00d04 	addi	sp,sp,52
  20a5bc:	f800283a 	ret
  20a5c0:	013fffd4 	movui	r4,65535
  20a5c4:	2807883a 	mov	r3,r5
  20a5c8:	21c0592e 	bgeu	r4,r7,20a730 <__umoddi3+0x2d0>
  20a5cc:	01004034 	movhi	r4,256
  20a5d0:	39010336 	bltu	r7,r4,20a9e0 <__umoddi3+0x580>
  20a5d4:	3808d63a 	srli	r4,r7,24
  20a5d8:	02000604 	movi	r8,24
  20a5dc:	01400874 	movhi	r5,33
  20a5e0:	214b883a 	add	r5,r4,r5
  20a5e4:	2d007b03 	ldbu	r20,492(r5)
  20a5e8:	01000804 	movi	r4,32
  20a5ec:	a229883a 	add	r20,r20,r8
  20a5f0:	252bc83a 	sub	r21,r4,r20
  20a5f4:	2500531e 	bne	r4,r20,20a744 <__umoddi3+0x2e4>
  20a5f8:	3c400136 	bltu	r7,r17,20a600 <__umoddi3+0x1a0>
  20a5fc:	81bfe436 	bltu	r16,r6,20a590 <__umoddi3+0x130>
  20a600:	8185c83a 	sub	r2,r16,r6
  20a604:	89cfc83a 	sub	r7,r17,r7
  20a608:	8087803a 	cmpltu	r3,r16,r2
  20a60c:	38c7c83a 	sub	r3,r7,r3
  20a610:	003fdf06 	br	20a590 <__umoddi3+0x130>
  20a614:	3000041e 	bne	r6,zero,20a628 <__umoddi3+0x1c8>
  20a618:	000b883a 	mov	r5,zero
  20a61c:	01000044 	movi	r4,1
  20a620:	020ab180 	call	20ab18 <__udivsi3>
  20a624:	1029883a 	mov	r20,r2
  20a628:	00bfffd4 	movui	r2,65535
  20a62c:	1500362e 	bgeu	r2,r20,20a708 <__umoddi3+0x2a8>
  20a630:	00804034 	movhi	r2,256
  20a634:	a080ed36 	bltu	r20,r2,20a9ec <__umoddi3+0x58c>
  20a638:	a006d63a 	srli	r3,r20,24
  20a63c:	04800604 	movi	r18,24
  20a640:	00800874 	movhi	r2,33
  20a644:	1885883a 	add	r2,r3,r2
  20a648:	15807b03 	ldbu	r22,492(r2)
  20a64c:	00800804 	movi	r2,32
  20a650:	b4ad883a 	add	r22,r22,r18
  20a654:	15a5c83a 	sub	r18,r2,r22
  20a658:	1580a51e 	bne	r2,r22,20a8f0 <__umoddi3+0x490>
  20a65c:	a02ed43a 	srli	r23,r20,16
  20a660:	8d23c83a 	sub	r17,r17,r20
  20a664:	a57fffcc 	andi	r21,r20,65535
  20a668:	8809883a 	mov	r4,r17
  20a66c:	b80b883a 	mov	r5,r23
  20a670:	020ab7c0 	call	20ab7c <__umodsi3>
  20a674:	8809883a 	mov	r4,r17
  20a678:	b80b883a 	mov	r5,r23
  20a67c:	1023883a 	mov	r17,r2
  20a680:	020ab180 	call	20ab18 <__udivsi3>
  20a684:	1009883a 	mov	r4,r2
  20a688:	a80b883a 	mov	r5,r21
  20a68c:	020abd80 	call	20abd8 <__mulsi3>
  20a690:	8822943a 	slli	r17,r17,16
  20a694:	9808d43a 	srli	r4,r19,16
  20a698:	8908b03a 	or	r4,r17,r4
  20a69c:	2080032e 	bgeu	r4,r2,20a6ac <__umoddi3+0x24c>
  20a6a0:	2509883a 	add	r4,r4,r20
  20a6a4:	25000136 	bltu	r4,r20,20a6ac <__umoddi3+0x24c>
  20a6a8:	2080dc36 	bltu	r4,r2,20aa1c <__umoddi3+0x5bc>
  20a6ac:	20a1c83a 	sub	r16,r4,r2
  20a6b0:	b80b883a 	mov	r5,r23
  20a6b4:	8009883a 	mov	r4,r16
  20a6b8:	020ab7c0 	call	20ab7c <__umodsi3>
  20a6bc:	b80b883a 	mov	r5,r23
  20a6c0:	8009883a 	mov	r4,r16
  20a6c4:	1023883a 	mov	r17,r2
  20a6c8:	8822943a 	slli	r17,r17,16
  20a6cc:	020ab180 	call	20ab18 <__udivsi3>
  20a6d0:	a80b883a 	mov	r5,r21
  20a6d4:	1009883a 	mov	r4,r2
  20a6d8:	020abd80 	call	20abd8 <__mulsi3>
  20a6dc:	9cffffcc 	andi	r19,r19,65535
  20a6e0:	8cc6b03a 	or	r3,r17,r19
  20a6e4:	1880042e 	bgeu	r3,r2,20a6f8 <__umoddi3+0x298>
  20a6e8:	1d07883a 	add	r3,r3,r20
  20a6ec:	1d000236 	bltu	r3,r20,20a6f8 <__umoddi3+0x298>
  20a6f0:	1880012e 	bgeu	r3,r2,20a6f8 <__umoddi3+0x298>
  20a6f4:	1d07883a 	add	r3,r3,r20
  20a6f8:	1885c83a 	sub	r2,r3,r2
  20a6fc:	1484d83a 	srl	r2,r2,r18
  20a700:	0007883a 	mov	r3,zero
  20a704:	003fa206 	br	20a590 <__umoddi3+0x130>
  20a708:	a0804030 	cmpltui	r2,r20,256
  20a70c:	1000ba1e 	bne	r2,zero,20a9f8 <__umoddi3+0x598>
  20a710:	a006d23a 	srli	r3,r20,8
  20a714:	04800204 	movi	r18,8
  20a718:	003fc906 	br	20a640 <__umoddi3+0x1e0>
  20a71c:	30804030 	cmpltui	r2,r6,256
  20a720:	1000ad1e 	bne	r2,zero,20a9d8 <__umoddi3+0x578>
  20a724:	3006d23a 	srli	r3,r6,8
  20a728:	04800204 	movi	r18,8
  20a72c:	003f6506 	br	20a4c4 <__umoddi3+0x64>
  20a730:	39004030 	cmpltui	r4,r7,256
  20a734:	2000b21e 	bne	r4,zero,20aa00 <__umoddi3+0x5a0>
  20a738:	3808d23a 	srli	r4,r7,8
  20a73c:	02000204 	movi	r8,8
  20a740:	003fa606 	br	20a5dc <__umoddi3+0x17c>
  20a744:	3d4e983a 	sll	r7,r7,r21
  20a748:	3508d83a 	srl	r4,r6,r20
  20a74c:	8d2cd83a 	srl	r22,r17,r20
  20a750:	8504d83a 	srl	r2,r16,r20
  20a754:	21e4b03a 	or	r18,r4,r7
  20a758:	8d62983a 	sll	r17,r17,r21
  20a75c:	9026d43a 	srli	r19,r18,16
  20a760:	354c983a 	sll	r6,r6,r21
  20a764:	1444b03a 	or	r2,r2,r17
  20a768:	b009883a 	mov	r4,r22
  20a76c:	980b883a 	mov	r5,r19
  20a770:	d9800115 	stw	r6,4(sp)
  20a774:	d8800015 	stw	r2,0(sp)
  20a778:	020ab7c0 	call	20ab7c <__umodsi3>
  20a77c:	980b883a 	mov	r5,r19
  20a780:	b009883a 	mov	r4,r22
  20a784:	102f883a 	mov	r23,r2
  20a788:	947fffcc 	andi	r17,r18,65535
  20a78c:	020ab180 	call	20ab18 <__udivsi3>
  20a790:	8809883a 	mov	r4,r17
  20a794:	100b883a 	mov	r5,r2
  20a798:	1039883a 	mov	fp,r2
  20a79c:	020abd80 	call	20abd8 <__mulsi3>
  20a7a0:	d8c00017 	ldw	r3,0(sp)
  20a7a4:	b82e943a 	slli	r23,r23,16
  20a7a8:	8560983a 	sll	r16,r16,r21
  20a7ac:	1808d43a 	srli	r4,r3,16
  20a7b0:	b908b03a 	or	r4,r23,r4
  20a7b4:	2080062e 	bgeu	r4,r2,20a7d0 <__umoddi3+0x370>
  20a7b8:	2489883a 	add	r4,r4,r18
  20a7bc:	e17fffc4 	addi	r5,fp,-1
  20a7c0:	24809436 	bltu	r4,r18,20aa14 <__umoddi3+0x5b4>
  20a7c4:	2080932e 	bgeu	r4,r2,20aa14 <__umoddi3+0x5b4>
  20a7c8:	e73fff84 	addi	fp,fp,-2
  20a7cc:	2489883a 	add	r4,r4,r18
  20a7d0:	20adc83a 	sub	r22,r4,r2
  20a7d4:	980b883a 	mov	r5,r19
  20a7d8:	b009883a 	mov	r4,r22
  20a7dc:	020ab7c0 	call	20ab7c <__umodsi3>
  20a7e0:	980b883a 	mov	r5,r19
  20a7e4:	b009883a 	mov	r4,r22
  20a7e8:	102f883a 	mov	r23,r2
  20a7ec:	020ab180 	call	20ab18 <__udivsi3>
  20a7f0:	100b883a 	mov	r5,r2
  20a7f4:	8809883a 	mov	r4,r17
  20a7f8:	d8800215 	stw	r2,8(sp)
  20a7fc:	020abd80 	call	20abd8 <__mulsi3>
  20a800:	d8c00017 	ldw	r3,0(sp)
  20a804:	b82e943a 	slli	r23,r23,16
  20a808:	d9400217 	ldw	r5,8(sp)
  20a80c:	1c7fffcc 	andi	r17,r3,65535
  20a810:	bc62b03a 	or	r17,r23,r17
  20a814:	8880062e 	bgeu	r17,r2,20a830 <__umoddi3+0x3d0>
  20a818:	8ca3883a 	add	r17,r17,r18
  20a81c:	28ffffc4 	addi	r3,r5,-1
  20a820:	8c807a36 	bltu	r17,r18,20aa0c <__umoddi3+0x5ac>
  20a824:	8880792e 	bgeu	r17,r2,20aa0c <__umoddi3+0x5ac>
  20a828:	297fff84 	addi	r5,r5,-2
  20a82c:	8ca3883a 	add	r17,r17,r18
  20a830:	e02c943a 	slli	r22,fp,16
  20a834:	d9c00117 	ldw	r7,4(sp)
  20a838:	29bfffcc 	andi	r6,r5,65535
  20a83c:	b16cb03a 	or	r22,r22,r5
  20a840:	38ffffcc 	andi	r3,r7,65535
  20a844:	b02cd43a 	srli	r22,r22,16
  20a848:	180b883a 	mov	r5,r3
  20a84c:	3009883a 	mov	r4,r6
  20a850:	3838d43a 	srli	fp,r7,16
  20a854:	182f883a 	mov	r23,r3
  20a858:	d9800015 	stw	r6,0(sp)
  20a85c:	88a3c83a 	sub	r17,r17,r2
  20a860:	020abd80 	call	20abd8 <__mulsi3>
  20a864:	b80b883a 	mov	r5,r23
  20a868:	b009883a 	mov	r4,r22
  20a86c:	102f883a 	mov	r23,r2
  20a870:	020abd80 	call	20abd8 <__mulsi3>
  20a874:	e00b883a 	mov	r5,fp
  20a878:	b009883a 	mov	r4,r22
  20a87c:	102d883a 	mov	r22,r2
  20a880:	020abd80 	call	20abd8 <__mulsi3>
  20a884:	d9800017 	ldw	r6,0(sp)
  20a888:	e00b883a 	mov	r5,fp
  20a88c:	1039883a 	mov	fp,r2
  20a890:	3009883a 	mov	r4,r6
  20a894:	020abd80 	call	20abd8 <__mulsi3>
  20a898:	b808d43a 	srli	r4,r23,16
  20a89c:	1585883a 	add	r2,r2,r22
  20a8a0:	2089883a 	add	r4,r4,r2
  20a8a4:	2580022e 	bgeu	r4,r22,20a8b0 <__umoddi3+0x450>
  20a8a8:	00800074 	movhi	r2,1
  20a8ac:	e0b9883a 	add	fp,fp,r2
  20a8b0:	2006d43a 	srli	r3,r4,16
  20a8b4:	2008943a 	slli	r4,r4,16
  20a8b8:	bdffffcc 	andi	r23,r23,65535
  20a8bc:	1f07883a 	add	r3,r3,fp
  20a8c0:	25c9883a 	add	r4,r4,r23
  20a8c4:	88c03a36 	bltu	r17,r3,20a9b0 <__umoddi3+0x550>
  20a8c8:	88c03826 	beq	r17,r3,20a9ac <__umoddi3+0x54c>
  20a8cc:	8109c83a 	sub	r4,r16,r4
  20a8d0:	8121803a 	cmpltu	r16,r16,r4
  20a8d4:	88c7c83a 	sub	r3,r17,r3
  20a8d8:	1c07c83a 	sub	r3,r3,r16
  20a8dc:	1d04983a 	sll	r2,r3,r20
  20a8e0:	2548d83a 	srl	r4,r4,r21
  20a8e4:	1d46d83a 	srl	r3,r3,r21
  20a8e8:	1104b03a 	or	r2,r2,r4
  20a8ec:	003f2806 	br	20a590 <__umoddi3+0x130>
  20a8f0:	a4a8983a 	sll	r20,r20,r18
  20a8f4:	8da6d83a 	srl	r19,r17,r22
  20a8f8:	8ca2983a 	sll	r17,r17,r18
  20a8fc:	a02ed43a 	srli	r23,r20,16
  20a900:	9809883a 	mov	r4,r19
  20a904:	85acd83a 	srl	r22,r16,r22
  20a908:	b80b883a 	mov	r5,r23
  20a90c:	020ab7c0 	call	20ab7c <__umodsi3>
  20a910:	9809883a 	mov	r4,r19
  20a914:	b80b883a 	mov	r5,r23
  20a918:	b46cb03a 	or	r22,r22,r17
  20a91c:	a57fffcc 	andi	r21,r20,65535
  20a920:	1023883a 	mov	r17,r2
  20a924:	020ab180 	call	20ab18 <__udivsi3>
  20a928:	a809883a 	mov	r4,r21
  20a92c:	100b883a 	mov	r5,r2
  20a930:	020abd80 	call	20abd8 <__mulsi3>
  20a934:	8822943a 	slli	r17,r17,16
  20a938:	b008d43a 	srli	r4,r22,16
  20a93c:	84a6983a 	sll	r19,r16,r18
  20a940:	8908b03a 	or	r4,r17,r4
  20a944:	2080042e 	bgeu	r4,r2,20a958 <__umoddi3+0x4f8>
  20a948:	2509883a 	add	r4,r4,r20
  20a94c:	25000236 	bltu	r4,r20,20a958 <__umoddi3+0x4f8>
  20a950:	2080012e 	bgeu	r4,r2,20a958 <__umoddi3+0x4f8>
  20a954:	2509883a 	add	r4,r4,r20
  20a958:	20a1c83a 	sub	r16,r4,r2
  20a95c:	8009883a 	mov	r4,r16
  20a960:	b80b883a 	mov	r5,r23
  20a964:	020ab7c0 	call	20ab7c <__umodsi3>
  20a968:	8009883a 	mov	r4,r16
  20a96c:	1021883a 	mov	r16,r2
  20a970:	b80b883a 	mov	r5,r23
  20a974:	8020943a 	slli	r16,r16,16
  20a978:	020ab180 	call	20ab18 <__udivsi3>
  20a97c:	100b883a 	mov	r5,r2
  20a980:	a809883a 	mov	r4,r21
  20a984:	b47fffcc 	andi	r17,r22,65535
  20a988:	020abd80 	call	20abd8 <__mulsi3>
  20a98c:	8462b03a 	or	r17,r16,r17
  20a990:	8880042e 	bgeu	r17,r2,20a9a4 <__umoddi3+0x544>
  20a994:	8d23883a 	add	r17,r17,r20
  20a998:	8d000236 	bltu	r17,r20,20a9a4 <__umoddi3+0x544>
  20a99c:	8880012e 	bgeu	r17,r2,20a9a4 <__umoddi3+0x544>
  20a9a0:	8d23883a 	add	r17,r17,r20
  20a9a4:	88a3c83a 	sub	r17,r17,r2
  20a9a8:	003f2f06 	br	20a668 <__umoddi3+0x208>
  20a9ac:	813fc72e 	bgeu	r16,r4,20a8cc <__umoddi3+0x46c>
  20a9b0:	d8800117 	ldw	r2,4(sp)
  20a9b4:	20a7c83a 	sub	r19,r4,r2
  20a9b8:	24c9803a 	cmpltu	r4,r4,r19
  20a9bc:	2489883a 	add	r4,r4,r18
  20a9c0:	1907c83a 	sub	r3,r3,r4
  20a9c4:	9809883a 	mov	r4,r19
  20a9c8:	003fc006 	br	20a8cc <__umoddi3+0x46c>
  20a9cc:	3006d43a 	srli	r3,r6,16
  20a9d0:	04800404 	movi	r18,16
  20a9d4:	003ebb06 	br	20a4c4 <__umoddi3+0x64>
  20a9d8:	3007883a 	mov	r3,r6
  20a9dc:	003eb906 	br	20a4c4 <__umoddi3+0x64>
  20a9e0:	3808d43a 	srli	r4,r7,16
  20a9e4:	02000404 	movi	r8,16
  20a9e8:	003efc06 	br	20a5dc <__umoddi3+0x17c>
  20a9ec:	a006d43a 	srli	r3,r20,16
  20a9f0:	04800404 	movi	r18,16
  20a9f4:	003f1206 	br	20a640 <__umoddi3+0x1e0>
  20a9f8:	a007883a 	mov	r3,r20
  20a9fc:	003f1006 	br	20a640 <__umoddi3+0x1e0>
  20aa00:	3809883a 	mov	r4,r7
  20aa04:	0011883a 	mov	r8,zero
  20aa08:	003ef406 	br	20a5dc <__umoddi3+0x17c>
  20aa0c:	180b883a 	mov	r5,r3
  20aa10:	003f8706 	br	20a830 <__umoddi3+0x3d0>
  20aa14:	2839883a 	mov	fp,r5
  20aa18:	003f6d06 	br	20a7d0 <__umoddi3+0x370>
  20aa1c:	2509883a 	add	r4,r4,r20
  20aa20:	003f2206 	br	20a6ac <__umoddi3+0x24c>

0020aa24 <__divsi3>:
  20aa24:	20001a16 	blt	r4,zero,20aa90 <__divsi3+0x6c>
  20aa28:	000f883a 	mov	r7,zero
  20aa2c:	2800020e 	bge	r5,zero,20aa38 <__divsi3+0x14>
  20aa30:	014bc83a 	sub	r5,zero,r5
  20aa34:	39c0005c 	xori	r7,r7,1
  20aa38:	200d883a 	mov	r6,r4
  20aa3c:	00c00044 	movi	r3,1
  20aa40:	2900092e 	bgeu	r5,r4,20aa68 <__divsi3+0x44>
  20aa44:	00800804 	movi	r2,32
  20aa48:	00c00044 	movi	r3,1
  20aa4c:	00000106 	br	20aa54 <__divsi3+0x30>
  20aa50:	10001226 	beq	r2,zero,20aa9c <__divsi3+0x78>
  20aa54:	294b883a 	add	r5,r5,r5
  20aa58:	10bfffc4 	addi	r2,r2,-1
  20aa5c:	18c7883a 	add	r3,r3,r3
  20aa60:	293ffb36 	bltu	r5,r4,20aa50 <__divsi3+0x2c>
  20aa64:	18000d26 	beq	r3,zero,20aa9c <__divsi3+0x78>
  20aa68:	0005883a 	mov	r2,zero
  20aa6c:	31400236 	bltu	r6,r5,20aa78 <__divsi3+0x54>
  20aa70:	314dc83a 	sub	r6,r6,r5
  20aa74:	10c4b03a 	or	r2,r2,r3
  20aa78:	1806d07a 	srli	r3,r3,1
  20aa7c:	280ad07a 	srli	r5,r5,1
  20aa80:	183ffa1e 	bne	r3,zero,20aa6c <__divsi3+0x48>
  20aa84:	38000126 	beq	r7,zero,20aa8c <__divsi3+0x68>
  20aa88:	0085c83a 	sub	r2,zero,r2
  20aa8c:	f800283a 	ret
  20aa90:	0109c83a 	sub	r4,zero,r4
  20aa94:	01c00044 	movi	r7,1
  20aa98:	003fe406 	br	20aa2c <__divsi3+0x8>
  20aa9c:	0005883a 	mov	r2,zero
  20aaa0:	003ff806 	br	20aa84 <__divsi3+0x60>

0020aaa4 <__modsi3>:
  20aaa4:	20001916 	blt	r4,zero,20ab0c <__modsi3+0x68>
  20aaa8:	000f883a 	mov	r7,zero
  20aaac:	2005883a 	mov	r2,r4
  20aab0:	2800010e 	bge	r5,zero,20aab8 <__modsi3+0x14>
  20aab4:	014bc83a 	sub	r5,zero,r5
  20aab8:	00c00044 	movi	r3,1
  20aabc:	2900092e 	bgeu	r5,r4,20aae4 <__modsi3+0x40>
  20aac0:	01800804 	movi	r6,32
  20aac4:	00c00044 	movi	r3,1
  20aac8:	00000106 	br	20aad0 <__modsi3+0x2c>
  20aacc:	30000d26 	beq	r6,zero,20ab04 <__modsi3+0x60>
  20aad0:	294b883a 	add	r5,r5,r5
  20aad4:	31bfffc4 	addi	r6,r6,-1
  20aad8:	18c7883a 	add	r3,r3,r3
  20aadc:	293ffb36 	bltu	r5,r4,20aacc <__modsi3+0x28>
  20aae0:	18000826 	beq	r3,zero,20ab04 <__modsi3+0x60>
  20aae4:	1806d07a 	srli	r3,r3,1
  20aae8:	11400136 	bltu	r2,r5,20aaf0 <__modsi3+0x4c>
  20aaec:	1145c83a 	sub	r2,r2,r5
  20aaf0:	280ad07a 	srli	r5,r5,1
  20aaf4:	183ffb1e 	bne	r3,zero,20aae4 <__modsi3+0x40>
  20aaf8:	38000126 	beq	r7,zero,20ab00 <__modsi3+0x5c>
  20aafc:	0085c83a 	sub	r2,zero,r2
  20ab00:	f800283a 	ret
  20ab04:	2005883a 	mov	r2,r4
  20ab08:	003ffb06 	br	20aaf8 <__modsi3+0x54>
  20ab0c:	0109c83a 	sub	r4,zero,r4
  20ab10:	01c00044 	movi	r7,1
  20ab14:	003fe506 	br	20aaac <__modsi3+0x8>

0020ab18 <__udivsi3>:
  20ab18:	200d883a 	mov	r6,r4
  20ab1c:	2900152e 	bgeu	r5,r4,20ab74 <__udivsi3+0x5c>
  20ab20:	28001416 	blt	r5,zero,20ab74 <__udivsi3+0x5c>
  20ab24:	00800804 	movi	r2,32
  20ab28:	00c00044 	movi	r3,1
  20ab2c:	00000206 	br	20ab38 <__udivsi3+0x20>
  20ab30:	10000e26 	beq	r2,zero,20ab6c <__udivsi3+0x54>
  20ab34:	28000516 	blt	r5,zero,20ab4c <__udivsi3+0x34>
  20ab38:	294b883a 	add	r5,r5,r5
  20ab3c:	10bfffc4 	addi	r2,r2,-1
  20ab40:	18c7883a 	add	r3,r3,r3
  20ab44:	293ffa36 	bltu	r5,r4,20ab30 <__udivsi3+0x18>
  20ab48:	18000826 	beq	r3,zero,20ab6c <__udivsi3+0x54>
  20ab4c:	0005883a 	mov	r2,zero
  20ab50:	31400236 	bltu	r6,r5,20ab5c <__udivsi3+0x44>
  20ab54:	314dc83a 	sub	r6,r6,r5
  20ab58:	10c4b03a 	or	r2,r2,r3
  20ab5c:	1806d07a 	srli	r3,r3,1
  20ab60:	280ad07a 	srli	r5,r5,1
  20ab64:	183ffa1e 	bne	r3,zero,20ab50 <__udivsi3+0x38>
  20ab68:	f800283a 	ret
  20ab6c:	0005883a 	mov	r2,zero
  20ab70:	f800283a 	ret
  20ab74:	00c00044 	movi	r3,1
  20ab78:	003ff406 	br	20ab4c <__udivsi3+0x34>

0020ab7c <__umodsi3>:
  20ab7c:	2005883a 	mov	r2,r4
  20ab80:	2900132e 	bgeu	r5,r4,20abd0 <__umodsi3+0x54>
  20ab84:	28001216 	blt	r5,zero,20abd0 <__umodsi3+0x54>
  20ab88:	01800804 	movi	r6,32
  20ab8c:	00c00044 	movi	r3,1
  20ab90:	00000206 	br	20ab9c <__umodsi3+0x20>
  20ab94:	30000c26 	beq	r6,zero,20abc8 <__umodsi3+0x4c>
  20ab98:	28000516 	blt	r5,zero,20abb0 <__umodsi3+0x34>
  20ab9c:	294b883a 	add	r5,r5,r5
  20aba0:	31bfffc4 	addi	r6,r6,-1
  20aba4:	18c7883a 	add	r3,r3,r3
  20aba8:	293ffa36 	bltu	r5,r4,20ab94 <__umodsi3+0x18>
  20abac:	18000626 	beq	r3,zero,20abc8 <__umodsi3+0x4c>
  20abb0:	1806d07a 	srli	r3,r3,1
  20abb4:	11400136 	bltu	r2,r5,20abbc <__umodsi3+0x40>
  20abb8:	1145c83a 	sub	r2,r2,r5
  20abbc:	280ad07a 	srli	r5,r5,1
  20abc0:	183ffb1e 	bne	r3,zero,20abb0 <__umodsi3+0x34>
  20abc4:	f800283a 	ret
  20abc8:	2005883a 	mov	r2,r4
  20abcc:	f800283a 	ret
  20abd0:	00c00044 	movi	r3,1
  20abd4:	003ff606 	br	20abb0 <__umodsi3+0x34>

0020abd8 <__mulsi3>:
  20abd8:	0005883a 	mov	r2,zero
  20abdc:	20000726 	beq	r4,zero,20abfc <__mulsi3+0x24>
  20abe0:	20c0004c 	andi	r3,r4,1
  20abe4:	2008d07a 	srli	r4,r4,1
  20abe8:	18000126 	beq	r3,zero,20abf0 <__mulsi3+0x18>
  20abec:	1145883a 	add	r2,r2,r5
  20abf0:	294b883a 	add	r5,r5,r5
  20abf4:	203ffa1e 	bne	r4,zero,20abe0 <__mulsi3+0x8>
  20abf8:	f800283a 	ret
  20abfc:	f800283a 	ret

0020ac00 <__adddf3>:
  20ac00:	02000434 	movhi	r8,16
  20ac04:	423fffc4 	addi	r8,r8,-1
  20ac08:	2806d53a 	srli	r3,r5,20
  20ac0c:	3804d53a 	srli	r2,r7,20
  20ac10:	2a14703a 	and	r10,r5,r8
  20ac14:	3a12703a 	and	r9,r7,r8
  20ac18:	280ad7fa 	srli	r5,r5,31
  20ac1c:	501490fa 	slli	r10,r10,3
  20ac20:	2018d77a 	srli	r12,r4,29
  20ac24:	481290fa 	slli	r9,r9,3
  20ac28:	3016d77a 	srli	r11,r6,29
  20ac2c:	380ed7fa 	srli	r7,r7,31
  20ac30:	defffb04 	addi	sp,sp,-20
  20ac34:	dc800215 	stw	r18,8(sp)
  20ac38:	dc000015 	stw	r16,0(sp)
  20ac3c:	1c81ffcc 	andi	r18,r3,2047
  20ac40:	1081ffcc 	andi	r2,r2,2047
  20ac44:	dfc00415 	stw	ra,16(sp)
  20ac48:	dcc00315 	stw	r19,12(sp)
  20ac4c:	dc400115 	stw	r17,4(sp)
  20ac50:	201c90fa 	slli	r14,r4,3
  20ac54:	301a90fa 	slli	r13,r6,3
  20ac58:	2821883a 	mov	r16,r5
  20ac5c:	6294b03a 	or	r10,r12,r10
  20ac60:	5a52b03a 	or	r9,r11,r9
  20ac64:	9087c83a 	sub	r3,r18,r2
  20ac68:	29c06126 	beq	r5,r7,20adf0 <__adddf3+0x1f0>
  20ac6c:	00c0550e 	bge	zero,r3,20adc4 <__adddf3+0x1c4>
  20ac70:	10007326 	beq	r2,zero,20ae40 <__adddf3+0x240>
  20ac74:	9081ffd8 	cmpnei	r2,r18,2047
  20ac78:	1000b826 	beq	r2,zero,20af5c <__adddf3+0x35c>
  20ac7c:	4a402034 	orhi	r9,r9,128
  20ac80:	18800e48 	cmpgei	r2,r3,57
  20ac84:	1000ee1e 	bne	r2,zero,20b040 <__adddf3+0x440>
  20ac88:	18800808 	cmpgei	r2,r3,32
  20ac8c:	10012d1e 	bne	r2,zero,20b144 <__adddf3+0x544>
  20ac90:	00800804 	movi	r2,32
  20ac94:	10c5c83a 	sub	r2,r2,r3
  20ac98:	68c8d83a 	srl	r4,r13,r3
  20ac9c:	48a2983a 	sll	r17,r9,r2
  20aca0:	689a983a 	sll	r13,r13,r2
  20aca4:	48c6d83a 	srl	r3,r9,r3
  20aca8:	8922b03a 	or	r17,r17,r4
  20acac:	681ac03a 	cmpne	r13,r13,zero
  20acb0:	8b62b03a 	or	r17,r17,r13
  20acb4:	50d5c83a 	sub	r10,r10,r3
  20acb8:	7463c83a 	sub	r17,r14,r17
  20acbc:	7451803a 	cmpltu	r8,r14,r17
  20acc0:	5211c83a 	sub	r8,r10,r8
  20acc4:	4080202c 	andhi	r2,r8,128
  20acc8:	10008826 	beq	r2,zero,20aeec <__adddf3+0x2ec>
  20accc:	02402034 	movhi	r9,128
  20acd0:	4a7fffc4 	addi	r9,r9,-1
  20acd4:	4266703a 	and	r19,r8,r9
  20acd8:	9800ae26 	beq	r19,zero,20af94 <__adddf3+0x394>
  20acdc:	9809883a 	mov	r4,r19
  20ace0:	020d3280 	call	20d328 <__clzsi2>
  20ace4:	10fffe04 	addi	r3,r2,-8
  20ace8:	02000804 	movi	r8,32
  20acec:	40d1c83a 	sub	r8,r8,r3
  20acf0:	8a10d83a 	srl	r8,r17,r8
  20acf4:	98d2983a 	sll	r9,r19,r3
  20acf8:	88e2983a 	sll	r17,r17,r3
  20acfc:	4250b03a 	or	r8,r8,r9
  20ad00:	1c80ad16 	blt	r3,r18,20afb8 <__adddf3+0x3b8>
  20ad04:	1c87c83a 	sub	r3,r3,r18
  20ad08:	19000044 	addi	r4,r3,1
  20ad0c:	20800808 	cmpgei	r2,r4,32
  20ad10:	10006a1e 	bne	r2,zero,20aebc <__adddf3+0x2bc>
  20ad14:	00800804 	movi	r2,32
  20ad18:	1105c83a 	sub	r2,r2,r4
  20ad1c:	8906d83a 	srl	r3,r17,r4
  20ad20:	88a2983a 	sll	r17,r17,r2
  20ad24:	4084983a 	sll	r2,r8,r2
  20ad28:	4110d83a 	srl	r8,r8,r4
  20ad2c:	8822c03a 	cmpne	r17,r17,zero
  20ad30:	10c4b03a 	or	r2,r2,r3
  20ad34:	1462b03a 	or	r17,r2,r17
  20ad38:	0025883a 	mov	r18,zero
  20ad3c:	888001cc 	andi	r2,r17,7
  20ad40:	10000726 	beq	r2,zero,20ad60 <__adddf3+0x160>
  20ad44:	888003cc 	andi	r2,r17,15
  20ad48:	10800120 	cmpeqi	r2,r2,4
  20ad4c:	1000041e 	bne	r2,zero,20ad60 <__adddf3+0x160>
  20ad50:	88c00104 	addi	r3,r17,4
  20ad54:	1c63803a 	cmpltu	r17,r3,r17
  20ad58:	4451883a 	add	r8,r8,r17
  20ad5c:	1823883a 	mov	r17,r3
  20ad60:	4080202c 	andhi	r2,r8,128
  20ad64:	10006326 	beq	r2,zero,20aef4 <__adddf3+0x2f4>
  20ad68:	90c00044 	addi	r3,r18,1
  20ad6c:	1881ffe0 	cmpeqi	r2,r3,2047
  20ad70:	18c1ffcc 	andi	r3,r3,2047
  20ad74:	1000751e 	bne	r2,zero,20af4c <__adddf3+0x34c>
  20ad78:	00bfe034 	movhi	r2,65408
  20ad7c:	10bfffc4 	addi	r2,r2,-1
  20ad80:	4090703a 	and	r8,r8,r2
  20ad84:	4004977a 	slli	r2,r8,29
  20ad88:	4010927a 	slli	r8,r8,9
  20ad8c:	8822d0fa 	srli	r17,r17,3
  20ad90:	4010d33a 	srli	r8,r8,12
  20ad94:	1444b03a 	or	r2,r2,r17
  20ad98:	1806953a 	slli	r3,r3,20
  20ad9c:	802097fa 	slli	r16,r16,31
  20ada0:	1a06b03a 	or	r3,r3,r8
  20ada4:	1c06b03a 	or	r3,r3,r16
  20ada8:	dfc00417 	ldw	ra,16(sp)
  20adac:	dcc00317 	ldw	r19,12(sp)
  20adb0:	dc800217 	ldw	r18,8(sp)
  20adb4:	dc400117 	ldw	r17,4(sp)
  20adb8:	dc000017 	ldw	r16,0(sp)
  20adbc:	dec00504 	addi	sp,sp,20
  20adc0:	f800283a 	ret
  20adc4:	18002626 	beq	r3,zero,20ae60 <__adddf3+0x260>
  20adc8:	1487c83a 	sub	r3,r2,r18
  20adcc:	9000b51e 	bne	r18,zero,20b0a4 <__adddf3+0x4a4>
  20add0:	5388b03a 	or	r4,r10,r14
  20add4:	20010f26 	beq	r4,zero,20b214 <__adddf3+0x614>
  20add8:	193fffc4 	addi	r4,r3,-1
  20addc:	20016126 	beq	r4,zero,20b364 <__adddf3+0x764>
  20ade0:	18c1ffd8 	cmpnei	r3,r3,2047
  20ade4:	18012e26 	beq	r3,zero,20b2a0 <__adddf3+0x6a0>
  20ade8:	2007883a 	mov	r3,r4
  20adec:	0000b006 	br	20b0b0 <__adddf3+0x4b0>
  20adf0:	00c0760e 	bge	zero,r3,20afcc <__adddf3+0x3cc>
  20adf4:	10002926 	beq	r2,zero,20ae9c <__adddf3+0x29c>
  20adf8:	9081ffd8 	cmpnei	r2,r18,2047
  20adfc:	10012126 	beq	r2,zero,20b284 <__adddf3+0x684>
  20ae00:	4a402034 	orhi	r9,r9,128
  20ae04:	18800e48 	cmpgei	r2,r3,57
  20ae08:	1000461e 	bne	r2,zero,20af24 <__adddf3+0x324>
  20ae0c:	18800808 	cmpgei	r2,r3,32
  20ae10:	1000e326 	beq	r2,zero,20b1a0 <__adddf3+0x5a0>
  20ae14:	1c7ff804 	addi	r17,r3,-32
  20ae18:	19000820 	cmpeqi	r4,r3,32
  20ae1c:	4c44d83a 	srl	r2,r9,r17
  20ae20:	2000041e 	bne	r4,zero,20ae34 <__adddf3+0x234>
  20ae24:	01001004 	movi	r4,64
  20ae28:	20c7c83a 	sub	r3,r4,r3
  20ae2c:	48d2983a 	sll	r9,r9,r3
  20ae30:	6a5ab03a 	or	r13,r13,r9
  20ae34:	6822c03a 	cmpne	r17,r13,zero
  20ae38:	88a2b03a 	or	r17,r17,r2
  20ae3c:	00003b06 	br	20af2c <__adddf3+0x32c>
  20ae40:	4b44b03a 	or	r2,r9,r13
  20ae44:	10008126 	beq	r2,zero,20b04c <__adddf3+0x44c>
  20ae48:	18bfffc4 	addi	r2,r3,-1
  20ae4c:	10010726 	beq	r2,zero,20b26c <__adddf3+0x66c>
  20ae50:	18c1ffd8 	cmpnei	r3,r3,2047
  20ae54:	18004126 	beq	r3,zero,20af5c <__adddf3+0x35c>
  20ae58:	1007883a 	mov	r3,r2
  20ae5c:	003f8806 	br	20ac80 <__adddf3+0x80>
  20ae60:	90800044 	addi	r2,r18,1
  20ae64:	1081ff8c 	andi	r2,r2,2046
  20ae68:	1000a01e 	bne	r2,zero,20b0ec <__adddf3+0x4ec>
  20ae6c:	538ab03a 	or	r5,r10,r14
  20ae70:	4b44b03a 	or	r2,r9,r13
  20ae74:	9000ef1e 	bne	r18,zero,20b234 <__adddf3+0x634>
  20ae78:	28014126 	beq	r5,zero,20b380 <__adddf3+0x780>
  20ae7c:	1001491e 	bne	r2,zero,20b3a4 <__adddf3+0x7a4>
  20ae80:	500a977a 	slli	r5,r10,29
  20ae84:	00880034 	movhi	r2,8192
  20ae88:	10bfffc4 	addi	r2,r2,-1
  20ae8c:	2084703a 	and	r2,r4,r2
  20ae90:	5014d0fa 	srli	r10,r10,3
  20ae94:	1144b03a 	or	r2,r2,r5
  20ae98:	00001d06 	br	20af10 <__adddf3+0x310>
  20ae9c:	4b44b03a 	or	r2,r9,r13
  20aea0:	10006a26 	beq	r2,zero,20b04c <__adddf3+0x44c>
  20aea4:	18bfffc4 	addi	r2,r3,-1
  20aea8:	1000e826 	beq	r2,zero,20b24c <__adddf3+0x64c>
  20aeac:	18c1ffd8 	cmpnei	r3,r3,2047
  20aeb0:	1800f426 	beq	r3,zero,20b284 <__adddf3+0x684>
  20aeb4:	1007883a 	mov	r3,r2
  20aeb8:	003fd206 	br	20ae04 <__adddf3+0x204>
  20aebc:	18fff844 	addi	r3,r3,-31
  20aec0:	20800820 	cmpeqi	r2,r4,32
  20aec4:	40c6d83a 	srl	r3,r8,r3
  20aec8:	1000041e 	bne	r2,zero,20aedc <__adddf3+0x2dc>
  20aecc:	00801004 	movi	r2,64
  20aed0:	1109c83a 	sub	r4,r2,r4
  20aed4:	4110983a 	sll	r8,r8,r4
  20aed8:	8a22b03a 	or	r17,r17,r8
  20aedc:	8822c03a 	cmpne	r17,r17,zero
  20aee0:	88e2b03a 	or	r17,r17,r3
  20aee4:	0011883a 	mov	r8,zero
  20aee8:	0025883a 	mov	r18,zero
  20aeec:	888001cc 	andi	r2,r17,7
  20aef0:	103f941e 	bne	r2,zero,20ad44 <__adddf3+0x144>
  20aef4:	8822d0fa 	srli	r17,r17,3
  20aef8:	4004977a 	slli	r2,r8,29
  20aefc:	4014d0fa 	srli	r10,r8,3
  20af00:	9007883a 	mov	r3,r18
  20af04:	8884b03a 	or	r2,r17,r2
  20af08:	1901ffe0 	cmpeqi	r4,r3,2047
  20af0c:	2000191e 	bne	r4,zero,20af74 <__adddf3+0x374>
  20af10:	02000434 	movhi	r8,16
  20af14:	423fffc4 	addi	r8,r8,-1
  20af18:	5210703a 	and	r8,r10,r8
  20af1c:	18c1ffcc 	andi	r3,r3,2047
  20af20:	003f9d06 	br	20ad98 <__adddf3+0x198>
  20af24:	4b62b03a 	or	r17,r9,r13
  20af28:	8822c03a 	cmpne	r17,r17,zero
  20af2c:	8ba3883a 	add	r17,r17,r14
  20af30:	8b91803a 	cmpltu	r8,r17,r14
  20af34:	4291883a 	add	r8,r8,r10
  20af38:	4080202c 	andhi	r2,r8,128
  20af3c:	103feb26 	beq	r2,zero,20aeec <__adddf3+0x2ec>
  20af40:	94800044 	addi	r18,r18,1
  20af44:	9081ffe0 	cmpeqi	r2,r18,2047
  20af48:	10007426 	beq	r2,zero,20b11c <__adddf3+0x51c>
  20af4c:	00c1ffc4 	movi	r3,2047
  20af50:	0011883a 	mov	r8,zero
  20af54:	0005883a 	mov	r2,zero
  20af58:	003f8f06 	br	20ad98 <__adddf3+0x198>
  20af5c:	500a977a 	slli	r5,r10,29
  20af60:	00c80034 	movhi	r3,8192
  20af64:	18ffffc4 	addi	r3,r3,-1
  20af68:	5014d0fa 	srli	r10,r10,3
  20af6c:	20c4703a 	and	r2,r4,r3
  20af70:	1144b03a 	or	r2,r2,r5
  20af74:	1286b03a 	or	r3,r2,r10
  20af78:	18015926 	beq	r3,zero,20b4e0 <__adddf3+0x8e0>
  20af7c:	00c00434 	movhi	r3,16
  20af80:	18ffffc4 	addi	r3,r3,-1
  20af84:	52000234 	orhi	r8,r10,8
  20af88:	40d0703a 	and	r8,r8,r3
  20af8c:	00c1ffc4 	movi	r3,2047
  20af90:	003f8106 	br	20ad98 <__adddf3+0x198>
  20af94:	8809883a 	mov	r4,r17
  20af98:	020d3280 	call	20d328 <__clzsi2>
  20af9c:	10c00604 	addi	r3,r2,24
  20afa0:	19000808 	cmpgei	r4,r3,32
  20afa4:	203f5026 	beq	r4,zero,20ace8 <__adddf3+0xe8>
  20afa8:	123ffe04 	addi	r8,r2,-8
  20afac:	8a10983a 	sll	r8,r17,r8
  20afb0:	0023883a 	mov	r17,zero
  20afb4:	1cbf530e 	bge	r3,r18,20ad04 <__adddf3+0x104>
  20afb8:	00bfe034 	movhi	r2,65408
  20afbc:	10bfffc4 	addi	r2,r2,-1
  20afc0:	90e5c83a 	sub	r18,r18,r3
  20afc4:	4090703a 	and	r8,r8,r2
  20afc8:	003f5c06 	br	20ad3c <__adddf3+0x13c>
  20afcc:	18002626 	beq	r3,zero,20b068 <__adddf3+0x468>
  20afd0:	1487c83a 	sub	r3,r2,r18
  20afd4:	90006e1e 	bne	r18,zero,20b190 <__adddf3+0x590>
  20afd8:	5388b03a 	or	r4,r10,r14
  20afdc:	2000fd26 	beq	r4,zero,20b3d4 <__adddf3+0x7d4>
  20afe0:	193fffc4 	addi	r4,r3,-1
  20afe4:	20013626 	beq	r4,zero,20b4c0 <__adddf3+0x8c0>
  20afe8:	18c1ffd8 	cmpnei	r3,r3,2047
  20afec:	1800b426 	beq	r3,zero,20b2c0 <__adddf3+0x6c0>
  20aff0:	2007883a 	mov	r3,r4
  20aff4:	19000e48 	cmpgei	r4,r3,57
  20aff8:	2000b81e 	bne	r4,zero,20b2dc <__adddf3+0x6dc>
  20affc:	19000808 	cmpgei	r4,r3,32
  20b000:	2001241e 	bne	r4,zero,20b494 <__adddf3+0x894>
  20b004:	01000804 	movi	r4,32
  20b008:	20c9c83a 	sub	r4,r4,r3
  20b00c:	5122983a 	sll	r17,r10,r4
  20b010:	70cad83a 	srl	r5,r14,r3
  20b014:	7108983a 	sll	r4,r14,r4
  20b018:	50d4d83a 	srl	r10,r10,r3
  20b01c:	8962b03a 	or	r17,r17,r5
  20b020:	2008c03a 	cmpne	r4,r4,zero
  20b024:	8922b03a 	or	r17,r17,r4
  20b028:	4a93883a 	add	r9,r9,r10
  20b02c:	8b63883a 	add	r17,r17,r13
  20b030:	8b51803a 	cmpltu	r8,r17,r13
  20b034:	4251883a 	add	r8,r8,r9
  20b038:	1025883a 	mov	r18,r2
  20b03c:	003fbe06 	br	20af38 <__adddf3+0x338>
  20b040:	4b62b03a 	or	r17,r9,r13
  20b044:	8822c03a 	cmpne	r17,r17,zero
  20b048:	003f1b06 	br	20acb8 <__adddf3+0xb8>
  20b04c:	500c977a 	slli	r6,r10,29
  20b050:	01480034 	movhi	r5,8192
  20b054:	297fffc4 	addi	r5,r5,-1
  20b058:	2144703a 	and	r2,r4,r5
  20b05c:	5014d0fa 	srli	r10,r10,3
  20b060:	3084b03a 	or	r2,r6,r2
  20b064:	003fa806 	br	20af08 <__adddf3+0x308>
  20b068:	90800044 	addi	r2,r18,1
  20b06c:	1141ff8c 	andi	r5,r2,2046
  20b070:	2800561e 	bne	r5,zero,20b1cc <__adddf3+0x5cc>
  20b074:	5384b03a 	or	r2,r10,r14
  20b078:	9000a61e 	bne	r18,zero,20b314 <__adddf3+0x714>
  20b07c:	1000ee26 	beq	r2,zero,20b438 <__adddf3+0x838>
  20b080:	4b44b03a 	or	r2,r9,r13
  20b084:	1000f31e 	bne	r2,zero,20b454 <__adddf3+0x854>
  20b088:	5004977a 	slli	r2,r10,29
  20b08c:	01480034 	movhi	r5,8192
  20b090:	297fffc4 	addi	r5,r5,-1
  20b094:	2148703a 	and	r4,r4,r5
  20b098:	5014d0fa 	srli	r10,r10,3
  20b09c:	1104b03a 	or	r2,r2,r4
  20b0a0:	003f9b06 	br	20af10 <__adddf3+0x310>
  20b0a4:	1101ffd8 	cmpnei	r4,r2,2047
  20b0a8:	20007d26 	beq	r4,zero,20b2a0 <__adddf3+0x6a0>
  20b0ac:	52802034 	orhi	r10,r10,128
  20b0b0:	19000e48 	cmpgei	r4,r3,57
  20b0b4:	20002e1e 	bne	r4,zero,20b170 <__adddf3+0x570>
  20b0b8:	19000808 	cmpgei	r4,r3,32
  20b0bc:	20008a1e 	bne	r4,zero,20b2e8 <__adddf3+0x6e8>
  20b0c0:	01000804 	movi	r4,32
  20b0c4:	20c9c83a 	sub	r4,r4,r3
  20b0c8:	5122983a 	sll	r17,r10,r4
  20b0cc:	70cad83a 	srl	r5,r14,r3
  20b0d0:	711c983a 	sll	r14,r14,r4
  20b0d4:	50d4d83a 	srl	r10,r10,r3
  20b0d8:	8962b03a 	or	r17,r17,r5
  20b0dc:	701cc03a 	cmpne	r14,r14,zero
  20b0e0:	8ba2b03a 	or	r17,r17,r14
  20b0e4:	4a93c83a 	sub	r9,r9,r10
  20b0e8:	00002306 	br	20b178 <__adddf3+0x578>
  20b0ec:	7363c83a 	sub	r17,r14,r13
  20b0f0:	5267c83a 	sub	r19,r10,r9
  20b0f4:	7451803a 	cmpltu	r8,r14,r17
  20b0f8:	9a27c83a 	sub	r19,r19,r8
  20b0fc:	9880202c 	andhi	r2,r19,128
  20b100:	10003e1e 	bne	r2,zero,20b1fc <__adddf3+0x5fc>
  20b104:	8cc4b03a 	or	r2,r17,r19
  20b108:	103ef31e 	bne	r2,zero,20acd8 <__adddf3+0xd8>
  20b10c:	0015883a 	mov	r10,zero
  20b110:	0021883a 	mov	r16,zero
  20b114:	003f7e06 	br	20af10 <__adddf3+0x310>
  20b118:	04800084 	movi	r18,2
  20b11c:	00bfe034 	movhi	r2,65408
  20b120:	10bfffc4 	addi	r2,r2,-1
  20b124:	8806d07a 	srli	r3,r17,1
  20b128:	4090703a 	and	r8,r8,r2
  20b12c:	400497fa 	slli	r2,r8,31
  20b130:	8c40004c 	andi	r17,r17,1
  20b134:	1c62b03a 	or	r17,r3,r17
  20b138:	4010d07a 	srli	r8,r8,1
  20b13c:	1462b03a 	or	r17,r2,r17
  20b140:	003efe06 	br	20ad3c <__adddf3+0x13c>
  20b144:	1c7ff804 	addi	r17,r3,-32
  20b148:	19000820 	cmpeqi	r4,r3,32
  20b14c:	4c44d83a 	srl	r2,r9,r17
  20b150:	2000041e 	bne	r4,zero,20b164 <__adddf3+0x564>
  20b154:	01001004 	movi	r4,64
  20b158:	20c7c83a 	sub	r3,r4,r3
  20b15c:	48d2983a 	sll	r9,r9,r3
  20b160:	6a5ab03a 	or	r13,r13,r9
  20b164:	6822c03a 	cmpne	r17,r13,zero
  20b168:	88a2b03a 	or	r17,r17,r2
  20b16c:	003ed206 	br	20acb8 <__adddf3+0xb8>
  20b170:	5394b03a 	or	r10,r10,r14
  20b174:	5022c03a 	cmpne	r17,r10,zero
  20b178:	6c63c83a 	sub	r17,r13,r17
  20b17c:	6c51803a 	cmpltu	r8,r13,r17
  20b180:	4a11c83a 	sub	r8,r9,r8
  20b184:	3821883a 	mov	r16,r7
  20b188:	1025883a 	mov	r18,r2
  20b18c:	003ecd06 	br	20acc4 <__adddf3+0xc4>
  20b190:	1101ffd8 	cmpnei	r4,r2,2047
  20b194:	20004a26 	beq	r4,zero,20b2c0 <__adddf3+0x6c0>
  20b198:	52802034 	orhi	r10,r10,128
  20b19c:	003f9506 	br	20aff4 <__adddf3+0x3f4>
  20b1a0:	00800804 	movi	r2,32
  20b1a4:	10c5c83a 	sub	r2,r2,r3
  20b1a8:	68c8d83a 	srl	r4,r13,r3
  20b1ac:	48a2983a 	sll	r17,r9,r2
  20b1b0:	689a983a 	sll	r13,r13,r2
  20b1b4:	48c6d83a 	srl	r3,r9,r3
  20b1b8:	8922b03a 	or	r17,r17,r4
  20b1bc:	681ac03a 	cmpne	r13,r13,zero
  20b1c0:	8b62b03a 	or	r17,r17,r13
  20b1c4:	50d5883a 	add	r10,r10,r3
  20b1c8:	003f5806 	br	20af2c <__adddf3+0x32c>
  20b1cc:	10c1ffe0 	cmpeqi	r3,r2,2047
  20b1d0:	183f5e1e 	bne	r3,zero,20af4c <__adddf3+0x34c>
  20b1d4:	7351883a 	add	r8,r14,r13
  20b1d8:	4387803a 	cmpltu	r3,r8,r14
  20b1dc:	5255883a 	add	r10,r10,r9
  20b1e0:	50c7883a 	add	r3,r10,r3
  20b1e4:	401ad07a 	srli	r13,r8,1
  20b1e8:	182297fa 	slli	r17,r3,31
  20b1ec:	1810d07a 	srli	r8,r3,1
  20b1f0:	1025883a 	mov	r18,r2
  20b1f4:	8b62b03a 	or	r17,r17,r13
  20b1f8:	003f3c06 	br	20aeec <__adddf3+0x2ec>
  20b1fc:	6ba3c83a 	sub	r17,r13,r14
  20b200:	4a93c83a 	sub	r9,r9,r10
  20b204:	6c51803a 	cmpltu	r8,r13,r17
  20b208:	4a27c83a 	sub	r19,r9,r8
  20b20c:	3821883a 	mov	r16,r7
  20b210:	003eb106 	br	20acd8 <__adddf3+0xd8>
  20b214:	480a977a 	slli	r5,r9,29
  20b218:	01080034 	movhi	r4,8192
  20b21c:	213fffc4 	addi	r4,r4,-1
  20b220:	3104703a 	and	r2,r6,r4
  20b224:	4814d0fa 	srli	r10,r9,3
  20b228:	1144b03a 	or	r2,r2,r5
  20b22c:	3821883a 	mov	r16,r7
  20b230:	003f3506 	br	20af08 <__adddf3+0x308>
  20b234:	28006e1e 	bne	r5,zero,20b3f0 <__adddf3+0x7f0>
  20b238:	1000191e 	bne	r2,zero,20b2a0 <__adddf3+0x6a0>
  20b23c:	0021883a 	mov	r16,zero
  20b240:	4015883a 	mov	r10,r8
  20b244:	00bfffc4 	movi	r2,-1
  20b248:	003f4c06 	br	20af7c <__adddf3+0x37c>
  20b24c:	7363883a 	add	r17,r14,r13
  20b250:	5255883a 	add	r10,r10,r9
  20b254:	8b91803a 	cmpltu	r8,r17,r14
  20b258:	5211883a 	add	r8,r10,r8
  20b25c:	4080202c 	andhi	r2,r8,128
  20b260:	103fad1e 	bne	r2,zero,20b118 <__adddf3+0x518>
  20b264:	04800044 	movi	r18,1
  20b268:	003f2006 	br	20aeec <__adddf3+0x2ec>
  20b26c:	7363c83a 	sub	r17,r14,r13
  20b270:	5255c83a 	sub	r10,r10,r9
  20b274:	7451803a 	cmpltu	r8,r14,r17
  20b278:	5211c83a 	sub	r8,r10,r8
  20b27c:	04800044 	movi	r18,1
  20b280:	003e9006 	br	20acc4 <__adddf3+0xc4>
  20b284:	5004977a 	slli	r2,r10,29
  20b288:	00c80034 	movhi	r3,8192
  20b28c:	18ffffc4 	addi	r3,r3,-1
  20b290:	20c8703a 	and	r4,r4,r3
  20b294:	5014d0fa 	srli	r10,r10,3
  20b298:	1104b03a 	or	r2,r2,r4
  20b29c:	003f3506 	br	20af74 <__adddf3+0x374>
  20b2a0:	4806977a 	slli	r3,r9,29
  20b2a4:	00880034 	movhi	r2,8192
  20b2a8:	10bfffc4 	addi	r2,r2,-1
  20b2ac:	3084703a 	and	r2,r6,r2
  20b2b0:	4814d0fa 	srli	r10,r9,3
  20b2b4:	10c4b03a 	or	r2,r2,r3
  20b2b8:	3821883a 	mov	r16,r7
  20b2bc:	003f2d06 	br	20af74 <__adddf3+0x374>
  20b2c0:	4804977a 	slli	r2,r9,29
  20b2c4:	00c80034 	movhi	r3,8192
  20b2c8:	18ffffc4 	addi	r3,r3,-1
  20b2cc:	30cc703a 	and	r6,r6,r3
  20b2d0:	4814d0fa 	srli	r10,r9,3
  20b2d4:	1184b03a 	or	r2,r2,r6
  20b2d8:	003f2606 	br	20af74 <__adddf3+0x374>
  20b2dc:	5394b03a 	or	r10,r10,r14
  20b2e0:	5022c03a 	cmpne	r17,r10,zero
  20b2e4:	003f5106 	br	20b02c <__adddf3+0x42c>
  20b2e8:	1c7ff804 	addi	r17,r3,-32
  20b2ec:	19400820 	cmpeqi	r5,r3,32
  20b2f0:	5448d83a 	srl	r4,r10,r17
  20b2f4:	2800041e 	bne	r5,zero,20b308 <__adddf3+0x708>
  20b2f8:	01401004 	movi	r5,64
  20b2fc:	28c7c83a 	sub	r3,r5,r3
  20b300:	50d4983a 	sll	r10,r10,r3
  20b304:	729cb03a 	or	r14,r14,r10
  20b308:	7022c03a 	cmpne	r17,r14,zero
  20b30c:	8922b03a 	or	r17,r17,r4
  20b310:	003f9906 	br	20b178 <__adddf3+0x578>
  20b314:	103fea26 	beq	r2,zero,20b2c0 <__adddf3+0x6c0>
  20b318:	4b50b03a 	or	r8,r9,r13
  20b31c:	500a977a 	slli	r5,r10,29
  20b320:	5014d0fa 	srli	r10,r10,3
  20b324:	40005626 	beq	r8,zero,20b480 <__adddf3+0x880>
  20b328:	00c80034 	movhi	r3,8192
  20b32c:	18ffffc4 	addi	r3,r3,-1
  20b330:	20c4703a 	and	r2,r4,r3
  20b334:	5100022c 	andhi	r4,r10,8
  20b338:	1144b03a 	or	r2,r2,r5
  20b33c:	203f0d26 	beq	r4,zero,20af74 <__adddf3+0x374>
  20b340:	4808d0fa 	srli	r4,r9,3
  20b344:	2140022c 	andhi	r5,r4,8
  20b348:	283f0a1e 	bne	r5,zero,20af74 <__adddf3+0x374>
  20b34c:	4804977a 	slli	r2,r9,29
  20b350:	30cc703a 	and	r6,r6,r3
  20b354:	3821883a 	mov	r16,r7
  20b358:	3084b03a 	or	r2,r6,r2
  20b35c:	2015883a 	mov	r10,r4
  20b360:	003f0406 	br	20af74 <__adddf3+0x374>
  20b364:	6ba3c83a 	sub	r17,r13,r14
  20b368:	4a95c83a 	sub	r10,r9,r10
  20b36c:	6c51803a 	cmpltu	r8,r13,r17
  20b370:	5211c83a 	sub	r8,r10,r8
  20b374:	3821883a 	mov	r16,r7
  20b378:	04800044 	movi	r18,1
  20b37c:	003e5106 	br	20acc4 <__adddf3+0xc4>
  20b380:	103f6226 	beq	r2,zero,20b10c <__adddf3+0x50c>
  20b384:	4808977a 	slli	r4,r9,29
  20b388:	00880034 	movhi	r2,8192
  20b38c:	10bfffc4 	addi	r2,r2,-1
  20b390:	3084703a 	and	r2,r6,r2
  20b394:	4814d0fa 	srli	r10,r9,3
  20b398:	1104b03a 	or	r2,r2,r4
  20b39c:	3821883a 	mov	r16,r7
  20b3a0:	003edb06 	br	20af10 <__adddf3+0x310>
  20b3a4:	7363c83a 	sub	r17,r14,r13
  20b3a8:	7445803a 	cmpltu	r2,r14,r17
  20b3ac:	5251c83a 	sub	r8,r10,r9
  20b3b0:	4091c83a 	sub	r8,r8,r2
  20b3b4:	4080202c 	andhi	r2,r8,128
  20b3b8:	10004626 	beq	r2,zero,20b4d4 <__adddf3+0x8d4>
  20b3bc:	6ba3c83a 	sub	r17,r13,r14
  20b3c0:	4a95c83a 	sub	r10,r9,r10
  20b3c4:	6c51803a 	cmpltu	r8,r13,r17
  20b3c8:	5211c83a 	sub	r8,r10,r8
  20b3cc:	3821883a 	mov	r16,r7
  20b3d0:	003e5a06 	br	20ad3c <__adddf3+0x13c>
  20b3d4:	4804977a 	slli	r2,r9,29
  20b3d8:	01080034 	movhi	r4,8192
  20b3dc:	213fffc4 	addi	r4,r4,-1
  20b3e0:	310c703a 	and	r6,r6,r4
  20b3e4:	4814d0fa 	srli	r10,r9,3
  20b3e8:	1184b03a 	or	r2,r2,r6
  20b3ec:	003ec606 	br	20af08 <__adddf3+0x308>
  20b3f0:	500a977a 	slli	r5,r10,29
  20b3f4:	5014d0fa 	srli	r10,r10,3
  20b3f8:	10002126 	beq	r2,zero,20b480 <__adddf3+0x880>
  20b3fc:	00c80034 	movhi	r3,8192
  20b400:	18ffffc4 	addi	r3,r3,-1
  20b404:	20c4703a 	and	r2,r4,r3
  20b408:	5100022c 	andhi	r4,r10,8
  20b40c:	1144b03a 	or	r2,r2,r5
  20b410:	203ed826 	beq	r4,zero,20af74 <__adddf3+0x374>
  20b414:	4808d0fa 	srli	r4,r9,3
  20b418:	2140022c 	andhi	r5,r4,8
  20b41c:	283ed51e 	bne	r5,zero,20af74 <__adddf3+0x374>
  20b420:	4812977a 	slli	r9,r9,29
  20b424:	30c4703a 	and	r2,r6,r3
  20b428:	3821883a 	mov	r16,r7
  20b42c:	1244b03a 	or	r2,r2,r9
  20b430:	2015883a 	mov	r10,r4
  20b434:	003ecf06 	br	20af74 <__adddf3+0x374>
  20b438:	4804977a 	slli	r2,r9,29
  20b43c:	01080034 	movhi	r4,8192
  20b440:	213fffc4 	addi	r4,r4,-1
  20b444:	310c703a 	and	r6,r6,r4
  20b448:	4814d0fa 	srli	r10,r9,3
  20b44c:	1184b03a 	or	r2,r2,r6
  20b450:	003eaf06 	br	20af10 <__adddf3+0x310>
  20b454:	7363883a 	add	r17,r14,r13
  20b458:	5255883a 	add	r10,r10,r9
  20b45c:	8b91803a 	cmpltu	r8,r17,r14
  20b460:	5211883a 	add	r8,r10,r8
  20b464:	4080202c 	andhi	r2,r8,128
  20b468:	103ea026 	beq	r2,zero,20aeec <__adddf3+0x2ec>
  20b46c:	00bfe034 	movhi	r2,65408
  20b470:	10bfffc4 	addi	r2,r2,-1
  20b474:	4090703a 	and	r8,r8,r2
  20b478:	04800044 	movi	r18,1
  20b47c:	003e9b06 	br	20aeec <__adddf3+0x2ec>
  20b480:	00880034 	movhi	r2,8192
  20b484:	10bfffc4 	addi	r2,r2,-1
  20b488:	2084703a 	and	r2,r4,r2
  20b48c:	1144b03a 	or	r2,r2,r5
  20b490:	003eb806 	br	20af74 <__adddf3+0x374>
  20b494:	193ff804 	addi	r4,r3,-32
  20b498:	19400820 	cmpeqi	r5,r3,32
  20b49c:	5108d83a 	srl	r4,r10,r4
  20b4a0:	2800041e 	bne	r5,zero,20b4b4 <__adddf3+0x8b4>
  20b4a4:	01401004 	movi	r5,64
  20b4a8:	28c7c83a 	sub	r3,r5,r3
  20b4ac:	50d4983a 	sll	r10,r10,r3
  20b4b0:	729cb03a 	or	r14,r14,r10
  20b4b4:	7022c03a 	cmpne	r17,r14,zero
  20b4b8:	8922b03a 	or	r17,r17,r4
  20b4bc:	003edb06 	br	20b02c <__adddf3+0x42c>
  20b4c0:	7363883a 	add	r17,r14,r13
  20b4c4:	5255883a 	add	r10,r10,r9
  20b4c8:	8b51803a 	cmpltu	r8,r17,r13
  20b4cc:	5211883a 	add	r8,r10,r8
  20b4d0:	003f6206 	br	20b25c <__adddf3+0x65c>
  20b4d4:	8a04b03a 	or	r2,r17,r8
  20b4d8:	103f0c26 	beq	r2,zero,20b10c <__adddf3+0x50c>
  20b4dc:	003e8306 	br	20aeec <__adddf3+0x2ec>
  20b4e0:	0005883a 	mov	r2,zero
  20b4e4:	00c1ffc4 	movi	r3,2047
  20b4e8:	0011883a 	mov	r8,zero
  20b4ec:	003e2a06 	br	20ad98 <__adddf3+0x198>

0020b4f0 <__divdf3>:
  20b4f0:	2810d53a 	srli	r8,r5,20
  20b4f4:	defff004 	addi	sp,sp,-64
  20b4f8:	dc000615 	stw	r16,24(sp)
  20b4fc:	04000434 	movhi	r16,16
  20b500:	ddc00d15 	stw	r23,52(sp)
  20b504:	dd800c15 	stw	r22,48(sp)
  20b508:	dd400b15 	stw	r21,44(sp)
  20b50c:	dd000a15 	stw	r20,40(sp)
  20b510:	843fffc4 	addi	r16,r16,-1
  20b514:	dfc00f15 	stw	ra,60(sp)
  20b518:	df000e15 	stw	fp,56(sp)
  20b51c:	dcc00915 	stw	r19,36(sp)
  20b520:	dc800815 	stw	r18,32(sp)
  20b524:	dc400715 	stw	r17,28(sp)
  20b528:	4201ffcc 	andi	r8,r8,2047
  20b52c:	282cd7fa 	srli	r22,r5,31
  20b530:	302f883a 	mov	r23,r6
  20b534:	382b883a 	mov	r21,r7
  20b538:	2029883a 	mov	r20,r4
  20b53c:	2c20703a 	and	r16,r5,r16
  20b540:	40014426 	beq	r8,zero,20ba54 <__divdf3+0x564>
  20b544:	4081ffe0 	cmpeqi	r2,r8,2047
  20b548:	1001551e 	bne	r2,zero,20baa0 <__divdf3+0x5b0>
  20b54c:	2024d77a 	srli	r18,r4,29
  20b550:	800a90fa 	slli	r5,r16,3
  20b554:	202890fa 	slli	r20,r4,3
  20b558:	447f0044 	addi	r17,r8,-1023
  20b55c:	914ab03a 	or	r5,r18,r5
  20b560:	2c802034 	orhi	r18,r5,128
  20b564:	0021883a 	mov	r16,zero
  20b568:	0039883a 	mov	fp,zero
  20b56c:	a810d53a 	srli	r8,r21,20
  20b570:	00c00434 	movhi	r3,16
  20b574:	18ffffc4 	addi	r3,r3,-1
  20b578:	4201ffcc 	andi	r8,r8,2047
  20b57c:	a826d7fa 	srli	r19,r21,31
  20b580:	a8ea703a 	and	r21,r21,r3
  20b584:	40012226 	beq	r8,zero,20ba10 <__divdf3+0x520>
  20b588:	4081ffe0 	cmpeqi	r2,r8,2047
  20b58c:	10014b1e 	bne	r2,zero,20babc <__divdf3+0x5cc>
  20b590:	a80690fa 	slli	r3,r21,3
  20b594:	b804d77a 	srli	r2,r23,29
  20b598:	b81290fa 	slli	r9,r23,3
  20b59c:	423f0044 	addi	r8,r8,-1023
  20b5a0:	10c6b03a 	or	r3,r2,r3
  20b5a4:	1d402034 	orhi	r21,r3,128
  20b5a8:	8a23c83a 	sub	r17,r17,r8
  20b5ac:	0007883a 	mov	r3,zero
  20b5b0:	80800428 	cmpgeui	r2,r16,16
  20b5b4:	b4cef03a 	xor	r7,r22,r19
  20b5b8:	1000391e 	bne	r2,zero,20b6a0 <__divdf3+0x1b0>
  20b5bc:	800c90ba 	slli	r6,r16,2
  20b5c0:	00800874 	movhi	r2,33
  20b5c4:	3085883a 	add	r2,r6,r2
  20b5c8:	10ad7417 	ldw	r2,-18992(r2)
  20b5cc:	1000683a 	jmp	r2
  20b5d0:	0020b6a0 	cmpeqi	zero,zero,-32038
  20b5d4:	0020b67c 	xorhi	zero,zero,33497
  20b5d8:	0020b62c 	andhi	zero,zero,33496
  20b5dc:	0020b68c 	andi	zero,zero,33498
  20b5e0:	0020b62c 	andhi	zero,zero,33496
  20b5e4:	0020bb20 	cmpeqi	zero,zero,-32020
  20b5e8:	0020b62c 	andhi	zero,zero,33496
  20b5ec:	0020b68c 	andi	zero,zero,33498
  20b5f0:	0020b67c 	xorhi	zero,zero,33497
  20b5f4:	0020b67c 	xorhi	zero,zero,33497
  20b5f8:	0020bb20 	cmpeqi	zero,zero,-32020
  20b5fc:	0020b68c 	andi	zero,zero,33498
  20b600:	0020b610 	cmplti	zero,zero,-32040
  20b604:	0020b610 	cmplti	zero,zero,-32040
  20b608:	0020b610 	cmplti	zero,zero,-32040
  20b60c:	0020bbb0 	cmpltui	zero,zero,33518
  20b610:	b00f883a 	mov	r7,r22
  20b614:	e08000a0 	cmpeqi	r2,fp,2
  20b618:	1000181e 	bne	r2,zero,20b67c <__divdf3+0x18c>
  20b61c:	e08000e0 	cmpeqi	r2,fp,3
  20b620:	1001ef1e 	bne	r2,zero,20bde0 <__divdf3+0x8f0>
  20b624:	e0800060 	cmpeqi	r2,fp,1
  20b628:	1000e626 	beq	r2,zero,20b9c4 <__divdf3+0x4d4>
  20b62c:	0007883a 	mov	r3,zero
  20b630:	000b883a 	mov	r5,zero
  20b634:	0029883a 	mov	r20,zero
  20b638:	1806953a 	slli	r3,r3,20
  20b63c:	380e97fa 	slli	r7,r7,31
  20b640:	a005883a 	mov	r2,r20
  20b644:	1946b03a 	or	r3,r3,r5
  20b648:	19c6b03a 	or	r3,r3,r7
  20b64c:	dfc00f17 	ldw	ra,60(sp)
  20b650:	df000e17 	ldw	fp,56(sp)
  20b654:	ddc00d17 	ldw	r23,52(sp)
  20b658:	dd800c17 	ldw	r22,48(sp)
  20b65c:	dd400b17 	ldw	r21,44(sp)
  20b660:	dd000a17 	ldw	r20,40(sp)
  20b664:	dcc00917 	ldw	r19,36(sp)
  20b668:	dc800817 	ldw	r18,32(sp)
  20b66c:	dc400717 	ldw	r17,28(sp)
  20b670:	dc000617 	ldw	r16,24(sp)
  20b674:	dec01004 	addi	sp,sp,64
  20b678:	f800283a 	ret
  20b67c:	00c1ffc4 	movi	r3,2047
  20b680:	000b883a 	mov	r5,zero
  20b684:	0029883a 	mov	r20,zero
  20b688:	003feb06 	br	20b638 <__divdf3+0x148>
  20b68c:	980f883a 	mov	r7,r19
  20b690:	a825883a 	mov	r18,r21
  20b694:	4829883a 	mov	r20,r9
  20b698:	1839883a 	mov	fp,r3
  20b69c:	003fdd06 	br	20b614 <__divdf3+0x124>
  20b6a0:	ac815d36 	bltu	r21,r18,20bc18 <__divdf3+0x728>
  20b6a4:	ac815b26 	beq	r21,r18,20bc14 <__divdf3+0x724>
  20b6a8:	8c7fffc4 	addi	r17,r17,-1
  20b6ac:	a039883a 	mov	fp,r20
  20b6b0:	9021883a 	mov	r16,r18
  20b6b4:	002d883a 	mov	r22,zero
  20b6b8:	a806923a 	slli	r3,r21,8
  20b6bc:	482ad63a 	srli	r21,r9,24
  20b6c0:	8009883a 	mov	r4,r16
  20b6c4:	182ed43a 	srli	r23,r3,16
  20b6c8:	a8eab03a 	or	r21,r21,r3
  20b6cc:	d9c00015 	stw	r7,0(sp)
  20b6d0:	b80b883a 	mov	r5,r23
  20b6d4:	4826923a 	slli	r19,r9,8
  20b6d8:	ad3fffcc 	andi	r20,r21,65535
  20b6dc:	020ab180 	call	20ab18 <__udivsi3>
  20b6e0:	100b883a 	mov	r5,r2
  20b6e4:	a009883a 	mov	r4,r20
  20b6e8:	1025883a 	mov	r18,r2
  20b6ec:	020abd80 	call	20abd8 <__mulsi3>
  20b6f0:	8009883a 	mov	r4,r16
  20b6f4:	b80b883a 	mov	r5,r23
  20b6f8:	1021883a 	mov	r16,r2
  20b6fc:	020ab7c0 	call	20ab7c <__umodsi3>
  20b700:	1004943a 	slli	r2,r2,16
  20b704:	e008d43a 	srli	r4,fp,16
  20b708:	d9c00017 	ldw	r7,0(sp)
  20b70c:	2088b03a 	or	r4,r4,r2
  20b710:	2400042e 	bgeu	r4,r16,20b724 <__divdf3+0x234>
  20b714:	2549883a 	add	r4,r4,r21
  20b718:	90bfffc4 	addi	r2,r18,-1
  20b71c:	25416e2e 	bgeu	r4,r21,20bcd8 <__divdf3+0x7e8>
  20b720:	1025883a 	mov	r18,r2
  20b724:	2421c83a 	sub	r16,r4,r16
  20b728:	b80b883a 	mov	r5,r23
  20b72c:	8009883a 	mov	r4,r16
  20b730:	d9c00215 	stw	r7,8(sp)
  20b734:	020ab180 	call	20ab18 <__udivsi3>
  20b738:	100b883a 	mov	r5,r2
  20b73c:	a009883a 	mov	r4,r20
  20b740:	d8800115 	stw	r2,4(sp)
  20b744:	020abd80 	call	20abd8 <__mulsi3>
  20b748:	b80b883a 	mov	r5,r23
  20b74c:	8009883a 	mov	r4,r16
  20b750:	d8800015 	stw	r2,0(sp)
  20b754:	020ab7c0 	call	20ab7c <__umodsi3>
  20b758:	100c943a 	slli	r6,r2,16
  20b75c:	da000017 	ldw	r8,0(sp)
  20b760:	e73fffcc 	andi	fp,fp,65535
  20b764:	e18cb03a 	or	r6,fp,r6
  20b768:	d8c00117 	ldw	r3,4(sp)
  20b76c:	d9c00217 	ldw	r7,8(sp)
  20b770:	3200042e 	bgeu	r6,r8,20b784 <__divdf3+0x294>
  20b774:	354d883a 	add	r6,r6,r21
  20b778:	18bfffc4 	addi	r2,r3,-1
  20b77c:	3541522e 	bgeu	r6,r21,20bcc8 <__divdf3+0x7d8>
  20b780:	1007883a 	mov	r3,r2
  20b784:	9024943a 	slli	r18,r18,16
  20b788:	9f3fffcc 	andi	fp,r19,65535
  20b78c:	320dc83a 	sub	r6,r6,r8
  20b790:	90e4b03a 	or	r18,r18,r3
  20b794:	9012d43a 	srli	r9,r18,16
  20b798:	92ffffcc 	andi	r11,r18,65535
  20b79c:	5809883a 	mov	r4,r11
  20b7a0:	e00b883a 	mov	r5,fp
  20b7a4:	d9c00515 	stw	r7,20(sp)
  20b7a8:	d9800315 	stw	r6,12(sp)
  20b7ac:	dac00415 	stw	r11,16(sp)
  20b7b0:	da400015 	stw	r9,0(sp)
  20b7b4:	020abd80 	call	20abd8 <__mulsi3>
  20b7b8:	da400017 	ldw	r9,0(sp)
  20b7bc:	e00b883a 	mov	r5,fp
  20b7c0:	d8800215 	stw	r2,8(sp)
  20b7c4:	4809883a 	mov	r4,r9
  20b7c8:	020abd80 	call	20abd8 <__mulsi3>
  20b7cc:	da400017 	ldw	r9,0(sp)
  20b7d0:	9820d43a 	srli	r16,r19,16
  20b7d4:	d8800115 	stw	r2,4(sp)
  20b7d8:	4809883a 	mov	r4,r9
  20b7dc:	800b883a 	mov	r5,r16
  20b7e0:	020abd80 	call	20abd8 <__mulsi3>
  20b7e4:	dac00417 	ldw	r11,16(sp)
  20b7e8:	8009883a 	mov	r4,r16
  20b7ec:	d8800015 	stw	r2,0(sp)
  20b7f0:	580b883a 	mov	r5,r11
  20b7f4:	020abd80 	call	20abd8 <__mulsi3>
  20b7f8:	da000217 	ldw	r8,8(sp)
  20b7fc:	da400117 	ldw	r9,4(sp)
  20b800:	da800017 	ldw	r10,0(sp)
  20b804:	4008d43a 	srli	r4,r8,16
  20b808:	1247883a 	add	r3,r2,r9
  20b80c:	d9800317 	ldw	r6,12(sp)
  20b810:	20c7883a 	add	r3,r4,r3
  20b814:	d9c00517 	ldw	r7,20(sp)
  20b818:	1a40022e 	bgeu	r3,r9,20b824 <__divdf3+0x334>
  20b81c:	00800074 	movhi	r2,1
  20b820:	5095883a 	add	r10,r10,r2
  20b824:	1808d43a 	srli	r4,r3,16
  20b828:	1806943a 	slli	r3,r3,16
  20b82c:	423fffcc 	andi	r8,r8,65535
  20b830:	2285883a 	add	r2,r4,r10
  20b834:	1a07883a 	add	r3,r3,r8
  20b838:	30800236 	bltu	r6,r2,20b844 <__divdf3+0x354>
  20b83c:	30800a1e 	bne	r6,r2,20b868 <__divdf3+0x378>
  20b840:	b0c0092e 	bgeu	r22,r3,20b868 <__divdf3+0x378>
  20b844:	b4ed883a 	add	r22,r22,r19
  20b848:	b4c9803a 	cmpltu	r4,r22,r19
  20b84c:	2549883a 	add	r4,r4,r21
  20b850:	310d883a 	add	r6,r6,r4
  20b854:	913fffc4 	addi	r4,r18,-1
  20b858:	a981182e 	bgeu	r21,r6,20bcbc <__divdf3+0x7cc>
  20b85c:	30814a36 	bltu	r6,r2,20bd88 <__divdf3+0x898>
  20b860:	11814826 	beq	r2,r6,20bd84 <__divdf3+0x894>
  20b864:	2025883a 	mov	r18,r4
  20b868:	b0c7c83a 	sub	r3,r22,r3
  20b86c:	3085c83a 	sub	r2,r6,r2
  20b870:	b0ed803a 	cmpltu	r22,r22,r3
  20b874:	15adc83a 	sub	r22,r2,r22
  20b878:	ad813026 	beq	r21,r22,20bd3c <__divdf3+0x84c>
  20b87c:	b009883a 	mov	r4,r22
  20b880:	b80b883a 	mov	r5,r23
  20b884:	d8c00215 	stw	r3,8(sp)
  20b888:	d9c00115 	stw	r7,4(sp)
  20b88c:	020ab180 	call	20ab18 <__udivsi3>
  20b890:	100b883a 	mov	r5,r2
  20b894:	a009883a 	mov	r4,r20
  20b898:	d8800015 	stw	r2,0(sp)
  20b89c:	020abd80 	call	20abd8 <__mulsi3>
  20b8a0:	b009883a 	mov	r4,r22
  20b8a4:	b80b883a 	mov	r5,r23
  20b8a8:	102d883a 	mov	r22,r2
  20b8ac:	020ab7c0 	call	20ab7c <__umodsi3>
  20b8b0:	d8c00217 	ldw	r3,8(sp)
  20b8b4:	1004943a 	slli	r2,r2,16
  20b8b8:	d9800017 	ldw	r6,0(sp)
  20b8bc:	1808d43a 	srli	r4,r3,16
  20b8c0:	d9c00117 	ldw	r7,4(sp)
  20b8c4:	2088b03a 	or	r4,r4,r2
  20b8c8:	2580f536 	bltu	r4,r22,20bca0 <__divdf3+0x7b0>
  20b8cc:	25adc83a 	sub	r22,r4,r22
  20b8d0:	b009883a 	mov	r4,r22
  20b8d4:	b80b883a 	mov	r5,r23
  20b8d8:	d8c00315 	stw	r3,12(sp)
  20b8dc:	d9c00215 	stw	r7,8(sp)
  20b8e0:	d9800115 	stw	r6,4(sp)
  20b8e4:	020ab180 	call	20ab18 <__udivsi3>
  20b8e8:	100b883a 	mov	r5,r2
  20b8ec:	a009883a 	mov	r4,r20
  20b8f0:	d8800015 	stw	r2,0(sp)
  20b8f4:	020abd80 	call	20abd8 <__mulsi3>
  20b8f8:	b009883a 	mov	r4,r22
  20b8fc:	b80b883a 	mov	r5,r23
  20b900:	102d883a 	mov	r22,r2
  20b904:	020ab7c0 	call	20ab7c <__umodsi3>
  20b908:	d8c00317 	ldw	r3,12(sp)
  20b90c:	1004943a 	slli	r2,r2,16
  20b910:	da000017 	ldw	r8,0(sp)
  20b914:	18ffffcc 	andi	r3,r3,65535
  20b918:	1886b03a 	or	r3,r3,r2
  20b91c:	d9800117 	ldw	r6,4(sp)
  20b920:	d9c00217 	ldw	r7,8(sp)
  20b924:	1d80d736 	bltu	r3,r22,20bc84 <__divdf3+0x794>
  20b928:	3028943a 	slli	r20,r6,16
  20b92c:	e009883a 	mov	r4,fp
  20b930:	d9c00215 	stw	r7,8(sp)
  20b934:	a228b03a 	or	r20,r20,r8
  20b938:	a1bfffcc 	andi	r6,r20,65535
  20b93c:	a02ed43a 	srli	r23,r20,16
  20b940:	300b883a 	mov	r5,r6
  20b944:	1dadc83a 	sub	r22,r3,r22
  20b948:	d9800115 	stw	r6,4(sp)
  20b94c:	020abd80 	call	20abd8 <__mulsi3>
  20b950:	e00b883a 	mov	r5,fp
  20b954:	b809883a 	mov	r4,r23
  20b958:	d8800015 	stw	r2,0(sp)
  20b95c:	020abd80 	call	20abd8 <__mulsi3>
  20b960:	8009883a 	mov	r4,r16
  20b964:	b80b883a 	mov	r5,r23
  20b968:	1039883a 	mov	fp,r2
  20b96c:	020abd80 	call	20abd8 <__mulsi3>
  20b970:	d9800117 	ldw	r6,4(sp)
  20b974:	8009883a 	mov	r4,r16
  20b978:	1021883a 	mov	r16,r2
  20b97c:	300b883a 	mov	r5,r6
  20b980:	020abd80 	call	20abd8 <__mulsi3>
  20b984:	da000017 	ldw	r8,0(sp)
  20b988:	1705883a 	add	r2,r2,fp
  20b98c:	d9c00217 	ldw	r7,8(sp)
  20b990:	4006d43a 	srli	r3,r8,16
  20b994:	1887883a 	add	r3,r3,r2
  20b998:	1f00022e 	bgeu	r3,fp,20b9a4 <__divdf3+0x4b4>
  20b99c:	00800074 	movhi	r2,1
  20b9a0:	80a1883a 	add	r16,r16,r2
  20b9a4:	1808d43a 	srli	r4,r3,16
  20b9a8:	1806943a 	slli	r3,r3,16
  20b9ac:	45ffffcc 	andi	r23,r8,65535
  20b9b0:	2409883a 	add	r4,r4,r16
  20b9b4:	1dc7883a 	add	r3,r3,r23
  20b9b8:	b1008f36 	bltu	r22,r4,20bbf8 <__divdf3+0x708>
  20b9bc:	b1008d26 	beq	r22,r4,20bbf4 <__divdf3+0x704>
  20b9c0:	a5000054 	ori	r20,r20,1
  20b9c4:	8980ffc4 	addi	r6,r17,1023
  20b9c8:	01805c0e 	bge	zero,r6,20bb3c <__divdf3+0x64c>
  20b9cc:	a08001cc 	andi	r2,r20,7
  20b9d0:	1000e01e 	bne	r2,zero,20bd54 <__divdf3+0x864>
  20b9d4:	a008d0fa 	srli	r4,r20,3
  20b9d8:	9080402c 	andhi	r2,r18,256
  20b9dc:	10000426 	beq	r2,zero,20b9f0 <__divdf3+0x500>
  20b9e0:	00bfc034 	movhi	r2,65280
  20b9e4:	10bfffc4 	addi	r2,r2,-1
  20b9e8:	90a4703a 	and	r18,r18,r2
  20b9ec:	89810004 	addi	r6,r17,1024
  20b9f0:	3081ffc8 	cmpgei	r2,r6,2047
  20b9f4:	103f211e 	bne	r2,zero,20b67c <__divdf3+0x18c>
  20b9f8:	9028977a 	slli	r20,r18,29
  20b9fc:	900a927a 	slli	r5,r18,9
  20ba00:	30c1ffcc 	andi	r3,r6,2047
  20ba04:	a128b03a 	or	r20,r20,r4
  20ba08:	280ad33a 	srli	r5,r5,12
  20ba0c:	003f0a06 	br	20b638 <__divdf3+0x148>
  20ba10:	add2b03a 	or	r9,r21,r23
  20ba14:	48003e26 	beq	r9,zero,20bb10 <__divdf3+0x620>
  20ba18:	a8008f26 	beq	r21,zero,20bc58 <__divdf3+0x768>
  20ba1c:	a809883a 	mov	r4,r21
  20ba20:	020d3280 	call	20d328 <__clzsi2>
  20ba24:	117ffd44 	addi	r5,r2,-11
  20ba28:	01000744 	movi	r4,29
  20ba2c:	127ffe04 	addi	r9,r2,-8
  20ba30:	2149c83a 	sub	r4,r4,r5
  20ba34:	aa46983a 	sll	r3,r21,r9
  20ba38:	b908d83a 	srl	r4,r23,r4
  20ba3c:	ba52983a 	sll	r9,r23,r9
  20ba40:	20eab03a 	or	r21,r4,r3
  20ba44:	1451883a 	add	r8,r2,r17
  20ba48:	4440fcc4 	addi	r17,r8,1011
  20ba4c:	0007883a 	mov	r3,zero
  20ba50:	003ed706 	br	20b5b0 <__divdf3+0xc0>
  20ba54:	8124b03a 	or	r18,r16,r4
  20ba58:	2027883a 	mov	r19,r4
  20ba5c:	90002726 	beq	r18,zero,20bafc <__divdf3+0x60c>
  20ba60:	80007326 	beq	r16,zero,20bc30 <__divdf3+0x740>
  20ba64:	8009883a 	mov	r4,r16
  20ba68:	020d3280 	call	20d328 <__clzsi2>
  20ba6c:	113ffd44 	addi	r4,r2,-11
  20ba70:	00c00744 	movi	r3,29
  20ba74:	14bffe04 	addi	r18,r2,-8
  20ba78:	1907c83a 	sub	r3,r3,r4
  20ba7c:	848a983a 	sll	r5,r16,r18
  20ba80:	98c6d83a 	srl	r3,r19,r3
  20ba84:	9ca8983a 	sll	r20,r19,r18
  20ba88:	1964b03a 	or	r18,r3,r5
  20ba8c:	023f0344 	movi	r8,-1011
  20ba90:	40a3c83a 	sub	r17,r8,r2
  20ba94:	0021883a 	mov	r16,zero
  20ba98:	0039883a 	mov	fp,zero
  20ba9c:	003eb306 	br	20b56c <__divdf3+0x7c>
  20baa0:	8124b03a 	or	r18,r16,r4
  20baa4:	9000101e 	bne	r18,zero,20bae8 <__divdf3+0x5f8>
  20baa8:	0029883a 	mov	r20,zero
  20baac:	04000204 	movi	r16,8
  20bab0:	0441ffc4 	movi	r17,2047
  20bab4:	07000084 	movi	fp,2
  20bab8:	003eac06 	br	20b56c <__divdf3+0x7c>
  20babc:	add2b03a 	or	r9,r21,r23
  20bac0:	8c7e0044 	addi	r17,r17,-2047
  20bac4:	4800041e 	bne	r9,zero,20bad8 <__divdf3+0x5e8>
  20bac8:	84000094 	ori	r16,r16,2
  20bacc:	002b883a 	mov	r21,zero
  20bad0:	00c00084 	movi	r3,2
  20bad4:	003eb606 	br	20b5b0 <__divdf3+0xc0>
  20bad8:	840000d4 	ori	r16,r16,3
  20badc:	b813883a 	mov	r9,r23
  20bae0:	00c000c4 	movi	r3,3
  20bae4:	003eb206 	br	20b5b0 <__divdf3+0xc0>
  20bae8:	8025883a 	mov	r18,r16
  20baec:	0441ffc4 	movi	r17,2047
  20baf0:	04000304 	movi	r16,12
  20baf4:	070000c4 	movi	fp,3
  20baf8:	003e9c06 	br	20b56c <__divdf3+0x7c>
  20bafc:	0029883a 	mov	r20,zero
  20bb00:	04000104 	movi	r16,4
  20bb04:	0023883a 	mov	r17,zero
  20bb08:	07000044 	movi	fp,1
  20bb0c:	003e9706 	br	20b56c <__divdf3+0x7c>
  20bb10:	84000054 	ori	r16,r16,1
  20bb14:	002b883a 	mov	r21,zero
  20bb18:	00c00044 	movi	r3,1
  20bb1c:	003ea406 	br	20b5b0 <__divdf3+0xc0>
  20bb20:	01400434 	movhi	r5,16
  20bb24:	000f883a 	mov	r7,zero
  20bb28:	297fffc4 	addi	r5,r5,-1
  20bb2c:	053fffc4 	movi	r20,-1
  20bb30:	00c1ffc4 	movi	r3,2047
  20bb34:	003ec006 	br	20b638 <__divdf3+0x148>
  20bb38:	053fffc4 	movi	r20,-1
  20bb3c:	01400044 	movi	r5,1
  20bb40:	298bc83a 	sub	r5,r5,r6
  20bb44:	28800e48 	cmpgei	r2,r5,57
  20bb48:	103eb81e 	bne	r2,zero,20b62c <__divdf3+0x13c>
  20bb4c:	28800808 	cmpgei	r2,r5,32
  20bb50:	1000651e 	bne	r2,zero,20bce8 <__divdf3+0x7f8>
  20bb54:	8a010784 	addi	r8,r17,1054
  20bb58:	9204983a 	sll	r2,r18,r8
  20bb5c:	a146d83a 	srl	r3,r20,r5
  20bb60:	a210983a 	sll	r8,r20,r8
  20bb64:	914ad83a 	srl	r5,r18,r5
  20bb68:	10e8b03a 	or	r20,r2,r3
  20bb6c:	4010c03a 	cmpne	r8,r8,zero
  20bb70:	a228b03a 	or	r20,r20,r8
  20bb74:	a08001cc 	andi	r2,r20,7
  20bb78:	10000726 	beq	r2,zero,20bb98 <__divdf3+0x6a8>
  20bb7c:	a08003cc 	andi	r2,r20,15
  20bb80:	10800120 	cmpeqi	r2,r2,4
  20bb84:	1000041e 	bne	r2,zero,20bb98 <__divdf3+0x6a8>
  20bb88:	a0800104 	addi	r2,r20,4
  20bb8c:	1529803a 	cmpltu	r20,r2,r20
  20bb90:	2d0b883a 	add	r5,r5,r20
  20bb94:	1029883a 	mov	r20,r2
  20bb98:	2880202c 	andhi	r2,r5,128
  20bb9c:	10008c26 	beq	r2,zero,20bdd0 <__divdf3+0x8e0>
  20bba0:	00c00044 	movi	r3,1
  20bba4:	000b883a 	mov	r5,zero
  20bba8:	0029883a 	mov	r20,zero
  20bbac:	003ea206 	br	20b638 <__divdf3+0x148>
  20bbb0:	9080022c 	andhi	r2,r18,8
  20bbb4:	10000926 	beq	r2,zero,20bbdc <__divdf3+0x6ec>
  20bbb8:	a880022c 	andhi	r2,r21,8
  20bbbc:	1000071e 	bne	r2,zero,20bbdc <__divdf3+0x6ec>
  20bbc0:	00800434 	movhi	r2,16
  20bbc4:	a9400234 	orhi	r5,r21,8
  20bbc8:	10bfffc4 	addi	r2,r2,-1
  20bbcc:	288a703a 	and	r5,r5,r2
  20bbd0:	980f883a 	mov	r7,r19
  20bbd4:	4829883a 	mov	r20,r9
  20bbd8:	003fd506 	br	20bb30 <__divdf3+0x640>
  20bbdc:	00800434 	movhi	r2,16
  20bbe0:	91400234 	orhi	r5,r18,8
  20bbe4:	10bfffc4 	addi	r2,r2,-1
  20bbe8:	288a703a 	and	r5,r5,r2
  20bbec:	b00f883a 	mov	r7,r22
  20bbf0:	003fcf06 	br	20bb30 <__divdf3+0x640>
  20bbf4:	183f7326 	beq	r3,zero,20b9c4 <__divdf3+0x4d4>
  20bbf8:	adad883a 	add	r22,r21,r22
  20bbfc:	a0bfffc4 	addi	r2,r20,-1
  20bc00:	b5404a36 	bltu	r22,r21,20bd2c <__divdf3+0x83c>
  20bc04:	b1006636 	bltu	r22,r4,20bda0 <__divdf3+0x8b0>
  20bc08:	b1007a26 	beq	r22,r4,20bdf4 <__divdf3+0x904>
  20bc0c:	1029883a 	mov	r20,r2
  20bc10:	003f6b06 	br	20b9c0 <__divdf3+0x4d0>
  20bc14:	a27ea436 	bltu	r20,r9,20b6a8 <__divdf3+0x1b8>
  20bc18:	903897fa 	slli	fp,r18,31
  20bc1c:	a004d07a 	srli	r2,r20,1
  20bc20:	9020d07a 	srli	r16,r18,1
  20bc24:	a02c97fa 	slli	r22,r20,31
  20bc28:	e0b8b03a 	or	fp,fp,r2
  20bc2c:	003ea206 	br	20b6b8 <__divdf3+0x1c8>
  20bc30:	020d3280 	call	20d328 <__clzsi2>
  20bc34:	11000544 	addi	r4,r2,21
  20bc38:	20c00748 	cmpgei	r3,r4,29
  20bc3c:	100b883a 	mov	r5,r2
  20bc40:	10800804 	addi	r2,r2,32
  20bc44:	183f8a26 	beq	r3,zero,20ba70 <__divdf3+0x580>
  20bc48:	297ffe04 	addi	r5,r5,-8
  20bc4c:	a164983a 	sll	r18,r20,r5
  20bc50:	0029883a 	mov	r20,zero
  20bc54:	003f8d06 	br	20ba8c <__divdf3+0x59c>
  20bc58:	b809883a 	mov	r4,r23
  20bc5c:	020d3280 	call	20d328 <__clzsi2>
  20bc60:	11400544 	addi	r5,r2,21
  20bc64:	29000748 	cmpgei	r4,r5,29
  20bc68:	1007883a 	mov	r3,r2
  20bc6c:	10800804 	addi	r2,r2,32
  20bc70:	203f6d26 	beq	r4,zero,20ba28 <__divdf3+0x538>
  20bc74:	18fffe04 	addi	r3,r3,-8
  20bc78:	b8ea983a 	sll	r21,r23,r3
  20bc7c:	0013883a 	mov	r9,zero
  20bc80:	003f7006 	br	20ba44 <__divdf3+0x554>
  20bc84:	1d47883a 	add	r3,r3,r21
  20bc88:	40bfffc4 	addi	r2,r8,-1
  20bc8c:	1d403936 	bltu	r3,r21,20bd74 <__divdf3+0x884>
  20bc90:	1d80382e 	bgeu	r3,r22,20bd74 <__divdf3+0x884>
  20bc94:	423fff84 	addi	r8,r8,-2
  20bc98:	1d47883a 	add	r3,r3,r21
  20bc9c:	003f2206 	br	20b928 <__divdf3+0x438>
  20bca0:	2549883a 	add	r4,r4,r21
  20bca4:	30bfffc4 	addi	r2,r6,-1
  20bca8:	25403436 	bltu	r4,r21,20bd7c <__divdf3+0x88c>
  20bcac:	2580332e 	bgeu	r4,r22,20bd7c <__divdf3+0x88c>
  20bcb0:	31bfff84 	addi	r6,r6,-2
  20bcb4:	2549883a 	add	r4,r4,r21
  20bcb8:	003f0406 	br	20b8cc <__divdf3+0x3dc>
  20bcbc:	a9bee91e 	bne	r21,r6,20b864 <__divdf3+0x374>
  20bcc0:	b4fee836 	bltu	r22,r19,20b864 <__divdf3+0x374>
  20bcc4:	003ee506 	br	20b85c <__divdf3+0x36c>
  20bcc8:	323ead2e 	bgeu	r6,r8,20b780 <__divdf3+0x290>
  20bccc:	18ffff84 	addi	r3,r3,-2
  20bcd0:	354d883a 	add	r6,r6,r21
  20bcd4:	003eab06 	br	20b784 <__divdf3+0x294>
  20bcd8:	243e912e 	bgeu	r4,r16,20b720 <__divdf3+0x230>
  20bcdc:	94bfff84 	addi	r18,r18,-2
  20bce0:	2549883a 	add	r4,r4,r21
  20bce4:	003e8f06 	br	20b724 <__divdf3+0x234>
  20bce8:	00fff844 	movi	r3,-31
  20bcec:	1987c83a 	sub	r3,r3,r6
  20bcf0:	29400820 	cmpeqi	r5,r5,32
  20bcf4:	90c6d83a 	srl	r3,r18,r3
  20bcf8:	2800031e 	bne	r5,zero,20bd08 <__divdf3+0x818>
  20bcfc:	89410f84 	addi	r5,r17,1086
  20bd00:	914a983a 	sll	r5,r18,r5
  20bd04:	a168b03a 	or	r20,r20,r5
  20bd08:	a028c03a 	cmpne	r20,r20,zero
  20bd0c:	a0e8b03a 	or	r20,r20,r3
  20bd10:	a48001cc 	andi	r18,r20,7
  20bd14:	90002a1e 	bne	r18,zero,20bdc0 <__divdf3+0x8d0>
  20bd18:	000b883a 	mov	r5,zero
  20bd1c:	a028d0fa 	srli	r20,r20,3
  20bd20:	0007883a 	mov	r3,zero
  20bd24:	a4a8b03a 	or	r20,r20,r18
  20bd28:	003e4306 	br	20b638 <__divdf3+0x148>
  20bd2c:	1029883a 	mov	r20,r2
  20bd30:	b13f231e 	bne	r22,r4,20b9c0 <__divdf3+0x4d0>
  20bd34:	1cff221e 	bne	r3,r19,20b9c0 <__divdf3+0x4d0>
  20bd38:	003f2206 	br	20b9c4 <__divdf3+0x4d4>
  20bd3c:	8980ffc4 	addi	r6,r17,1023
  20bd40:	01bf7d0e 	bge	zero,r6,20bb38 <__divdf3+0x648>
  20bd44:	0009883a 	mov	r4,zero
  20bd48:	05000044 	movi	r20,1
  20bd4c:	9525883a 	add	r18,r18,r20
  20bd50:	003f2106 	br	20b9d8 <__divdf3+0x4e8>
  20bd54:	a08003cc 	andi	r2,r20,15
  20bd58:	10800118 	cmpnei	r2,r2,4
  20bd5c:	103f1d26 	beq	r2,zero,20b9d4 <__divdf3+0x4e4>
  20bd60:	a1000104 	addi	r4,r20,4
  20bd64:	00bffec4 	movi	r2,-5
  20bd68:	2008d0fa 	srli	r4,r4,3
  20bd6c:	1529803a 	cmpltu	r20,r2,r20
  20bd70:	003ff606 	br	20bd4c <__divdf3+0x85c>
  20bd74:	1011883a 	mov	r8,r2
  20bd78:	003eeb06 	br	20b928 <__divdf3+0x438>
  20bd7c:	100d883a 	mov	r6,r2
  20bd80:	003ed206 	br	20b8cc <__divdf3+0x3dc>
  20bd84:	b0feb72e 	bgeu	r22,r3,20b864 <__divdf3+0x374>
  20bd88:	b4ed883a 	add	r22,r22,r19
  20bd8c:	b4c9803a 	cmpltu	r4,r22,r19
  20bd90:	2549883a 	add	r4,r4,r21
  20bd94:	94bfff84 	addi	r18,r18,-2
  20bd98:	310d883a 	add	r6,r6,r4
  20bd9c:	003eb206 	br	20b868 <__divdf3+0x378>
  20bda0:	9cc5883a 	add	r2,r19,r19
  20bda4:	14e7803a 	cmpltu	r19,r2,r19
  20bda8:	9d6b883a 	add	r21,r19,r21
  20bdac:	b56d883a 	add	r22,r22,r21
  20bdb0:	a53fff84 	addi	r20,r20,-2
  20bdb4:	1027883a 	mov	r19,r2
  20bdb8:	b13fde26 	beq	r22,r4,20bd34 <__divdf3+0x844>
  20bdbc:	003f0006 	br	20b9c0 <__divdf3+0x4d0>
  20bdc0:	a08003cc 	andi	r2,r20,15
  20bdc4:	10800118 	cmpnei	r2,r2,4
  20bdc8:	000b883a 	mov	r5,zero
  20bdcc:	103f6e1e 	bne	r2,zero,20bb88 <__divdf3+0x698>
  20bdd0:	2804927a 	slli	r2,r5,9
  20bdd4:	2824977a 	slli	r18,r5,29
  20bdd8:	100ad33a 	srli	r5,r2,12
  20bddc:	003fcf06 	br	20bd1c <__divdf3+0x82c>
  20bde0:	00800434 	movhi	r2,16
  20bde4:	91400234 	orhi	r5,r18,8
  20bde8:	10bfffc4 	addi	r2,r2,-1
  20bdec:	288a703a 	and	r5,r5,r2
  20bdf0:	003f4f06 	br	20bb30 <__divdf3+0x640>
  20bdf4:	98ffea36 	bltu	r19,r3,20bda0 <__divdf3+0x8b0>
  20bdf8:	1029883a 	mov	r20,r2
  20bdfc:	1cfef01e 	bne	r3,r19,20b9c0 <__divdf3+0x4d0>
  20be00:	003ef006 	br	20b9c4 <__divdf3+0x4d4>

0020be04 <__eqdf2>:
  20be04:	2810d53a 	srli	r8,r5,20
  20be08:	3806d53a 	srli	r3,r7,20
  20be0c:	00800434 	movhi	r2,16
  20be10:	4201ffcc 	andi	r8,r8,2047
  20be14:	10bfffc4 	addi	r2,r2,-1
  20be18:	4241ffd8 	cmpnei	r9,r8,2047
  20be1c:	2814d7fa 	srli	r10,r5,31
  20be20:	3816d7fa 	srli	r11,r7,31
  20be24:	288a703a 	and	r5,r5,r2
  20be28:	388e703a 	and	r7,r7,r2
  20be2c:	1881ffcc 	andi	r2,r3,2047
  20be30:	48000626 	beq	r9,zero,20be4c <__eqdf2+0x48>
  20be34:	10c1ffe0 	cmpeqi	r3,r2,2047
  20be38:	1800021e 	bne	r3,zero,20be44 <__eqdf2+0x40>
  20be3c:	4080011e 	bne	r8,r2,20be44 <__eqdf2+0x40>
  20be40:	29c00826 	beq	r5,r7,20be64 <__eqdf2+0x60>
  20be44:	00800044 	movi	r2,1
  20be48:	f800283a 	ret
  20be4c:	2906b03a 	or	r3,r5,r4
  20be50:	183ffc1e 	bne	r3,zero,20be44 <__eqdf2+0x40>
  20be54:	1081ffd8 	cmpnei	r2,r2,2047
  20be58:	103ffa1e 	bne	r2,zero,20be44 <__eqdf2+0x40>
  20be5c:	398eb03a 	or	r7,r7,r6
  20be60:	383ff81e 	bne	r7,zero,20be44 <__eqdf2+0x40>
  20be64:	21bff71e 	bne	r4,r6,20be44 <__eqdf2+0x40>
  20be68:	52c00426 	beq	r10,r11,20be7c <__eqdf2+0x78>
  20be6c:	403ff51e 	bne	r8,zero,20be44 <__eqdf2+0x40>
  20be70:	290ab03a 	or	r5,r5,r4
  20be74:	2804c03a 	cmpne	r2,r5,zero
  20be78:	f800283a 	ret
  20be7c:	0005883a 	mov	r2,zero
  20be80:	f800283a 	ret

0020be84 <__gedf2>:
  20be84:	2810d53a 	srli	r8,r5,20
  20be88:	3812d53a 	srli	r9,r7,20
  20be8c:	00c00434 	movhi	r3,16
  20be90:	4201ffcc 	andi	r8,r8,2047
  20be94:	18ffffc4 	addi	r3,r3,-1
  20be98:	4281ffd8 	cmpnei	r10,r8,2047
  20be9c:	2816d7fa 	srli	r11,r5,31
  20bea0:	3804d7fa 	srli	r2,r7,31
  20bea4:	28ca703a 	and	r5,r5,r3
  20bea8:	38ce703a 	and	r7,r7,r3
  20beac:	48c1ffcc 	andi	r3,r9,2047
  20beb0:	50000a26 	beq	r10,zero,20bedc <__gedf2+0x58>
  20beb4:	1a41ffd8 	cmpnei	r9,r3,2047
  20beb8:	48000c26 	beq	r9,zero,20beec <__gedf2+0x68>
  20bebc:	4000171e 	bne	r8,zero,20bf1c <__gedf2+0x98>
  20bec0:	2912b03a 	or	r9,r5,r4
  20bec4:	1800121e 	bne	r3,zero,20bf10 <__gedf2+0x8c>
  20bec8:	3994b03a 	or	r10,r7,r6
  20becc:	5000101e 	bne	r10,zero,20bf10 <__gedf2+0x8c>
  20bed0:	48000a1e 	bne	r9,zero,20befc <__gedf2+0x78>
  20bed4:	0005883a 	mov	r2,zero
  20bed8:	f800283a 	ret
  20bedc:	2912b03a 	or	r9,r5,r4
  20bee0:	48001d1e 	bne	r9,zero,20bf58 <__gedf2+0xd4>
  20bee4:	1a41ffe0 	cmpeqi	r9,r3,2047
  20bee8:	48000c26 	beq	r9,zero,20bf1c <__gedf2+0x98>
  20beec:	3992b03a 	or	r9,r7,r6
  20bef0:	4800191e 	bne	r9,zero,20bf58 <__gedf2+0xd4>
  20bef4:	40000526 	beq	r8,zero,20bf0c <__gedf2+0x88>
  20bef8:	58800c26 	beq	r11,r2,20bf2c <__gedf2+0xa8>
  20befc:	00800044 	movi	r2,1
  20bf00:	58000526 	beq	r11,zero,20bf18 <__gedf2+0x94>
  20bf04:	00bfffc4 	movi	r2,-1
  20bf08:	f800283a 	ret
  20bf0c:	2912b03a 	or	r9,r5,r4
  20bf10:	483ff91e 	bne	r9,zero,20bef8 <__gedf2+0x74>
  20bf14:	103ffb26 	beq	r2,zero,20bf04 <__gedf2+0x80>
  20bf18:	f800283a 	ret
  20bf1c:	183ff61e 	bne	r3,zero,20bef8 <__gedf2+0x74>
  20bf20:	3992b03a 	or	r9,r7,r6
  20bf24:	483ff41e 	bne	r9,zero,20bef8 <__gedf2+0x74>
  20bf28:	003ff406 	br	20befc <__gedf2+0x78>
  20bf2c:	1a000716 	blt	r3,r8,20bf4c <__gedf2+0xc8>
  20bf30:	40fff816 	blt	r8,r3,20bf14 <__gedf2+0x90>
  20bf34:	397ff136 	bltu	r7,r5,20befc <__gedf2+0x78>
  20bf38:	29c00926 	beq	r5,r7,20bf60 <__gedf2+0xdc>
  20bf3c:	29ffe52e 	bgeu	r5,r7,20bed4 <__gedf2+0x50>
  20bf40:	583ff026 	beq	r11,zero,20bf04 <__gedf2+0x80>
  20bf44:	5805883a 	mov	r2,r11
  20bf48:	f800283a 	ret
  20bf4c:	103fed1e 	bne	r2,zero,20bf04 <__gedf2+0x80>
  20bf50:	00800044 	movi	r2,1
  20bf54:	f800283a 	ret
  20bf58:	00bfff84 	movi	r2,-2
  20bf5c:	f800283a 	ret
  20bf60:	313fe636 	bltu	r6,r4,20befc <__gedf2+0x78>
  20bf64:	21bfdb2e 	bgeu	r4,r6,20bed4 <__gedf2+0x50>
  20bf68:	003ff506 	br	20bf40 <__gedf2+0xbc>

0020bf6c <__ledf2>:
  20bf6c:	2810d53a 	srli	r8,r5,20
  20bf70:	3812d53a 	srli	r9,r7,20
  20bf74:	00c00434 	movhi	r3,16
  20bf78:	4201ffcc 	andi	r8,r8,2047
  20bf7c:	18ffffc4 	addi	r3,r3,-1
  20bf80:	4281ffd8 	cmpnei	r10,r8,2047
  20bf84:	2816d7fa 	srli	r11,r5,31
  20bf88:	3804d7fa 	srli	r2,r7,31
  20bf8c:	28ca703a 	and	r5,r5,r3
  20bf90:	38ce703a 	and	r7,r7,r3
  20bf94:	48c1ffcc 	andi	r3,r9,2047
  20bf98:	50000a26 	beq	r10,zero,20bfc4 <__ledf2+0x58>
  20bf9c:	1a41ffd8 	cmpnei	r9,r3,2047
  20bfa0:	48000c26 	beq	r9,zero,20bfd4 <__ledf2+0x68>
  20bfa4:	4000191e 	bne	r8,zero,20c00c <__ledf2+0xa0>
  20bfa8:	2912b03a 	or	r9,r5,r4
  20bfac:	18000d1e 	bne	r3,zero,20bfe4 <__ledf2+0x78>
  20bfb0:	3994b03a 	or	r10,r7,r6
  20bfb4:	50000b1e 	bne	r10,zero,20bfe4 <__ledf2+0x78>
  20bfb8:	48000c1e 	bne	r9,zero,20bfec <__ledf2+0x80>
  20bfbc:	0005883a 	mov	r2,zero
  20bfc0:	f800283a 	ret
  20bfc4:	2912b03a 	or	r9,r5,r4
  20bfc8:	48000c1e 	bne	r9,zero,20bffc <__ledf2+0x90>
  20bfcc:	1a41ffe0 	cmpeqi	r9,r3,2047
  20bfd0:	48000e26 	beq	r9,zero,20c00c <__ledf2+0xa0>
  20bfd4:	3992b03a 	or	r9,r7,r6
  20bfd8:	4800081e 	bne	r9,zero,20bffc <__ledf2+0x90>
  20bfdc:	4000021e 	bne	r8,zero,20bfe8 <__ledf2+0x7c>
  20bfe0:	2912b03a 	or	r9,r5,r4
  20bfe4:	48000726 	beq	r9,zero,20c004 <__ledf2+0x98>
  20bfe8:	58800c26 	beq	r11,r2,20c01c <__ledf2+0xb0>
  20bfec:	00800044 	movi	r2,1
  20bff0:	58000526 	beq	r11,zero,20c008 <__ledf2+0x9c>
  20bff4:	00bfffc4 	movi	r2,-1
  20bff8:	f800283a 	ret
  20bffc:	00800084 	movi	r2,2
  20c000:	f800283a 	ret
  20c004:	103ffb26 	beq	r2,zero,20bff4 <__ledf2+0x88>
  20c008:	f800283a 	ret
  20c00c:	183ff61e 	bne	r3,zero,20bfe8 <__ledf2+0x7c>
  20c010:	3992b03a 	or	r9,r7,r6
  20c014:	483ff41e 	bne	r9,zero,20bfe8 <__ledf2+0x7c>
  20c018:	003ff406 	br	20bfec <__ledf2+0x80>
  20c01c:	1a00030e 	bge	r3,r8,20c02c <__ledf2+0xc0>
  20c020:	103ff41e 	bne	r2,zero,20bff4 <__ledf2+0x88>
  20c024:	00800044 	movi	r2,1
  20c028:	f800283a 	ret
  20c02c:	40fff516 	blt	r8,r3,20c004 <__ledf2+0x98>
  20c030:	397fee36 	bltu	r7,r5,20bfec <__ledf2+0x80>
  20c034:	29c00426 	beq	r5,r7,20c048 <__ledf2+0xdc>
  20c038:	29ffe02e 	bgeu	r5,r7,20bfbc <__ledf2+0x50>
  20c03c:	583fed26 	beq	r11,zero,20bff4 <__ledf2+0x88>
  20c040:	5805883a 	mov	r2,r11
  20c044:	f800283a 	ret
  20c048:	313fe836 	bltu	r6,r4,20bfec <__ledf2+0x80>
  20c04c:	21bfdb2e 	bgeu	r4,r6,20bfbc <__ledf2+0x50>
  20c050:	003ffa06 	br	20c03c <__ledf2+0xd0>

0020c054 <__muldf3>:
  20c054:	2810d53a 	srli	r8,r5,20
  20c058:	defff004 	addi	sp,sp,-64
  20c05c:	00800434 	movhi	r2,16
  20c060:	df000e15 	stw	fp,56(sp)
  20c064:	dd000a15 	stw	r20,40(sp)
  20c068:	dcc00915 	stw	r19,36(sp)
  20c06c:	dc400715 	stw	r17,28(sp)
  20c070:	10bfffc4 	addi	r2,r2,-1
  20c074:	dfc00f15 	stw	ra,60(sp)
  20c078:	ddc00d15 	stw	r23,52(sp)
  20c07c:	dd800c15 	stw	r22,48(sp)
  20c080:	dd400b15 	stw	r21,44(sp)
  20c084:	dc800815 	stw	r18,32(sp)
  20c088:	dc000615 	stw	r16,24(sp)
  20c08c:	4201ffcc 	andi	r8,r8,2047
  20c090:	2828d7fa 	srli	r20,r5,31
  20c094:	2023883a 	mov	r17,r4
  20c098:	3039883a 	mov	fp,r6
  20c09c:	28a6703a 	and	r19,r5,r2
  20c0a0:	40013426 	beq	r8,zero,20c574 <__muldf3+0x520>
  20c0a4:	4081ffe0 	cmpeqi	r2,r8,2047
  20c0a8:	1001461e 	bne	r2,zero,20c5c4 <__muldf3+0x570>
  20c0ac:	980a90fa 	slli	r5,r19,3
  20c0b0:	2026d77a 	srli	r19,r4,29
  20c0b4:	202490fa 	slli	r18,r4,3
  20c0b8:	423f0044 	addi	r8,r8,-1023
  20c0bc:	9966b03a 	or	r19,r19,r5
  20c0c0:	9cc02034 	orhi	r19,r19,128
  20c0c4:	002b883a 	mov	r21,zero
  20c0c8:	002d883a 	mov	r22,zero
  20c0cc:	3804d53a 	srli	r2,r7,20
  20c0d0:	00c00434 	movhi	r3,16
  20c0d4:	18ffffc4 	addi	r3,r3,-1
  20c0d8:	1081ffcc 	andi	r2,r2,2047
  20c0dc:	382ed7fa 	srli	r23,r7,31
  20c0e0:	38e0703a 	and	r16,r7,r3
  20c0e4:	10011026 	beq	r2,zero,20c528 <__muldf3+0x4d4>
  20c0e8:	10c1ffe0 	cmpeqi	r3,r2,2047
  20c0ec:	18013c1e 	bne	r3,zero,20c5e0 <__muldf3+0x58c>
  20c0f0:	e008d77a 	srli	r4,fp,29
  20c0f4:	802090fa 	slli	r16,r16,3
  20c0f8:	e02290fa 	slli	r17,fp,3
  20c0fc:	10bf0044 	addi	r2,r2,-1023
  20c100:	2420b03a 	or	r16,r4,r16
  20c104:	84002034 	orhi	r16,r16,128
  20c108:	4091883a 	add	r8,r8,r2
  20c10c:	0009883a 	mov	r4,zero
  20c110:	a8800428 	cmpgeui	r2,r21,16
  20c114:	a5ccf03a 	xor	r6,r20,r23
  20c118:	41c00044 	addi	r7,r8,1
  20c11c:	1000371e 	bne	r2,zero,20c1fc <__muldf3+0x1a8>
  20c120:	a80490ba 	slli	r2,r21,2
  20c124:	00c00874 	movhi	r3,33
  20c128:	10c7883a 	add	r3,r2,r3
  20c12c:	18b04d17 	ldw	r2,-16076(r3)
  20c130:	1000683a 	jmp	r2
  20c134:	0020c1fc 	xorhi	zero,zero,33543
  20c138:	0020c178 	rdprs	zero,zero,-31995
  20c13c:	0020c178 	rdprs	zero,zero,-31995
  20c140:	0020c174 	movhi	zero,33541
  20c144:	0020c184 	movi	zero,-31994
  20c148:	0020c184 	movi	zero,-31994
  20c14c:	0020c654 	movui	zero,33561
  20c150:	0020c174 	movhi	zero,33541
  20c154:	0020c184 	movi	zero,-31994
  20c158:	0020c654 	movui	zero,33561
  20c15c:	0020c184 	movi	zero,-31994
  20c160:	0020c174 	movhi	zero,33541
  20c164:	0020c5fc 	xorhi	zero,zero,33559
  20c168:	0020c5fc 	xorhi	zero,zero,33559
  20c16c:	0020c5fc 	xorhi	zero,zero,33559
  20c170:	0020c6e0 	cmpeqi	zero,zero,-31973
  20c174:	b80d883a 	mov	r6,r23
  20c178:	8027883a 	mov	r19,r16
  20c17c:	8825883a 	mov	r18,r17
  20c180:	202d883a 	mov	r22,r4
  20c184:	b08000a0 	cmpeqi	r2,r22,2
  20c188:	1000181e 	bne	r2,zero,20c1ec <__muldf3+0x198>
  20c18c:	b08000e0 	cmpeqi	r2,r22,3
  20c190:	1001961e 	bne	r2,zero,20c7ec <__muldf3+0x798>
  20c194:	b0800060 	cmpeqi	r2,r22,1
  20c198:	1000c926 	beq	r2,zero,20c4c0 <__muldf3+0x46c>
  20c19c:	0007883a 	mov	r3,zero
  20c1a0:	0027883a 	mov	r19,zero
  20c1a4:	0025883a 	mov	r18,zero
  20c1a8:	1806953a 	slli	r3,r3,20
  20c1ac:	300c97fa 	slli	r6,r6,31
  20c1b0:	9005883a 	mov	r2,r18
  20c1b4:	1cc6b03a 	or	r3,r3,r19
  20c1b8:	1986b03a 	or	r3,r3,r6
  20c1bc:	dfc00f17 	ldw	ra,60(sp)
  20c1c0:	df000e17 	ldw	fp,56(sp)
  20c1c4:	ddc00d17 	ldw	r23,52(sp)
  20c1c8:	dd800c17 	ldw	r22,48(sp)
  20c1cc:	dd400b17 	ldw	r21,44(sp)
  20c1d0:	dd000a17 	ldw	r20,40(sp)
  20c1d4:	dcc00917 	ldw	r19,36(sp)
  20c1d8:	dc800817 	ldw	r18,32(sp)
  20c1dc:	dc400717 	ldw	r17,28(sp)
  20c1e0:	dc000617 	ldw	r16,24(sp)
  20c1e4:	dec01004 	addi	sp,sp,64
  20c1e8:	f800283a 	ret
  20c1ec:	00c1ffc4 	movi	r3,2047
  20c1f0:	0027883a 	mov	r19,zero
  20c1f4:	0025883a 	mov	r18,zero
  20c1f8:	003feb06 	br	20c1a8 <__muldf3+0x154>
  20c1fc:	9028d43a 	srli	r20,r18,16
  20c200:	8f3fffcc 	andi	fp,r17,65535
  20c204:	957fffcc 	andi	r21,r18,65535
  20c208:	a80b883a 	mov	r5,r21
  20c20c:	e009883a 	mov	r4,fp
  20c210:	d9800315 	stw	r6,12(sp)
  20c214:	da000215 	stw	r8,8(sp)
  20c218:	d9c00115 	stw	r7,4(sp)
  20c21c:	8822d43a 	srli	r17,r17,16
  20c220:	020abd80 	call	20abd8 <__mulsi3>
  20c224:	e00b883a 	mov	r5,fp
  20c228:	a009883a 	mov	r4,r20
  20c22c:	102d883a 	mov	r22,r2
  20c230:	020abd80 	call	20abd8 <__mulsi3>
  20c234:	880b883a 	mov	r5,r17
  20c238:	a009883a 	mov	r4,r20
  20c23c:	102f883a 	mov	r23,r2
  20c240:	020abd80 	call	20abd8 <__mulsi3>
  20c244:	a80b883a 	mov	r5,r21
  20c248:	8809883a 	mov	r4,r17
  20c24c:	d8800015 	stw	r2,0(sp)
  20c250:	020abd80 	call	20abd8 <__mulsi3>
  20c254:	b006d43a 	srli	r3,r22,16
  20c258:	15e5883a 	add	r18,r2,r23
  20c25c:	d9c00117 	ldw	r7,4(sp)
  20c260:	1c87883a 	add	r3,r3,r18
  20c264:	da000217 	ldw	r8,8(sp)
  20c268:	d9800317 	ldw	r6,12(sp)
  20c26c:	1dc0042e 	bgeu	r3,r23,20c280 <__muldf3+0x22c>
  20c270:	d9000017 	ldw	r4,0(sp)
  20c274:	00800074 	movhi	r2,1
  20c278:	2085883a 	add	r2,r4,r2
  20c27c:	d8800015 	stw	r2,0(sp)
  20c280:	1804943a 	slli	r2,r3,16
  20c284:	85ffffcc 	andi	r23,r16,65535
  20c288:	b5bfffcc 	andi	r22,r22,65535
  20c28c:	1585883a 	add	r2,r2,r22
  20c290:	a80b883a 	mov	r5,r21
  20c294:	b809883a 	mov	r4,r23
  20c298:	1824d43a 	srli	r18,r3,16
  20c29c:	d9800515 	stw	r6,20(sp)
  20c2a0:	da000415 	stw	r8,16(sp)
  20c2a4:	d9c00315 	stw	r7,12(sp)
  20c2a8:	8020d43a 	srli	r16,r16,16
  20c2ac:	d8800115 	stw	r2,4(sp)
  20c2b0:	020abd80 	call	20abd8 <__mulsi3>
  20c2b4:	a009883a 	mov	r4,r20
  20c2b8:	b80b883a 	mov	r5,r23
  20c2bc:	d8800215 	stw	r2,8(sp)
  20c2c0:	020abd80 	call	20abd8 <__mulsi3>
  20c2c4:	a009883a 	mov	r4,r20
  20c2c8:	800b883a 	mov	r5,r16
  20c2cc:	102d883a 	mov	r22,r2
  20c2d0:	020abd80 	call	20abd8 <__mulsi3>
  20c2d4:	a80b883a 	mov	r5,r21
  20c2d8:	8009883a 	mov	r4,r16
  20c2dc:	1029883a 	mov	r20,r2
  20c2e0:	020abd80 	call	20abd8 <__mulsi3>
  20c2e4:	da800217 	ldw	r10,8(sp)
  20c2e8:	1585883a 	add	r2,r2,r22
  20c2ec:	d9c00317 	ldw	r7,12(sp)
  20c2f0:	5006d43a 	srli	r3,r10,16
  20c2f4:	da000417 	ldw	r8,16(sp)
  20c2f8:	d9800517 	ldw	r6,20(sp)
  20c2fc:	1887883a 	add	r3,r3,r2
  20c300:	1d80022e 	bgeu	r3,r22,20c30c <__muldf3+0x2b8>
  20c304:	00800074 	movhi	r2,1
  20c308:	a0a9883a 	add	r20,r20,r2
  20c30c:	1804d43a 	srli	r2,r3,16
  20c310:	1806943a 	slli	r3,r3,16
  20c314:	982cd43a 	srli	r22,r19,16
  20c318:	9d7fffcc 	andi	r21,r19,65535
  20c31c:	e009883a 	mov	r4,fp
  20c320:	54ffffcc 	andi	r19,r10,65535
  20c324:	a80b883a 	mov	r5,r21
  20c328:	1ce7883a 	add	r19,r3,r19
  20c32c:	d9800515 	stw	r6,20(sp)
  20c330:	da000415 	stw	r8,16(sp)
  20c334:	d9c00315 	stw	r7,12(sp)
  20c338:	1529883a 	add	r20,r2,r20
  20c33c:	020abd80 	call	20abd8 <__mulsi3>
  20c340:	e00b883a 	mov	r5,fp
  20c344:	b009883a 	mov	r4,r22
  20c348:	d8800215 	stw	r2,8(sp)
  20c34c:	020abd80 	call	20abd8 <__mulsi3>
  20c350:	8809883a 	mov	r4,r17
  20c354:	b00b883a 	mov	r5,r22
  20c358:	1039883a 	mov	fp,r2
  20c35c:	020abd80 	call	20abd8 <__mulsi3>
  20c360:	8809883a 	mov	r4,r17
  20c364:	a80b883a 	mov	r5,r21
  20c368:	1023883a 	mov	r17,r2
  20c36c:	020abd80 	call	20abd8 <__mulsi3>
  20c370:	d8c00217 	ldw	r3,8(sp)
  20c374:	1705883a 	add	r2,r2,fp
  20c378:	d9c00317 	ldw	r7,12(sp)
  20c37c:	1808d43a 	srli	r4,r3,16
  20c380:	da000417 	ldw	r8,16(sp)
  20c384:	d9800517 	ldw	r6,20(sp)
  20c388:	2089883a 	add	r4,r4,r2
  20c38c:	94e5883a 	add	r18,r18,r19
  20c390:	2700022e 	bgeu	r4,fp,20c39c <__muldf3+0x348>
  20c394:	00800074 	movhi	r2,1
  20c398:	88a3883a 	add	r17,r17,r2
  20c39c:	2004d43a 	srli	r2,r4,16
  20c3a0:	2038943a 	slli	fp,r4,16
  20c3a4:	18ffffcc 	andi	r3,r3,65535
  20c3a8:	b809883a 	mov	r4,r23
  20c3ac:	a80b883a 	mov	r5,r21
  20c3b0:	d9800415 	stw	r6,16(sp)
  20c3b4:	da000315 	stw	r8,12(sp)
  20c3b8:	d9c00215 	stw	r7,8(sp)
  20c3bc:	e0f9883a 	add	fp,fp,r3
  20c3c0:	1463883a 	add	r17,r2,r17
  20c3c4:	020abd80 	call	20abd8 <__mulsi3>
  20c3c8:	b80b883a 	mov	r5,r23
  20c3cc:	b009883a 	mov	r4,r22
  20c3d0:	102f883a 	mov	r23,r2
  20c3d4:	020abd80 	call	20abd8 <__mulsi3>
  20c3d8:	b00b883a 	mov	r5,r22
  20c3dc:	8009883a 	mov	r4,r16
  20c3e0:	102d883a 	mov	r22,r2
  20c3e4:	020abd80 	call	20abd8 <__mulsi3>
  20c3e8:	a80b883a 	mov	r5,r21
  20c3ec:	8009883a 	mov	r4,r16
  20c3f0:	1021883a 	mov	r16,r2
  20c3f4:	020abd80 	call	20abd8 <__mulsi3>
  20c3f8:	b80ad43a 	srli	r5,r23,16
  20c3fc:	1585883a 	add	r2,r2,r22
  20c400:	d9c00217 	ldw	r7,8(sp)
  20c404:	288b883a 	add	r5,r5,r2
  20c408:	da000317 	ldw	r8,12(sp)
  20c40c:	d9800417 	ldw	r6,16(sp)
  20c410:	2d80022e 	bgeu	r5,r22,20c41c <__muldf3+0x3c8>
  20c414:	00800074 	movhi	r2,1
  20c418:	80a1883a 	add	r16,r16,r2
  20c41c:	2806943a 	slli	r3,r5,16
  20c420:	d8800017 	ldw	r2,0(sp)
  20c424:	bdffffcc 	andi	r23,r23,65535
  20c428:	1dc7883a 	add	r3,r3,r23
  20c42c:	90ab883a 	add	r21,r18,r2
  20c430:	acd5803a 	cmpltu	r10,r21,r19
  20c434:	1d07883a 	add	r3,r3,r20
  20c438:	af2b883a 	add	r21,r21,fp
  20c43c:	1a97883a 	add	r11,r3,r10
  20c440:	af09803a 	cmpltu	r4,r21,fp
  20c444:	2826d43a 	srli	r19,r5,16
  20c448:	5c53883a 	add	r9,r11,r17
  20c44c:	4905883a 	add	r2,r9,r4
  20c450:	1d07803a 	cmpltu	r3,r3,r20
  20c454:	5a95803a 	cmpltu	r10,r11,r10
  20c458:	1a86b03a 	or	r3,r3,r10
  20c45c:	1109803a 	cmpltu	r4,r2,r4
  20c460:	4c53803a 	cmpltu	r9,r9,r17
  20c464:	1ce7883a 	add	r19,r3,r19
  20c468:	4908b03a 	or	r4,r9,r4
  20c46c:	a824927a 	slli	r18,r21,9
  20c470:	d8c00117 	ldw	r3,4(sp)
  20c474:	9927883a 	add	r19,r19,r4
  20c478:	9c27883a 	add	r19,r19,r16
  20c47c:	9826927a 	slli	r19,r19,9
  20c480:	a82ad5fa 	srli	r21,r21,23
  20c484:	100ad5fa 	srli	r5,r2,23
  20c488:	90e4b03a 	or	r18,r18,r3
  20c48c:	1004927a 	slli	r2,r2,9
  20c490:	9024c03a 	cmpne	r18,r18,zero
  20c494:	9564b03a 	or	r18,r18,r21
  20c498:	98c0402c 	andhi	r3,r19,256
  20c49c:	90a4b03a 	or	r18,r18,r2
  20c4a0:	9966b03a 	or	r19,r19,r5
  20c4a4:	1800b626 	beq	r3,zero,20c780 <__muldf3+0x72c>
  20c4a8:	9006d07a 	srli	r3,r18,1
  20c4ac:	980497fa 	slli	r2,r19,31
  20c4b0:	9480004c 	andi	r18,r18,1
  20c4b4:	9826d07a 	srli	r19,r19,1
  20c4b8:	1c86b03a 	or	r3,r3,r18
  20c4bc:	18a4b03a 	or	r18,r3,r2
  20c4c0:	3900ffc4 	addi	r4,r7,1023
  20c4c4:	0100690e 	bge	zero,r4,20c66c <__muldf3+0x618>
  20c4c8:	908001cc 	andi	r2,r18,7
  20c4cc:	10000726 	beq	r2,zero,20c4ec <__muldf3+0x498>
  20c4d0:	908003cc 	andi	r2,r18,15
  20c4d4:	10800120 	cmpeqi	r2,r2,4
  20c4d8:	1000041e 	bne	r2,zero,20c4ec <__muldf3+0x498>
  20c4dc:	90800104 	addi	r2,r18,4
  20c4e0:	14a5803a 	cmpltu	r18,r2,r18
  20c4e4:	9ca7883a 	add	r19,r19,r18
  20c4e8:	1025883a 	mov	r18,r2
  20c4ec:	9880402c 	andhi	r2,r19,256
  20c4f0:	10000426 	beq	r2,zero,20c504 <__muldf3+0x4b0>
  20c4f4:	00bfc034 	movhi	r2,65280
  20c4f8:	10bfffc4 	addi	r2,r2,-1
  20c4fc:	98a6703a 	and	r19,r19,r2
  20c500:	39010004 	addi	r4,r7,1024
  20c504:	2081ffc8 	cmpgei	r2,r4,2047
  20c508:	103f381e 	bne	r2,zero,20c1ec <__muldf3+0x198>
  20c50c:	9804977a 	slli	r2,r19,29
  20c510:	9024d0fa 	srli	r18,r18,3
  20c514:	9826927a 	slli	r19,r19,9
  20c518:	20c1ffcc 	andi	r3,r4,2047
  20c51c:	14a4b03a 	or	r18,r2,r18
  20c520:	9826d33a 	srli	r19,r19,12
  20c524:	003f2006 	br	20c1a8 <__muldf3+0x154>
  20c528:	8722b03a 	or	r17,r16,fp
  20c52c:	88004526 	beq	r17,zero,20c644 <__muldf3+0x5f0>
  20c530:	da000015 	stw	r8,0(sp)
  20c534:	80008626 	beq	r16,zero,20c750 <__muldf3+0x6fc>
  20c538:	8009883a 	mov	r4,r16
  20c53c:	020d3280 	call	20d328 <__clzsi2>
  20c540:	da000017 	ldw	r8,0(sp)
  20c544:	117ffd44 	addi	r5,r2,-11
  20c548:	01000744 	movi	r4,29
  20c54c:	147ffe04 	addi	r17,r2,-8
  20c550:	2149c83a 	sub	r4,r4,r5
  20c554:	8460983a 	sll	r16,r16,r17
  20c558:	e108d83a 	srl	r4,fp,r4
  20c55c:	e462983a 	sll	r17,fp,r17
  20c560:	2420b03a 	or	r16,r4,r16
  20c564:	4091c83a 	sub	r8,r8,r2
  20c568:	423f0344 	addi	r8,r8,-1011
  20c56c:	0009883a 	mov	r4,zero
  20c570:	003ee706 	br	20c110 <__muldf3+0xbc>
  20c574:	9924b03a 	or	r18,r19,r4
  20c578:	90002d26 	beq	r18,zero,20c630 <__muldf3+0x5dc>
  20c57c:	d9c00015 	stw	r7,0(sp)
  20c580:	98006826 	beq	r19,zero,20c724 <__muldf3+0x6d0>
  20c584:	9809883a 	mov	r4,r19
  20c588:	020d3280 	call	20d328 <__clzsi2>
  20c58c:	d9c00017 	ldw	r7,0(sp)
  20c590:	113ffd44 	addi	r4,r2,-11
  20c594:	00c00744 	movi	r3,29
  20c598:	14bffe04 	addi	r18,r2,-8
  20c59c:	1907c83a 	sub	r3,r3,r4
  20c5a0:	9ca6983a 	sll	r19,r19,r18
  20c5a4:	88c6d83a 	srl	r3,r17,r3
  20c5a8:	8ca4983a 	sll	r18,r17,r18
  20c5ac:	1ce6b03a 	or	r19,r3,r19
  20c5b0:	023f0344 	movi	r8,-1011
  20c5b4:	4091c83a 	sub	r8,r8,r2
  20c5b8:	002b883a 	mov	r21,zero
  20c5bc:	002d883a 	mov	r22,zero
  20c5c0:	003ec206 	br	20c0cc <__muldf3+0x78>
  20c5c4:	9924b03a 	or	r18,r19,r4
  20c5c8:	9000141e 	bne	r18,zero,20c61c <__muldf3+0x5c8>
  20c5cc:	0027883a 	mov	r19,zero
  20c5d0:	05400204 	movi	r21,8
  20c5d4:	0201ffc4 	movi	r8,2047
  20c5d8:	05800084 	movi	r22,2
  20c5dc:	003ebb06 	br	20c0cc <__muldf3+0x78>
  20c5e0:	8722b03a 	or	r17,r16,fp
  20c5e4:	4201ffc4 	addi	r8,r8,2047
  20c5e8:	8800081e 	bne	r17,zero,20c60c <__muldf3+0x5b8>
  20c5ec:	ad400094 	ori	r21,r21,2
  20c5f0:	0021883a 	mov	r16,zero
  20c5f4:	01000084 	movi	r4,2
  20c5f8:	003ec506 	br	20c110 <__muldf3+0xbc>
  20c5fc:	b08000a0 	cmpeqi	r2,r22,2
  20c600:	a00d883a 	mov	r6,r20
  20c604:	103ee126 	beq	r2,zero,20c18c <__muldf3+0x138>
  20c608:	003ef806 	br	20c1ec <__muldf3+0x198>
  20c60c:	ad4000d4 	ori	r21,r21,3
  20c610:	e023883a 	mov	r17,fp
  20c614:	010000c4 	movi	r4,3
  20c618:	003ebd06 	br	20c110 <__muldf3+0xbc>
  20c61c:	2025883a 	mov	r18,r4
  20c620:	05400304 	movi	r21,12
  20c624:	0201ffc4 	movi	r8,2047
  20c628:	058000c4 	movi	r22,3
  20c62c:	003ea706 	br	20c0cc <__muldf3+0x78>
  20c630:	0027883a 	mov	r19,zero
  20c634:	05400104 	movi	r21,4
  20c638:	0011883a 	mov	r8,zero
  20c63c:	05800044 	movi	r22,1
  20c640:	003ea206 	br	20c0cc <__muldf3+0x78>
  20c644:	ad400054 	ori	r21,r21,1
  20c648:	0021883a 	mov	r16,zero
  20c64c:	01000044 	movi	r4,1
  20c650:	003eaf06 	br	20c110 <__muldf3+0xbc>
  20c654:	04c00434 	movhi	r19,16
  20c658:	000d883a 	mov	r6,zero
  20c65c:	9cffffc4 	addi	r19,r19,-1
  20c660:	04bfffc4 	movi	r18,-1
  20c664:	00c1ffc4 	movi	r3,2047
  20c668:	003ecf06 	br	20c1a8 <__muldf3+0x154>
  20c66c:	00800044 	movi	r2,1
  20c670:	1105c83a 	sub	r2,r2,r4
  20c674:	10c00e48 	cmpgei	r3,r2,57
  20c678:	183ec81e 	bne	r3,zero,20c19c <__muldf3+0x148>
  20c67c:	10c00808 	cmpgei	r3,r2,32
  20c680:	1800411e 	bne	r3,zero,20c788 <__muldf3+0x734>
  20c684:	39c10784 	addi	r7,r7,1054
  20c688:	99c6983a 	sll	r3,r19,r7
  20c68c:	9088d83a 	srl	r4,r18,r2
  20c690:	91ce983a 	sll	r7,r18,r7
  20c694:	98a6d83a 	srl	r19,r19,r2
  20c698:	1904b03a 	or	r2,r3,r4
  20c69c:	3824c03a 	cmpne	r18,r7,zero
  20c6a0:	1484b03a 	or	r2,r2,r18
  20c6a4:	10c001cc 	andi	r3,r2,7
  20c6a8:	18000726 	beq	r3,zero,20c6c8 <__muldf3+0x674>
  20c6ac:	10c003cc 	andi	r3,r2,15
  20c6b0:	18c00120 	cmpeqi	r3,r3,4
  20c6b4:	1800041e 	bne	r3,zero,20c6c8 <__muldf3+0x674>
  20c6b8:	10c00104 	addi	r3,r2,4
  20c6bc:	1885803a 	cmpltu	r2,r3,r2
  20c6c0:	98a7883a 	add	r19,r19,r2
  20c6c4:	1805883a 	mov	r2,r3
  20c6c8:	98c0202c 	andhi	r3,r19,128
  20c6cc:	18004326 	beq	r3,zero,20c7dc <__muldf3+0x788>
  20c6d0:	00c00044 	movi	r3,1
  20c6d4:	0027883a 	mov	r19,zero
  20c6d8:	0025883a 	mov	r18,zero
  20c6dc:	003eb206 	br	20c1a8 <__muldf3+0x154>
  20c6e0:	9880022c 	andhi	r2,r19,8
  20c6e4:	10000926 	beq	r2,zero,20c70c <__muldf3+0x6b8>
  20c6e8:	8080022c 	andhi	r2,r16,8
  20c6ec:	1000071e 	bne	r2,zero,20c70c <__muldf3+0x6b8>
  20c6f0:	00800434 	movhi	r2,16
  20c6f4:	84c00234 	orhi	r19,r16,8
  20c6f8:	10bfffc4 	addi	r2,r2,-1
  20c6fc:	98a6703a 	and	r19,r19,r2
  20c700:	b80d883a 	mov	r6,r23
  20c704:	8825883a 	mov	r18,r17
  20c708:	003fd606 	br	20c664 <__muldf3+0x610>
  20c70c:	00800434 	movhi	r2,16
  20c710:	9cc00234 	orhi	r19,r19,8
  20c714:	10bfffc4 	addi	r2,r2,-1
  20c718:	98a6703a 	and	r19,r19,r2
  20c71c:	a00d883a 	mov	r6,r20
  20c720:	003fd006 	br	20c664 <__muldf3+0x610>
  20c724:	020d3280 	call	20d328 <__clzsi2>
  20c728:	11000544 	addi	r4,r2,21
  20c72c:	21400748 	cmpgei	r5,r4,29
  20c730:	1007883a 	mov	r3,r2
  20c734:	d9c00017 	ldw	r7,0(sp)
  20c738:	10800804 	addi	r2,r2,32
  20c73c:	283f9526 	beq	r5,zero,20c594 <__muldf3+0x540>
  20c740:	18fffe04 	addi	r3,r3,-8
  20c744:	88e6983a 	sll	r19,r17,r3
  20c748:	0025883a 	mov	r18,zero
  20c74c:	003f9806 	br	20c5b0 <__muldf3+0x55c>
  20c750:	e009883a 	mov	r4,fp
  20c754:	020d3280 	call	20d328 <__clzsi2>
  20c758:	11400544 	addi	r5,r2,21
  20c75c:	29000748 	cmpgei	r4,r5,29
  20c760:	1007883a 	mov	r3,r2
  20c764:	da000017 	ldw	r8,0(sp)
  20c768:	10800804 	addi	r2,r2,32
  20c76c:	203f7626 	beq	r4,zero,20c548 <__muldf3+0x4f4>
  20c770:	1c3ffe04 	addi	r16,r3,-8
  20c774:	e420983a 	sll	r16,fp,r16
  20c778:	0023883a 	mov	r17,zero
  20c77c:	003f7906 	br	20c564 <__muldf3+0x510>
  20c780:	400f883a 	mov	r7,r8
  20c784:	003f4e06 	br	20c4c0 <__muldf3+0x46c>
  20c788:	00fff844 	movi	r3,-31
  20c78c:	1907c83a 	sub	r3,r3,r4
  20c790:	10800820 	cmpeqi	r2,r2,32
  20c794:	98c6d83a 	srl	r3,r19,r3
  20c798:	1000031e 	bne	r2,zero,20c7a8 <__muldf3+0x754>
  20c79c:	39c10f84 	addi	r7,r7,1086
  20c7a0:	99e6983a 	sll	r19,r19,r7
  20c7a4:	94e4b03a 	or	r18,r18,r19
  20c7a8:	9024c03a 	cmpne	r18,r18,zero
  20c7ac:	90c4b03a 	or	r2,r18,r3
  20c7b0:	148001cc 	andi	r18,r2,7
  20c7b4:	9000051e 	bne	r18,zero,20c7cc <__muldf3+0x778>
  20c7b8:	0027883a 	mov	r19,zero
  20c7bc:	1004d0fa 	srli	r2,r2,3
  20c7c0:	0007883a 	mov	r3,zero
  20c7c4:	14a4b03a 	or	r18,r2,r18
  20c7c8:	003e7706 	br	20c1a8 <__muldf3+0x154>
  20c7cc:	10c003cc 	andi	r3,r2,15
  20c7d0:	18c00118 	cmpnei	r3,r3,4
  20c7d4:	0027883a 	mov	r19,zero
  20c7d8:	183fb71e 	bne	r3,zero,20c6b8 <__muldf3+0x664>
  20c7dc:	9806927a 	slli	r3,r19,9
  20c7e0:	9824977a 	slli	r18,r19,29
  20c7e4:	1826d33a 	srli	r19,r3,12
  20c7e8:	003ff406 	br	20c7bc <__muldf3+0x768>
  20c7ec:	00800434 	movhi	r2,16
  20c7f0:	9cc00234 	orhi	r19,r19,8
  20c7f4:	10bfffc4 	addi	r2,r2,-1
  20c7f8:	98a6703a 	and	r19,r19,r2
  20c7fc:	003f9906 	br	20c664 <__muldf3+0x610>

0020c800 <__subdf3>:
  20c800:	00800434 	movhi	r2,16
  20c804:	defffb04 	addi	sp,sp,-20
  20c808:	3812d53a 	srli	r9,r7,20
  20c80c:	10bfffc4 	addi	r2,r2,-1
  20c810:	2886703a 	and	r3,r5,r2
  20c814:	dc000015 	stw	r16,0(sp)
  20c818:	3884703a 	and	r2,r7,r2
  20c81c:	2820d53a 	srli	r16,r5,20
  20c820:	3014d77a 	srli	r10,r6,29
  20c824:	280ad7fa 	srli	r5,r5,31
  20c828:	180690fa 	slli	r3,r3,3
  20c82c:	2016d77a 	srli	r11,r4,29
  20c830:	100490fa 	slli	r2,r2,3
  20c834:	4a41ffcc 	andi	r9,r9,2047
  20c838:	dc800215 	stw	r18,8(sp)
  20c83c:	8401ffcc 	andi	r16,r16,2047
  20c840:	dfc00415 	stw	ra,16(sp)
  20c844:	dcc00315 	stw	r19,12(sp)
  20c848:	dc400115 	stw	r17,4(sp)
  20c84c:	4b01ffd8 	cmpnei	r12,r9,2047
  20c850:	3810d7fa 	srli	r8,r7,31
  20c854:	2825883a 	mov	r18,r5
  20c858:	5084b03a 	or	r2,r10,r2
  20c85c:	201c90fa 	slli	r14,r4,3
  20c860:	301a90fa 	slli	r13,r6,3
  20c864:	29403fcc 	andi	r5,r5,255
  20c868:	58ceb03a 	or	r7,r11,r3
  20c86c:	8255c83a 	sub	r10,r16,r9
  20c870:	60006826 	beq	r12,zero,20ca14 <__subdf3+0x214>
  20c874:	42c0005c 	xori	r11,r8,1
  20c878:	2ac07326 	beq	r5,r11,20ca48 <__subdf3+0x248>
  20c87c:	0280590e 	bge	zero,r10,20c9e4 <__subdf3+0x1e4>
  20c880:	4800691e 	bne	r9,zero,20ca28 <__subdf3+0x228>
  20c884:	1346b03a 	or	r3,r2,r13
  20c888:	1800e826 	beq	r3,zero,20cc2c <__subdf3+0x42c>
  20c88c:	50ffffc4 	addi	r3,r10,-1
  20c890:	18018126 	beq	r3,zero,20ce98 <__subdf3+0x698>
  20c894:	5281ffd8 	cmpnei	r10,r10,2047
  20c898:	5000eb26 	beq	r10,zero,20cc48 <__subdf3+0x448>
  20c89c:	1815883a 	mov	r10,r3
  20c8a0:	50c00e48 	cmpgei	r3,r10,57
  20c8a4:	1800651e 	bne	r3,zero,20ca3c <__subdf3+0x23c>
  20c8a8:	50c00808 	cmpgei	r3,r10,32
  20c8ac:	18012a1e 	bne	r3,zero,20cd58 <__subdf3+0x558>
  20c8b0:	00c00804 	movi	r3,32
  20c8b4:	1a87c83a 	sub	r3,r3,r10
  20c8b8:	10e2983a 	sll	r17,r2,r3
  20c8bc:	6a88d83a 	srl	r4,r13,r10
  20c8c0:	68da983a 	sll	r13,r13,r3
  20c8c4:	1284d83a 	srl	r2,r2,r10
  20c8c8:	8922b03a 	or	r17,r17,r4
  20c8cc:	681ac03a 	cmpne	r13,r13,zero
  20c8d0:	8b62b03a 	or	r17,r17,r13
  20c8d4:	388fc83a 	sub	r7,r7,r2
  20c8d8:	7463c83a 	sub	r17,r14,r17
  20c8dc:	7445803a 	cmpltu	r2,r14,r17
  20c8e0:	3889c83a 	sub	r4,r7,r2
  20c8e4:	2080202c 	andhi	r2,r4,128
  20c8e8:	10008e26 	beq	r2,zero,20cb24 <__subdf3+0x324>
  20c8ec:	04c02034 	movhi	r19,128
  20c8f0:	9cffffc4 	addi	r19,r19,-1
  20c8f4:	24e6703a 	and	r19,r4,r19
  20c8f8:	9800a626 	beq	r19,zero,20cb94 <__subdf3+0x394>
  20c8fc:	9809883a 	mov	r4,r19
  20c900:	020d3280 	call	20d328 <__clzsi2>
  20c904:	117ffe04 	addi	r5,r2,-8
  20c908:	01000804 	movi	r4,32
  20c90c:	2149c83a 	sub	r4,r4,r5
  20c910:	8908d83a 	srl	r4,r17,r4
  20c914:	9944983a 	sll	r2,r19,r5
  20c918:	8962983a 	sll	r17,r17,r5
  20c91c:	2084b03a 	or	r2,r4,r2
  20c920:	2c00a516 	blt	r5,r16,20cbb8 <__subdf3+0x3b8>
  20c924:	2c0bc83a 	sub	r5,r5,r16
  20c928:	29000044 	addi	r4,r5,1
  20c92c:	20c00808 	cmpgei	r3,r4,32
  20c930:	1800701e 	bne	r3,zero,20caf4 <__subdf3+0x2f4>
  20c934:	00c00804 	movi	r3,32
  20c938:	1907c83a 	sub	r3,r3,r4
  20c93c:	890ad83a 	srl	r5,r17,r4
  20c940:	88e2983a 	sll	r17,r17,r3
  20c944:	10c6983a 	sll	r3,r2,r3
  20c948:	1108d83a 	srl	r4,r2,r4
  20c94c:	8822c03a 	cmpne	r17,r17,zero
  20c950:	1946b03a 	or	r3,r3,r5
  20c954:	1c62b03a 	or	r17,r3,r17
  20c958:	0021883a 	mov	r16,zero
  20c95c:	888001cc 	andi	r2,r17,7
  20c960:	10000726 	beq	r2,zero,20c980 <__subdf3+0x180>
  20c964:	888003cc 	andi	r2,r17,15
  20c968:	10800120 	cmpeqi	r2,r2,4
  20c96c:	1000041e 	bne	r2,zero,20c980 <__subdf3+0x180>
  20c970:	88800104 	addi	r2,r17,4
  20c974:	1463803a 	cmpltu	r17,r2,r17
  20c978:	2449883a 	add	r4,r4,r17
  20c97c:	1023883a 	mov	r17,r2
  20c980:	2080202c 	andhi	r2,r4,128
  20c984:	10006926 	beq	r2,zero,20cb2c <__subdf3+0x32c>
  20c988:	84000044 	addi	r16,r16,1
  20c98c:	8081ffe0 	cmpeqi	r2,r16,2047
  20c990:	8401ffcc 	andi	r16,r16,2047
  20c994:	10007b1e 	bne	r2,zero,20cb84 <__subdf3+0x384>
  20c998:	00bfe034 	movhi	r2,65408
  20c99c:	10bfffc4 	addi	r2,r2,-1
  20c9a0:	2084703a 	and	r2,r4,r2
  20c9a4:	1006927a 	slli	r3,r2,9
  20c9a8:	8822d0fa 	srli	r17,r17,3
  20c9ac:	1008977a 	slli	r4,r2,29
  20c9b0:	1806d33a 	srli	r3,r3,12
  20c9b4:	2444b03a 	or	r2,r4,r17
  20c9b8:	8020953a 	slli	r16,r16,20
  20c9bc:	902497fa 	slli	r18,r18,31
  20c9c0:	80c6b03a 	or	r3,r16,r3
  20c9c4:	1c86b03a 	or	r3,r3,r18
  20c9c8:	dfc00417 	ldw	ra,16(sp)
  20c9cc:	dcc00317 	ldw	r19,12(sp)
  20c9d0:	dc800217 	ldw	r18,8(sp)
  20c9d4:	dc400117 	ldw	r17,4(sp)
  20c9d8:	dc000017 	ldw	r16,0(sp)
  20c9dc:	dec00504 	addi	sp,sp,20
  20c9e0:	f800283a 	ret
  20c9e4:	50002c26 	beq	r10,zero,20ca98 <__subdf3+0x298>
  20c9e8:	4c15c83a 	sub	r10,r9,r16
  20c9ec:	5825883a 	mov	r18,r11
  20c9f0:	8000b21e 	bne	r16,zero,20ccbc <__subdf3+0x4bc>
  20c9f4:	3b86b03a 	or	r3,r7,r14
  20c9f8:	18010826 	beq	r3,zero,20ce1c <__subdf3+0x61c>
  20c9fc:	50ffffc4 	addi	r3,r10,-1
  20ca00:	18015a26 	beq	r3,zero,20cf6c <__subdf3+0x76c>
  20ca04:	5401ffd8 	cmpnei	r16,r10,2047
  20ca08:	80012926 	beq	r16,zero,20ceb0 <__subdf3+0x6b0>
  20ca0c:	1815883a 	mov	r10,r3
  20ca10:	0000ac06 	br	20ccc4 <__subdf3+0x4c4>
  20ca14:	1346b03a 	or	r3,r2,r13
  20ca18:	183f9626 	beq	r3,zero,20c874 <__subdf3+0x74>
  20ca1c:	42c03fcc 	andi	r11,r8,255
  20ca20:	2a006a26 	beq	r5,r8,20cbcc <__subdf3+0x3cc>
  20ca24:	02bfef0e 	bge	zero,r10,20c9e4 <__subdf3+0x1e4>
  20ca28:	80c1ffd8 	cmpnei	r3,r16,2047
  20ca2c:	18008626 	beq	r3,zero,20cc48 <__subdf3+0x448>
  20ca30:	50c00e48 	cmpgei	r3,r10,57
  20ca34:	10802034 	orhi	r2,r2,128
  20ca38:	183f9b26 	beq	r3,zero,20c8a8 <__subdf3+0xa8>
  20ca3c:	1344b03a 	or	r2,r2,r13
  20ca40:	1022c03a 	cmpne	r17,r2,zero
  20ca44:	003fa406 	br	20c8d8 <__subdf3+0xd8>
  20ca48:	0280600e 	bge	zero,r10,20cbcc <__subdf3+0x3cc>
  20ca4c:	48002126 	beq	r9,zero,20cad4 <__subdf3+0x2d4>
  20ca50:	80c1ffd8 	cmpnei	r3,r16,2047
  20ca54:	18011d26 	beq	r3,zero,20cecc <__subdf3+0x6cc>
  20ca58:	10802034 	orhi	r2,r2,128
  20ca5c:	50c00e48 	cmpgei	r3,r10,57
  20ca60:	18003e1e 	bne	r3,zero,20cb5c <__subdf3+0x35c>
  20ca64:	50c00808 	cmpgei	r3,r10,32
  20ca68:	1800d526 	beq	r3,zero,20cdc0 <__subdf3+0x5c0>
  20ca6c:	547ff804 	addi	r17,r10,-32
  20ca70:	51000820 	cmpeqi	r4,r10,32
  20ca74:	1446d83a 	srl	r3,r2,r17
  20ca78:	2000041e 	bne	r4,zero,20ca8c <__subdf3+0x28c>
  20ca7c:	01001004 	movi	r4,64
  20ca80:	2295c83a 	sub	r10,r4,r10
  20ca84:	1284983a 	sll	r2,r2,r10
  20ca88:	689ab03a 	or	r13,r13,r2
  20ca8c:	6822c03a 	cmpne	r17,r13,zero
  20ca90:	88e2b03a 	or	r17,r17,r3
  20ca94:	00003306 	br	20cb64 <__subdf3+0x364>
  20ca98:	80c00044 	addi	r3,r16,1
  20ca9c:	18c1ff8c 	andi	r3,r3,2046
  20caa0:	1800971e 	bne	r3,zero,20cd00 <__subdf3+0x500>
  20caa4:	1350b03a 	or	r8,r2,r13
  20caa8:	3b86b03a 	or	r3,r7,r14
  20caac:	8000e21e 	bne	r16,zero,20ce38 <__subdf3+0x638>
  20cab0:	18012526 	beq	r3,zero,20cf48 <__subdf3+0x748>
  20cab4:	4001411e 	bne	r8,zero,20cfbc <__subdf3+0x7bc>
  20cab8:	3806977a 	slli	r3,r7,29
  20cabc:	00880034 	movhi	r2,8192
  20cac0:	10bfffc4 	addi	r2,r2,-1
  20cac4:	208a703a 	and	r5,r4,r2
  20cac8:	3810d0fa 	srli	r8,r7,3
  20cacc:	28c4b03a 	or	r2,r5,r3
  20cad0:	00001d06 	br	20cb48 <__subdf3+0x348>
  20cad4:	1346b03a 	or	r3,r2,r13
  20cad8:	18005426 	beq	r3,zero,20cc2c <__subdf3+0x42c>
  20cadc:	50ffffc4 	addi	r3,r10,-1
  20cae0:	1800e526 	beq	r3,zero,20ce78 <__subdf3+0x678>
  20cae4:	5281ffd8 	cmpnei	r10,r10,2047
  20cae8:	50012d26 	beq	r10,zero,20cfa0 <__subdf3+0x7a0>
  20caec:	1815883a 	mov	r10,r3
  20caf0:	003fda06 	br	20ca5c <__subdf3+0x25c>
  20caf4:	297ff844 	addi	r5,r5,-31
  20caf8:	20c00820 	cmpeqi	r3,r4,32
  20cafc:	114ad83a 	srl	r5,r2,r5
  20cb00:	1800041e 	bne	r3,zero,20cb14 <__subdf3+0x314>
  20cb04:	00c01004 	movi	r3,64
  20cb08:	1909c83a 	sub	r4,r3,r4
  20cb0c:	1104983a 	sll	r2,r2,r4
  20cb10:	88a2b03a 	or	r17,r17,r2
  20cb14:	8822c03a 	cmpne	r17,r17,zero
  20cb18:	8962b03a 	or	r17,r17,r5
  20cb1c:	0009883a 	mov	r4,zero
  20cb20:	0021883a 	mov	r16,zero
  20cb24:	888001cc 	andi	r2,r17,7
  20cb28:	103f8e1e 	bne	r2,zero,20c964 <__subdf3+0x164>
  20cb2c:	8822d0fa 	srli	r17,r17,3
  20cb30:	2004977a 	slli	r2,r4,29
  20cb34:	2010d0fa 	srli	r8,r4,3
  20cb38:	8015883a 	mov	r10,r16
  20cb3c:	8884b03a 	or	r2,r17,r2
  20cb40:	50c1ffe0 	cmpeqi	r3,r10,2047
  20cb44:	18016f1e 	bne	r3,zero,20d104 <__subdf3+0x904>
  20cb48:	00c00434 	movhi	r3,16
  20cb4c:	18ffffc4 	addi	r3,r3,-1
  20cb50:	40c6703a 	and	r3,r8,r3
  20cb54:	5401ffcc 	andi	r16,r10,2047
  20cb58:	003f9706 	br	20c9b8 <__subdf3+0x1b8>
  20cb5c:	1344b03a 	or	r2,r2,r13
  20cb60:	1022c03a 	cmpne	r17,r2,zero
  20cb64:	8ba3883a 	add	r17,r17,r14
  20cb68:	8b85803a 	cmpltu	r2,r17,r14
  20cb6c:	11c9883a 	add	r4,r2,r7
  20cb70:	2080202c 	andhi	r2,r4,128
  20cb74:	103feb26 	beq	r2,zero,20cb24 <__subdf3+0x324>
  20cb78:	84000044 	addi	r16,r16,1
  20cb7c:	8081ffe0 	cmpeqi	r2,r16,2047
  20cb80:	10006b26 	beq	r2,zero,20cd30 <__subdf3+0x530>
  20cb84:	0401ffc4 	movi	r16,2047
  20cb88:	0007883a 	mov	r3,zero
  20cb8c:	0005883a 	mov	r2,zero
  20cb90:	003f8906 	br	20c9b8 <__subdf3+0x1b8>
  20cb94:	8809883a 	mov	r4,r17
  20cb98:	020d3280 	call	20d328 <__clzsi2>
  20cb9c:	11400604 	addi	r5,r2,24
  20cba0:	28c00808 	cmpgei	r3,r5,32
  20cba4:	183f5826 	beq	r3,zero,20c908 <__subdf3+0x108>
  20cba8:	10bffe04 	addi	r2,r2,-8
  20cbac:	8884983a 	sll	r2,r17,r2
  20cbb0:	0023883a 	mov	r17,zero
  20cbb4:	2c3f5b0e 	bge	r5,r16,20c924 <__subdf3+0x124>
  20cbb8:	013fe034 	movhi	r4,65408
  20cbbc:	213fffc4 	addi	r4,r4,-1
  20cbc0:	8161c83a 	sub	r16,r16,r5
  20cbc4:	1108703a 	and	r4,r2,r4
  20cbc8:	003f6406 	br	20c95c <__subdf3+0x15c>
  20cbcc:	50002c26 	beq	r10,zero,20cc80 <__subdf3+0x480>
  20cbd0:	4c15c83a 	sub	r10,r9,r16
  20cbd4:	80007226 	beq	r16,zero,20cda0 <__subdf3+0x5a0>
  20cbd8:	6000ea26 	beq	r12,zero,20cf84 <__subdf3+0x784>
  20cbdc:	39c02034 	orhi	r7,r7,128
  20cbe0:	50c00e48 	cmpgei	r3,r10,57
  20cbe4:	1800c01e 	bne	r3,zero,20cee8 <__subdf3+0x6e8>
  20cbe8:	50c00808 	cmpgei	r3,r10,32
  20cbec:	1801261e 	bne	r3,zero,20d088 <__subdf3+0x888>
  20cbf0:	00c00804 	movi	r3,32
  20cbf4:	1a87c83a 	sub	r3,r3,r10
  20cbf8:	38e2983a 	sll	r17,r7,r3
  20cbfc:	7288d83a 	srl	r4,r14,r10
  20cc00:	70c6983a 	sll	r3,r14,r3
  20cc04:	3a8ed83a 	srl	r7,r7,r10
  20cc08:	8922b03a 	or	r17,r17,r4
  20cc0c:	1806c03a 	cmpne	r3,r3,zero
  20cc10:	88e2b03a 	or	r17,r17,r3
  20cc14:	11c5883a 	add	r2,r2,r7
  20cc18:	8b63883a 	add	r17,r17,r13
  20cc1c:	8b49803a 	cmpltu	r4,r17,r13
  20cc20:	2089883a 	add	r4,r4,r2
  20cc24:	4821883a 	mov	r16,r9
  20cc28:	003fd106 	br	20cb70 <__subdf3+0x370>
  20cc2c:	380c977a 	slli	r6,r7,29
  20cc30:	00880034 	movhi	r2,8192
  20cc34:	10bfffc4 	addi	r2,r2,-1
  20cc38:	2088703a 	and	r4,r4,r2
  20cc3c:	3810d0fa 	srli	r8,r7,3
  20cc40:	2184b03a 	or	r2,r4,r6
  20cc44:	003fbe06 	br	20cb40 <__subdf3+0x340>
  20cc48:	380c977a 	slli	r6,r7,29
  20cc4c:	00880034 	movhi	r2,8192
  20cc50:	10bfffc4 	addi	r2,r2,-1
  20cc54:	380ed0fa 	srli	r7,r7,3
  20cc58:	2084703a 	and	r2,r4,r2
  20cc5c:	1184b03a 	or	r2,r2,r6
  20cc60:	3886b03a 	or	r3,r7,r2
  20cc64:	18012326 	beq	r3,zero,20d0f4 <__subdf3+0x8f4>
  20cc68:	01000434 	movhi	r4,16
  20cc6c:	38c00234 	orhi	r3,r7,8
  20cc70:	213fffc4 	addi	r4,r4,-1
  20cc74:	1906703a 	and	r3,r3,r4
  20cc78:	0401ffc4 	movi	r16,2047
  20cc7c:	003f4e06 	br	20c9b8 <__subdf3+0x1b8>
  20cc80:	80c00044 	addi	r3,r16,1
  20cc84:	1941ff8c 	andi	r5,r3,2046
  20cc88:	2800581e 	bne	r5,zero,20cdec <__subdf3+0x5ec>
  20cc8c:	3b86b03a 	or	r3,r7,r14
  20cc90:	8000a31e 	bne	r16,zero,20cf20 <__subdf3+0x720>
  20cc94:	1800ea26 	beq	r3,zero,20d040 <__subdf3+0x840>
  20cc98:	1346b03a 	or	r3,r2,r13
  20cc9c:	1800ef1e 	bne	r3,zero,20d05c <__subdf3+0x85c>
  20cca0:	380a977a 	slli	r5,r7,29
  20cca4:	00880034 	movhi	r2,8192
  20cca8:	10bfffc4 	addi	r2,r2,-1
  20ccac:	2084703a 	and	r2,r4,r2
  20ccb0:	3810d0fa 	srli	r8,r7,3
  20ccb4:	2884b03a 	or	r2,r5,r2
  20ccb8:	003fa306 	br	20cb48 <__subdf3+0x348>
  20ccbc:	60007c26 	beq	r12,zero,20ceb0 <__subdf3+0x6b0>
  20ccc0:	39c02034 	orhi	r7,r7,128
  20ccc4:	50c00e48 	cmpgei	r3,r10,57
  20ccc8:	18002e1e 	bne	r3,zero,20cd84 <__subdf3+0x584>
  20cccc:	50c00808 	cmpgei	r3,r10,32
  20ccd0:	1800881e 	bne	r3,zero,20cef4 <__subdf3+0x6f4>
  20ccd4:	00c00804 	movi	r3,32
  20ccd8:	1a87c83a 	sub	r3,r3,r10
  20ccdc:	7288d83a 	srl	r4,r14,r10
  20cce0:	38e2983a 	sll	r17,r7,r3
  20cce4:	70dc983a 	sll	r14,r14,r3
  20cce8:	3aa0d83a 	srl	r16,r7,r10
  20ccec:	8922b03a 	or	r17,r17,r4
  20ccf0:	701cc03a 	cmpne	r14,r14,zero
  20ccf4:	8ba2b03a 	or	r17,r17,r14
  20ccf8:	1405c83a 	sub	r2,r2,r16
  20ccfc:	00002306 	br	20cd8c <__subdf3+0x58c>
  20cd00:	7363c83a 	sub	r17,r14,r13
  20cd04:	3889c83a 	sub	r4,r7,r2
  20cd08:	7467803a 	cmpltu	r19,r14,r17
  20cd0c:	24e7c83a 	sub	r19,r4,r19
  20cd10:	98c0202c 	andhi	r3,r19,128
  20cd14:	1800521e 	bne	r3,zero,20ce60 <__subdf3+0x660>
  20cd18:	8cc4b03a 	or	r2,r17,r19
  20cd1c:	103ef61e 	bne	r2,zero,20c8f8 <__subdf3+0xf8>
  20cd20:	0011883a 	mov	r8,zero
  20cd24:	0025883a 	mov	r18,zero
  20cd28:	003f8706 	br	20cb48 <__subdf3+0x348>
  20cd2c:	04000084 	movi	r16,2
  20cd30:	00bfe034 	movhi	r2,65408
  20cd34:	10bfffc4 	addi	r2,r2,-1
  20cd38:	8806d07a 	srli	r3,r17,1
  20cd3c:	2084703a 	and	r2,r4,r2
  20cd40:	100a97fa 	slli	r5,r2,31
  20cd44:	8c40004c 	andi	r17,r17,1
  20cd48:	1c62b03a 	or	r17,r3,r17
  20cd4c:	1008d07a 	srli	r4,r2,1
  20cd50:	2c62b03a 	or	r17,r5,r17
  20cd54:	003f0106 	br	20c95c <__subdf3+0x15c>
  20cd58:	547ff804 	addi	r17,r10,-32
  20cd5c:	51000820 	cmpeqi	r4,r10,32
  20cd60:	1446d83a 	srl	r3,r2,r17
  20cd64:	2000041e 	bne	r4,zero,20cd78 <__subdf3+0x578>
  20cd68:	01001004 	movi	r4,64
  20cd6c:	2295c83a 	sub	r10,r4,r10
  20cd70:	1284983a 	sll	r2,r2,r10
  20cd74:	689ab03a 	or	r13,r13,r2
  20cd78:	6822c03a 	cmpne	r17,r13,zero
  20cd7c:	88e2b03a 	or	r17,r17,r3
  20cd80:	003ed506 	br	20c8d8 <__subdf3+0xd8>
  20cd84:	3ba2b03a 	or	r17,r7,r14
  20cd88:	8822c03a 	cmpne	r17,r17,zero
  20cd8c:	6c63c83a 	sub	r17,r13,r17
  20cd90:	6c49803a 	cmpltu	r4,r13,r17
  20cd94:	1109c83a 	sub	r4,r2,r4
  20cd98:	4821883a 	mov	r16,r9
  20cd9c:	003ed106 	br	20c8e4 <__subdf3+0xe4>
  20cda0:	3b86b03a 	or	r3,r7,r14
  20cda4:	18001d26 	beq	r3,zero,20ce1c <__subdf3+0x61c>
  20cda8:	50ffffc4 	addi	r3,r10,-1
  20cdac:	1800c126 	beq	r3,zero,20d0b4 <__subdf3+0x8b4>
  20cdb0:	5281ffd8 	cmpnei	r10,r10,2047
  20cdb4:	50003e26 	beq	r10,zero,20ceb0 <__subdf3+0x6b0>
  20cdb8:	1815883a 	mov	r10,r3
  20cdbc:	003f8806 	br	20cbe0 <__subdf3+0x3e0>
  20cdc0:	00c00804 	movi	r3,32
  20cdc4:	1a87c83a 	sub	r3,r3,r10
  20cdc8:	10e2983a 	sll	r17,r2,r3
  20cdcc:	6a88d83a 	srl	r4,r13,r10
  20cdd0:	68da983a 	sll	r13,r13,r3
  20cdd4:	1284d83a 	srl	r2,r2,r10
  20cdd8:	8922b03a 	or	r17,r17,r4
  20cddc:	681ac03a 	cmpne	r13,r13,zero
  20cde0:	8b62b03a 	or	r17,r17,r13
  20cde4:	388f883a 	add	r7,r7,r2
  20cde8:	003f5e06 	br	20cb64 <__subdf3+0x364>
  20cdec:	1901ffe0 	cmpeqi	r4,r3,2047
  20cdf0:	203f641e 	bne	r4,zero,20cb84 <__subdf3+0x384>
  20cdf4:	735b883a 	add	r13,r14,r13
  20cdf8:	6b89803a 	cmpltu	r4,r13,r14
  20cdfc:	3885883a 	add	r2,r7,r2
  20ce00:	1105883a 	add	r2,r2,r4
  20ce04:	102297fa 	slli	r17,r2,31
  20ce08:	681ad07a 	srli	r13,r13,1
  20ce0c:	1008d07a 	srli	r4,r2,1
  20ce10:	1821883a 	mov	r16,r3
  20ce14:	8b62b03a 	or	r17,r17,r13
  20ce18:	003f4206 	br	20cb24 <__subdf3+0x324>
  20ce1c:	1008977a 	slli	r4,r2,29
  20ce20:	00c80034 	movhi	r3,8192
  20ce24:	18ffffc4 	addi	r3,r3,-1
  20ce28:	30cc703a 	and	r6,r6,r3
  20ce2c:	1010d0fa 	srli	r8,r2,3
  20ce30:	3104b03a 	or	r2,r6,r4
  20ce34:	003f4206 	br	20cb40 <__subdf3+0x340>
  20ce38:	18006c1e 	bne	r3,zero,20cfec <__subdf3+0x7ec>
  20ce3c:	4000a826 	beq	r8,zero,20d0e0 <__subdf3+0x8e0>
  20ce40:	1008977a 	slli	r4,r2,29
  20ce44:	00c80034 	movhi	r3,8192
  20ce48:	18ffffc4 	addi	r3,r3,-1
  20ce4c:	30c6703a 	and	r3,r6,r3
  20ce50:	100ed0fa 	srli	r7,r2,3
  20ce54:	5825883a 	mov	r18,r11
  20ce58:	1904b03a 	or	r2,r3,r4
  20ce5c:	003f8006 	br	20cc60 <__subdf3+0x460>
  20ce60:	6ba3c83a 	sub	r17,r13,r14
  20ce64:	11c5c83a 	sub	r2,r2,r7
  20ce68:	6c49803a 	cmpltu	r4,r13,r17
  20ce6c:	1127c83a 	sub	r19,r2,r4
  20ce70:	5825883a 	mov	r18,r11
  20ce74:	003ea006 	br	20c8f8 <__subdf3+0xf8>
  20ce78:	7363883a 	add	r17,r14,r13
  20ce7c:	3885883a 	add	r2,r7,r2
  20ce80:	8b9d803a 	cmpltu	r14,r17,r14
  20ce84:	1389883a 	add	r4,r2,r14
  20ce88:	2080202c 	andhi	r2,r4,128
  20ce8c:	103fa71e 	bne	r2,zero,20cd2c <__subdf3+0x52c>
  20ce90:	04000044 	movi	r16,1
  20ce94:	003f2306 	br	20cb24 <__subdf3+0x324>
  20ce98:	7363c83a 	sub	r17,r14,r13
  20ce9c:	3885c83a 	sub	r2,r7,r2
  20cea0:	745d803a 	cmpltu	r14,r14,r17
  20cea4:	1389c83a 	sub	r4,r2,r14
  20cea8:	04000044 	movi	r16,1
  20ceac:	003e8d06 	br	20c8e4 <__subdf3+0xe4>
  20ceb0:	1008977a 	slli	r4,r2,29
  20ceb4:	00c80034 	movhi	r3,8192
  20ceb8:	18ffffc4 	addi	r3,r3,-1
  20cebc:	30c6703a 	and	r3,r6,r3
  20cec0:	100ed0fa 	srli	r7,r2,3
  20cec4:	1904b03a 	or	r2,r3,r4
  20cec8:	003f6506 	br	20cc60 <__subdf3+0x460>
  20cecc:	380c977a 	slli	r6,r7,29
  20ced0:	00880034 	movhi	r2,8192
  20ced4:	10bfffc4 	addi	r2,r2,-1
  20ced8:	2088703a 	and	r4,r4,r2
  20cedc:	380ed0fa 	srli	r7,r7,3
  20cee0:	2184b03a 	or	r2,r4,r6
  20cee4:	003f5e06 	br	20cc60 <__subdf3+0x460>
  20cee8:	3ba2b03a 	or	r17,r7,r14
  20ceec:	8822c03a 	cmpne	r17,r17,zero
  20cef0:	003f4906 	br	20cc18 <__subdf3+0x418>
  20cef4:	547ff804 	addi	r17,r10,-32
  20cef8:	51000820 	cmpeqi	r4,r10,32
  20cefc:	3c46d83a 	srl	r3,r7,r17
  20cf00:	2000041e 	bne	r4,zero,20cf14 <__subdf3+0x714>
  20cf04:	01001004 	movi	r4,64
  20cf08:	2295c83a 	sub	r10,r4,r10
  20cf0c:	3a8e983a 	sll	r7,r7,r10
  20cf10:	71dcb03a 	or	r14,r14,r7
  20cf14:	7022c03a 	cmpne	r17,r14,zero
  20cf18:	88e2b03a 	or	r17,r17,r3
  20cf1c:	003f9b06 	br	20cd8c <__subdf3+0x58c>
  20cf20:	18001826 	beq	r3,zero,20cf84 <__subdf3+0x784>
  20cf24:	135ab03a 	or	r13,r2,r13
  20cf28:	380a977a 	slli	r5,r7,29
  20cf2c:	380ed0fa 	srli	r7,r7,3
  20cf30:	6800311e 	bne	r13,zero,20cff8 <__subdf3+0x7f8>
  20cf34:	00880034 	movhi	r2,8192
  20cf38:	10bfffc4 	addi	r2,r2,-1
  20cf3c:	2084703a 	and	r2,r4,r2
  20cf40:	1144b03a 	or	r2,r2,r5
  20cf44:	003f4606 	br	20cc60 <__subdf3+0x460>
  20cf48:	40005f26 	beq	r8,zero,20d0c8 <__subdf3+0x8c8>
  20cf4c:	1008977a 	slli	r4,r2,29
  20cf50:	00c80034 	movhi	r3,8192
  20cf54:	18ffffc4 	addi	r3,r3,-1
  20cf58:	30cc703a 	and	r6,r6,r3
  20cf5c:	1010d0fa 	srli	r8,r2,3
  20cf60:	5825883a 	mov	r18,r11
  20cf64:	3104b03a 	or	r2,r6,r4
  20cf68:	003ef706 	br	20cb48 <__subdf3+0x348>
  20cf6c:	6ba3c83a 	sub	r17,r13,r14
  20cf70:	11c5c83a 	sub	r2,r2,r7
  20cf74:	6c5b803a 	cmpltu	r13,r13,r17
  20cf78:	1349c83a 	sub	r4,r2,r13
  20cf7c:	04000044 	movi	r16,1
  20cf80:	003e5806 	br	20c8e4 <__subdf3+0xe4>
  20cf84:	1006977a 	slli	r3,r2,29
  20cf88:	01080034 	movhi	r4,8192
  20cf8c:	213fffc4 	addi	r4,r4,-1
  20cf90:	3108703a 	and	r4,r6,r4
  20cf94:	100ed0fa 	srli	r7,r2,3
  20cf98:	1904b03a 	or	r2,r3,r4
  20cf9c:	003f3006 	br	20cc60 <__subdf3+0x460>
  20cfa0:	3806977a 	slli	r3,r7,29
  20cfa4:	00880034 	movhi	r2,8192
  20cfa8:	10bfffc4 	addi	r2,r2,-1
  20cfac:	2084703a 	and	r2,r4,r2
  20cfb0:	380ed0fa 	srli	r7,r7,3
  20cfb4:	10c4b03a 	or	r2,r2,r3
  20cfb8:	003f2906 	br	20cc60 <__subdf3+0x460>
  20cfbc:	7363c83a 	sub	r17,r14,r13
  20cfc0:	7447803a 	cmpltu	r3,r14,r17
  20cfc4:	3889c83a 	sub	r4,r7,r2
  20cfc8:	20c9c83a 	sub	r4,r4,r3
  20cfcc:	20c0202c 	andhi	r3,r4,128
  20cfd0:	18004026 	beq	r3,zero,20d0d4 <__subdf3+0x8d4>
  20cfd4:	6ba3c83a 	sub	r17,r13,r14
  20cfd8:	11c5c83a 	sub	r2,r2,r7
  20cfdc:	6c5b803a 	cmpltu	r13,r13,r17
  20cfe0:	1349c83a 	sub	r4,r2,r13
  20cfe4:	5825883a 	mov	r18,r11
  20cfe8:	003e5c06 	br	20c95c <__subdf3+0x15c>
  20cfec:	380a977a 	slli	r5,r7,29
  20cff0:	380ed0fa 	srli	r7,r7,3
  20cff4:	403fcf26 	beq	r8,zero,20cf34 <__subdf3+0x734>
  20cff8:	00c80034 	movhi	r3,8192
  20cffc:	18ffffc4 	addi	r3,r3,-1
  20d000:	20c8703a 	and	r4,r4,r3
  20d004:	3a00022c 	andhi	r8,r7,8
  20d008:	2148b03a 	or	r4,r4,r5
  20d00c:	40000826 	beq	r8,zero,20d030 <__subdf3+0x830>
  20d010:	100ad0fa 	srli	r5,r2,3
  20d014:	2a00022c 	andhi	r8,r5,8
  20d018:	4000051e 	bne	r8,zero,20d030 <__subdf3+0x830>
  20d01c:	1004977a 	slli	r2,r2,29
  20d020:	30c6703a 	and	r3,r6,r3
  20d024:	5825883a 	mov	r18,r11
  20d028:	1888b03a 	or	r4,r3,r2
  20d02c:	280f883a 	mov	r7,r5
  20d030:	380e90fa 	slli	r7,r7,3
  20d034:	2005883a 	mov	r2,r4
  20d038:	380ed0fa 	srli	r7,r7,3
  20d03c:	003f0806 	br	20cc60 <__subdf3+0x460>
  20d040:	100a977a 	slli	r5,r2,29
  20d044:	00c80034 	movhi	r3,8192
  20d048:	18ffffc4 	addi	r3,r3,-1
  20d04c:	30c6703a 	and	r3,r6,r3
  20d050:	1010d0fa 	srli	r8,r2,3
  20d054:	28c4b03a 	or	r2,r5,r3
  20d058:	003ebb06 	br	20cb48 <__subdf3+0x348>
  20d05c:	7363883a 	add	r17,r14,r13
  20d060:	3885883a 	add	r2,r7,r2
  20d064:	8b9d803a 	cmpltu	r14,r17,r14
  20d068:	1389883a 	add	r4,r2,r14
  20d06c:	2080202c 	andhi	r2,r4,128
  20d070:	103eac26 	beq	r2,zero,20cb24 <__subdf3+0x324>
  20d074:	00bfe034 	movhi	r2,65408
  20d078:	10bfffc4 	addi	r2,r2,-1
  20d07c:	2088703a 	and	r4,r4,r2
  20d080:	04000044 	movi	r16,1
  20d084:	003ea706 	br	20cb24 <__subdf3+0x324>
  20d088:	50fff804 	addi	r3,r10,-32
  20d08c:	51000820 	cmpeqi	r4,r10,32
  20d090:	38c6d83a 	srl	r3,r7,r3
  20d094:	2000041e 	bne	r4,zero,20d0a8 <__subdf3+0x8a8>
  20d098:	01001004 	movi	r4,64
  20d09c:	2295c83a 	sub	r10,r4,r10
  20d0a0:	3a8e983a 	sll	r7,r7,r10
  20d0a4:	71dcb03a 	or	r14,r14,r7
  20d0a8:	7022c03a 	cmpne	r17,r14,zero
  20d0ac:	88e2b03a 	or	r17,r17,r3
  20d0b0:	003ed906 	br	20cc18 <__subdf3+0x418>
  20d0b4:	7363883a 	add	r17,r14,r13
  20d0b8:	3885883a 	add	r2,r7,r2
  20d0bc:	8b5b803a 	cmpltu	r13,r17,r13
  20d0c0:	1349883a 	add	r4,r2,r13
  20d0c4:	003f7006 	br	20ce88 <__subdf3+0x688>
  20d0c8:	0005883a 	mov	r2,zero
  20d0cc:	0025883a 	mov	r18,zero
  20d0d0:	003e9d06 	br	20cb48 <__subdf3+0x348>
  20d0d4:	8904b03a 	or	r2,r17,r4
  20d0d8:	103f1126 	beq	r2,zero,20cd20 <__subdf3+0x520>
  20d0dc:	003e9106 	br	20cb24 <__subdf3+0x324>
  20d0e0:	01c00434 	movhi	r7,16
  20d0e4:	00bfffc4 	movi	r2,-1
  20d0e8:	39ffffc4 	addi	r7,r7,-1
  20d0ec:	0025883a 	mov	r18,zero
  20d0f0:	003edd06 	br	20cc68 <__subdf3+0x468>
  20d0f4:	0005883a 	mov	r2,zero
  20d0f8:	0401ffc4 	movi	r16,2047
  20d0fc:	0007883a 	mov	r3,zero
  20d100:	003e2d06 	br	20c9b8 <__subdf3+0x1b8>
  20d104:	400f883a 	mov	r7,r8
  20d108:	003ed506 	br	20cc60 <__subdf3+0x460>

0020d10c <__unorddf2>:
  20d10c:	2806d53a 	srli	r3,r5,20
  20d110:	3810d53a 	srli	r8,r7,20
  20d114:	02400434 	movhi	r9,16
  20d118:	18c1ffcc 	andi	r3,r3,2047
  20d11c:	4a7fffc4 	addi	r9,r9,-1
  20d120:	18c1ffd8 	cmpnei	r3,r3,2047
  20d124:	2a4a703a 	and	r5,r5,r9
  20d128:	3a4e703a 	and	r7,r7,r9
  20d12c:	4201ffcc 	andi	r8,r8,2047
  20d130:	18000426 	beq	r3,zero,20d144 <__unorddf2+0x38>
  20d134:	4201ffd8 	cmpnei	r8,r8,2047
  20d138:	40000626 	beq	r8,zero,20d154 <__unorddf2+0x48>
  20d13c:	0005883a 	mov	r2,zero
  20d140:	f800283a 	ret
  20d144:	290ab03a 	or	r5,r5,r4
  20d148:	283ffa26 	beq	r5,zero,20d134 <__unorddf2+0x28>
  20d14c:	00800044 	movi	r2,1
  20d150:	f800283a 	ret
  20d154:	398eb03a 	or	r7,r7,r6
  20d158:	3804c03a 	cmpne	r2,r7,zero
  20d15c:	f800283a 	ret

0020d160 <__fixdfsi>:
  20d160:	2806d53a 	srli	r3,r5,20
  20d164:	01800434 	movhi	r6,16
  20d168:	31bfffc4 	addi	r6,r6,-1
  20d16c:	18c1ffcc 	andi	r3,r3,2047
  20d170:	19c0ffd0 	cmplti	r7,r3,1023
  20d174:	2810d7fa 	srli	r8,r5,31
  20d178:	298a703a 	and	r5,r5,r6
  20d17c:	3800061e 	bne	r7,zero,20d198 <__fixdfsi+0x38>
  20d180:	18810790 	cmplti	r2,r3,1054
  20d184:	1000061e 	bne	r2,zero,20d1a0 <__fixdfsi+0x40>
  20d188:	00a00034 	movhi	r2,32768
  20d18c:	10bfffc4 	addi	r2,r2,-1
  20d190:	4085883a 	add	r2,r8,r2
  20d194:	f800283a 	ret
  20d198:	0005883a 	mov	r2,zero
  20d19c:	f800283a 	ret
  20d1a0:	01810cc4 	movi	r6,1075
  20d1a4:	30cdc83a 	sub	r6,r6,r3
  20d1a8:	30800808 	cmpgei	r2,r6,32
  20d1ac:	29400434 	orhi	r5,r5,16
  20d1b0:	1000071e 	bne	r2,zero,20d1d0 <__fixdfsi+0x70>
  20d1b4:	18befb44 	addi	r2,r3,-1043
  20d1b8:	2884983a 	sll	r2,r5,r2
  20d1bc:	2188d83a 	srl	r4,r4,r6
  20d1c0:	1104b03a 	or	r2,r2,r4
  20d1c4:	403ff526 	beq	r8,zero,20d19c <__fixdfsi+0x3c>
  20d1c8:	0085c83a 	sub	r2,zero,r2
  20d1cc:	f800283a 	ret
  20d1d0:	008104c4 	movi	r2,1043
  20d1d4:	10c5c83a 	sub	r2,r2,r3
  20d1d8:	2884d83a 	srl	r2,r5,r2
  20d1dc:	003ff906 	br	20d1c4 <__fixdfsi+0x64>

0020d1e0 <__floatsidf>:
  20d1e0:	defffd04 	addi	sp,sp,-12
  20d1e4:	dfc00215 	stw	ra,8(sp)
  20d1e8:	dc400115 	stw	r17,4(sp)
  20d1ec:	dc000015 	stw	r16,0(sp)
  20d1f0:	20001326 	beq	r4,zero,20d240 <__floatsidf+0x60>
  20d1f4:	2022d7fa 	srli	r17,r4,31
  20d1f8:	2021883a 	mov	r16,r4
  20d1fc:	20002416 	blt	r4,zero,20d290 <__floatsidf+0xb0>
  20d200:	8009883a 	mov	r4,r16
  20d204:	020d3280 	call	20d328 <__clzsi2>
  20d208:	01010784 	movi	r4,1054
  20d20c:	2089c83a 	sub	r4,r4,r2
  20d210:	114002c8 	cmpgei	r5,r2,11
  20d214:	20c1ffcc 	andi	r3,r4,2047
  20d218:	2800161e 	bne	r5,zero,20d274 <__floatsidf+0x94>
  20d21c:	010002c4 	movi	r4,11
  20d220:	2089c83a 	sub	r4,r4,r2
  20d224:	810ad83a 	srl	r5,r16,r4
  20d228:	01000434 	movhi	r4,16
  20d22c:	10800544 	addi	r2,r2,21
  20d230:	213fffc4 	addi	r4,r4,-1
  20d234:	8084983a 	sll	r2,r16,r2
  20d238:	290a703a 	and	r5,r5,r4
  20d23c:	00000406 	br	20d250 <__floatsidf+0x70>
  20d240:	0023883a 	mov	r17,zero
  20d244:	0007883a 	mov	r3,zero
  20d248:	000b883a 	mov	r5,zero
  20d24c:	0005883a 	mov	r2,zero
  20d250:	1808953a 	slli	r4,r3,20
  20d254:	880697fa 	slli	r3,r17,31
  20d258:	2148b03a 	or	r4,r4,r5
  20d25c:	20c6b03a 	or	r3,r4,r3
  20d260:	dfc00217 	ldw	ra,8(sp)
  20d264:	dc400117 	ldw	r17,4(sp)
  20d268:	dc000017 	ldw	r16,0(sp)
  20d26c:	dec00304 	addi	sp,sp,12
  20d270:	f800283a 	ret
  20d274:	10bffd44 	addi	r2,r2,-11
  20d278:	808a983a 	sll	r5,r16,r2
  20d27c:	00800434 	movhi	r2,16
  20d280:	10bfffc4 	addi	r2,r2,-1
  20d284:	288a703a 	and	r5,r5,r2
  20d288:	0005883a 	mov	r2,zero
  20d28c:	003ff006 	br	20d250 <__floatsidf+0x70>
  20d290:	0121c83a 	sub	r16,zero,r4
  20d294:	003fda06 	br	20d200 <__floatsidf+0x20>

0020d298 <__floatunsidf>:
  20d298:	defffe04 	addi	sp,sp,-8
  20d29c:	dc000015 	stw	r16,0(sp)
  20d2a0:	dfc00115 	stw	ra,4(sp)
  20d2a4:	2021883a 	mov	r16,r4
  20d2a8:	20000f26 	beq	r4,zero,20d2e8 <__floatunsidf+0x50>
  20d2ac:	020d3280 	call	20d328 <__clzsi2>
  20d2b0:	00c10784 	movi	r3,1054
  20d2b4:	1887c83a 	sub	r3,r3,r2
  20d2b8:	110002c8 	cmpgei	r4,r2,11
  20d2bc:	18c1ffcc 	andi	r3,r3,2047
  20d2c0:	2000121e 	bne	r4,zero,20d30c <__floatunsidf+0x74>
  20d2c4:	014002c4 	movi	r5,11
  20d2c8:	288bc83a 	sub	r5,r5,r2
  20d2cc:	814ad83a 	srl	r5,r16,r5
  20d2d0:	01000434 	movhi	r4,16
  20d2d4:	10800544 	addi	r2,r2,21
  20d2d8:	213fffc4 	addi	r4,r4,-1
  20d2dc:	80a0983a 	sll	r16,r16,r2
  20d2e0:	290a703a 	and	r5,r5,r4
  20d2e4:	00000206 	br	20d2f0 <__floatunsidf+0x58>
  20d2e8:	0007883a 	mov	r3,zero
  20d2ec:	000b883a 	mov	r5,zero
  20d2f0:	1806953a 	slli	r3,r3,20
  20d2f4:	8005883a 	mov	r2,r16
  20d2f8:	1946b03a 	or	r3,r3,r5
  20d2fc:	dfc00117 	ldw	ra,4(sp)
  20d300:	dc000017 	ldw	r16,0(sp)
  20d304:	dec00204 	addi	sp,sp,8
  20d308:	f800283a 	ret
  20d30c:	117ffd44 	addi	r5,r2,-11
  20d310:	814a983a 	sll	r5,r16,r5
  20d314:	00800434 	movhi	r2,16
  20d318:	10bfffc4 	addi	r2,r2,-1
  20d31c:	288a703a 	and	r5,r5,r2
  20d320:	0021883a 	mov	r16,zero
  20d324:	003ff206 	br	20d2f0 <__floatunsidf+0x58>

0020d328 <__clzsi2>:
  20d328:	00bfffd4 	movui	r2,65535
  20d32c:	11000436 	bltu	r2,r4,20d340 <__clzsi2+0x18>
  20d330:	20804030 	cmpltui	r2,r4,256
  20d334:	10000e26 	beq	r2,zero,20d370 <__clzsi2+0x48>
  20d338:	01400804 	movi	r5,32
  20d33c:	00000406 	br	20d350 <__clzsi2+0x28>
  20d340:	00804034 	movhi	r2,256
  20d344:	20800736 	bltu	r4,r2,20d364 <__clzsi2+0x3c>
  20d348:	2008d63a 	srli	r4,r4,24
  20d34c:	01400204 	movi	r5,8
  20d350:	00c00874 	movhi	r3,33
  20d354:	20c7883a 	add	r3,r4,r3
  20d358:	18807b03 	ldbu	r2,492(r3)
  20d35c:	2885c83a 	sub	r2,r5,r2
  20d360:	f800283a 	ret
  20d364:	2008d43a 	srli	r4,r4,16
  20d368:	01400404 	movi	r5,16
  20d36c:	003ff806 	br	20d350 <__clzsi2+0x28>
  20d370:	2008d23a 	srli	r4,r4,8
  20d374:	01400604 	movi	r5,24
  20d378:	003ff506 	br	20d350 <__clzsi2+0x28>

0020d37c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  20d37c:	defffe04 	addi	sp,sp,-8
  20d380:	dfc00115 	stw	ra,4(sp)
  20d384:	df000015 	stw	fp,0(sp)
  20d388:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  20d38c:	d0a00917 	ldw	r2,-32732(gp)
  20d390:	10000326 	beq	r2,zero,20d3a0 <alt_get_errno+0x24>
  20d394:	d0a00917 	ldw	r2,-32732(gp)
  20d398:	103ee83a 	callr	r2
  20d39c:	00000106 	br	20d3a4 <alt_get_errno+0x28>
  20d3a0:	d0a70704 	addi	r2,gp,-25572
}
  20d3a4:	e037883a 	mov	sp,fp
  20d3a8:	dfc00117 	ldw	ra,4(sp)
  20d3ac:	df000017 	ldw	fp,0(sp)
  20d3b0:	dec00204 	addi	sp,sp,8
  20d3b4:	f800283a 	ret

0020d3b8 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
  20d3b8:	defffb04 	addi	sp,sp,-20
  20d3bc:	dfc00415 	stw	ra,16(sp)
  20d3c0:	df000315 	stw	fp,12(sp)
  20d3c4:	df000304 	addi	fp,sp,12
  20d3c8:	e13ffd15 	stw	r4,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
  20d3cc:	e0bffd17 	ldw	r2,-12(fp)
  20d3d0:	10000916 	blt	r2,zero,20d3f8 <close+0x40>
  20d3d4:	e0fffd17 	ldw	r3,-12(fp)
  20d3d8:	1805883a 	mov	r2,r3
  20d3dc:	1085883a 	add	r2,r2,r2
  20d3e0:	10c5883a 	add	r2,r2,r3
  20d3e4:	100490ba 	slli	r2,r2,2
  20d3e8:	00c00874 	movhi	r3,33
  20d3ec:	18c33804 	addi	r3,r3,3296
  20d3f0:	10c5883a 	add	r2,r2,r3
  20d3f4:	00000106 	br	20d3fc <close+0x44>
  20d3f8:	0005883a 	mov	r2,zero
  20d3fc:	e0bfff15 	stw	r2,-4(fp)

  if (fd)
  20d400:	e0bfff17 	ldw	r2,-4(fp)
  20d404:	10001926 	beq	r2,zero,20d46c <close+0xb4>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
  20d408:	e0bfff17 	ldw	r2,-4(fp)
  20d40c:	10800017 	ldw	r2,0(r2)
  20d410:	10800417 	ldw	r2,16(r2)
  20d414:	10000626 	beq	r2,zero,20d430 <close+0x78>
  20d418:	e0bfff17 	ldw	r2,-4(fp)
  20d41c:	10800017 	ldw	r2,0(r2)
  20d420:	10800417 	ldw	r2,16(r2)
  20d424:	e13fff17 	ldw	r4,-4(fp)
  20d428:	103ee83a 	callr	r2
  20d42c:	00000106 	br	20d434 <close+0x7c>
  20d430:	0005883a 	mov	r2,zero
  20d434:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
  20d438:	e13ffd17 	ldw	r4,-12(fp)
  20d43c:	020dc740 	call	20dc74 <alt_release_fd>
    if (rval < 0)
  20d440:	e0bffe17 	ldw	r2,-8(fp)
  20d444:	1000070e 	bge	r2,zero,20d464 <close+0xac>
    {
      ALT_ERRNO = -rval;
  20d448:	020d37c0 	call	20d37c <alt_get_errno>
  20d44c:	1007883a 	mov	r3,r2
  20d450:	e0bffe17 	ldw	r2,-8(fp)
  20d454:	0085c83a 	sub	r2,zero,r2
  20d458:	18800015 	stw	r2,0(r3)
      return -1;
  20d45c:	00bfffc4 	movi	r2,-1
  20d460:	00000706 	br	20d480 <close+0xc8>
    }
    return 0;
  20d464:	0005883a 	mov	r2,zero
  20d468:	00000506 	br	20d480 <close+0xc8>
  }
  else
  {
    ALT_ERRNO = EBADFD;
  20d46c:	020d37c0 	call	20d37c <alt_get_errno>
  20d470:	1007883a 	mov	r3,r2
  20d474:	00801444 	movi	r2,81
  20d478:	18800015 	stw	r2,0(r3)
    return -1;
  20d47c:	00bfffc4 	movi	r2,-1
  }
}
  20d480:	e037883a 	mov	sp,fp
  20d484:	dfc00117 	ldw	ra,4(sp)
  20d488:	df000017 	ldw	fp,0(sp)
  20d48c:	dec00204 	addi	sp,sp,8
  20d490:	f800283a 	ret

0020d494 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
  20d494:	defffc04 	addi	sp,sp,-16
  20d498:	df000315 	stw	fp,12(sp)
  20d49c:	df000304 	addi	fp,sp,12
  20d4a0:	e13fff15 	stw	r4,-4(fp)
  20d4a4:	e17ffe15 	stw	r5,-8(fp)
  20d4a8:	e1bffd15 	stw	r6,-12(fp)
  return len;
  20d4ac:	e0bffd17 	ldw	r2,-12(fp)
}
  20d4b0:	e037883a 	mov	sp,fp
  20d4b4:	df000017 	ldw	fp,0(sp)
  20d4b8:	dec00104 	addi	sp,sp,4
  20d4bc:	f800283a 	ret

0020d4c0 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
  20d4c0:	defffd04 	addi	sp,sp,-12
  20d4c4:	df000215 	stw	fp,8(sp)
  20d4c8:	df000204 	addi	fp,sp,8
  20d4cc:	e13ffe15 	stw	r4,-8(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
  20d4d0:	0001883a 	nop
  20d4d4:	e0bffe17 	ldw	r2,-8(fp)
  20d4d8:	e0bfff15 	stw	r2,-4(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
  20d4dc:	e0bfff17 	ldw	r2,-4(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
  20d4e0:	10000226 	beq	r2,zero,20d4ec <_exit+0x2c>
    ALT_SIM_FAIL();
  20d4e4:	002af070 	cmpltui	zero,zero,43969
  } else {
    ALT_SIM_PASS();
  }
#endif /* DEBUG_STUB */
}
  20d4e8:	00000106 	br	20d4f0 <_exit+0x30>
    ALT_SIM_PASS();
  20d4ec:	002af0b0 	cmpltui	zero,zero,43970
}
  20d4f0:	0001883a 	nop
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
  20d4f4:	003fff06 	br	20d4f4 <_exit+0x34>

0020d4f8 <alt_get_errno>:
{
  20d4f8:	defffe04 	addi	sp,sp,-8
  20d4fc:	dfc00115 	stw	ra,4(sp)
  20d500:	df000015 	stw	fp,0(sp)
  20d504:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  20d508:	d0a00917 	ldw	r2,-32732(gp)
  20d50c:	10000326 	beq	r2,zero,20d51c <alt_get_errno+0x24>
  20d510:	d0a00917 	ldw	r2,-32732(gp)
  20d514:	103ee83a 	callr	r2
  20d518:	00000106 	br	20d520 <alt_get_errno+0x28>
  20d51c:	d0a70704 	addi	r2,gp,-25572
}
  20d520:	e037883a 	mov	sp,fp
  20d524:	dfc00117 	ldw	ra,4(sp)
  20d528:	df000017 	ldw	fp,0(sp)
  20d52c:	dec00204 	addi	sp,sp,8
  20d530:	f800283a 	ret

0020d534 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
  20d534:	defffb04 	addi	sp,sp,-20
  20d538:	dfc00415 	stw	ra,16(sp)
  20d53c:	df000315 	stw	fp,12(sp)
  20d540:	df000304 	addi	fp,sp,12
  20d544:	e13ffe15 	stw	r4,-8(fp)
  20d548:	e17ffd15 	stw	r5,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  20d54c:	e0bffe17 	ldw	r2,-8(fp)
  20d550:	10000916 	blt	r2,zero,20d578 <fstat+0x44>
  20d554:	e0fffe17 	ldw	r3,-8(fp)
  20d558:	1805883a 	mov	r2,r3
  20d55c:	1085883a 	add	r2,r2,r2
  20d560:	10c5883a 	add	r2,r2,r3
  20d564:	100490ba 	slli	r2,r2,2
  20d568:	00c00874 	movhi	r3,33
  20d56c:	18c33804 	addi	r3,r3,3296
  20d570:	10c5883a 	add	r2,r2,r3
  20d574:	00000106 	br	20d57c <fstat+0x48>
  20d578:	0005883a 	mov	r2,zero
  20d57c:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
  20d580:	e0bfff17 	ldw	r2,-4(fp)
  20d584:	10001026 	beq	r2,zero,20d5c8 <fstat+0x94>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
  20d588:	e0bfff17 	ldw	r2,-4(fp)
  20d58c:	10800017 	ldw	r2,0(r2)
  20d590:	10800817 	ldw	r2,32(r2)
  20d594:	10000726 	beq	r2,zero,20d5b4 <fstat+0x80>
    {
      return fd->dev->fstat(fd, st);
  20d598:	e0bfff17 	ldw	r2,-4(fp)
  20d59c:	10800017 	ldw	r2,0(r2)
  20d5a0:	10800817 	ldw	r2,32(r2)
  20d5a4:	e17ffd17 	ldw	r5,-12(fp)
  20d5a8:	e13fff17 	ldw	r4,-4(fp)
  20d5ac:	103ee83a 	callr	r2
  20d5b0:	00000a06 	br	20d5dc <fstat+0xa8>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
  20d5b4:	e0bffd17 	ldw	r2,-12(fp)
  20d5b8:	00c80004 	movi	r3,8192
  20d5bc:	10c00115 	stw	r3,4(r2)
      return 0;
  20d5c0:	0005883a 	mov	r2,zero
  20d5c4:	00000506 	br	20d5dc <fstat+0xa8>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
  20d5c8:	020d4f80 	call	20d4f8 <alt_get_errno>
  20d5cc:	1007883a 	mov	r3,r2
  20d5d0:	00801444 	movi	r2,81
  20d5d4:	18800015 	stw	r2,0(r3)
    return -1;
  20d5d8:	00bfffc4 	movi	r2,-1
  }
}
  20d5dc:	e037883a 	mov	sp,fp
  20d5e0:	dfc00117 	ldw	ra,4(sp)
  20d5e4:	df000017 	ldw	fp,0(sp)
  20d5e8:	dec00204 	addi	sp,sp,8
  20d5ec:	f800283a 	ret

0020d5f0 <getpid>:
 *
 * ALT_GETPID is mapped onto the getpid() system call in alt_syscall.h
 */
 
int ALT_GETPID (void)
{
  20d5f0:	deffff04 	addi	sp,sp,-4
  20d5f4:	df000015 	stw	fp,0(sp)
  20d5f8:	d839883a 	mov	fp,sp
  return 0;
  20d5fc:	0005883a 	mov	r2,zero
}
  20d600:	e037883a 	mov	sp,fp
  20d604:	df000017 	ldw	fp,0(sp)
  20d608:	dec00104 	addi	sp,sp,4
  20d60c:	f800283a 	ret

0020d610 <alt_get_errno>:
{
  20d610:	defffe04 	addi	sp,sp,-8
  20d614:	dfc00115 	stw	ra,4(sp)
  20d618:	df000015 	stw	fp,0(sp)
  20d61c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  20d620:	d0a00917 	ldw	r2,-32732(gp)
  20d624:	10000326 	beq	r2,zero,20d634 <alt_get_errno+0x24>
  20d628:	d0a00917 	ldw	r2,-32732(gp)
  20d62c:	103ee83a 	callr	r2
  20d630:	00000106 	br	20d638 <alt_get_errno+0x28>
  20d634:	d0a70704 	addi	r2,gp,-25572
}
  20d638:	e037883a 	mov	sp,fp
  20d63c:	dfc00117 	ldw	ra,4(sp)
  20d640:	df000017 	ldw	fp,0(sp)
  20d644:	dec00204 	addi	sp,sp,8
  20d648:	f800283a 	ret

0020d64c <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
  20d64c:	deffea04 	addi	sp,sp,-88
  20d650:	dfc01515 	stw	ra,84(sp)
  20d654:	df001415 	stw	fp,80(sp)
  20d658:	df001404 	addi	fp,sp,80
  20d65c:	e13fec15 	stw	r4,-80(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  20d660:	e0bfec17 	ldw	r2,-80(fp)
  20d664:	10000916 	blt	r2,zero,20d68c <isatty+0x40>
  20d668:	e0ffec17 	ldw	r3,-80(fp)
  20d66c:	1805883a 	mov	r2,r3
  20d670:	1085883a 	add	r2,r2,r2
  20d674:	10c5883a 	add	r2,r2,r3
  20d678:	100490ba 	slli	r2,r2,2
  20d67c:	00c00874 	movhi	r3,33
  20d680:	18c33804 	addi	r3,r3,3296
  20d684:	10c5883a 	add	r2,r2,r3
  20d688:	00000106 	br	20d690 <isatty+0x44>
  20d68c:	0005883a 	mov	r2,zero
  20d690:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
  20d694:	e0bfff17 	ldw	r2,-4(fp)
  20d698:	10000e26 	beq	r2,zero,20d6d4 <isatty+0x88>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
  20d69c:	e0bfff17 	ldw	r2,-4(fp)
  20d6a0:	10800017 	ldw	r2,0(r2)
  20d6a4:	10800817 	ldw	r2,32(r2)
  20d6a8:	1000021e 	bne	r2,zero,20d6b4 <isatty+0x68>
    {
      return 1;
  20d6ac:	00800044 	movi	r2,1
  20d6b0:	00000d06 	br	20d6e8 <isatty+0x9c>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
  20d6b4:	e0bfed04 	addi	r2,fp,-76
  20d6b8:	100b883a 	mov	r5,r2
  20d6bc:	e13fec17 	ldw	r4,-80(fp)
  20d6c0:	020d5340 	call	20d534 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
  20d6c4:	e0bfee17 	ldw	r2,-72(fp)
  20d6c8:	10880020 	cmpeqi	r2,r2,8192
  20d6cc:	10803fcc 	andi	r2,r2,255
  20d6d0:	00000506 	br	20d6e8 <isatty+0x9c>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
  20d6d4:	020d6100 	call	20d610 <alt_get_errno>
  20d6d8:	1007883a 	mov	r3,r2
  20d6dc:	00801444 	movi	r2,81
  20d6e0:	18800015 	stw	r2,0(r3)
    return 0;
  20d6e4:	0005883a 	mov	r2,zero
  }
}
  20d6e8:	e037883a 	mov	sp,fp
  20d6ec:	dfc00117 	ldw	ra,4(sp)
  20d6f0:	df000017 	ldw	fp,0(sp)
  20d6f4:	dec00204 	addi	sp,sp,8
  20d6f8:	f800283a 	ret

0020d6fc <alt_get_errno>:
{
  20d6fc:	defffe04 	addi	sp,sp,-8
  20d700:	dfc00115 	stw	ra,4(sp)
  20d704:	df000015 	stw	fp,0(sp)
  20d708:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  20d70c:	d0a00917 	ldw	r2,-32732(gp)
  20d710:	10000326 	beq	r2,zero,20d720 <alt_get_errno+0x24>
  20d714:	d0a00917 	ldw	r2,-32732(gp)
  20d718:	103ee83a 	callr	r2
  20d71c:	00000106 	br	20d724 <alt_get_errno+0x28>
  20d720:	d0a70704 	addi	r2,gp,-25572
}
  20d724:	e037883a 	mov	sp,fp
  20d728:	dfc00117 	ldw	ra,4(sp)
  20d72c:	df000017 	ldw	fp,0(sp)
  20d730:	dec00204 	addi	sp,sp,8
  20d734:	f800283a 	ret

0020d738 <kill>:
 *
 * ALT_KILL is mapped onto the kill() system call in alt_syscall.h
 */

int ALT_KILL (int pid, int sig)
{
  20d738:	defffb04 	addi	sp,sp,-20
  20d73c:	dfc00415 	stw	ra,16(sp)
  20d740:	df000315 	stw	fp,12(sp)
  20d744:	df000304 	addi	fp,sp,12
  20d748:	e13ffe15 	stw	r4,-8(fp)
  20d74c:	e17ffd15 	stw	r5,-12(fp)
  int status = 0;
  20d750:	e03fff15 	stw	zero,-4(fp)

  if (pid <= 0)
  20d754:	e0bffe17 	ldw	r2,-8(fp)
  20d758:	00802e16 	blt	zero,r2,20d814 <kill+0xdc>
  {
    switch (sig)
  20d75c:	e0bffd17 	ldw	r2,-12(fp)
  20d760:	10800828 	cmpgeui	r2,r2,32
  20d764:	1000281e 	bne	r2,zero,20d808 <kill+0xd0>
  20d768:	e0bffd17 	ldw	r2,-12(fp)
  20d76c:	100690ba 	slli	r3,r2,2
  20d770:	00800874 	movhi	r2,33
  20d774:	1885883a 	add	r2,r3,r2
  20d778:	10b5e017 	ldw	r2,-10368(r2)
  20d77c:	1000683a 	jmp	r2
  20d780:	0020d828 	cmpgeui	zero,zero,33632
  20d784:	0020d808 	cmpgei	zero,zero,-31904
  20d788:	0020d808 	cmpgei	zero,zero,-31904
  20d78c:	0020d800 	call	20d80 <__reset-0x1df280>
  20d790:	0020d800 	call	20d80 <__reset-0x1df280>
  20d794:	0020d800 	call	20d80 <__reset-0x1df280>
  20d798:	0020d800 	call	20d80 <__reset-0x1df280>
  20d79c:	0020d808 	cmpgei	zero,zero,-31904
  20d7a0:	0020d800 	call	20d80 <__reset-0x1df280>
  20d7a4:	0020d800 	call	20d80 <__reset-0x1df280>
  20d7a8:	0020d800 	call	20d80 <__reset-0x1df280>
  20d7ac:	0020d800 	call	20d80 <__reset-0x1df280>
  20d7b0:	0020d800 	call	20d80 <__reset-0x1df280>
  20d7b4:	0020d800 	call	20d80 <__reset-0x1df280>
  20d7b8:	0020d800 	call	20d80 <__reset-0x1df280>
  20d7bc:	0020d800 	call	20d80 <__reset-0x1df280>
  20d7c0:	0020d828 	cmpgeui	zero,zero,33632
  20d7c4:	0020d808 	cmpgei	zero,zero,-31904
  20d7c8:	0020d808 	cmpgei	zero,zero,-31904
  20d7cc:	0020d808 	cmpgei	zero,zero,-31904
  20d7d0:	0020d828 	cmpgeui	zero,zero,33632
  20d7d4:	0020d808 	cmpgei	zero,zero,-31904
  20d7d8:	0020d808 	cmpgei	zero,zero,-31904
  20d7dc:	0020d800 	call	20d80 <__reset-0x1df280>
  20d7e0:	0020d800 	call	20d80 <__reset-0x1df280>
  20d7e4:	0020d800 	call	20d80 <__reset-0x1df280>
  20d7e8:	0020d800 	call	20d80 <__reset-0x1df280>
  20d7ec:	0020d800 	call	20d80 <__reset-0x1df280>
  20d7f0:	0020d808 	cmpgei	zero,zero,-31904
  20d7f4:	0020d808 	cmpgei	zero,zero,-31904
  20d7f8:	0020d800 	call	20d80 <__reset-0x1df280>
  20d7fc:	0020d800 	call	20d80 <__reset-0x1df280>
       * The Posix standard defines the default behaviour for all these signals 
       * as being eqivalent to a call to _exit(). No mechanism is provided to 
       * change this behaviour.
       */

      _exit(0);
  20d800:	0009883a 	mov	r4,zero
  20d804:	020d4c00 	call	20d4c0 <_exit>
      break;
    default:

      /* Tried to send an unsupported signal */

      status = EINVAL;
  20d808:	00800584 	movi	r2,22
  20d80c:	e0bfff15 	stw	r2,-4(fp)
  20d810:	00000606 	br	20d82c <kill+0xf4>
    }
  }

  else if (pid > 0)
  20d814:	e0bffe17 	ldw	r2,-8(fp)
  20d818:	0080040e 	bge	zero,r2,20d82c <kill+0xf4>
  {
    /* Attempted to signal a non-existant process */

    status = ESRCH;
  20d81c:	008000c4 	movi	r2,3
  20d820:	e0bfff15 	stw	r2,-4(fp)
  20d824:	00000106 	br	20d82c <kill+0xf4>
      break;
  20d828:	0001883a 	nop
  }

  if (status)
  20d82c:	e0bfff17 	ldw	r2,-4(fp)
  20d830:	10000626 	beq	r2,zero,20d84c <kill+0x114>
  {
    ALT_ERRNO = status;
  20d834:	020d6fc0 	call	20d6fc <alt_get_errno>
  20d838:	1007883a 	mov	r3,r2
  20d83c:	e0bfff17 	ldw	r2,-4(fp)
  20d840:	18800015 	stw	r2,0(r3)
    return -1;
  20d844:	00bfffc4 	movi	r2,-1
  20d848:	00000106 	br	20d850 <kill+0x118>
  }

  return 0;
  20d84c:	0005883a 	mov	r2,zero
}
  20d850:	e037883a 	mov	sp,fp
  20d854:	dfc00117 	ldw	ra,4(sp)
  20d858:	df000017 	ldw	fp,0(sp)
  20d85c:	dec00204 	addi	sp,sp,8
  20d860:	f800283a 	ret

0020d864 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
  20d864:	defffc04 	addi	sp,sp,-16
  20d868:	df000315 	stw	fp,12(sp)
  20d86c:	df000304 	addi	fp,sp,12
  20d870:	e13fff15 	stw	r4,-4(fp)
  20d874:	e17ffe15 	stw	r5,-8(fp)
  20d878:	e1bffd15 	stw	r6,-12(fp)
  if (to != from)
  20d87c:	e0fffe17 	ldw	r3,-8(fp)
  20d880:	e0bfff17 	ldw	r2,-4(fp)
  20d884:	18800c26 	beq	r3,r2,20d8b8 <alt_load_section+0x54>
  {
    while( to != end )
  20d888:	00000806 	br	20d8ac <alt_load_section+0x48>
    {
      *to++ = *from++;
  20d88c:	e0ffff17 	ldw	r3,-4(fp)
  20d890:	18800104 	addi	r2,r3,4
  20d894:	e0bfff15 	stw	r2,-4(fp)
  20d898:	e0bffe17 	ldw	r2,-8(fp)
  20d89c:	11000104 	addi	r4,r2,4
  20d8a0:	e13ffe15 	stw	r4,-8(fp)
  20d8a4:	18c00017 	ldw	r3,0(r3)
  20d8a8:	10c00015 	stw	r3,0(r2)
    while( to != end )
  20d8ac:	e0fffe17 	ldw	r3,-8(fp)
  20d8b0:	e0bffd17 	ldw	r2,-12(fp)
  20d8b4:	18bff51e 	bne	r3,r2,20d88c <alt_load_section+0x28>
    }
  }
}
  20d8b8:	0001883a 	nop
  20d8bc:	e037883a 	mov	sp,fp
  20d8c0:	df000017 	ldw	fp,0(sp)
  20d8c4:	dec00104 	addi	sp,sp,4
  20d8c8:	f800283a 	ret

0020d8cc <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
  20d8cc:	defffe04 	addi	sp,sp,-8
  20d8d0:	dfc00115 	stw	ra,4(sp)
  20d8d4:	df000015 	stw	fp,0(sp)
  20d8d8:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
  20d8dc:	01800874 	movhi	r6,33
  20d8e0:	3187be04 	addi	r6,r6,7928
  20d8e4:	01400874 	movhi	r5,33
  20d8e8:	2940c804 	addi	r5,r5,800
  20d8ec:	01000874 	movhi	r4,33
  20d8f0:	2107be04 	addi	r4,r4,7928
  20d8f4:	020d8640 	call	20d864 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
  20d8f8:	01800834 	movhi	r6,32
  20d8fc:	31808904 	addi	r6,r6,548
  20d900:	01400834 	movhi	r5,32
  20d904:	29400804 	addi	r5,r5,32
  20d908:	01000834 	movhi	r4,32
  20d90c:	21000804 	addi	r4,r4,32
  20d910:	020d8640 	call	20d864 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
  20d914:	01800874 	movhi	r6,33
  20d918:	3180c804 	addi	r6,r6,800
  20d91c:	01400874 	movhi	r5,33
  20d920:	297f2204 	addi	r5,r5,-888
  20d924:	01000874 	movhi	r4,33
  20d928:	213f2204 	addi	r4,r4,-888
  20d92c:	020d8640 	call	20d864 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
  20d930:	020ecf00 	call	20ecf0 <alt_dcache_flush_all>
  alt_icache_flush_all();
  20d934:	020eebc0 	call	20eebc <alt_icache_flush_all>
}
  20d938:	0001883a 	nop
  20d93c:	e037883a 	mov	sp,fp
  20d940:	dfc00117 	ldw	ra,4(sp)
  20d944:	df000017 	ldw	fp,0(sp)
  20d948:	dec00204 	addi	sp,sp,8
  20d94c:	f800283a 	ret

0020d950 <alt_get_errno>:
{
  20d950:	defffe04 	addi	sp,sp,-8
  20d954:	dfc00115 	stw	ra,4(sp)
  20d958:	df000015 	stw	fp,0(sp)
  20d95c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  20d960:	d0a00917 	ldw	r2,-32732(gp)
  20d964:	10000326 	beq	r2,zero,20d974 <alt_get_errno+0x24>
  20d968:	d0a00917 	ldw	r2,-32732(gp)
  20d96c:	103ee83a 	callr	r2
  20d970:	00000106 	br	20d978 <alt_get_errno+0x28>
  20d974:	d0a70704 	addi	r2,gp,-25572
}
  20d978:	e037883a 	mov	sp,fp
  20d97c:	dfc00117 	ldw	ra,4(sp)
  20d980:	df000017 	ldw	fp,0(sp)
  20d984:	dec00204 	addi	sp,sp,8
  20d988:	f800283a 	ret

0020d98c <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
  20d98c:	defff904 	addi	sp,sp,-28
  20d990:	dfc00615 	stw	ra,24(sp)
  20d994:	df000515 	stw	fp,20(sp)
  20d998:	df000504 	addi	fp,sp,20
  20d99c:	e13ffd15 	stw	r4,-12(fp)
  20d9a0:	e17ffc15 	stw	r5,-16(fp)
  20d9a4:	e1bffb15 	stw	r6,-20(fp)
  alt_fd* fd;
  off_t   rc = 0; 
  20d9a8:	e03fff15 	stw	zero,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  20d9ac:	e0bffd17 	ldw	r2,-12(fp)
  20d9b0:	10000916 	blt	r2,zero,20d9d8 <lseek+0x4c>
  20d9b4:	e0fffd17 	ldw	r3,-12(fp)
  20d9b8:	1805883a 	mov	r2,r3
  20d9bc:	1085883a 	add	r2,r2,r2
  20d9c0:	10c5883a 	add	r2,r2,r3
  20d9c4:	100490ba 	slli	r2,r2,2
  20d9c8:	00c00874 	movhi	r3,33
  20d9cc:	18c33804 	addi	r3,r3,3296
  20d9d0:	10c5883a 	add	r2,r2,r3
  20d9d4:	00000106 	br	20d9dc <lseek+0x50>
  20d9d8:	0005883a 	mov	r2,zero
  20d9dc:	e0bffe15 	stw	r2,-8(fp)
  
  if (fd) 
  20d9e0:	e0bffe17 	ldw	r2,-8(fp)
  20d9e4:	10001026 	beq	r2,zero,20da28 <lseek+0x9c>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
  20d9e8:	e0bffe17 	ldw	r2,-8(fp)
  20d9ec:	10800017 	ldw	r2,0(r2)
  20d9f0:	10800717 	ldw	r2,28(r2)
  20d9f4:	10000926 	beq	r2,zero,20da1c <lseek+0x90>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
  20d9f8:	e0bffe17 	ldw	r2,-8(fp)
  20d9fc:	10800017 	ldw	r2,0(r2)
  20da00:	10800717 	ldw	r2,28(r2)
  20da04:	e1bffb17 	ldw	r6,-20(fp)
  20da08:	e17ffc17 	ldw	r5,-16(fp)
  20da0c:	e13ffe17 	ldw	r4,-8(fp)
  20da10:	103ee83a 	callr	r2
  20da14:	e0bfff15 	stw	r2,-4(fp)
  20da18:	00000506 	br	20da30 <lseek+0xa4>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
  20da1c:	00bfde84 	movi	r2,-134
  20da20:	e0bfff15 	stw	r2,-4(fp)
  20da24:	00000206 	br	20da30 <lseek+0xa4>
    }
  }
  else  
  {
    rc = -EBADFD;
  20da28:	00bfebc4 	movi	r2,-81
  20da2c:	e0bfff15 	stw	r2,-4(fp)
  }

  if (rc < 0)
  20da30:	e0bfff17 	ldw	r2,-4(fp)
  20da34:	1000070e 	bge	r2,zero,20da54 <lseek+0xc8>
  {
    ALT_ERRNO = -rc;
  20da38:	020d9500 	call	20d950 <alt_get_errno>
  20da3c:	1007883a 	mov	r3,r2
  20da40:	e0bfff17 	ldw	r2,-4(fp)
  20da44:	0085c83a 	sub	r2,zero,r2
  20da48:	18800015 	stw	r2,0(r3)
    rc = -1;
  20da4c:	00bfffc4 	movi	r2,-1
  20da50:	e0bfff15 	stw	r2,-4(fp)
  }

  return rc;
  20da54:	e0bfff17 	ldw	r2,-4(fp)
}
  20da58:	e037883a 	mov	sp,fp
  20da5c:	dfc00117 	ldw	ra,4(sp)
  20da60:	df000017 	ldw	fp,0(sp)
  20da64:	dec00204 	addi	sp,sp,8
  20da68:	f800283a 	ret

0020da6c <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
  20da6c:	defffd04 	addi	sp,sp,-12
  20da70:	dfc00215 	stw	ra,8(sp)
  20da74:	df000115 	stw	fp,4(sp)
  20da78:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
  20da7c:	0009883a 	mov	r4,zero
  20da80:	020df400 	call	20df40 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
  20da84:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
  20da88:	020df7c0 	call	20df7c <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
  20da8c:	01800874 	movhi	r6,33
  20da90:	3180be04 	addi	r6,r6,760
  20da94:	01400874 	movhi	r5,33
  20da98:	2940be04 	addi	r5,r5,760
  20da9c:	01000874 	movhi	r4,33
  20daa0:	2100be04 	addi	r4,r4,760
  20daa4:	020f2480 	call	20f248 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
  20daa8:	020edf40 	call	20edf4 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
  20daac:	01000874 	movhi	r4,33
  20dab0:	213b9604 	addi	r4,r4,-4520
  20dab4:	020fa180 	call	20fa18 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
  20dab8:	d0a70917 	ldw	r2,-25564(gp)
  20dabc:	d0e70a17 	ldw	r3,-25560(gp)
  20dac0:	d1270b17 	ldw	r4,-25556(gp)
  20dac4:	200d883a 	mov	r6,r4
  20dac8:	180b883a 	mov	r5,r3
  20dacc:	1009883a 	mov	r4,r2
  20dad0:	02002600 	call	200260 <main>
  20dad4:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
  20dad8:	01000044 	movi	r4,1
  20dadc:	020d3b80 	call	20d3b8 <close>
  exit (result);
  20dae0:	e13fff17 	ldw	r4,-4(fp)
  20dae4:	020fa2c0 	call	20fa2c <exit>

0020dae8 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
  20dae8:	defffe04 	addi	sp,sp,-8
  20daec:	df000115 	stw	fp,4(sp)
  20daf0:	df000104 	addi	fp,sp,4
  20daf4:	e13fff15 	stw	r4,-4(fp)
}
  20daf8:	0001883a 	nop
  20dafc:	e037883a 	mov	sp,fp
  20db00:	df000017 	ldw	fp,0(sp)
  20db04:	dec00104 	addi	sp,sp,4
  20db08:	f800283a 	ret

0020db0c <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
  20db0c:	defffe04 	addi	sp,sp,-8
  20db10:	df000115 	stw	fp,4(sp)
  20db14:	df000104 	addi	fp,sp,4
  20db18:	e13fff15 	stw	r4,-4(fp)
}
  20db1c:	0001883a 	nop
  20db20:	e037883a 	mov	sp,fp
  20db24:	df000017 	ldw	fp,0(sp)
  20db28:	dec00104 	addi	sp,sp,4
  20db2c:	f800283a 	ret

0020db30 <alt_get_errno>:
{
  20db30:	defffe04 	addi	sp,sp,-8
  20db34:	dfc00115 	stw	ra,4(sp)
  20db38:	df000015 	stw	fp,0(sp)
  20db3c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  20db40:	d0a00917 	ldw	r2,-32732(gp)
  20db44:	10000326 	beq	r2,zero,20db54 <alt_get_errno+0x24>
  20db48:	d0a00917 	ldw	r2,-32732(gp)
  20db4c:	103ee83a 	callr	r2
  20db50:	00000106 	br	20db58 <alt_get_errno+0x28>
  20db54:	d0a70704 	addi	r2,gp,-25572
}
  20db58:	e037883a 	mov	sp,fp
  20db5c:	dfc00117 	ldw	ra,4(sp)
  20db60:	df000017 	ldw	fp,0(sp)
  20db64:	dec00204 	addi	sp,sp,8
  20db68:	f800283a 	ret

0020db6c <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
  20db6c:	defff904 	addi	sp,sp,-28
  20db70:	dfc00615 	stw	ra,24(sp)
  20db74:	df000515 	stw	fp,20(sp)
  20db78:	df000504 	addi	fp,sp,20
  20db7c:	e13ffd15 	stw	r4,-12(fp)
  20db80:	e17ffc15 	stw	r5,-16(fp)
  20db84:	e1bffb15 	stw	r6,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  20db88:	e0bffd17 	ldw	r2,-12(fp)
  20db8c:	10000916 	blt	r2,zero,20dbb4 <read+0x48>
  20db90:	e0fffd17 	ldw	r3,-12(fp)
  20db94:	1805883a 	mov	r2,r3
  20db98:	1085883a 	add	r2,r2,r2
  20db9c:	10c5883a 	add	r2,r2,r3
  20dba0:	100490ba 	slli	r2,r2,2
  20dba4:	00c00874 	movhi	r3,33
  20dba8:	18c33804 	addi	r3,r3,3296
  20dbac:	10c5883a 	add	r2,r2,r3
  20dbb0:	00000106 	br	20dbb8 <read+0x4c>
  20dbb4:	0005883a 	mov	r2,zero
  20dbb8:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
  20dbbc:	e0bfff17 	ldw	r2,-4(fp)
  20dbc0:	10002226 	beq	r2,zero,20dc4c <read+0xe0>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
  20dbc4:	e0bfff17 	ldw	r2,-4(fp)
  20dbc8:	10800217 	ldw	r2,8(r2)
  20dbcc:	108000cc 	andi	r2,r2,3
  20dbd0:	10800060 	cmpeqi	r2,r2,1
  20dbd4:	1000181e 	bne	r2,zero,20dc38 <read+0xcc>
        (fd->dev->read))
  20dbd8:	e0bfff17 	ldw	r2,-4(fp)
  20dbdc:	10800017 	ldw	r2,0(r2)
  20dbe0:	10800517 	ldw	r2,20(r2)
    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
  20dbe4:	10001426 	beq	r2,zero,20dc38 <read+0xcc>
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
  20dbe8:	e0bfff17 	ldw	r2,-4(fp)
  20dbec:	10800017 	ldw	r2,0(r2)
  20dbf0:	10800517 	ldw	r2,20(r2)
  20dbf4:	e0fffb17 	ldw	r3,-20(fp)
  20dbf8:	180d883a 	mov	r6,r3
  20dbfc:	e17ffc17 	ldw	r5,-16(fp)
  20dc00:	e13fff17 	ldw	r4,-4(fp)
  20dc04:	103ee83a 	callr	r2
  20dc08:	e0bffe15 	stw	r2,-8(fp)
  20dc0c:	e0bffe17 	ldw	r2,-8(fp)
  20dc10:	1000070e 	bge	r2,zero,20dc30 <read+0xc4>
        {
          ALT_ERRNO = -rval;
  20dc14:	020db300 	call	20db30 <alt_get_errno>
  20dc18:	1007883a 	mov	r3,r2
  20dc1c:	e0bffe17 	ldw	r2,-8(fp)
  20dc20:	0085c83a 	sub	r2,zero,r2
  20dc24:	18800015 	stw	r2,0(r3)
          return -1;
  20dc28:	00bfffc4 	movi	r2,-1
  20dc2c:	00000c06 	br	20dc60 <read+0xf4>
        }
        return rval;
  20dc30:	e0bffe17 	ldw	r2,-8(fp)
  20dc34:	00000a06 	br	20dc60 <read+0xf4>
      }
      else
      {
        ALT_ERRNO = EACCES;
  20dc38:	020db300 	call	20db30 <alt_get_errno>
  20dc3c:	1007883a 	mov	r3,r2
  20dc40:	00800344 	movi	r2,13
  20dc44:	18800015 	stw	r2,0(r3)
  20dc48:	00000406 	br	20dc5c <read+0xf0>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
  20dc4c:	020db300 	call	20db30 <alt_get_errno>
  20dc50:	1007883a 	mov	r3,r2
  20dc54:	00801444 	movi	r2,81
  20dc58:	18800015 	stw	r2,0(r3)
  }
  return -1;
  20dc5c:	00bfffc4 	movi	r2,-1
}
  20dc60:	e037883a 	mov	sp,fp
  20dc64:	dfc00117 	ldw	ra,4(sp)
  20dc68:	df000017 	ldw	fp,0(sp)
  20dc6c:	dec00204 	addi	sp,sp,8
  20dc70:	f800283a 	ret

0020dc74 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
  20dc74:	defffe04 	addi	sp,sp,-8
  20dc78:	df000115 	stw	fp,4(sp)
  20dc7c:	df000104 	addi	fp,sp,4
  20dc80:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
  20dc84:	e0bfff17 	ldw	r2,-4(fp)
  20dc88:	108000d0 	cmplti	r2,r2,3
  20dc8c:	1000101e 	bne	r2,zero,20dcd0 <alt_release_fd+0x5c>
  {
    alt_fd_list[fd].fd_flags = 0;
  20dc90:	e0ffff17 	ldw	r3,-4(fp)
  20dc94:	1805883a 	mov	r2,r3
  20dc98:	1085883a 	add	r2,r2,r2
  20dc9c:	10c5883a 	add	r2,r2,r3
  20dca0:	100490ba 	slli	r2,r2,2
  20dca4:	00c00874 	movhi	r3,33
  20dca8:	10c7883a 	add	r3,r2,r3
  20dcac:	18033a15 	stw	zero,3304(r3)
    alt_fd_list[fd].dev      = 0;
  20dcb0:	e0ffff17 	ldw	r3,-4(fp)
  20dcb4:	1805883a 	mov	r2,r3
  20dcb8:	1085883a 	add	r2,r2,r2
  20dcbc:	10c5883a 	add	r2,r2,r3
  20dcc0:	100490ba 	slli	r2,r2,2
  20dcc4:	00c00874 	movhi	r3,33
  20dcc8:	10c7883a 	add	r3,r2,r3
  20dccc:	18033815 	stw	zero,3296(r3)
  }
}
  20dcd0:	0001883a 	nop
  20dcd4:	e037883a 	mov	sp,fp
  20dcd8:	df000017 	ldw	fp,0(sp)
  20dcdc:	dec00104 	addi	sp,sp,4
  20dce0:	f800283a 	ret

0020dce4 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
  20dce4:	defff904 	addi	sp,sp,-28
  20dce8:	df000615 	stw	fp,24(sp)
  20dcec:	df000604 	addi	fp,sp,24
  20dcf0:	e13ffa15 	stw	r4,-24(fp)
  NIOS2_READ_STATUS (context);
  20dcf4:	0005303a 	rdctl	r2,status
  20dcf8:	e0bffd15 	stw	r2,-12(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  20dcfc:	e0fffd17 	ldw	r3,-12(fp)
  20dd00:	00bfff84 	movi	r2,-2
  20dd04:	1884703a 	and	r2,r3,r2
  20dd08:	1001703a 	wrctl	status,r2
  return context;
  20dd0c:	e0bffd17 	ldw	r2,-12(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
  20dd10:	e0bfff15 	stw	r2,-4(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
  20dd14:	d0a00a17 	ldw	r2,-32728(gp)
  20dd18:	10c000c4 	addi	r3,r2,3
  20dd1c:	00bfff04 	movi	r2,-4
  20dd20:	1884703a 	and	r2,r3,r2
  20dd24:	d0a00a15 	stw	r2,-32728(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
  20dd28:	d0e00a17 	ldw	r3,-32728(gp)
  20dd2c:	e0bffa17 	ldw	r2,-24(fp)
  20dd30:	1887883a 	add	r3,r3,r2
  20dd34:	008008f4 	movhi	r2,35
  20dd38:	10836804 	addi	r2,r2,3488
  20dd3c:	10c0072e 	bgeu	r2,r3,20dd5c <sbrk+0x78>
  20dd40:	e0bfff17 	ldw	r2,-4(fp)
  20dd44:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context);
  20dd48:	e0bffc17 	ldw	r2,-16(fp)
  20dd4c:	1001703a 	wrctl	status,r2
}
  20dd50:	0001883a 	nop
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  20dd54:	00bfffc4 	movi	r2,-1
  20dd58:	00000c06 	br	20dd8c <sbrk+0xa8>
  }
#endif

  prev_heap_end = heap_end; 
  20dd5c:	d0a00a17 	ldw	r2,-32728(gp)
  20dd60:	e0bffe15 	stw	r2,-8(fp)
  heap_end += incr; 
  20dd64:	d0e00a17 	ldw	r3,-32728(gp)
  20dd68:	e0bffa17 	ldw	r2,-24(fp)
  20dd6c:	1885883a 	add	r2,r3,r2
  20dd70:	d0a00a15 	stw	r2,-32728(gp)
  20dd74:	e0bfff17 	ldw	r2,-4(fp)
  20dd78:	e0bffb15 	stw	r2,-20(fp)
  NIOS2_WRITE_STATUS (context);
  20dd7c:	e0bffb17 	ldw	r2,-20(fp)
  20dd80:	1001703a 	wrctl	status,r2
}
  20dd84:	0001883a 	nop

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
  20dd88:	e0bffe17 	ldw	r2,-8(fp)
} 
  20dd8c:	e037883a 	mov	sp,fp
  20dd90:	df000017 	ldw	fp,0(sp)
  20dd94:	dec00104 	addi	sp,sp,4
  20dd98:	f800283a 	ret

0020dd9c <usleep>:
#if defined (__GNUC__) && __GNUC__ >= 4
int ALT_USLEEP (useconds_t us)
#else
unsigned int ALT_USLEEP (unsigned int us)
#endif
{
  20dd9c:	defffd04 	addi	sp,sp,-12
  20dda0:	dfc00215 	stw	ra,8(sp)
  20dda4:	df000115 	stw	fp,4(sp)
  20dda8:	df000104 	addi	fp,sp,4
  20ddac:	e13fff15 	stw	r4,-4(fp)
  return alt_busy_sleep(us);
  20ddb0:	e13fff17 	ldw	r4,-4(fp)
  20ddb4:	020eb980 	call	20eb98 <alt_busy_sleep>
}
  20ddb8:	e037883a 	mov	sp,fp
  20ddbc:	dfc00117 	ldw	ra,4(sp)
  20ddc0:	df000017 	ldw	fp,0(sp)
  20ddc4:	dec00204 	addi	sp,sp,8
  20ddc8:	f800283a 	ret

0020ddcc <alt_get_errno>:
{
  20ddcc:	defffe04 	addi	sp,sp,-8
  20ddd0:	dfc00115 	stw	ra,4(sp)
  20ddd4:	df000015 	stw	fp,0(sp)
  20ddd8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  20dddc:	d0a00917 	ldw	r2,-32732(gp)
  20dde0:	10000326 	beq	r2,zero,20ddf0 <alt_get_errno+0x24>
  20dde4:	d0a00917 	ldw	r2,-32732(gp)
  20dde8:	103ee83a 	callr	r2
  20ddec:	00000106 	br	20ddf4 <alt_get_errno+0x28>
  20ddf0:	d0a70704 	addi	r2,gp,-25572
}
  20ddf4:	e037883a 	mov	sp,fp
  20ddf8:	dfc00117 	ldw	ra,4(sp)
  20ddfc:	df000017 	ldw	fp,0(sp)
  20de00:	dec00204 	addi	sp,sp,8
  20de04:	f800283a 	ret

0020de08 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
  20de08:	defff904 	addi	sp,sp,-28
  20de0c:	dfc00615 	stw	ra,24(sp)
  20de10:	df000515 	stw	fp,20(sp)
  20de14:	df000504 	addi	fp,sp,20
  20de18:	e13ffd15 	stw	r4,-12(fp)
  20de1c:	e17ffc15 	stw	r5,-16(fp)
  20de20:	e1bffb15 	stw	r6,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  20de24:	e0bffd17 	ldw	r2,-12(fp)
  20de28:	10000916 	blt	r2,zero,20de50 <write+0x48>
  20de2c:	e0fffd17 	ldw	r3,-12(fp)
  20de30:	1805883a 	mov	r2,r3
  20de34:	1085883a 	add	r2,r2,r2
  20de38:	10c5883a 	add	r2,r2,r3
  20de3c:	100490ba 	slli	r2,r2,2
  20de40:	00c00874 	movhi	r3,33
  20de44:	18c33804 	addi	r3,r3,3296
  20de48:	10c5883a 	add	r2,r2,r3
  20de4c:	00000106 	br	20de54 <write+0x4c>
  20de50:	0005883a 	mov	r2,zero
  20de54:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
  20de58:	e0bfff17 	ldw	r2,-4(fp)
  20de5c:	10002126 	beq	r2,zero,20dee4 <write+0xdc>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
  20de60:	e0bfff17 	ldw	r2,-4(fp)
  20de64:	10800217 	ldw	r2,8(r2)
  20de68:	108000cc 	andi	r2,r2,3
  20de6c:	10001826 	beq	r2,zero,20ded0 <write+0xc8>
  20de70:	e0bfff17 	ldw	r2,-4(fp)
  20de74:	10800017 	ldw	r2,0(r2)
  20de78:	10800617 	ldw	r2,24(r2)
  20de7c:	10001426 	beq	r2,zero,20ded0 <write+0xc8>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
  20de80:	e0bfff17 	ldw	r2,-4(fp)
  20de84:	10800017 	ldw	r2,0(r2)
  20de88:	10800617 	ldw	r2,24(r2)
  20de8c:	e0fffb17 	ldw	r3,-20(fp)
  20de90:	180d883a 	mov	r6,r3
  20de94:	e17ffc17 	ldw	r5,-16(fp)
  20de98:	e13fff17 	ldw	r4,-4(fp)
  20de9c:	103ee83a 	callr	r2
  20dea0:	e0bffe15 	stw	r2,-8(fp)
  20dea4:	e0bffe17 	ldw	r2,-8(fp)
  20dea8:	1000070e 	bge	r2,zero,20dec8 <write+0xc0>
      {
        ALT_ERRNO = -rval;
  20deac:	020ddcc0 	call	20ddcc <alt_get_errno>
  20deb0:	1007883a 	mov	r3,r2
  20deb4:	e0bffe17 	ldw	r2,-8(fp)
  20deb8:	0085c83a 	sub	r2,zero,r2
  20debc:	18800015 	stw	r2,0(r3)
        return -1;
  20dec0:	00bfffc4 	movi	r2,-1
  20dec4:	00000c06 	br	20def8 <write+0xf0>
      }
      return rval;
  20dec8:	e0bffe17 	ldw	r2,-8(fp)
  20decc:	00000a06 	br	20def8 <write+0xf0>
    }
    else
    {
      ALT_ERRNO = EACCES;
  20ded0:	020ddcc0 	call	20ddcc <alt_get_errno>
  20ded4:	1007883a 	mov	r3,r2
  20ded8:	00800344 	movi	r2,13
  20dedc:	18800015 	stw	r2,0(r3)
  20dee0:	00000406 	br	20def4 <write+0xec>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
  20dee4:	020ddcc0 	call	20ddcc <alt_get_errno>
  20dee8:	1007883a 	mov	r3,r2
  20deec:	00801444 	movi	r2,81
  20def0:	18800015 	stw	r2,0(r3)
  }
  return -1;
  20def4:	00bfffc4 	movi	r2,-1
}
  20def8:	e037883a 	mov	sp,fp
  20defc:	dfc00117 	ldw	ra,4(sp)
  20df00:	df000017 	ldw	fp,0(sp)
  20df04:	dec00204 	addi	sp,sp,8
  20df08:	f800283a 	ret

0020df0c <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
  20df0c:	defffd04 	addi	sp,sp,-12
  20df10:	dfc00215 	stw	ra,8(sp)
  20df14:	df000115 	stw	fp,4(sp)
  20df18:	df000104 	addi	fp,sp,4
  20df1c:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
  20df20:	d1600604 	addi	r5,gp,-32744
  20df24:	e13fff17 	ldw	r4,-4(fp)
  20df28:	020ed4c0 	call	20ed4c <alt_dev_llist_insert>
}
  20df2c:	e037883a 	mov	sp,fp
  20df30:	dfc00117 	ldw	ra,4(sp)
  20df34:	df000017 	ldw	fp,0(sp)
  20df38:	dec00204 	addi	sp,sp,8
  20df3c:	f800283a 	ret

0020df40 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
  20df40:	defffd04 	addi	sp,sp,-12
  20df44:	dfc00215 	stw	ra,8(sp)
  20df48:	df000115 	stw	fp,4(sp)
  20df4c:	df000104 	addi	fp,sp,4
  20df50:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( NIOS2_GEN2_0, nios2_gen2_0);
  20df54:	020f70c0 	call	20f70c <altera_nios2_gen2_irq_init>
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
  20df58:	00800044 	movi	r2,1
  20df5c:	1001703a 	wrctl	status,r2
}
  20df60:	0001883a 	nop
    alt_irq_cpu_enable_interrupts();
}
  20df64:	0001883a 	nop
  20df68:	e037883a 	mov	sp,fp
  20df6c:	dfc00117 	ldw	ra,4(sp)
  20df70:	df000017 	ldw	fp,0(sp)
  20df74:	dec00204 	addi	sp,sp,8
  20df78:	f800283a 	ret

0020df7c <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
  20df7c:	defffe04 	addi	sp,sp,-8
  20df80:	dfc00115 	stw	ra,4(sp)
  20df84:	df000015 	stw	fp,0(sp)
  20df88:	d839883a 	mov	fp,sp
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART_0, jtag_uart_0);
  20df8c:	000d883a 	mov	r6,zero
  20df90:	000b883a 	mov	r5,zero
  20df94:	01000874 	movhi	r4,33
  20df98:	2103a204 	addi	r4,r4,3720
  20df9c:	020e1280 	call	20e128 <altera_avalon_jtag_uart_init>
  20dfa0:	01000874 	movhi	r4,33
  20dfa4:	21039804 	addi	r4,r4,3680
  20dfa8:	020df0c0 	call	20df0c <alt_dev_reg>
}
  20dfac:	0001883a 	nop
  20dfb0:	e037883a 	mov	sp,fp
  20dfb4:	dfc00117 	ldw	ra,4(sp)
  20dfb8:	df000017 	ldw	fp,0(sp)
  20dfbc:	dec00204 	addi	sp,sp,8
  20dfc0:	f800283a 	ret

0020dfc4 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
  20dfc4:	defffa04 	addi	sp,sp,-24
  20dfc8:	dfc00515 	stw	ra,20(sp)
  20dfcc:	df000415 	stw	fp,16(sp)
  20dfd0:	df000404 	addi	fp,sp,16
  20dfd4:	e13ffe15 	stw	r4,-8(fp)
  20dfd8:	e17ffd15 	stw	r5,-12(fp)
  20dfdc:	e1bffc15 	stw	r6,-16(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
  20dfe0:	e0bffe17 	ldw	r2,-8(fp)
  20dfe4:	10800017 	ldw	r2,0(r2)
  20dfe8:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
  20dfec:	e0bfff17 	ldw	r2,-4(fp)
  20dff0:	10c00a04 	addi	r3,r2,40
  20dff4:	e0bffe17 	ldw	r2,-8(fp)
  20dff8:	10800217 	ldw	r2,8(r2)
  20dffc:	100f883a 	mov	r7,r2
  20e000:	e1bffc17 	ldw	r6,-16(fp)
  20e004:	e17ffd17 	ldw	r5,-12(fp)
  20e008:	1809883a 	mov	r4,r3
  20e00c:	020e5f00 	call	20e5f0 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
  20e010:	e037883a 	mov	sp,fp
  20e014:	dfc00117 	ldw	ra,4(sp)
  20e018:	df000017 	ldw	fp,0(sp)
  20e01c:	dec00204 	addi	sp,sp,8
  20e020:	f800283a 	ret

0020e024 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
  20e024:	defffa04 	addi	sp,sp,-24
  20e028:	dfc00515 	stw	ra,20(sp)
  20e02c:	df000415 	stw	fp,16(sp)
  20e030:	df000404 	addi	fp,sp,16
  20e034:	e13ffe15 	stw	r4,-8(fp)
  20e038:	e17ffd15 	stw	r5,-12(fp)
  20e03c:	e1bffc15 	stw	r6,-16(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
  20e040:	e0bffe17 	ldw	r2,-8(fp)
  20e044:	10800017 	ldw	r2,0(r2)
  20e048:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
  20e04c:	e0bfff17 	ldw	r2,-4(fp)
  20e050:	10c00a04 	addi	r3,r2,40
  20e054:	e0bffe17 	ldw	r2,-8(fp)
  20e058:	10800217 	ldw	r2,8(r2)
  20e05c:	100f883a 	mov	r7,r2
  20e060:	e1bffc17 	ldw	r6,-16(fp)
  20e064:	e17ffd17 	ldw	r5,-12(fp)
  20e068:	1809883a 	mov	r4,r3
  20e06c:	020e8100 	call	20e810 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
  20e070:	e037883a 	mov	sp,fp
  20e074:	dfc00117 	ldw	ra,4(sp)
  20e078:	df000017 	ldw	fp,0(sp)
  20e07c:	dec00204 	addi	sp,sp,8
  20e080:	f800283a 	ret

0020e084 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
  20e084:	defffc04 	addi	sp,sp,-16
  20e088:	dfc00315 	stw	ra,12(sp)
  20e08c:	df000215 	stw	fp,8(sp)
  20e090:	df000204 	addi	fp,sp,8
  20e094:	e13ffe15 	stw	r4,-8(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
  20e098:	e0bffe17 	ldw	r2,-8(fp)
  20e09c:	10800017 	ldw	r2,0(r2)
  20e0a0:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
  20e0a4:	e0bfff17 	ldw	r2,-4(fp)
  20e0a8:	10c00a04 	addi	r3,r2,40
  20e0ac:	e0bffe17 	ldw	r2,-8(fp)
  20e0b0:	10800217 	ldw	r2,8(r2)
  20e0b4:	100b883a 	mov	r5,r2
  20e0b8:	1809883a 	mov	r4,r3
  20e0bc:	020e4940 	call	20e494 <altera_avalon_jtag_uart_close>
}
  20e0c0:	e037883a 	mov	sp,fp
  20e0c4:	dfc00117 	ldw	ra,4(sp)
  20e0c8:	df000017 	ldw	fp,0(sp)
  20e0cc:	dec00204 	addi	sp,sp,8
  20e0d0:	f800283a 	ret

0020e0d4 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
  20e0d4:	defffa04 	addi	sp,sp,-24
  20e0d8:	dfc00515 	stw	ra,20(sp)
  20e0dc:	df000415 	stw	fp,16(sp)
  20e0e0:	df000404 	addi	fp,sp,16
  20e0e4:	e13ffe15 	stw	r4,-8(fp)
  20e0e8:	e17ffd15 	stw	r5,-12(fp)
  20e0ec:	e1bffc15 	stw	r6,-16(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
  20e0f0:	e0bffe17 	ldw	r2,-8(fp)
  20e0f4:	10800017 	ldw	r2,0(r2)
  20e0f8:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
  20e0fc:	e0bfff17 	ldw	r2,-4(fp)
  20e100:	10800a04 	addi	r2,r2,40
  20e104:	e1bffc17 	ldw	r6,-16(fp)
  20e108:	e17ffd17 	ldw	r5,-12(fp)
  20e10c:	1009883a 	mov	r4,r2
  20e110:	020e4fc0 	call	20e4fc <altera_avalon_jtag_uart_ioctl>
}
  20e114:	e037883a 	mov	sp,fp
  20e118:	dfc00117 	ldw	ra,4(sp)
  20e11c:	df000017 	ldw	fp,0(sp)
  20e120:	dec00204 	addi	sp,sp,8
  20e124:	f800283a 	ret

0020e128 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
  20e128:	defffa04 	addi	sp,sp,-24
  20e12c:	dfc00515 	stw	ra,20(sp)
  20e130:	df000415 	stw	fp,16(sp)
  20e134:	df000404 	addi	fp,sp,16
  20e138:	e13fff15 	stw	r4,-4(fp)
  20e13c:	e17ffe15 	stw	r5,-8(fp)
  20e140:	e1bffd15 	stw	r6,-12(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
  20e144:	e0bfff17 	ldw	r2,-4(fp)
  20e148:	00c00044 	movi	r3,1
  20e14c:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
  20e150:	e0bfff17 	ldw	r2,-4(fp)
  20e154:	10800017 	ldw	r2,0(r2)
  20e158:	10800104 	addi	r2,r2,4
  20e15c:	1007883a 	mov	r3,r2
  20e160:	e0bfff17 	ldw	r2,-4(fp)
  20e164:	10800817 	ldw	r2,32(r2)
  20e168:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
  20e16c:	e0bffe17 	ldw	r2,-8(fp)
  20e170:	e0fffd17 	ldw	r3,-12(fp)
  20e174:	d8000015 	stw	zero,0(sp)
  20e178:	e1ffff17 	ldw	r7,-4(fp)
  20e17c:	01800874 	movhi	r6,33
  20e180:	31b87a04 	addi	r6,r6,-7704
  20e184:	180b883a 	mov	r5,r3
  20e188:	1009883a 	mov	r4,r2
  20e18c:	020eedc0 	call	20eedc <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
  20e190:	e0bfff17 	ldw	r2,-4(fp)
  20e194:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
  20e198:	e0bfff17 	ldw	r2,-4(fp)
  20e19c:	10800204 	addi	r2,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
  20e1a0:	d0e70d17 	ldw	r3,-25548(gp)
  20e1a4:	e1ffff17 	ldw	r7,-4(fp)
  20e1a8:	01800874 	movhi	r6,33
  20e1ac:	31b8fd04 	addi	r6,r6,-7180
  20e1b0:	180b883a 	mov	r5,r3
  20e1b4:	1009883a 	mov	r4,r2
  20e1b8:	020ea380 	call	20ea38 <alt_alarm_start>
  20e1bc:	1000040e 	bge	r2,zero,20e1d0 <altera_avalon_jtag_uart_init+0xa8>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
  20e1c0:	e0ffff17 	ldw	r3,-4(fp)
  20e1c4:	00a00034 	movhi	r2,32768
  20e1c8:	10bfffc4 	addi	r2,r2,-1
  20e1cc:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
  20e1d0:	0001883a 	nop
  20e1d4:	e037883a 	mov	sp,fp
  20e1d8:	dfc00117 	ldw	ra,4(sp)
  20e1dc:	df000017 	ldw	fp,0(sp)
  20e1e0:	dec00204 	addi	sp,sp,8
  20e1e4:	f800283a 	ret

0020e1e8 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
  20e1e8:	defff804 	addi	sp,sp,-32
  20e1ec:	df000715 	stw	fp,28(sp)
  20e1f0:	df000704 	addi	fp,sp,28
  20e1f4:	e13ff915 	stw	r4,-28(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
  20e1f8:	e0bff917 	ldw	r2,-28(fp)
  20e1fc:	e0bffd15 	stw	r2,-12(fp)
  unsigned int base = sp->base;
  20e200:	e0bffd17 	ldw	r2,-12(fp)
  20e204:	10800017 	ldw	r2,0(r2)
  20e208:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
  20e20c:	e0bffc17 	ldw	r2,-16(fp)
  20e210:	10800104 	addi	r2,r2,4
  20e214:	10800037 	ldwio	r2,0(r2)
  20e218:	e0bffb15 	stw	r2,-20(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
  20e21c:	e0bffb17 	ldw	r2,-20(fp)
  20e220:	1080c00c 	andi	r2,r2,768
  20e224:	10006d26 	beq	r2,zero,20e3dc <altera_avalon_jtag_uart_irq+0x1f4>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
  20e228:	e0bffb17 	ldw	r2,-20(fp)
  20e22c:	1080400c 	andi	r2,r2,256
  20e230:	10003526 	beq	r2,zero,20e308 <altera_avalon_jtag_uart_irq+0x120>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
  20e234:	00800074 	movhi	r2,1
  20e238:	e0bfff15 	stw	r2,-4(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  20e23c:	e0bffd17 	ldw	r2,-12(fp)
  20e240:	10800a17 	ldw	r2,40(r2)
  20e244:	10800044 	addi	r2,r2,1
  20e248:	1081ffcc 	andi	r2,r2,2047
  20e24c:	e0bffa15 	stw	r2,-24(fp)
        if (next == sp->rx_out)
  20e250:	e0bffd17 	ldw	r2,-12(fp)
  20e254:	10800b17 	ldw	r2,44(r2)
  20e258:	e0fffa17 	ldw	r3,-24(fp)
  20e25c:	18801526 	beq	r3,r2,20e2b4 <altera_avalon_jtag_uart_irq+0xcc>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
  20e260:	e0bffc17 	ldw	r2,-16(fp)
  20e264:	10800037 	ldwio	r2,0(r2)
  20e268:	e0bfff15 	stw	r2,-4(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
  20e26c:	e0bfff17 	ldw	r2,-4(fp)
  20e270:	10a0000c 	andi	r2,r2,32768
  20e274:	10001126 	beq	r2,zero,20e2bc <altera_avalon_jtag_uart_irq+0xd4>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
  20e278:	e0bffd17 	ldw	r2,-12(fp)
  20e27c:	10800a17 	ldw	r2,40(r2)
  20e280:	e0ffff17 	ldw	r3,-4(fp)
  20e284:	1809883a 	mov	r4,r3
  20e288:	e0fffd17 	ldw	r3,-12(fp)
  20e28c:	1885883a 	add	r2,r3,r2
  20e290:	11000e05 	stb	r4,56(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  20e294:	e0bffd17 	ldw	r2,-12(fp)
  20e298:	10800a17 	ldw	r2,40(r2)
  20e29c:	10800044 	addi	r2,r2,1
  20e2a0:	10c1ffcc 	andi	r3,r2,2047
  20e2a4:	e0bffd17 	ldw	r2,-12(fp)
  20e2a8:	10c00a15 	stw	r3,40(r2)
 * HAL.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_no_error (void)
{
  return 0;
  20e2ac:	0001883a 	nop
      {
  20e2b0:	003fe206 	br	20e23c <altera_avalon_jtag_uart_irq+0x54>
          break;
  20e2b4:	0001883a 	nop
  20e2b8:	00000106 	br	20e2c0 <altera_avalon_jtag_uart_irq+0xd8>
          break;
  20e2bc:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
  20e2c0:	e0bfff17 	ldw	r2,-4(fp)
  20e2c4:	10bfffec 	andhi	r2,r2,65535
  20e2c8:	10000f26 	beq	r2,zero,20e308 <altera_avalon_jtag_uart_irq+0x120>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
  20e2cc:	e0bffd17 	ldw	r2,-12(fp)
  20e2d0:	10c00817 	ldw	r3,32(r2)
  20e2d4:	00bfff84 	movi	r2,-2
  20e2d8:	1886703a 	and	r3,r3,r2
  20e2dc:	e0bffd17 	ldw	r2,-12(fp)
  20e2e0:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
  20e2e4:	e0bffc17 	ldw	r2,-16(fp)
  20e2e8:	10800104 	addi	r2,r2,4
  20e2ec:	1007883a 	mov	r3,r2
  20e2f0:	e0bffd17 	ldw	r2,-12(fp)
  20e2f4:	10800817 	ldw	r2,32(r2)
  20e2f8:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
  20e2fc:	e0bffc17 	ldw	r2,-16(fp)
  20e300:	10800104 	addi	r2,r2,4
  20e304:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
  20e308:	e0bffb17 	ldw	r2,-20(fp)
  20e30c:	1080800c 	andi	r2,r2,512
  20e310:	103fbe26 	beq	r2,zero,20e20c <altera_avalon_jtag_uart_irq+0x24>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
  20e314:	e0bffb17 	ldw	r2,-20(fp)
  20e318:	1004d43a 	srli	r2,r2,16
  20e31c:	e0bffe15 	stw	r2,-8(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
  20e320:	00001406 	br	20e374 <altera_avalon_jtag_uart_irq+0x18c>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
  20e324:	e0bffc17 	ldw	r2,-16(fp)
  20e328:	e0fffd17 	ldw	r3,-12(fp)
  20e32c:	18c00d17 	ldw	r3,52(r3)
  20e330:	e13ffd17 	ldw	r4,-12(fp)
  20e334:	20c7883a 	add	r3,r4,r3
  20e338:	18c20e03 	ldbu	r3,2104(r3)
  20e33c:	18c03fcc 	andi	r3,r3,255
  20e340:	18c0201c 	xori	r3,r3,128
  20e344:	18ffe004 	addi	r3,r3,-128
  20e348:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  20e34c:	e0bffd17 	ldw	r2,-12(fp)
  20e350:	10800d17 	ldw	r2,52(r2)
  20e354:	10800044 	addi	r2,r2,1
  20e358:	10c1ffcc 	andi	r3,r2,2047
  20e35c:	e0bffd17 	ldw	r2,-12(fp)
  20e360:	10c00d15 	stw	r3,52(r2)
  20e364:	0001883a 	nop

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
  20e368:	e0bffe17 	ldw	r2,-8(fp)
  20e36c:	10bfffc4 	addi	r2,r2,-1
  20e370:	e0bffe15 	stw	r2,-8(fp)
      while (space > 0 && sp->tx_out != sp->tx_in)
  20e374:	e0bffe17 	ldw	r2,-8(fp)
  20e378:	10000526 	beq	r2,zero,20e390 <altera_avalon_jtag_uart_irq+0x1a8>
  20e37c:	e0bffd17 	ldw	r2,-12(fp)
  20e380:	10c00d17 	ldw	r3,52(r2)
  20e384:	e0bffd17 	ldw	r2,-12(fp)
  20e388:	10800c17 	ldw	r2,48(r2)
  20e38c:	18bfe51e 	bne	r3,r2,20e324 <altera_avalon_jtag_uart_irq+0x13c>
      }

      if (space > 0)
  20e390:	e0bffe17 	ldw	r2,-8(fp)
  20e394:	103f9d26 	beq	r2,zero,20e20c <altera_avalon_jtag_uart_irq+0x24>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
  20e398:	e0bffd17 	ldw	r2,-12(fp)
  20e39c:	10c00817 	ldw	r3,32(r2)
  20e3a0:	00bfff44 	movi	r2,-3
  20e3a4:	1886703a 	and	r3,r3,r2
  20e3a8:	e0bffd17 	ldw	r2,-12(fp)
  20e3ac:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
  20e3b0:	e0bffd17 	ldw	r2,-12(fp)
  20e3b4:	10800017 	ldw	r2,0(r2)
  20e3b8:	10800104 	addi	r2,r2,4
  20e3bc:	1007883a 	mov	r3,r2
  20e3c0:	e0bffd17 	ldw	r2,-12(fp)
  20e3c4:	10800817 	ldw	r2,32(r2)
  20e3c8:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
  20e3cc:	e0bffc17 	ldw	r2,-16(fp)
  20e3d0:	10800104 	addi	r2,r2,4
  20e3d4:	10800037 	ldwio	r2,0(r2)
  {
  20e3d8:	003f8c06 	br	20e20c <altera_avalon_jtag_uart_irq+0x24>
      break;
  20e3dc:	0001883a 	nop
      }
    }
  }
}
  20e3e0:	0001883a 	nop
  20e3e4:	e037883a 	mov	sp,fp
  20e3e8:	df000017 	ldw	fp,0(sp)
  20e3ec:	dec00104 	addi	sp,sp,4
  20e3f0:	f800283a 	ret

0020e3f4 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
  20e3f4:	defffc04 	addi	sp,sp,-16
  20e3f8:	df000315 	stw	fp,12(sp)
  20e3fc:	df000304 	addi	fp,sp,12
  20e400:	e13ffd15 	stw	r4,-12(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
  20e404:	e0bffd17 	ldw	r2,-12(fp)
  20e408:	e0bfff15 	stw	r2,-4(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
  20e40c:	e0bfff17 	ldw	r2,-4(fp)
  20e410:	10800017 	ldw	r2,0(r2)
  20e414:	10800104 	addi	r2,r2,4
  20e418:	10800037 	ldwio	r2,0(r2)
  20e41c:	e0bffe15 	stw	r2,-8(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
  20e420:	e0bffe17 	ldw	r2,-8(fp)
  20e424:	1081000c 	andi	r2,r2,1024
  20e428:	10000b26 	beq	r2,zero,20e458 <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
  20e42c:	e0bfff17 	ldw	r2,-4(fp)
  20e430:	10800017 	ldw	r2,0(r2)
  20e434:	10800104 	addi	r2,r2,4
  20e438:	1007883a 	mov	r3,r2
  20e43c:	e0bfff17 	ldw	r2,-4(fp)
  20e440:	10800817 	ldw	r2,32(r2)
  20e444:	10810014 	ori	r2,r2,1024
  20e448:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
  20e44c:	e0bfff17 	ldw	r2,-4(fp)
  20e450:	10000915 	stw	zero,36(r2)
  20e454:	00000a06 	br	20e480 <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
  20e458:	e0bfff17 	ldw	r2,-4(fp)
  20e45c:	10c00917 	ldw	r3,36(r2)
  20e460:	00a00034 	movhi	r2,32768
  20e464:	10bfff04 	addi	r2,r2,-4
  20e468:	10c00536 	bltu	r2,r3,20e480 <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
  20e46c:	e0bfff17 	ldw	r2,-4(fp)
  20e470:	10800917 	ldw	r2,36(r2)
  20e474:	10c00044 	addi	r3,r2,1
  20e478:	e0bfff17 	ldw	r2,-4(fp)
  20e47c:	10c00915 	stw	r3,36(r2)
  20e480:	d0a70d17 	ldw	r2,-25548(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
  20e484:	e037883a 	mov	sp,fp
  20e488:	df000017 	ldw	fp,0(sp)
  20e48c:	dec00104 	addi	sp,sp,4
  20e490:	f800283a 	ret

0020e494 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
  20e494:	defffd04 	addi	sp,sp,-12
  20e498:	df000215 	stw	fp,8(sp)
  20e49c:	df000204 	addi	fp,sp,8
  20e4a0:	e13fff15 	stw	r4,-4(fp)
  20e4a4:	e17ffe15 	stw	r5,-8(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
  20e4a8:	00000506 	br	20e4c0 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
  20e4ac:	e0bffe17 	ldw	r2,-8(fp)
  20e4b0:	1090000c 	andi	r2,r2,16384
  20e4b4:	10000226 	beq	r2,zero,20e4c0 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
  20e4b8:	00bffd44 	movi	r2,-11
  20e4bc:	00000b06 	br	20e4ec <altera_avalon_jtag_uart_close+0x58>
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
  20e4c0:	e0bfff17 	ldw	r2,-4(fp)
  20e4c4:	10c00d17 	ldw	r3,52(r2)
  20e4c8:	e0bfff17 	ldw	r2,-4(fp)
  20e4cc:	10800c17 	ldw	r2,48(r2)
  20e4d0:	18800526 	beq	r3,r2,20e4e8 <altera_avalon_jtag_uart_close+0x54>
  20e4d4:	e0bfff17 	ldw	r2,-4(fp)
  20e4d8:	10c00917 	ldw	r3,36(r2)
  20e4dc:	e0bfff17 	ldw	r2,-4(fp)
  20e4e0:	10800117 	ldw	r2,4(r2)
  20e4e4:	18bff136 	bltu	r3,r2,20e4ac <altera_avalon_jtag_uart_close+0x18>
    }
  }

  return 0;
  20e4e8:	0005883a 	mov	r2,zero
}
  20e4ec:	e037883a 	mov	sp,fp
  20e4f0:	df000017 	ldw	fp,0(sp)
  20e4f4:	dec00104 	addi	sp,sp,4
  20e4f8:	f800283a 	ret

0020e4fc <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
  20e4fc:	defffa04 	addi	sp,sp,-24
  20e500:	df000515 	stw	fp,20(sp)
  20e504:	df000504 	addi	fp,sp,20
  20e508:	e13ffd15 	stw	r4,-12(fp)
  20e50c:	e17ffc15 	stw	r5,-16(fp)
  20e510:	e1bffb15 	stw	r6,-20(fp)
  int rc = -ENOTTY;
  20e514:	00bff9c4 	movi	r2,-25
  20e518:	e0bfff15 	stw	r2,-4(fp)

  switch (req)
  20e51c:	e0bffc17 	ldw	r2,-16(fp)
  20e520:	109a8060 	cmpeqi	r2,r2,27137
  20e524:	1000041e 	bne	r2,zero,20e538 <altera_avalon_jtag_uart_ioctl+0x3c>
  20e528:	e0bffc17 	ldw	r2,-16(fp)
  20e52c:	109a80a0 	cmpeqi	r2,r2,27138
  20e530:	1000181e 	bne	r2,zero,20e594 <altera_avalon_jtag_uart_ioctl+0x98>
      rc = 0;
    }
    break;

  default:
    break;
  20e534:	00002906 	br	20e5dc <altera_avalon_jtag_uart_ioctl+0xe0>
    if (sp->timeout != INT_MAX)
  20e538:	e0bffd17 	ldw	r2,-12(fp)
  20e53c:	10c00117 	ldw	r3,4(r2)
  20e540:	00a00034 	movhi	r2,32768
  20e544:	10bfffc4 	addi	r2,r2,-1
  20e548:	18802126 	beq	r3,r2,20e5d0 <altera_avalon_jtag_uart_ioctl+0xd4>
      int timeout = *((int *)arg);
  20e54c:	e0bffb17 	ldw	r2,-20(fp)
  20e550:	10800017 	ldw	r2,0(r2)
  20e554:	e0bffe15 	stw	r2,-8(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
  20e558:	e0bffe17 	ldw	r2,-8(fp)
  20e55c:	10800090 	cmplti	r2,r2,2
  20e560:	1000061e 	bne	r2,zero,20e57c <altera_avalon_jtag_uart_ioctl+0x80>
  20e564:	e0fffe17 	ldw	r3,-8(fp)
  20e568:	00a00034 	movhi	r2,32768
  20e56c:	10bfffc4 	addi	r2,r2,-1
  20e570:	18800226 	beq	r3,r2,20e57c <altera_avalon_jtag_uart_ioctl+0x80>
  20e574:	e0bffe17 	ldw	r2,-8(fp)
  20e578:	00000206 	br	20e584 <altera_avalon_jtag_uart_ioctl+0x88>
  20e57c:	00a00034 	movhi	r2,32768
  20e580:	10bfff84 	addi	r2,r2,-2
  20e584:	e0fffd17 	ldw	r3,-12(fp)
  20e588:	18800115 	stw	r2,4(r3)
      rc = 0;
  20e58c:	e03fff15 	stw	zero,-4(fp)
    break;
  20e590:	00000f06 	br	20e5d0 <altera_avalon_jtag_uart_ioctl+0xd4>
    if (sp->timeout != INT_MAX)
  20e594:	e0bffd17 	ldw	r2,-12(fp)
  20e598:	10c00117 	ldw	r3,4(r2)
  20e59c:	00a00034 	movhi	r2,32768
  20e5a0:	10bfffc4 	addi	r2,r2,-1
  20e5a4:	18800c26 	beq	r3,r2,20e5d8 <altera_avalon_jtag_uart_ioctl+0xdc>
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
  20e5a8:	e0bffd17 	ldw	r2,-12(fp)
  20e5ac:	10c00917 	ldw	r3,36(r2)
  20e5b0:	e0bffd17 	ldw	r2,-12(fp)
  20e5b4:	10800117 	ldw	r2,4(r2)
  20e5b8:	1885803a 	cmpltu	r2,r3,r2
  20e5bc:	10c03fcc 	andi	r3,r2,255
  20e5c0:	e0bffb17 	ldw	r2,-20(fp)
  20e5c4:	10c00015 	stw	r3,0(r2)
      rc = 0;
  20e5c8:	e03fff15 	stw	zero,-4(fp)
    break;
  20e5cc:	00000206 	br	20e5d8 <altera_avalon_jtag_uart_ioctl+0xdc>
    break;
  20e5d0:	0001883a 	nop
  20e5d4:	00000106 	br	20e5dc <altera_avalon_jtag_uart_ioctl+0xe0>
    break;
  20e5d8:	0001883a 	nop
  }

  return rc;
  20e5dc:	e0bfff17 	ldw	r2,-4(fp)
}
  20e5e0:	e037883a 	mov	sp,fp
  20e5e4:	df000017 	ldw	fp,0(sp)
  20e5e8:	dec00104 	addi	sp,sp,4
  20e5ec:	f800283a 	ret

0020e5f0 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
  20e5f0:	defff304 	addi	sp,sp,-52
  20e5f4:	dfc00c15 	stw	ra,48(sp)
  20e5f8:	df000b15 	stw	fp,44(sp)
  20e5fc:	df000b04 	addi	fp,sp,44
  20e600:	e13ff815 	stw	r4,-32(fp)
  20e604:	e17ff715 	stw	r5,-36(fp)
  20e608:	e1bff615 	stw	r6,-40(fp)
  20e60c:	e1fff515 	stw	r7,-44(fp)
  char * ptr = buffer;
  20e610:	e0bff717 	ldw	r2,-36(fp)
  20e614:	e0bfff15 	stw	r2,-4(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
  20e618:	00004706 	br	20e738 <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
  20e61c:	e0bff817 	ldw	r2,-32(fp)
  20e620:	10800a17 	ldw	r2,40(r2)
  20e624:	e0bffd15 	stw	r2,-12(fp)
      out = sp->rx_out;
  20e628:	e0bff817 	ldw	r2,-32(fp)
  20e62c:	10800b17 	ldw	r2,44(r2)
  20e630:	e0bffc15 	stw	r2,-16(fp)

      if (in >= out)
  20e634:	e0fffd17 	ldw	r3,-12(fp)
  20e638:	e0bffc17 	ldw	r2,-16(fp)
  20e63c:	18800536 	bltu	r3,r2,20e654 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
  20e640:	e0fffd17 	ldw	r3,-12(fp)
  20e644:	e0bffc17 	ldw	r2,-16(fp)
  20e648:	1885c83a 	sub	r2,r3,r2
  20e64c:	e0bffe15 	stw	r2,-8(fp)
  20e650:	00000406 	br	20e664 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
  20e654:	00c20004 	movi	r3,2048
  20e658:	e0bffc17 	ldw	r2,-16(fp)
  20e65c:	1885c83a 	sub	r2,r3,r2
  20e660:	e0bffe15 	stw	r2,-8(fp)

      if (n == 0)
  20e664:	e0bffe17 	ldw	r2,-8(fp)
  20e668:	10001e26 	beq	r2,zero,20e6e4 <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
  20e66c:	e0fff617 	ldw	r3,-40(fp)
  20e670:	e0bffe17 	ldw	r2,-8(fp)
  20e674:	1880022e 	bgeu	r3,r2,20e680 <altera_avalon_jtag_uart_read+0x90>
        n = space;
  20e678:	e0bff617 	ldw	r2,-40(fp)
  20e67c:	e0bffe15 	stw	r2,-8(fp)

      memcpy(ptr, sp->rx_buf + out, n);
  20e680:	e0bff817 	ldw	r2,-32(fp)
  20e684:	10c00e04 	addi	r3,r2,56
  20e688:	e0bffc17 	ldw	r2,-16(fp)
  20e68c:	1885883a 	add	r2,r3,r2
  20e690:	e1bffe17 	ldw	r6,-8(fp)
  20e694:	100b883a 	mov	r5,r2
  20e698:	e13fff17 	ldw	r4,-4(fp)
  20e69c:	0205c140 	call	205c14 <memcpy>
      ptr   += n;
  20e6a0:	e0ffff17 	ldw	r3,-4(fp)
  20e6a4:	e0bffe17 	ldw	r2,-8(fp)
  20e6a8:	1885883a 	add	r2,r3,r2
  20e6ac:	e0bfff15 	stw	r2,-4(fp)
      space -= n;
  20e6b0:	e0fff617 	ldw	r3,-40(fp)
  20e6b4:	e0bffe17 	ldw	r2,-8(fp)
  20e6b8:	1885c83a 	sub	r2,r3,r2
  20e6bc:	e0bff615 	stw	r2,-40(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  20e6c0:	e0fffc17 	ldw	r3,-16(fp)
  20e6c4:	e0bffe17 	ldw	r2,-8(fp)
  20e6c8:	1885883a 	add	r2,r3,r2
  20e6cc:	10c1ffcc 	andi	r3,r2,2047
  20e6d0:	e0bff817 	ldw	r2,-32(fp)
  20e6d4:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
  20e6d8:	e0bff617 	ldw	r2,-40(fp)
  20e6dc:	00bfcf16 	blt	zero,r2,20e61c <altera_avalon_jtag_uart_read+0x2c>
  20e6e0:	00000106 	br	20e6e8 <altera_avalon_jtag_uart_read+0xf8>
        break; /* No more data available */
  20e6e4:	0001883a 	nop

    /* If we read any data then return it */
    if (ptr != buffer)
  20e6e8:	e0ffff17 	ldw	r3,-4(fp)
  20e6ec:	e0bff717 	ldw	r2,-36(fp)
  20e6f0:	1880141e 	bne	r3,r2,20e744 <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
  20e6f4:	e0bff517 	ldw	r2,-44(fp)
  20e6f8:	1090000c 	andi	r2,r2,16384
  20e6fc:	1000131e 	bne	r2,zero,20e74c <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
  20e700:	0001883a 	nop
  20e704:	e0bff817 	ldw	r2,-32(fp)
  20e708:	10800a17 	ldw	r2,40(r2)
  20e70c:	e0fffd17 	ldw	r3,-12(fp)
  20e710:	1880051e 	bne	r3,r2,20e728 <altera_avalon_jtag_uart_read+0x138>
  20e714:	e0bff817 	ldw	r2,-32(fp)
  20e718:	10c00917 	ldw	r3,36(r2)
  20e71c:	e0bff817 	ldw	r2,-32(fp)
  20e720:	10800117 	ldw	r2,4(r2)
  20e724:	18bff736 	bltu	r3,r2,20e704 <altera_avalon_jtag_uart_read+0x114>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
  20e728:	e0bff817 	ldw	r2,-32(fp)
  20e72c:	10800a17 	ldw	r2,40(r2)
  20e730:	e0fffd17 	ldw	r3,-12(fp)
  20e734:	18800726 	beq	r3,r2,20e754 <altera_avalon_jtag_uart_read+0x164>
  while (space > 0)
  20e738:	e0bff617 	ldw	r2,-40(fp)
  20e73c:	00bfb716 	blt	zero,r2,20e61c <altera_avalon_jtag_uart_read+0x2c>
  20e740:	00000506 	br	20e758 <altera_avalon_jtag_uart_read+0x168>
      break;
  20e744:	0001883a 	nop
  20e748:	00000306 	br	20e758 <altera_avalon_jtag_uart_read+0x168>
      break;
  20e74c:	0001883a 	nop
  20e750:	00000106 	br	20e758 <altera_avalon_jtag_uart_read+0x168>
      break;
  20e754:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
  20e758:	e0ffff17 	ldw	r3,-4(fp)
  20e75c:	e0bff717 	ldw	r2,-36(fp)
  20e760:	18801926 	beq	r3,r2,20e7c8 <altera_avalon_jtag_uart_read+0x1d8>
  NIOS2_READ_STATUS (context);
  20e764:	0005303a 	rdctl	r2,status
  20e768:	e0bff915 	stw	r2,-28(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  20e76c:	e0fff917 	ldw	r3,-28(fp)
  20e770:	00bfff84 	movi	r2,-2
  20e774:	1884703a 	and	r2,r3,r2
  20e778:	1001703a 	wrctl	status,r2
  return context;
  20e77c:	e0bff917 	ldw	r2,-28(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
  20e780:	e0bffb15 	stw	r2,-20(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
  20e784:	e0bff817 	ldw	r2,-32(fp)
  20e788:	10800817 	ldw	r2,32(r2)
  20e78c:	10c00054 	ori	r3,r2,1
  20e790:	e0bff817 	ldw	r2,-32(fp)
  20e794:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
  20e798:	e0bff817 	ldw	r2,-32(fp)
  20e79c:	10800017 	ldw	r2,0(r2)
  20e7a0:	10800104 	addi	r2,r2,4
  20e7a4:	1007883a 	mov	r3,r2
  20e7a8:	e0bff817 	ldw	r2,-32(fp)
  20e7ac:	10800817 	ldw	r2,32(r2)
  20e7b0:	18800035 	stwio	r2,0(r3)
  20e7b4:	e0bffb17 	ldw	r2,-20(fp)
  20e7b8:	e0bffa15 	stw	r2,-24(fp)
  NIOS2_WRITE_STATUS (context);
  20e7bc:	e0bffa17 	ldw	r2,-24(fp)
  20e7c0:	1001703a 	wrctl	status,r2
}
  20e7c4:	0001883a 	nop
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
  20e7c8:	e0ffff17 	ldw	r3,-4(fp)
  20e7cc:	e0bff717 	ldw	r2,-36(fp)
  20e7d0:	18800426 	beq	r3,r2,20e7e4 <altera_avalon_jtag_uart_read+0x1f4>
    return ptr - buffer;
  20e7d4:	e0ffff17 	ldw	r3,-4(fp)
  20e7d8:	e0bff717 	ldw	r2,-36(fp)
  20e7dc:	1885c83a 	sub	r2,r3,r2
  20e7e0:	00000606 	br	20e7fc <altera_avalon_jtag_uart_read+0x20c>
  else if (flags & O_NONBLOCK)
  20e7e4:	e0bff517 	ldw	r2,-44(fp)
  20e7e8:	1090000c 	andi	r2,r2,16384
  20e7ec:	10000226 	beq	r2,zero,20e7f8 <altera_avalon_jtag_uart_read+0x208>
    return -EWOULDBLOCK;
  20e7f0:	00bffd44 	movi	r2,-11
  20e7f4:	00000106 	br	20e7fc <altera_avalon_jtag_uart_read+0x20c>
  else
    return -EIO;
  20e7f8:	00bffec4 	movi	r2,-5
}
  20e7fc:	e037883a 	mov	sp,fp
  20e800:	dfc00117 	ldw	ra,4(sp)
  20e804:	df000017 	ldw	fp,0(sp)
  20e808:	dec00204 	addi	sp,sp,8
  20e80c:	f800283a 	ret

0020e810 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
  20e810:	defff304 	addi	sp,sp,-52
  20e814:	dfc00c15 	stw	ra,48(sp)
  20e818:	df000b15 	stw	fp,44(sp)
  20e81c:	df000b04 	addi	fp,sp,44
  20e820:	e13ff815 	stw	r4,-32(fp)
  20e824:	e17ff715 	stw	r5,-36(fp)
  20e828:	e1bff615 	stw	r6,-40(fp)
  20e82c:	e1fff515 	stw	r7,-44(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
  20e830:	e03fff15 	stw	zero,-4(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
  20e834:	e0bff717 	ldw	r2,-36(fp)
  20e838:	e0bffd15 	stw	r2,-12(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
  20e83c:	00003706 	br	20e91c <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
  20e840:	e0bff817 	ldw	r2,-32(fp)
  20e844:	10800c17 	ldw	r2,48(r2)
  20e848:	e0bffc15 	stw	r2,-16(fp)
      out = sp->tx_out;
  20e84c:	e0bff817 	ldw	r2,-32(fp)
  20e850:	10800d17 	ldw	r2,52(r2)
  20e854:	e0bfff15 	stw	r2,-4(fp)

      if (in < out)
  20e858:	e0fffc17 	ldw	r3,-16(fp)
  20e85c:	e0bfff17 	ldw	r2,-4(fp)
  20e860:	1880062e 	bgeu	r3,r2,20e87c <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
  20e864:	e0ffff17 	ldw	r3,-4(fp)
  20e868:	e0bffc17 	ldw	r2,-16(fp)
  20e86c:	1885c83a 	sub	r2,r3,r2
  20e870:	10bfffc4 	addi	r2,r2,-1
  20e874:	e0bffe15 	stw	r2,-8(fp)
  20e878:	00000b06 	br	20e8a8 <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
  20e87c:	e0bfff17 	ldw	r2,-4(fp)
  20e880:	10000526 	beq	r2,zero,20e898 <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
  20e884:	00c20004 	movi	r3,2048
  20e888:	e0bffc17 	ldw	r2,-16(fp)
  20e88c:	1885c83a 	sub	r2,r3,r2
  20e890:	e0bffe15 	stw	r2,-8(fp)
  20e894:	00000406 	br	20e8a8 <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
  20e898:	00c1ffc4 	movi	r3,2047
  20e89c:	e0bffc17 	ldw	r2,-16(fp)
  20e8a0:	1885c83a 	sub	r2,r3,r2
  20e8a4:	e0bffe15 	stw	r2,-8(fp)

      if (n == 0)
  20e8a8:	e0bffe17 	ldw	r2,-8(fp)
  20e8ac:	10001e26 	beq	r2,zero,20e928 <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
  20e8b0:	e0fff617 	ldw	r3,-40(fp)
  20e8b4:	e0bffe17 	ldw	r2,-8(fp)
  20e8b8:	1880022e 	bgeu	r3,r2,20e8c4 <altera_avalon_jtag_uart_write+0xb4>
        n = count;
  20e8bc:	e0bff617 	ldw	r2,-40(fp)
  20e8c0:	e0bffe15 	stw	r2,-8(fp)

      memcpy(sp->tx_buf + in, ptr, n);
  20e8c4:	e0bff817 	ldw	r2,-32(fp)
  20e8c8:	10c20e04 	addi	r3,r2,2104
  20e8cc:	e0bffc17 	ldw	r2,-16(fp)
  20e8d0:	1885883a 	add	r2,r3,r2
  20e8d4:	e1bffe17 	ldw	r6,-8(fp)
  20e8d8:	e17ff717 	ldw	r5,-36(fp)
  20e8dc:	1009883a 	mov	r4,r2
  20e8e0:	0205c140 	call	205c14 <memcpy>
      ptr   += n;
  20e8e4:	e0fff717 	ldw	r3,-36(fp)
  20e8e8:	e0bffe17 	ldw	r2,-8(fp)
  20e8ec:	1885883a 	add	r2,r3,r2
  20e8f0:	e0bff715 	stw	r2,-36(fp)
      count -= n;
  20e8f4:	e0fff617 	ldw	r3,-40(fp)
  20e8f8:	e0bffe17 	ldw	r2,-8(fp)
  20e8fc:	1885c83a 	sub	r2,r3,r2
  20e900:	e0bff615 	stw	r2,-40(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  20e904:	e0fffc17 	ldw	r3,-16(fp)
  20e908:	e0bffe17 	ldw	r2,-8(fp)
  20e90c:	1885883a 	add	r2,r3,r2
  20e910:	10c1ffcc 	andi	r3,r2,2047
  20e914:	e0bff817 	ldw	r2,-32(fp)
  20e918:	10c00c15 	stw	r3,48(r2)
    while (count > 0)
  20e91c:	e0bff617 	ldw	r2,-40(fp)
  20e920:	00bfc716 	blt	zero,r2,20e840 <altera_avalon_jtag_uart_write+0x30>
  20e924:	00000106 	br	20e92c <altera_avalon_jtag_uart_write+0x11c>
        break;
  20e928:	0001883a 	nop
  NIOS2_READ_STATUS (context);
  20e92c:	0005303a 	rdctl	r2,status
  20e930:	e0bff915 	stw	r2,-28(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  20e934:	e0fff917 	ldw	r3,-28(fp)
  20e938:	00bfff84 	movi	r2,-2
  20e93c:	1884703a 	and	r2,r3,r2
  20e940:	1001703a 	wrctl	status,r2
  return context;
  20e944:	e0bff917 	ldw	r2,-28(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
  20e948:	e0bffb15 	stw	r2,-20(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
  20e94c:	e0bff817 	ldw	r2,-32(fp)
  20e950:	10800817 	ldw	r2,32(r2)
  20e954:	10c00094 	ori	r3,r2,2
  20e958:	e0bff817 	ldw	r2,-32(fp)
  20e95c:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
  20e960:	e0bff817 	ldw	r2,-32(fp)
  20e964:	10800017 	ldw	r2,0(r2)
  20e968:	10800104 	addi	r2,r2,4
  20e96c:	1007883a 	mov	r3,r2
  20e970:	e0bff817 	ldw	r2,-32(fp)
  20e974:	10800817 	ldw	r2,32(r2)
  20e978:	18800035 	stwio	r2,0(r3)
  20e97c:	e0bffb17 	ldw	r2,-20(fp)
  20e980:	e0bffa15 	stw	r2,-24(fp)
  NIOS2_WRITE_STATUS (context);
  20e984:	e0bffa17 	ldw	r2,-24(fp)
  20e988:	1001703a 	wrctl	status,r2
}
  20e98c:	0001883a 	nop
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
  20e990:	e0bff617 	ldw	r2,-40(fp)
  20e994:	0080100e 	bge	zero,r2,20e9d8 <altera_avalon_jtag_uart_write+0x1c8>
    {
      if (flags & O_NONBLOCK)
  20e998:	e0bff517 	ldw	r2,-44(fp)
  20e99c:	1090000c 	andi	r2,r2,16384
  20e9a0:	1000101e 	bne	r2,zero,20e9e4 <altera_avalon_jtag_uart_write+0x1d4>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
  20e9a4:	0001883a 	nop
  20e9a8:	e0bff817 	ldw	r2,-32(fp)
  20e9ac:	10800d17 	ldw	r2,52(r2)
  20e9b0:	e0ffff17 	ldw	r3,-4(fp)
  20e9b4:	1880051e 	bne	r3,r2,20e9cc <altera_avalon_jtag_uart_write+0x1bc>
  20e9b8:	e0bff817 	ldw	r2,-32(fp)
  20e9bc:	10c00917 	ldw	r3,36(r2)
  20e9c0:	e0bff817 	ldw	r2,-32(fp)
  20e9c4:	10800117 	ldw	r2,4(r2)
  20e9c8:	18bff736 	bltu	r3,r2,20e9a8 <altera_avalon_jtag_uart_write+0x198>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
  20e9cc:	e0bff817 	ldw	r2,-32(fp)
  20e9d0:	10800917 	ldw	r2,36(r2)
  20e9d4:	1000051e 	bne	r2,zero,20e9ec <altera_avalon_jtag_uart_write+0x1dc>
         break;
    }
  }
  while (count > 0);
  20e9d8:	e0bff617 	ldw	r2,-40(fp)
  20e9dc:	00bfcf16 	blt	zero,r2,20e91c <altera_avalon_jtag_uart_write+0x10c>
  20e9e0:	00000306 	br	20e9f0 <altera_avalon_jtag_uart_write+0x1e0>
        break;
  20e9e4:	0001883a 	nop
  20e9e8:	00000106 	br	20e9f0 <altera_avalon_jtag_uart_write+0x1e0>
         break;
  20e9ec:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
  20e9f0:	e0fff717 	ldw	r3,-36(fp)
  20e9f4:	e0bffd17 	ldw	r2,-12(fp)
  20e9f8:	18800426 	beq	r3,r2,20ea0c <altera_avalon_jtag_uart_write+0x1fc>
    return ptr - start;
  20e9fc:	e0fff717 	ldw	r3,-36(fp)
  20ea00:	e0bffd17 	ldw	r2,-12(fp)
  20ea04:	1885c83a 	sub	r2,r3,r2
  20ea08:	00000606 	br	20ea24 <altera_avalon_jtag_uart_write+0x214>
  else if (flags & O_NONBLOCK)
  20ea0c:	e0bff517 	ldw	r2,-44(fp)
  20ea10:	1090000c 	andi	r2,r2,16384
  20ea14:	10000226 	beq	r2,zero,20ea20 <altera_avalon_jtag_uart_write+0x210>
    return -EWOULDBLOCK;
  20ea18:	00bffd44 	movi	r2,-11
  20ea1c:	00000106 	br	20ea24 <altera_avalon_jtag_uart_write+0x214>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
  20ea20:	00bffec4 	movi	r2,-5
}
  20ea24:	e037883a 	mov	sp,fp
  20ea28:	dfc00117 	ldw	ra,4(sp)
  20ea2c:	df000017 	ldw	fp,0(sp)
  20ea30:	dec00204 	addi	sp,sp,8
  20ea34:	f800283a 	ret

0020ea38 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
  20ea38:	defff404 	addi	sp,sp,-48
  20ea3c:	df000b15 	stw	fp,44(sp)
  20ea40:	df000b04 	addi	fp,sp,44
  20ea44:	e13ff815 	stw	r4,-32(fp)
  20ea48:	e17ff715 	stw	r5,-36(fp)
  20ea4c:	e1bff615 	stw	r6,-40(fp)
  20ea50:	e1fff515 	stw	r7,-44(fp)
  alt_irq_context irq_context;
  alt_u64 current_nticks = 0;
  20ea54:	e03ffe15 	stw	zero,-8(fp)
  20ea58:	e03fff15 	stw	zero,-4(fp)
  20ea5c:	d0a70d17 	ldw	r2,-25548(gp)
  
  if (alt_ticks_per_second ())
  20ea60:	10004826 	beq	r2,zero,20eb84 <alt_alarm_start+0x14c>
  {
    if (alarm)
  20ea64:	e0bff817 	ldw	r2,-32(fp)
  20ea68:	10004426 	beq	r2,zero,20eb7c <alt_alarm_start+0x144>
    {
      alarm->callback = callback;
  20ea6c:	e0bff817 	ldw	r2,-32(fp)
  20ea70:	e0fff617 	ldw	r3,-40(fp)
  20ea74:	10c00415 	stw	r3,16(r2)
      alarm->context  = context;
  20ea78:	e0bff817 	ldw	r2,-32(fp)
  20ea7c:	e0fff517 	ldw	r3,-44(fp)
  20ea80:	10c00515 	stw	r3,20(r2)
  NIOS2_READ_STATUS (context);
  20ea84:	0005303a 	rdctl	r2,status
  20ea88:	e0bff915 	stw	r2,-28(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  20ea8c:	e0fff917 	ldw	r3,-28(fp)
  20ea90:	00bfff84 	movi	r2,-2
  20ea94:	1884703a 	and	r2,r3,r2
  20ea98:	1001703a 	wrctl	status,r2
  return context;
  20ea9c:	e0bff917 	ldw	r2,-28(fp)
 
      irq_context = alt_irq_disable_all ();
  20eaa0:	e0bffd15 	stw	r2,-12(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u64 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
  20eaa4:	d0a70e17 	ldw	r2,-25544(gp)
  20eaa8:	d0e70f17 	ldw	r3,-25540(gp)
      
      current_nticks = alt_nticks();
  20eaac:	e0bffe15 	stw	r2,-8(fp)
  20eab0:	e0ffff15 	stw	r3,-4(fp)
      
      alarm->time = (alt_u64)nticks + current_nticks + 1; 
  20eab4:	e0bff717 	ldw	r2,-36(fp)
  20eab8:	1011883a 	mov	r8,r2
  20eabc:	0013883a 	mov	r9,zero
  20eac0:	e13ffe17 	ldw	r4,-8(fp)
  20eac4:	e17fff17 	ldw	r5,-4(fp)
  20eac8:	4105883a 	add	r2,r8,r4
  20eacc:	120d803a 	cmpltu	r6,r2,r8
  20ead0:	4947883a 	add	r3,r9,r5
  20ead4:	30c9883a 	add	r4,r6,r3
  20ead8:	2007883a 	mov	r3,r4
  20eadc:	1009883a 	mov	r4,r2
  20eae0:	180b883a 	mov	r5,r3
  20eae4:	01800044 	movi	r6,1
  20eae8:	000f883a 	mov	r7,zero
  20eaec:	2185883a 	add	r2,r4,r6
  20eaf0:	1111803a 	cmpltu	r8,r2,r4
  20eaf4:	29c7883a 	add	r3,r5,r7
  20eaf8:	40c9883a 	add	r4,r8,r3
  20eafc:	2007883a 	mov	r3,r4
  20eb00:	1009883a 	mov	r4,r2
  20eb04:	180b883a 	mov	r5,r3
  20eb08:	e0bff817 	ldw	r2,-32(fp)
  20eb0c:	11000215 	stw	r4,8(r2)
  20eb10:	11400315 	stw	r5,12(r2)
          
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
  20eb14:	e0bff817 	ldw	r2,-32(fp)
  20eb18:	d0e00c04 	addi	r3,gp,-32720
  20eb1c:	e0fffb15 	stw	r3,-20(fp)
  20eb20:	e0bffa15 	stw	r2,-24(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
  20eb24:	e0bffa17 	ldw	r2,-24(fp)
  20eb28:	e0fffb17 	ldw	r3,-20(fp)
  20eb2c:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
  20eb30:	e0bffb17 	ldw	r2,-20(fp)
  20eb34:	10c00017 	ldw	r3,0(r2)
  20eb38:	e0bffa17 	ldw	r2,-24(fp)
  20eb3c:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
  20eb40:	e0bffb17 	ldw	r2,-20(fp)
  20eb44:	10800017 	ldw	r2,0(r2)
  20eb48:	e0fffa17 	ldw	r3,-24(fp)
  20eb4c:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
  20eb50:	e0bffb17 	ldw	r2,-20(fp)
  20eb54:	e0fffa17 	ldw	r3,-24(fp)
  20eb58:	10c00015 	stw	r3,0(r2)
}
  20eb5c:	0001883a 	nop
  20eb60:	e0bffd17 	ldw	r2,-12(fp)
  20eb64:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context);
  20eb68:	e0bffc17 	ldw	r2,-16(fp)
  20eb6c:	1001703a 	wrctl	status,r2
}
  20eb70:	0001883a 	nop
      alt_irq_enable_all (irq_context);

      return 0;
  20eb74:	0005883a 	mov	r2,zero
  20eb78:	00000306 	br	20eb88 <alt_alarm_start+0x150>
    }
    else
    {
      return -EINVAL;
  20eb7c:	00bffa84 	movi	r2,-22
  20eb80:	00000106 	br	20eb88 <alt_alarm_start+0x150>
    }
  }
  else
  {
    return -ENOTSUP;
  20eb84:	00bfde84 	movi	r2,-134
  }
}
  20eb88:	e037883a 	mov	sp,fp
  20eb8c:	df000017 	ldw	fp,0(sp)
  20eb90:	dec00104 	addi	sp,sp,4
  20eb94:	f800283a 	ret

0020eb98 <alt_busy_sleep>:
#include "alt_types.h"

#include "priv/alt_busy_sleep.h"

unsigned int alt_busy_sleep (unsigned int us)
{
  20eb98:	defffa04 	addi	sp,sp,-24
  20eb9c:	dfc00515 	stw	ra,20(sp)
  20eba0:	df000415 	stw	fp,16(sp)
  20eba4:	df000404 	addi	fp,sp,16
  20eba8:	e13ffc15 	stw	r4,-16(fp)
  int big_loops;
  alt_u32 cycles_per_loop;
  
  if (!strcmp(NIOS2_CPU_IMPLEMENTATION,"tiny"))
  {
    cycles_per_loop = 9;
  20ebac:	00800244 	movi	r2,9
  20ebb0:	e0bffe15 	stw	r2,-8(fp)
    cycles_per_loop = 3;
  }
  

  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));
  20ebb4:	014003f4 	movhi	r5,15
  20ebb8:	29509004 	addi	r5,r5,16960
  20ebbc:	e13ffe17 	ldw	r4,-8(fp)
  20ebc0:	020abd80 	call	20abd8 <__mulsi3>
  20ebc4:	100b883a 	mov	r5,r2
  20ebc8:	0100bef4 	movhi	r4,763
  20ebcc:	213c2004 	addi	r4,r4,-3968
  20ebd0:	020ab180 	call	20ab18 <__udivsi3>
  big_loops = us / (INT_MAX/
  20ebd4:	100b883a 	mov	r5,r2
  20ebd8:	01200034 	movhi	r4,32768
  20ebdc:	213fffc4 	addi	r4,r4,-1
  20ebe0:	020ab180 	call	20ab18 <__udivsi3>
  20ebe4:	100b883a 	mov	r5,r2
  20ebe8:	e13ffc17 	ldw	r4,-16(fp)
  20ebec:	020ab180 	call	20ab18 <__udivsi3>
  20ebf0:	e0bffd15 	stw	r2,-12(fp)

  if (big_loops)
  20ebf4:	e0bffd17 	ldw	r2,-12(fp)
  20ebf8:	10002a26 	beq	r2,zero,20eca4 <alt_busy_sleep+0x10c>
  {
    for(i=0;i<big_loops;i++)
  20ebfc:	e03fff15 	stw	zero,-4(fp)
  20ec00:	00001706 	br	20ec60 <alt_busy_sleep+0xc8>
      /*
      * Do NOT Try to single step the asm statement below 
      * (single step will never return)
      * Step out of this function or set a breakpoint after the asm statements
      */
      __asm__ volatile (
  20ec04:	00a00034 	movhi	r2,32768
  20ec08:	10bfffc4 	addi	r2,r2,-1
  20ec0c:	10bfffc4 	addi	r2,r2,-1
  20ec10:	103ffe1e 	bne	r2,zero,20ec0c <alt_busy_sleep+0x74>
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
      (cycles_per_loop * 1000000)));
  20ec14:	014003f4 	movhi	r5,15
  20ec18:	29509004 	addi	r5,r5,16960
  20ec1c:	e13ffe17 	ldw	r4,-8(fp)
  20ec20:	020abd80 	call	20abd8 <__mulsi3>
      us -= (INT_MAX/(ALT_CPU_FREQ/
  20ec24:	100b883a 	mov	r5,r2
  20ec28:	0100bef4 	movhi	r4,763
  20ec2c:	213c2004 	addi	r4,r4,-3968
  20ec30:	020ab180 	call	20ab18 <__udivsi3>
  20ec34:	100b883a 	mov	r5,r2
  20ec38:	01200034 	movhi	r4,32768
  20ec3c:	213fffc4 	addi	r4,r4,-1
  20ec40:	020ab180 	call	20ab18 <__udivsi3>
  20ec44:	1007883a 	mov	r3,r2
  20ec48:	e0bffc17 	ldw	r2,-16(fp)
  20ec4c:	10c5c83a 	sub	r2,r2,r3
  20ec50:	e0bffc15 	stw	r2,-16(fp)
    for(i=0;i<big_loops;i++)
  20ec54:	e0bfff17 	ldw	r2,-4(fp)
  20ec58:	10800044 	addi	r2,r2,1
  20ec5c:	e0bfff15 	stw	r2,-4(fp)
  20ec60:	e0ffff17 	ldw	r3,-4(fp)
  20ec64:	e0bffd17 	ldw	r2,-12(fp)
  20ec68:	18bfe616 	blt	r3,r2,20ec04 <alt_busy_sleep+0x6c>
      "\n\tbne %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
  20ec6c:	014003f4 	movhi	r5,15
  20ec70:	29509004 	addi	r5,r5,16960
  20ec74:	e13ffe17 	ldw	r4,-8(fp)
  20ec78:	020abd80 	call	20abd8 <__mulsi3>
  20ec7c:	100b883a 	mov	r5,r2
  20ec80:	0100bef4 	movhi	r4,763
  20ec84:	213c2004 	addi	r4,r4,-3968
  20ec88:	020ab180 	call	20ab18 <__udivsi3>
  20ec8c:	e17ffc17 	ldw	r5,-16(fp)
  20ec90:	1009883a 	mov	r4,r2
  20ec94:	020abd80 	call	20abd8 <__mulsi3>
    __asm__ volatile (
  20ec98:	10bfffc4 	addi	r2,r2,-1
  20ec9c:	103ffe1e 	bne	r2,zero,20ec98 <alt_busy_sleep+0x100>
  20eca0:	00000d06 	br	20ecd8 <alt_busy_sleep+0x140>
      "\n\tbgt %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
  20eca4:	014003f4 	movhi	r5,15
  20eca8:	29509004 	addi	r5,r5,16960
  20ecac:	e13ffe17 	ldw	r4,-8(fp)
  20ecb0:	020abd80 	call	20abd8 <__mulsi3>
  20ecb4:	100b883a 	mov	r5,r2
  20ecb8:	0100bef4 	movhi	r4,763
  20ecbc:	213c2004 	addi	r4,r4,-3968
  20ecc0:	020ab180 	call	20ab18 <__udivsi3>
  20ecc4:	e17ffc17 	ldw	r5,-16(fp)
  20ecc8:	1009883a 	mov	r4,r2
  20eccc:	020abd80 	call	20abd8 <__mulsi3>
    __asm__ volatile (
  20ecd0:	10bfffc4 	addi	r2,r2,-1
  20ecd4:	00bffe16 	blt	zero,r2,20ecd0 <alt_busy_sleep+0x138>
  }
#endif /* #ifndef ALT_SIM_OPTIMIZE */
  return 0;
  20ecd8:	0005883a 	mov	r2,zero
}
  20ecdc:	e037883a 	mov	sp,fp
  20ece0:	dfc00117 	ldw	ra,4(sp)
  20ece4:	df000017 	ldw	fp,0(sp)
  20ece8:	dec00204 	addi	sp,sp,8
  20ecec:	f800283a 	ret

0020ecf0 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
  20ecf0:	deffff04 	addi	sp,sp,-4
  20ecf4:	df000015 	stw	fp,0(sp)
  20ecf8:	d839883a 	mov	fp,sp
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
  20ecfc:	0001883a 	nop
  20ed00:	e037883a 	mov	sp,fp
  20ed04:	df000017 	ldw	fp,0(sp)
  20ed08:	dec00104 	addi	sp,sp,4
  20ed0c:	f800283a 	ret

0020ed10 <alt_get_errno>:
{
  20ed10:	defffe04 	addi	sp,sp,-8
  20ed14:	dfc00115 	stw	ra,4(sp)
  20ed18:	df000015 	stw	fp,0(sp)
  20ed1c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  20ed20:	d0a00917 	ldw	r2,-32732(gp)
  20ed24:	10000326 	beq	r2,zero,20ed34 <alt_get_errno+0x24>
  20ed28:	d0a00917 	ldw	r2,-32732(gp)
  20ed2c:	103ee83a 	callr	r2
  20ed30:	00000106 	br	20ed38 <alt_get_errno+0x28>
  20ed34:	d0a70704 	addi	r2,gp,-25572
}
  20ed38:	e037883a 	mov	sp,fp
  20ed3c:	dfc00117 	ldw	ra,4(sp)
  20ed40:	df000017 	ldw	fp,0(sp)
  20ed44:	dec00204 	addi	sp,sp,8
  20ed48:	f800283a 	ret

0020ed4c <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
  20ed4c:	defffa04 	addi	sp,sp,-24
  20ed50:	dfc00515 	stw	ra,20(sp)
  20ed54:	df000415 	stw	fp,16(sp)
  20ed58:	df000404 	addi	fp,sp,16
  20ed5c:	e13ffd15 	stw	r4,-12(fp)
  20ed60:	e17ffc15 	stw	r5,-16(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
  20ed64:	e0bffd17 	ldw	r2,-12(fp)
  20ed68:	10000326 	beq	r2,zero,20ed78 <alt_dev_llist_insert+0x2c>
  20ed6c:	e0bffd17 	ldw	r2,-12(fp)
  20ed70:	10800217 	ldw	r2,8(r2)
  20ed74:	1000061e 	bne	r2,zero,20ed90 <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
  20ed78:	020ed100 	call	20ed10 <alt_get_errno>
  20ed7c:	1007883a 	mov	r3,r2
  20ed80:	00800584 	movi	r2,22
  20ed84:	18800015 	stw	r2,0(r3)
    return -EINVAL;
  20ed88:	00bffa84 	movi	r2,-22
  20ed8c:	00001406 	br	20ede0 <alt_dev_llist_insert+0x94>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
  20ed90:	e0bffd17 	ldw	r2,-12(fp)
  20ed94:	e0fffc17 	ldw	r3,-16(fp)
  20ed98:	e0ffff15 	stw	r3,-4(fp)
  20ed9c:	e0bffe15 	stw	r2,-8(fp)
  entry->previous = list;
  20eda0:	e0bffe17 	ldw	r2,-8(fp)
  20eda4:	e0ffff17 	ldw	r3,-4(fp)
  20eda8:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
  20edac:	e0bfff17 	ldw	r2,-4(fp)
  20edb0:	10c00017 	ldw	r3,0(r2)
  20edb4:	e0bffe17 	ldw	r2,-8(fp)
  20edb8:	10c00015 	stw	r3,0(r2)
  list->next->previous = entry;
  20edbc:	e0bfff17 	ldw	r2,-4(fp)
  20edc0:	10800017 	ldw	r2,0(r2)
  20edc4:	e0fffe17 	ldw	r3,-8(fp)
  20edc8:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
  20edcc:	e0bfff17 	ldw	r2,-4(fp)
  20edd0:	e0fffe17 	ldw	r3,-8(fp)
  20edd4:	10c00015 	stw	r3,0(r2)
}
  20edd8:	0001883a 	nop

  return 0;  
  20eddc:	0005883a 	mov	r2,zero
}
  20ede0:	e037883a 	mov	sp,fp
  20ede4:	dfc00117 	ldw	ra,4(sp)
  20ede8:	df000017 	ldw	fp,0(sp)
  20edec:	dec00204 	addi	sp,sp,8
  20edf0:	f800283a 	ret

0020edf4 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
  20edf4:	defffd04 	addi	sp,sp,-12
  20edf8:	dfc00215 	stw	ra,8(sp)
  20edfc:	df000115 	stw	fp,4(sp)
  20ee00:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
  20ee04:	00800874 	movhi	r2,33
  20ee08:	10bf2104 	addi	r2,r2,-892
  20ee0c:	e0bfff15 	stw	r2,-4(fp)
  20ee10:	00000606 	br	20ee2c <_do_ctors+0x38>
        (*ctor) (); 
  20ee14:	e0bfff17 	ldw	r2,-4(fp)
  20ee18:	10800017 	ldw	r2,0(r2)
  20ee1c:	103ee83a 	callr	r2
  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
  20ee20:	e0bfff17 	ldw	r2,-4(fp)
  20ee24:	10bfff04 	addi	r2,r2,-4
  20ee28:	e0bfff15 	stw	r2,-4(fp)
  20ee2c:	e0ffff17 	ldw	r3,-4(fp)
  20ee30:	00800874 	movhi	r2,33
  20ee34:	10bf2204 	addi	r2,r2,-888
  20ee38:	18bff62e 	bgeu	r3,r2,20ee14 <_do_ctors+0x20>
}
  20ee3c:	0001883a 	nop
  20ee40:	0001883a 	nop
  20ee44:	e037883a 	mov	sp,fp
  20ee48:	dfc00117 	ldw	ra,4(sp)
  20ee4c:	df000017 	ldw	fp,0(sp)
  20ee50:	dec00204 	addi	sp,sp,8
  20ee54:	f800283a 	ret

0020ee58 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
  20ee58:	defffd04 	addi	sp,sp,-12
  20ee5c:	dfc00215 	stw	ra,8(sp)
  20ee60:	df000115 	stw	fp,4(sp)
  20ee64:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
  20ee68:	00800874 	movhi	r2,33
  20ee6c:	10bf2104 	addi	r2,r2,-892
  20ee70:	e0bfff15 	stw	r2,-4(fp)
  20ee74:	00000606 	br	20ee90 <_do_dtors+0x38>
        (*dtor) (); 
  20ee78:	e0bfff17 	ldw	r2,-4(fp)
  20ee7c:	10800017 	ldw	r2,0(r2)
  20ee80:	103ee83a 	callr	r2
  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
  20ee84:	e0bfff17 	ldw	r2,-4(fp)
  20ee88:	10bfff04 	addi	r2,r2,-4
  20ee8c:	e0bfff15 	stw	r2,-4(fp)
  20ee90:	e0ffff17 	ldw	r3,-4(fp)
  20ee94:	00800874 	movhi	r2,33
  20ee98:	10bf2204 	addi	r2,r2,-888
  20ee9c:	18bff62e 	bgeu	r3,r2,20ee78 <_do_dtors+0x20>
}
  20eea0:	0001883a 	nop
  20eea4:	0001883a 	nop
  20eea8:	e037883a 	mov	sp,fp
  20eeac:	dfc00117 	ldw	ra,4(sp)
  20eeb0:	df000017 	ldw	fp,0(sp)
  20eeb4:	dec00204 	addi	sp,sp,8
  20eeb8:	f800283a 	ret

0020eebc <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
  20eebc:	deffff04 	addi	sp,sp,-4
  20eec0:	df000015 	stw	fp,0(sp)
  20eec4:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
#endif
}
  20eec8:	0001883a 	nop
  20eecc:	e037883a 	mov	sp,fp
  20eed0:	df000017 	ldw	fp,0(sp)
  20eed4:	dec00104 	addi	sp,sp,4
  20eed8:	f800283a 	ret

0020eedc <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
  20eedc:	defff904 	addi	sp,sp,-28
  20eee0:	dfc00615 	stw	ra,24(sp)
  20eee4:	df000515 	stw	fp,20(sp)
  20eee8:	df000504 	addi	fp,sp,20
  20eeec:	e13fff15 	stw	r4,-4(fp)
  20eef0:	e17ffe15 	stw	r5,-8(fp)
  20eef4:	e1bffd15 	stw	r6,-12(fp)
  20eef8:	e1fffc15 	stw	r7,-16(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
  20eefc:	e0800217 	ldw	r2,8(fp)
  20ef00:	d8800015 	stw	r2,0(sp)
  20ef04:	e1fffc17 	ldw	r7,-16(fp)
  20ef08:	e1bffd17 	ldw	r6,-12(fp)
  20ef0c:	e17ffe17 	ldw	r5,-8(fp)
  20ef10:	e13fff17 	ldw	r4,-4(fp)
  20ef14:	020f08c0 	call	20f08c <alt_iic_isr_register>
}  
  20ef18:	e037883a 	mov	sp,fp
  20ef1c:	dfc00117 	ldw	ra,4(sp)
  20ef20:	df000017 	ldw	fp,0(sp)
  20ef24:	dec00204 	addi	sp,sp,8
  20ef28:	f800283a 	ret

0020ef2c <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
  20ef2c:	defff904 	addi	sp,sp,-28
  20ef30:	df000615 	stw	fp,24(sp)
  20ef34:	df000604 	addi	fp,sp,24
  20ef38:	e13ffb15 	stw	r4,-20(fp)
  20ef3c:	e17ffa15 	stw	r5,-24(fp)
  20ef40:	e0bffa17 	ldw	r2,-24(fp)
  20ef44:	e0bfff15 	stw	r2,-4(fp)
  NIOS2_READ_STATUS (context);
  20ef48:	0005303a 	rdctl	r2,status
  20ef4c:	e0bffe15 	stw	r2,-8(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  20ef50:	e0fffe17 	ldw	r3,-8(fp)
  20ef54:	00bfff84 	movi	r2,-2
  20ef58:	1884703a 	and	r2,r3,r2
  20ef5c:	1001703a 	wrctl	status,r2
  return context;
  20ef60:	e0bffe17 	ldw	r2,-8(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
  20ef64:	e0bffd15 	stw	r2,-12(fp)

  alt_irq_active |= (1 << id);
  20ef68:	00c00044 	movi	r3,1
  20ef6c:	e0bfff17 	ldw	r2,-4(fp)
  20ef70:	1884983a 	sll	r2,r3,r2
  20ef74:	1007883a 	mov	r3,r2
  20ef78:	d0a70c17 	ldw	r2,-25552(gp)
  20ef7c:	1884b03a 	or	r2,r3,r2
  20ef80:	d0a70c15 	stw	r2,-25552(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
  20ef84:	d0a70c17 	ldw	r2,-25552(gp)
  20ef88:	100170fa 	wrctl	ienable,r2
  20ef8c:	e0bffd17 	ldw	r2,-12(fp)
  20ef90:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context);
  20ef94:	e0bffc17 	ldw	r2,-16(fp)
  20ef98:	1001703a 	wrctl	status,r2
}
  20ef9c:	0001883a 	nop

  alt_irq_enable_all(status);

  return 0;
  20efa0:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
}
  20efa4:	e037883a 	mov	sp,fp
  20efa8:	df000017 	ldw	fp,0(sp)
  20efac:	dec00104 	addi	sp,sp,4
  20efb0:	f800283a 	ret

0020efb4 <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
  20efb4:	defff904 	addi	sp,sp,-28
  20efb8:	df000615 	stw	fp,24(sp)
  20efbc:	df000604 	addi	fp,sp,24
  20efc0:	e13ffb15 	stw	r4,-20(fp)
  20efc4:	e17ffa15 	stw	r5,-24(fp)
  20efc8:	e0bffa17 	ldw	r2,-24(fp)
  20efcc:	e0bfff15 	stw	r2,-4(fp)
  NIOS2_READ_STATUS (context);
  20efd0:	0005303a 	rdctl	r2,status
  20efd4:	e0bffe15 	stw	r2,-8(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  20efd8:	e0fffe17 	ldw	r3,-8(fp)
  20efdc:	00bfff84 	movi	r2,-2
  20efe0:	1884703a 	and	r2,r3,r2
  20efe4:	1001703a 	wrctl	status,r2
  return context;
  20efe8:	e0bffe17 	ldw	r2,-8(fp)
  status = alt_irq_disable_all ();
  20efec:	e0bffd15 	stw	r2,-12(fp)
  alt_irq_active &= ~(1 << id);
  20eff0:	00c00044 	movi	r3,1
  20eff4:	e0bfff17 	ldw	r2,-4(fp)
  20eff8:	1884983a 	sll	r2,r3,r2
  20effc:	0084303a 	nor	r2,zero,r2
  20f000:	1007883a 	mov	r3,r2
  20f004:	d0a70c17 	ldw	r2,-25552(gp)
  20f008:	1884703a 	and	r2,r3,r2
  20f00c:	d0a70c15 	stw	r2,-25552(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
  20f010:	d0a70c17 	ldw	r2,-25552(gp)
  20f014:	100170fa 	wrctl	ienable,r2
  20f018:	e0bffd17 	ldw	r2,-12(fp)
  20f01c:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context);
  20f020:	e0bffc17 	ldw	r2,-16(fp)
  20f024:	1001703a 	wrctl	status,r2
}
  20f028:	0001883a 	nop
  return 0;
  20f02c:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
}
  20f030:	e037883a 	mov	sp,fp
  20f034:	df000017 	ldw	fp,0(sp)
  20f038:	dec00104 	addi	sp,sp,4
  20f03c:	f800283a 	ret

0020f040 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
  20f040:	defffc04 	addi	sp,sp,-16
  20f044:	df000315 	stw	fp,12(sp)
  20f048:	df000304 	addi	fp,sp,12
  20f04c:	e13ffe15 	stw	r4,-8(fp)
  20f050:	e17ffd15 	stw	r5,-12(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
  20f054:	000530fa 	rdctl	r2,ienable
  20f058:	e0bfff15 	stw	r2,-4(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
  20f05c:	00c00044 	movi	r3,1
  20f060:	e0bffd17 	ldw	r2,-12(fp)
  20f064:	1884983a 	sll	r2,r3,r2
  20f068:	1007883a 	mov	r3,r2
  20f06c:	e0bfff17 	ldw	r2,-4(fp)
  20f070:	1884703a 	and	r2,r3,r2
  20f074:	1004c03a 	cmpne	r2,r2,zero
  20f078:	10803fcc 	andi	r2,r2,255
}
  20f07c:	e037883a 	mov	sp,fp
  20f080:	df000017 	ldw	fp,0(sp)
  20f084:	dec00104 	addi	sp,sp,4
  20f088:	f800283a 	ret

0020f08c <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
  20f08c:	defff504 	addi	sp,sp,-44
  20f090:	dfc00a15 	stw	ra,40(sp)
  20f094:	df000915 	stw	fp,36(sp)
  20f098:	df000904 	addi	fp,sp,36
  20f09c:	e13ffa15 	stw	r4,-24(fp)
  20f0a0:	e17ff915 	stw	r5,-28(fp)
  20f0a4:	e1bff815 	stw	r6,-32(fp)
  20f0a8:	e1fff715 	stw	r7,-36(fp)
  int rc = -EINVAL;  
  20f0ac:	00bffa84 	movi	r2,-22
  20f0b0:	e0bfff15 	stw	r2,-4(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
  20f0b4:	e0bff917 	ldw	r2,-28(fp)
  20f0b8:	e0bffe15 	stw	r2,-8(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
  20f0bc:	e0bffe17 	ldw	r2,-8(fp)
  20f0c0:	10800808 	cmpgei	r2,r2,32
  20f0c4:	1000251e 	bne	r2,zero,20f15c <alt_iic_isr_register+0xd0>
  NIOS2_READ_STATUS (context);
  20f0c8:	0005303a 	rdctl	r2,status
  20f0cc:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  20f0d0:	e0fffc17 	ldw	r3,-16(fp)
  20f0d4:	00bfff84 	movi	r2,-2
  20f0d8:	1884703a 	and	r2,r3,r2
  20f0dc:	1001703a 	wrctl	status,r2
  return context;
  20f0e0:	e0bffc17 	ldw	r2,-16(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
  20f0e4:	e0bffd15 	stw	r2,-12(fp)

    alt_irq[id].handler = isr;
  20f0e8:	e0bffe17 	ldw	r2,-8(fp)
  20f0ec:	100890fa 	slli	r4,r2,3
  20f0f0:	e0fff817 	ldw	r3,-32(fp)
  20f0f4:	00800874 	movhi	r2,33
  20f0f8:	2085883a 	add	r2,r4,r2
  20f0fc:	10cecb15 	stw	r3,15148(r2)
    alt_irq[id].context = isr_context;
  20f100:	e0bffe17 	ldw	r2,-8(fp)
  20f104:	100890fa 	slli	r4,r2,3
  20f108:	e0fff717 	ldw	r3,-36(fp)
  20f10c:	00800874 	movhi	r2,33
  20f110:	2085883a 	add	r2,r4,r2
  20f114:	10cecc15 	stw	r3,15152(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
  20f118:	e0bff817 	ldw	r2,-32(fp)
  20f11c:	10000526 	beq	r2,zero,20f134 <alt_iic_isr_register+0xa8>
  20f120:	e0bffe17 	ldw	r2,-8(fp)
  20f124:	100b883a 	mov	r5,r2
  20f128:	e13ffa17 	ldw	r4,-24(fp)
  20f12c:	020ef2c0 	call	20ef2c <alt_ic_irq_enable>
  20f130:	00000406 	br	20f144 <alt_iic_isr_register+0xb8>
  20f134:	e0bffe17 	ldw	r2,-8(fp)
  20f138:	100b883a 	mov	r5,r2
  20f13c:	e13ffa17 	ldw	r4,-24(fp)
  20f140:	020efb40 	call	20efb4 <alt_ic_irq_disable>
  20f144:	e0bfff15 	stw	r2,-4(fp)
  20f148:	e0bffd17 	ldw	r2,-12(fp)
  20f14c:	e0bffb15 	stw	r2,-20(fp)
  NIOS2_WRITE_STATUS (context);
  20f150:	e0bffb17 	ldw	r2,-20(fp)
  20f154:	1001703a 	wrctl	status,r2
}
  20f158:	0001883a 	nop

    alt_irq_enable_all(status);
  }

  return rc; 
  20f15c:	e0bfff17 	ldw	r2,-4(fp)
}
  20f160:	e037883a 	mov	sp,fp
  20f164:	dfc00117 	ldw	ra,4(sp)
  20f168:	df000017 	ldw	fp,0(sp)
  20f16c:	dec00204 	addi	sp,sp,8
  20f170:	f800283a 	ret

0020f174 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
  20f174:	defff904 	addi	sp,sp,-28
  20f178:	dfc00615 	stw	ra,24(sp)
  20f17c:	df000515 	stw	fp,20(sp)
  20f180:	df000504 	addi	fp,sp,20
  20f184:	e13ffe15 	stw	r4,-8(fp)
  20f188:	e17ffd15 	stw	r5,-12(fp)
  20f18c:	e1bffc15 	stw	r6,-16(fp)
  20f190:	e1fffb15 	stw	r7,-20(fp)
  int old;

  old = open (name, flags, mode);
  20f194:	e1bffb17 	ldw	r6,-20(fp)
  20f198:	e17ffc17 	ldw	r5,-16(fp)
  20f19c:	e13ffd17 	ldw	r4,-12(fp)
  20f1a0:	020f3dc0 	call	20f3dc <open>
  20f1a4:	e0bfff15 	stw	r2,-4(fp)

  if (old >= 0)
  20f1a8:	e0bfff17 	ldw	r2,-4(fp)
  20f1ac:	10002016 	blt	r2,zero,20f230 <alt_open_fd+0xbc>
  {
    fd->dev      = alt_fd_list[old].dev;
  20f1b0:	e0ffff17 	ldw	r3,-4(fp)
  20f1b4:	1805883a 	mov	r2,r3
  20f1b8:	1085883a 	add	r2,r2,r2
  20f1bc:	10c5883a 	add	r2,r2,r3
  20f1c0:	100490ba 	slli	r2,r2,2
  20f1c4:	00c00874 	movhi	r3,33
  20f1c8:	10c7883a 	add	r3,r2,r3
  20f1cc:	18c33817 	ldw	r3,3296(r3)
  20f1d0:	e0bffe17 	ldw	r2,-8(fp)
  20f1d4:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
  20f1d8:	e0ffff17 	ldw	r3,-4(fp)
  20f1dc:	1805883a 	mov	r2,r3
  20f1e0:	1085883a 	add	r2,r2,r2
  20f1e4:	10c5883a 	add	r2,r2,r3
  20f1e8:	100490ba 	slli	r2,r2,2
  20f1ec:	00c00874 	movhi	r3,33
  20f1f0:	10c7883a 	add	r3,r2,r3
  20f1f4:	18c33917 	ldw	r3,3300(r3)
  20f1f8:	e0bffe17 	ldw	r2,-8(fp)
  20f1fc:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
  20f200:	e0ffff17 	ldw	r3,-4(fp)
  20f204:	1805883a 	mov	r2,r3
  20f208:	1085883a 	add	r2,r2,r2
  20f20c:	10c5883a 	add	r2,r2,r3
  20f210:	100490ba 	slli	r2,r2,2
  20f214:	00c00874 	movhi	r3,33
  20f218:	10c7883a 	add	r3,r2,r3
  20f21c:	18c33a17 	ldw	r3,3304(r3)
  20f220:	e0bffe17 	ldw	r2,-8(fp)
  20f224:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
  20f228:	e13fff17 	ldw	r4,-4(fp)
  20f22c:	020dc740 	call	20dc74 <alt_release_fd>
  }
} 
  20f230:	0001883a 	nop
  20f234:	e037883a 	mov	sp,fp
  20f238:	dfc00117 	ldw	ra,4(sp)
  20f23c:	df000017 	ldw	fp,0(sp)
  20f240:	dec00204 	addi	sp,sp,8
  20f244:	f800283a 	ret

0020f248 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
  20f248:	defffb04 	addi	sp,sp,-20
  20f24c:	dfc00415 	stw	ra,16(sp)
  20f250:	df000315 	stw	fp,12(sp)
  20f254:	df000304 	addi	fp,sp,12
  20f258:	e13fff15 	stw	r4,-4(fp)
  20f25c:	e17ffe15 	stw	r5,-8(fp)
  20f260:	e1bffd15 	stw	r6,-12(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
  20f264:	01c07fc4 	movi	r7,511
  20f268:	01800044 	movi	r6,1
  20f26c:	e17fff17 	ldw	r5,-4(fp)
  20f270:	01000874 	movhi	r4,33
  20f274:	21033b04 	addi	r4,r4,3308
  20f278:	020f1740 	call	20f174 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
  20f27c:	01c07fc4 	movi	r7,511
  20f280:	000d883a 	mov	r6,zero
  20f284:	e17ffe17 	ldw	r5,-8(fp)
  20f288:	01000874 	movhi	r4,33
  20f28c:	21033804 	addi	r4,r4,3296
  20f290:	020f1740 	call	20f174 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
  20f294:	01c07fc4 	movi	r7,511
  20f298:	01800044 	movi	r6,1
  20f29c:	e17ffd17 	ldw	r5,-12(fp)
  20f2a0:	01000874 	movhi	r4,33
  20f2a4:	21033e04 	addi	r4,r4,3320
  20f2a8:	020f1740 	call	20f174 <alt_open_fd>
}  
  20f2ac:	0001883a 	nop
  20f2b0:	e037883a 	mov	sp,fp
  20f2b4:	dfc00117 	ldw	ra,4(sp)
  20f2b8:	df000017 	ldw	fp,0(sp)
  20f2bc:	dec00204 	addi	sp,sp,8
  20f2c0:	f800283a 	ret

0020f2c4 <alt_get_errno>:
{
  20f2c4:	defffe04 	addi	sp,sp,-8
  20f2c8:	dfc00115 	stw	ra,4(sp)
  20f2cc:	df000015 	stw	fp,0(sp)
  20f2d0:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  20f2d4:	d0a00917 	ldw	r2,-32732(gp)
  20f2d8:	10000326 	beq	r2,zero,20f2e8 <alt_get_errno+0x24>
  20f2dc:	d0a00917 	ldw	r2,-32732(gp)
  20f2e0:	103ee83a 	callr	r2
  20f2e4:	00000106 	br	20f2ec <alt_get_errno+0x28>
  20f2e8:	d0a70704 	addi	r2,gp,-25572
}
  20f2ec:	e037883a 	mov	sp,fp
  20f2f0:	dfc00117 	ldw	ra,4(sp)
  20f2f4:	df000017 	ldw	fp,0(sp)
  20f2f8:	dec00204 	addi	sp,sp,8
  20f2fc:	f800283a 	ret

0020f300 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
  20f300:	defffd04 	addi	sp,sp,-12
  20f304:	df000215 	stw	fp,8(sp)
  20f308:	df000204 	addi	fp,sp,8
  20f30c:	e13ffe15 	stw	r4,-8(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
  20f310:	e0bffe17 	ldw	r2,-8(fp)
  20f314:	10800217 	ldw	r2,8(r2)
  20f318:	10d00034 	orhi	r3,r2,16384
  20f31c:	e0bffe17 	ldw	r2,-8(fp)
  20f320:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  20f324:	e03fff15 	stw	zero,-4(fp)
  20f328:	00002306 	br	20f3b8 <alt_file_locked+0xb8>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
  20f32c:	e0ffff17 	ldw	r3,-4(fp)
  20f330:	1805883a 	mov	r2,r3
  20f334:	1085883a 	add	r2,r2,r2
  20f338:	10c5883a 	add	r2,r2,r3
  20f33c:	100490ba 	slli	r2,r2,2
  20f340:	00c00874 	movhi	r3,33
  20f344:	10c7883a 	add	r3,r2,r3
  20f348:	18c33817 	ldw	r3,3296(r3)
  20f34c:	e0bffe17 	ldw	r2,-8(fp)
  20f350:	10800017 	ldw	r2,0(r2)
  20f354:	1880151e 	bne	r3,r2,20f3ac <alt_file_locked+0xac>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
  20f358:	e0ffff17 	ldw	r3,-4(fp)
  20f35c:	1805883a 	mov	r2,r3
  20f360:	1085883a 	add	r2,r2,r2
  20f364:	10c5883a 	add	r2,r2,r3
  20f368:	100490ba 	slli	r2,r2,2
  20f36c:	00c00874 	movhi	r3,33
  20f370:	10c7883a 	add	r3,r2,r3
  20f374:	18833a17 	ldw	r2,3304(r3)
    if ((alt_fd_list[i].dev == fd->dev) &&
  20f378:	10000c0e 	bge	r2,zero,20f3ac <alt_file_locked+0xac>
        (&alt_fd_list[i] != fd))
  20f37c:	e0ffff17 	ldw	r3,-4(fp)
  20f380:	1805883a 	mov	r2,r3
  20f384:	1085883a 	add	r2,r2,r2
  20f388:	10c5883a 	add	r2,r2,r3
  20f38c:	100490ba 	slli	r2,r2,2
  20f390:	00c00874 	movhi	r3,33
  20f394:	18c33804 	addi	r3,r3,3296
  20f398:	10c5883a 	add	r2,r2,r3
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
  20f39c:	e0fffe17 	ldw	r3,-8(fp)
  20f3a0:	18800226 	beq	r3,r2,20f3ac <alt_file_locked+0xac>
    {
      return -EACCES;
  20f3a4:	00bffcc4 	movi	r2,-13
  20f3a8:	00000806 	br	20f3cc <alt_file_locked+0xcc>
  for (i = 0; i <= alt_max_fd; i++)
  20f3ac:	e0bfff17 	ldw	r2,-4(fp)
  20f3b0:	10800044 	addi	r2,r2,1
  20f3b4:	e0bfff15 	stw	r2,-4(fp)
  20f3b8:	d0a00817 	ldw	r2,-32736(gp)
  20f3bc:	1007883a 	mov	r3,r2
  20f3c0:	e0bfff17 	ldw	r2,-4(fp)
  20f3c4:	18bfd92e 	bgeu	r3,r2,20f32c <alt_file_locked+0x2c>
    }
  }
  
  /* The device is not locked */
 
  return 0;
  20f3c8:	0005883a 	mov	r2,zero
}
  20f3cc:	e037883a 	mov	sp,fp
  20f3d0:	df000017 	ldw	fp,0(sp)
  20f3d4:	dec00104 	addi	sp,sp,4
  20f3d8:	f800283a 	ret

0020f3dc <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
  20f3dc:	defff604 	addi	sp,sp,-40
  20f3e0:	dfc00915 	stw	ra,36(sp)
  20f3e4:	df000815 	stw	fp,32(sp)
  20f3e8:	df000804 	addi	fp,sp,32
  20f3ec:	e13ffa15 	stw	r4,-24(fp)
  20f3f0:	e17ff915 	stw	r5,-28(fp)
  20f3f4:	e1bff815 	stw	r6,-32(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
  20f3f8:	00bfffc4 	movi	r2,-1
  20f3fc:	e0bffe15 	stw	r2,-8(fp)
  int status = -ENODEV;
  20f400:	00bffb44 	movi	r2,-19
  20f404:	e0bffd15 	stw	r2,-12(fp)
  int isafs = 0;
  20f408:	e03ffc15 	stw	zero,-16(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
  20f40c:	d1600604 	addi	r5,gp,-32744
  20f410:	e13ffa17 	ldw	r4,-24(fp)
  20f414:	020f7300 	call	20f730 <alt_find_dev>
  20f418:	e0bfff15 	stw	r2,-4(fp)
  20f41c:	e0bfff17 	ldw	r2,-4(fp)
  20f420:	1000051e 	bne	r2,zero,20f438 <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
  20f424:	e13ffa17 	ldw	r4,-24(fp)
  20f428:	020f7c00 	call	20f7c0 <alt_find_file>
  20f42c:	e0bfff15 	stw	r2,-4(fp)
    isafs = 1;
  20f430:	00800044 	movi	r2,1
  20f434:	e0bffc15 	stw	r2,-16(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
  20f438:	e0bfff17 	ldw	r2,-4(fp)
  20f43c:	10002c26 	beq	r2,zero,20f4f0 <open+0x114>
  {
    if ((index = alt_get_fd (dev)) < 0)
  20f440:	e13fff17 	ldw	r4,-4(fp)
  20f444:	020f8c80 	call	20f8c8 <alt_get_fd>
  20f448:	e0bffe15 	stw	r2,-8(fp)
  20f44c:	e0bffe17 	ldw	r2,-8(fp)
  20f450:	1000030e 	bge	r2,zero,20f460 <open+0x84>
    {
      status = index;
  20f454:	e0bffe17 	ldw	r2,-8(fp)
  20f458:	e0bffd15 	stw	r2,-12(fp)
  20f45c:	00002606 	br	20f4f8 <open+0x11c>
    }
    else
    {
      fd = &alt_fd_list[index];
  20f460:	e0fffe17 	ldw	r3,-8(fp)
  20f464:	1805883a 	mov	r2,r3
  20f468:	1085883a 	add	r2,r2,r2
  20f46c:	10c5883a 	add	r2,r2,r3
  20f470:	100490ba 	slli	r2,r2,2
  20f474:	00c00874 	movhi	r3,33
  20f478:	18c33804 	addi	r3,r3,3296
  20f47c:	10c5883a 	add	r2,r2,r3
  20f480:	e0bffb15 	stw	r2,-20(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
  20f484:	e0fff917 	ldw	r3,-28(fp)
  20f488:	00900034 	movhi	r2,16384
  20f48c:	10bfffc4 	addi	r2,r2,-1
  20f490:	1886703a 	and	r3,r3,r2
  20f494:	e0bffb17 	ldw	r2,-20(fp)
  20f498:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
  20f49c:	e0bffc17 	ldw	r2,-16(fp)
  20f4a0:	1000051e 	bne	r2,zero,20f4b8 <open+0xdc>
  20f4a4:	e13ffb17 	ldw	r4,-20(fp)
  20f4a8:	020f3000 	call	20f300 <alt_file_locked>
  20f4ac:	e0bffd15 	stw	r2,-12(fp)
  20f4b0:	e0bffd17 	ldw	r2,-12(fp)
  20f4b4:	10001016 	blt	r2,zero,20f4f8 <open+0x11c>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
  20f4b8:	e0bfff17 	ldw	r2,-4(fp)
  20f4bc:	10800317 	ldw	r2,12(r2)
  20f4c0:	10000826 	beq	r2,zero,20f4e4 <open+0x108>
  20f4c4:	e0bfff17 	ldw	r2,-4(fp)
  20f4c8:	10800317 	ldw	r2,12(r2)
  20f4cc:	e1fff817 	ldw	r7,-32(fp)
  20f4d0:	e1bff917 	ldw	r6,-28(fp)
  20f4d4:	e17ffa17 	ldw	r5,-24(fp)
  20f4d8:	e13ffb17 	ldw	r4,-20(fp)
  20f4dc:	103ee83a 	callr	r2
  20f4e0:	00000106 	br	20f4e8 <open+0x10c>
  20f4e4:	0005883a 	mov	r2,zero
  20f4e8:	e0bffd15 	stw	r2,-12(fp)
  20f4ec:	00000206 	br	20f4f8 <open+0x11c>
      }
    }
  }
  else
  {
    status = -ENODEV;
  20f4f0:	00bffb44 	movi	r2,-19
  20f4f4:	e0bffd15 	stw	r2,-12(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
  20f4f8:	e0bffd17 	ldw	r2,-12(fp)
  20f4fc:	1000090e 	bge	r2,zero,20f524 <open+0x148>
  {
    alt_release_fd (index);  
  20f500:	e13ffe17 	ldw	r4,-8(fp)
  20f504:	020dc740 	call	20dc74 <alt_release_fd>
    ALT_ERRNO = -status;
  20f508:	020f2c40 	call	20f2c4 <alt_get_errno>
  20f50c:	1007883a 	mov	r3,r2
  20f510:	e0bffd17 	ldw	r2,-12(fp)
  20f514:	0085c83a 	sub	r2,zero,r2
  20f518:	18800015 	stw	r2,0(r3)
    return -1;
  20f51c:	00bfffc4 	movi	r2,-1
  20f520:	00000106 	br	20f528 <open+0x14c>
  }
  
  /* return the reference upon success */

  return index;
  20f524:	e0bffe17 	ldw	r2,-8(fp)
}
  20f528:	e037883a 	mov	sp,fp
  20f52c:	dfc00117 	ldw	ra,4(sp)
  20f530:	df000017 	ldw	fp,0(sp)
  20f534:	dec00204 	addi	sp,sp,8
  20f538:	f800283a 	ret

0020f53c <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
  20f53c:	defffa04 	addi	sp,sp,-24
  20f540:	df000515 	stw	fp,20(sp)
  20f544:	df000504 	addi	fp,sp,20
  20f548:	e13ffb15 	stw	r4,-20(fp)
  NIOS2_READ_STATUS (context);
  20f54c:	0005303a 	rdctl	r2,status
  20f550:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  20f554:	e0fffc17 	ldw	r3,-16(fp)
  20f558:	00bfff84 	movi	r2,-2
  20f55c:	1884703a 	and	r2,r3,r2
  20f560:	1001703a 	wrctl	status,r2
  return context;
  20f564:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
  20f568:	e0bfff15 	stw	r2,-4(fp)
  alt_llist_remove (&alarm->llist);
  20f56c:	e0bffb17 	ldw	r2,-20(fp)
  20f570:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
  20f574:	e0bffd17 	ldw	r2,-12(fp)
  20f578:	10800017 	ldw	r2,0(r2)
  20f57c:	e0fffd17 	ldw	r3,-12(fp)
  20f580:	18c00117 	ldw	r3,4(r3)
  20f584:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
  20f588:	e0bffd17 	ldw	r2,-12(fp)
  20f58c:	10800117 	ldw	r2,4(r2)
  20f590:	e0fffd17 	ldw	r3,-12(fp)
  20f594:	18c00017 	ldw	r3,0(r3)
  20f598:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
  20f59c:	e0bffd17 	ldw	r2,-12(fp)
  20f5a0:	e0fffd17 	ldw	r3,-12(fp)
  20f5a4:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
  20f5a8:	e0bffd17 	ldw	r2,-12(fp)
  20f5ac:	e0fffd17 	ldw	r3,-12(fp)
  20f5b0:	10c00015 	stw	r3,0(r2)
} 
  20f5b4:	0001883a 	nop
  20f5b8:	e0bfff17 	ldw	r2,-4(fp)
  20f5bc:	e0bffe15 	stw	r2,-8(fp)
  NIOS2_WRITE_STATUS (context);
  20f5c0:	e0bffe17 	ldw	r2,-8(fp)
  20f5c4:	1001703a 	wrctl	status,r2
}
  20f5c8:	0001883a 	nop
  alt_irq_enable_all (irq_context);
}
  20f5cc:	0001883a 	nop
  20f5d0:	e037883a 	mov	sp,fp
  20f5d4:	df000017 	ldw	fp,0(sp)
  20f5d8:	dec00104 	addi	sp,sp,4
  20f5dc:	f800283a 	ret

0020f5e0 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
  20f5e0:	defff904 	addi	sp,sp,-28
  20f5e4:	dfc00615 	stw	ra,24(sp)
  20f5e8:	df000515 	stw	fp,20(sp)
  20f5ec:	dc400415 	stw	r17,16(sp)
  20f5f0:	dc000315 	stw	r16,12(sp)
  20f5f4:	df000504 	addi	fp,sp,20
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
  20f5f8:	d0a00c17 	ldw	r2,-32720(gp)
  20f5fc:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
  20f600:	d1270e17 	ldw	r4,-25544(gp)
  20f604:	d1670f17 	ldw	r5,-25540(gp)
  20f608:	01800044 	movi	r6,1
  20f60c:	000f883a 	mov	r7,zero
  20f610:	2185883a 	add	r2,r4,r6
  20f614:	1111803a 	cmpltu	r8,r2,r4
  20f618:	29c7883a 	add	r3,r5,r7
  20f61c:	40c9883a 	add	r4,r8,r3
  20f620:	2007883a 	mov	r3,r4
  20f624:	1009883a 	mov	r4,r2
  20f628:	180b883a 	mov	r5,r3
  20f62c:	d1270e15 	stw	r4,-25544(gp)
  20f630:	d1670f15 	stw	r5,-25540(gp)
 
  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
  20f634:	00002906 	br	20f6dc <alt_tick+0xfc>
  {
    next = (alt_alarm*) alarm->llist.next;
  20f638:	e0bffd17 	ldw	r2,-12(fp)
  20f63c:	10800017 	ldw	r2,0(r2)
  20f640:	e0bffc15 	stw	r2,-16(fp)
    
    /* if the alarm period has expired, make the callback */    
    if (alarm->time <= _alt_nticks)
  20f644:	e13ffd17 	ldw	r4,-12(fp)
  20f648:	20800217 	ldw	r2,8(r4)
  20f64c:	20c00317 	ldw	r3,12(r4)
  20f650:	d1270e17 	ldw	r4,-25544(gp)
  20f654:	d1670f17 	ldw	r5,-25540(gp)
  20f658:	28c01e36 	bltu	r5,r3,20f6d4 <alt_tick+0xf4>
  20f65c:	1940011e 	bne	r3,r5,20f664 <alt_tick+0x84>
  20f660:	20801c36 	bltu	r4,r2,20f6d4 <alt_tick+0xf4>
    {
      next_callback = alarm->callback (alarm->context);
  20f664:	e0bffd17 	ldw	r2,-12(fp)
  20f668:	10800417 	ldw	r2,16(r2)
  20f66c:	e0fffd17 	ldw	r3,-12(fp)
  20f670:	18c00517 	ldw	r3,20(r3)
  20f674:	1809883a 	mov	r4,r3
  20f678:	103ee83a 	callr	r2
  20f67c:	e0bffb15 	stw	r2,-20(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
  20f680:	e0bffb17 	ldw	r2,-20(fp)
  20f684:	1000031e 	bne	r2,zero,20f694 <alt_tick+0xb4>
      {
        alt_alarm_stop (alarm);
  20f688:	e13ffd17 	ldw	r4,-12(fp)
  20f68c:	020f53c0 	call	20f53c <alt_alarm_stop>
  20f690:	00001006 	br	20f6d4 <alt_tick+0xf4>
      }
      else
      {
        alarm->time += next_callback;
  20f694:	e0bffd17 	ldw	r2,-12(fp)
  20f698:	11000217 	ldw	r4,8(r2)
  20f69c:	11400317 	ldw	r5,12(r2)
  20f6a0:	e0bffb17 	ldw	r2,-20(fp)
  20f6a4:	1021883a 	mov	r16,r2
  20f6a8:	0023883a 	mov	r17,zero
  20f6ac:	2405883a 	add	r2,r4,r16
  20f6b0:	110d803a 	cmpltu	r6,r2,r4
  20f6b4:	2c47883a 	add	r3,r5,r17
  20f6b8:	30c9883a 	add	r4,r6,r3
  20f6bc:	2007883a 	mov	r3,r4
  20f6c0:	1009883a 	mov	r4,r2
  20f6c4:	180b883a 	mov	r5,r3
  20f6c8:	e0bffd17 	ldw	r2,-12(fp)
  20f6cc:	11000215 	stw	r4,8(r2)
  20f6d0:	11400315 	stw	r5,12(r2)
      }
    }
    alarm = next;
  20f6d4:	e0bffc17 	ldw	r2,-16(fp)
  20f6d8:	e0bffd15 	stw	r2,-12(fp)
  while (alarm != (alt_alarm*) &alt_alarm_list)
  20f6dc:	e0fffd17 	ldw	r3,-12(fp)
  20f6e0:	d0a00c04 	addi	r2,gp,-32720
  20f6e4:	18bfd41e 	bne	r3,r2,20f638 <alt_tick+0x58>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
  20f6e8:	0001883a 	nop
}
  20f6ec:	0001883a 	nop
  20f6f0:	e6fffe04 	addi	sp,fp,-8
  20f6f4:	dfc00317 	ldw	ra,12(sp)
  20f6f8:	df000217 	ldw	fp,8(sp)
  20f6fc:	dc400117 	ldw	r17,4(sp)
  20f700:	dc000017 	ldw	r16,0(sp)
  20f704:	dec00404 	addi	sp,sp,16
  20f708:	f800283a 	ret

0020f70c <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
  20f70c:	deffff04 	addi	sp,sp,-4
  20f710:	df000015 	stw	fp,0(sp)
  20f714:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
  20f718:	000170fa 	wrctl	ienable,zero
}
  20f71c:	0001883a 	nop
  20f720:	e037883a 	mov	sp,fp
  20f724:	df000017 	ldw	fp,0(sp)
  20f728:	dec00104 	addi	sp,sp,4
  20f72c:	f800283a 	ret

0020f730 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
  20f730:	defffa04 	addi	sp,sp,-24
  20f734:	dfc00515 	stw	ra,20(sp)
  20f738:	df000415 	stw	fp,16(sp)
  20f73c:	df000404 	addi	fp,sp,16
  20f740:	e13ffd15 	stw	r4,-12(fp)
  20f744:	e17ffc15 	stw	r5,-16(fp)
  alt_dev* next = (alt_dev*) llist->next;
  20f748:	e0bffc17 	ldw	r2,-16(fp)
  20f74c:	10800017 	ldw	r2,0(r2)
  20f750:	e0bfff15 	stw	r2,-4(fp)
  alt_32 len;

  len  = strlen(name) + 1;
  20f754:	e13ffd17 	ldw	r4,-12(fp)
  20f758:	02004000 	call	200400 <strlen>
  20f75c:	10800044 	addi	r2,r2,1
  20f760:	e0bffe15 	stw	r2,-8(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
  20f764:	00000d06 	br	20f79c <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
  20f768:	e0bfff17 	ldw	r2,-4(fp)
  20f76c:	10800217 	ldw	r2,8(r2)
  20f770:	e0fffe17 	ldw	r3,-8(fp)
  20f774:	180d883a 	mov	r6,r3
  20f778:	e17ffd17 	ldw	r5,-12(fp)
  20f77c:	1009883a 	mov	r4,r2
  20f780:	020fa600 	call	20fa60 <memcmp>
  20f784:	1000021e 	bne	r2,zero,20f790 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
  20f788:	e0bfff17 	ldw	r2,-4(fp)
  20f78c:	00000706 	br	20f7ac <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
  20f790:	e0bfff17 	ldw	r2,-4(fp)
  20f794:	10800017 	ldw	r2,0(r2)
  20f798:	e0bfff15 	stw	r2,-4(fp)
  while (next != (alt_dev*) llist)
  20f79c:	e0ffff17 	ldw	r3,-4(fp)
  20f7a0:	e0bffc17 	ldw	r2,-16(fp)
  20f7a4:	18bff01e 	bne	r3,r2,20f768 <alt_find_dev+0x38>
  }
  
  /* No match found */
  
  return NULL;
  20f7a8:	0005883a 	mov	r2,zero
}
  20f7ac:	e037883a 	mov	sp,fp
  20f7b0:	dfc00117 	ldw	ra,4(sp)
  20f7b4:	df000017 	ldw	fp,0(sp)
  20f7b8:	dec00204 	addi	sp,sp,8
  20f7bc:	f800283a 	ret

0020f7c0 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
  20f7c0:	defffb04 	addi	sp,sp,-20
  20f7c4:	dfc00415 	stw	ra,16(sp)
  20f7c8:	df000315 	stw	fp,12(sp)
  20f7cc:	df000304 	addi	fp,sp,12
  20f7d0:	e13ffd15 	stw	r4,-12(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
  20f7d4:	d0a00417 	ldw	r2,-32752(gp)
  20f7d8:	e0bfff15 	stw	r2,-4(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
  20f7dc:	00003106 	br	20f8a4 <alt_find_file+0xe4>
  {
    len = strlen(next->name);
  20f7e0:	e0bfff17 	ldw	r2,-4(fp)
  20f7e4:	10800217 	ldw	r2,8(r2)
  20f7e8:	1009883a 	mov	r4,r2
  20f7ec:	02004000 	call	200400 <strlen>
  20f7f0:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
  20f7f4:	e0bfff17 	ldw	r2,-4(fp)
  20f7f8:	10c00217 	ldw	r3,8(r2)
  20f7fc:	e0bffe17 	ldw	r2,-8(fp)
  20f800:	10bfffc4 	addi	r2,r2,-1
  20f804:	1885883a 	add	r2,r3,r2
  20f808:	10800003 	ldbu	r2,0(r2)
  20f80c:	10803fcc 	andi	r2,r2,255
  20f810:	1080201c 	xori	r2,r2,128
  20f814:	10bfe004 	addi	r2,r2,-128
  20f818:	10800bd8 	cmpnei	r2,r2,47
  20f81c:	1000031e 	bne	r2,zero,20f82c <alt_find_file+0x6c>
    {
      len -= 1;
  20f820:	e0bffe17 	ldw	r2,-8(fp)
  20f824:	10bfffc4 	addi	r2,r2,-1
  20f828:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
  20f82c:	e0bffe17 	ldw	r2,-8(fp)
  20f830:	e0fffd17 	ldw	r3,-12(fp)
  20f834:	1885883a 	add	r2,r3,r2
  20f838:	10800003 	ldbu	r2,0(r2)
  20f83c:	10803fcc 	andi	r2,r2,255
  20f840:	1080201c 	xori	r2,r2,128
  20f844:	10bfe004 	addi	r2,r2,-128
  20f848:	10800be0 	cmpeqi	r2,r2,47
  20f84c:	1000081e 	bne	r2,zero,20f870 <alt_find_file+0xb0>
  20f850:	e0bffe17 	ldw	r2,-8(fp)
  20f854:	e0fffd17 	ldw	r3,-12(fp)
  20f858:	1885883a 	add	r2,r3,r2
  20f85c:	10800003 	ldbu	r2,0(r2)
  20f860:	10803fcc 	andi	r2,r2,255
  20f864:	1080201c 	xori	r2,r2,128
  20f868:	10bfe004 	addi	r2,r2,-128
  20f86c:	10000a1e 	bne	r2,zero,20f898 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
  20f870:	e0bfff17 	ldw	r2,-4(fp)
  20f874:	10800217 	ldw	r2,8(r2)
  20f878:	e0fffe17 	ldw	r3,-8(fp)
  20f87c:	180d883a 	mov	r6,r3
  20f880:	e17ffd17 	ldw	r5,-12(fp)
  20f884:	1009883a 	mov	r4,r2
  20f888:	020fa600 	call	20fa60 <memcmp>
    if (((name[len] == '/') || (name[len] == '\0')) && 
  20f88c:	1000021e 	bne	r2,zero,20f898 <alt_find_file+0xd8>
    {
      /* match found */

      return next;
  20f890:	e0bfff17 	ldw	r2,-4(fp)
  20f894:	00000706 	br	20f8b4 <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
  20f898:	e0bfff17 	ldw	r2,-4(fp)
  20f89c:	10800017 	ldw	r2,0(r2)
  20f8a0:	e0bfff15 	stw	r2,-4(fp)
  while (next != (alt_dev*) &alt_fs_list)
  20f8a4:	e0ffff17 	ldw	r3,-4(fp)
  20f8a8:	d0a00404 	addi	r2,gp,-32752
  20f8ac:	18bfcc1e 	bne	r3,r2,20f7e0 <alt_find_file+0x20>
  }
  
  /* No match found */
  
  return NULL;     
  20f8b0:	0005883a 	mov	r2,zero
}
  20f8b4:	e037883a 	mov	sp,fp
  20f8b8:	dfc00117 	ldw	ra,4(sp)
  20f8bc:	df000017 	ldw	fp,0(sp)
  20f8c0:	dec00204 	addi	sp,sp,8
  20f8c4:	f800283a 	ret

0020f8c8 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
  20f8c8:	defffc04 	addi	sp,sp,-16
  20f8cc:	df000315 	stw	fp,12(sp)
  20f8d0:	df000304 	addi	fp,sp,12
  20f8d4:	e13ffd15 	stw	r4,-12(fp)
  alt_32 i;
  int rc = -EMFILE;
  20f8d8:	00bffa04 	movi	r2,-24
  20f8dc:	e0bffe15 	stw	r2,-8(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
  20f8e0:	e03fff15 	stw	zero,-4(fp)
  20f8e4:	00001d06 	br	20f95c <alt_get_fd+0x94>
  {
    if (!alt_fd_list[i].dev)
  20f8e8:	e0ffff17 	ldw	r3,-4(fp)
  20f8ec:	1805883a 	mov	r2,r3
  20f8f0:	1085883a 	add	r2,r2,r2
  20f8f4:	10c5883a 	add	r2,r2,r3
  20f8f8:	100490ba 	slli	r2,r2,2
  20f8fc:	00c00874 	movhi	r3,33
  20f900:	10c7883a 	add	r3,r2,r3
  20f904:	18833817 	ldw	r2,3296(r3)
  20f908:	1000111e 	bne	r2,zero,20f950 <alt_get_fd+0x88>
    {
      alt_fd_list[i].dev = dev;
  20f90c:	e0ffff17 	ldw	r3,-4(fp)
  20f910:	1805883a 	mov	r2,r3
  20f914:	1085883a 	add	r2,r2,r2
  20f918:	10c5883a 	add	r2,r2,r3
  20f91c:	100490ba 	slli	r2,r2,2
  20f920:	e13ffd17 	ldw	r4,-12(fp)
  20f924:	00c00874 	movhi	r3,33
  20f928:	10c7883a 	add	r3,r2,r3
  20f92c:	19033815 	stw	r4,3296(r3)
      if (i > alt_max_fd)
  20f930:	d0e00817 	ldw	r3,-32736(gp)
  20f934:	e0bfff17 	ldw	r2,-4(fp)
  20f938:	1880020e 	bge	r3,r2,20f944 <alt_get_fd+0x7c>
      {
        alt_max_fd = i;
  20f93c:	e0bfff17 	ldw	r2,-4(fp)
  20f940:	d0a00815 	stw	r2,-32736(gp)
      }
      rc = i;
  20f944:	e0bfff17 	ldw	r2,-4(fp)
  20f948:	e0bffe15 	stw	r2,-8(fp)
      goto alt_get_fd_exit;
  20f94c:	00000706 	br	20f96c <alt_get_fd+0xa4>
  for (i = 0; i < ALT_MAX_FD; i++)
  20f950:	e0bfff17 	ldw	r2,-4(fp)
  20f954:	10800044 	addi	r2,r2,1
  20f958:	e0bfff15 	stw	r2,-4(fp)
  20f95c:	e0bfff17 	ldw	r2,-4(fp)
  20f960:	10800810 	cmplti	r2,r2,32
  20f964:	103fe01e 	bne	r2,zero,20f8e8 <alt_get_fd+0x20>
    }
  }

 alt_get_fd_exit:
  20f968:	0001883a 	nop
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
  20f96c:	e0bffe17 	ldw	r2,-8(fp)
}
  20f970:	e037883a 	mov	sp,fp
  20f974:	df000017 	ldw	fp,0(sp)
  20f978:	dec00104 	addi	sp,sp,4
  20f97c:	f800283a 	ret

0020f980 <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
  20f980:	defffe04 	addi	sp,sp,-8
  20f984:	df000115 	stw	fp,4(sp)
  20f988:	df000104 	addi	fp,sp,4
  20f98c:	e13fff15 	stw	r4,-4(fp)
  switch (cause) {
  20f990:	e0bfff17 	ldw	r2,-4(fp)
  20f994:	10bffe84 	addi	r2,r2,-6
  20f998:	10c00428 	cmpgeui	r3,r2,16
  20f99c:	1800191e 	bne	r3,zero,20fa04 <alt_exception_cause_generated_bad_addr+0x84>
  20f9a0:	100690ba 	slli	r3,r2,2
  20f9a4:	00800874 	movhi	r2,33
  20f9a8:	1885883a 	add	r2,r3,r2
  20f9ac:	10be6d17 	ldw	r2,-1612(r2)
  20f9b0:	1000683a 	jmp	r2
  20f9b4:	0020f9f4 	movhi	zero,33767
  20f9b8:	0020f9f4 	movhi	zero,33767
  20f9bc:	0020fa04 	movi	zero,-31768
  20f9c0:	0020fa04 	movi	zero,-31768
  20f9c4:	0020fa04 	movi	zero,-31768
  20f9c8:	0020f9f4 	movhi	zero,33767
  20f9cc:	0020f9fc 	xorhi	zero,zero,33767
  20f9d0:	0020fa04 	movi	zero,-31768
  20f9d4:	0020f9f4 	movhi	zero,33767
  20f9d8:	0020f9f4 	movhi	zero,33767
  20f9dc:	0020fa04 	movi	zero,-31768
  20f9e0:	0020f9f4 	movhi	zero,33767
  20f9e4:	0020f9fc 	xorhi	zero,zero,33767
  20f9e8:	0020fa04 	movi	zero,-31768
  20f9ec:	0020fa04 	movi	zero,-31768
  20f9f0:	0020f9f4 	movhi	zero,33767
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
  20f9f4:	00800044 	movi	r2,1
  20f9f8:	00000306 	br	20fa08 <alt_exception_cause_generated_bad_addr+0x88>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
  20f9fc:	0005883a 	mov	r2,zero
  20fa00:	00000106 	br	20fa08 <alt_exception_cause_generated_bad_addr+0x88>

  default:
    return 0;
  20fa04:	0005883a 	mov	r2,zero
  }
}
  20fa08:	e037883a 	mov	sp,fp
  20fa0c:	df000017 	ldw	fp,0(sp)
  20fa10:	dec00104 	addi	sp,sp,4
  20fa14:	f800283a 	ret

0020fa18 <atexit>:
  20fa18:	200b883a 	mov	r5,r4
  20fa1c:	000f883a 	mov	r7,zero
  20fa20:	000d883a 	mov	r6,zero
  20fa24:	0009883a 	mov	r4,zero
  20fa28:	020fad81 	jmpi	20fad8 <__register_exitproc>

0020fa2c <exit>:
  20fa2c:	defffe04 	addi	sp,sp,-8
  20fa30:	000b883a 	mov	r5,zero
  20fa34:	dc000015 	stw	r16,0(sp)
  20fa38:	dfc00115 	stw	ra,4(sp)
  20fa3c:	2021883a 	mov	r16,r4
  20fa40:	020fb680 	call	20fb68 <__call_exitprocs>
  20fa44:	00800874 	movhi	r2,33
  20fa48:	1107b017 	ldw	r4,7872(r2)
  20fa4c:	20800f17 	ldw	r2,60(r4)
  20fa50:	10000126 	beq	r2,zero,20fa58 <exit+0x2c>
  20fa54:	103ee83a 	callr	r2
  20fa58:	8009883a 	mov	r4,r16
  20fa5c:	020d4c00 	call	20d4c0 <_exit>

0020fa60 <memcmp>:
  20fa60:	30800130 	cmpltui	r2,r6,4
  20fa64:	10000b1e 	bne	r2,zero,20fa94 <memcmp+0x34>
  20fa68:	2144b03a 	or	r2,r4,r5
  20fa6c:	108000cc 	andi	r2,r2,3
  20fa70:	1000171e 	bne	r2,zero,20fad0 <memcmp+0x70>
  20fa74:	20c00017 	ldw	r3,0(r4)
  20fa78:	28800017 	ldw	r2,0(r5)
  20fa7c:	1880141e 	bne	r3,r2,20fad0 <memcmp+0x70>
  20fa80:	31bfff04 	addi	r6,r6,-4
  20fa84:	30800128 	cmpgeui	r2,r6,4
  20fa88:	21000104 	addi	r4,r4,4
  20fa8c:	29400104 	addi	r5,r5,4
  20fa90:	103ff81e 	bne	r2,zero,20fa74 <memcmp+0x14>
  20fa94:	30bfffc4 	addi	r2,r6,-1
  20fa98:	30000b26 	beq	r6,zero,20fac8 <memcmp+0x68>
  20fa9c:	11800044 	addi	r6,r2,1
  20faa0:	218d883a 	add	r6,r4,r6
  20faa4:	00000106 	br	20faac <memcmp+0x4c>
  20faa8:	21800726 	beq	r4,r6,20fac8 <memcmp+0x68>
  20faac:	20800003 	ldbu	r2,0(r4)
  20fab0:	28c00003 	ldbu	r3,0(r5)
  20fab4:	21000044 	addi	r4,r4,1
  20fab8:	29400044 	addi	r5,r5,1
  20fabc:	10fffa26 	beq	r2,r3,20faa8 <memcmp+0x48>
  20fac0:	10c5c83a 	sub	r2,r2,r3
  20fac4:	f800283a 	ret
  20fac8:	0005883a 	mov	r2,zero
  20facc:	f800283a 	ret
  20fad0:	30bfffc4 	addi	r2,r6,-1
  20fad4:	003ff106 	br	20fa9c <memcmp+0x3c>

0020fad8 <__register_exitproc>:
  20fad8:	00800874 	movhi	r2,33
  20fadc:	10c7b017 	ldw	r3,7872(r2)
  20fae0:	18805217 	ldw	r2,328(r3)
  20fae4:	10001726 	beq	r2,zero,20fb44 <__register_exitproc+0x6c>
  20fae8:	10c00117 	ldw	r3,4(r2)
  20faec:	1a000808 	cmpgei	r8,r3,32
  20faf0:	40001b1e 	bne	r8,zero,20fb60 <__register_exitproc+0x88>
  20faf4:	20000b26 	beq	r4,zero,20fb24 <__register_exitproc+0x4c>
  20faf8:	181090ba 	slli	r8,r3,2
  20fafc:	02400044 	movi	r9,1
  20fb00:	48d2983a 	sll	r9,r9,r3
  20fb04:	1211883a 	add	r8,r2,r8
  20fb08:	41802215 	stw	r6,136(r8)
  20fb0c:	11806217 	ldw	r6,392(r2)
  20fb10:	21000098 	cmpnei	r4,r4,2
  20fb14:	324cb03a 	or	r6,r6,r9
  20fb18:	11806215 	stw	r6,392(r2)
  20fb1c:	41c04215 	stw	r7,264(r8)
  20fb20:	20000b26 	beq	r4,zero,20fb50 <__register_exitproc+0x78>
  20fb24:	19000084 	addi	r4,r3,2
  20fb28:	200890ba 	slli	r4,r4,2
  20fb2c:	18c00044 	addi	r3,r3,1
  20fb30:	10c00115 	stw	r3,4(r2)
  20fb34:	1105883a 	add	r2,r2,r4
  20fb38:	11400015 	stw	r5,0(r2)
  20fb3c:	0005883a 	mov	r2,zero
  20fb40:	f800283a 	ret
  20fb44:	18805304 	addi	r2,r3,332
  20fb48:	18805215 	stw	r2,328(r3)
  20fb4c:	003fe606 	br	20fae8 <__register_exitproc+0x10>
  20fb50:	11006317 	ldw	r4,396(r2)
  20fb54:	2252b03a 	or	r9,r4,r9
  20fb58:	12406315 	stw	r9,396(r2)
  20fb5c:	003ff106 	br	20fb24 <__register_exitproc+0x4c>
  20fb60:	00bfffc4 	movi	r2,-1
  20fb64:	f800283a 	ret

0020fb68 <__call_exitprocs>:
  20fb68:	defff704 	addi	sp,sp,-36
  20fb6c:	00800874 	movhi	r2,33
  20fb70:	dcc00315 	stw	r19,12(sp)
  20fb74:	14c7b017 	ldw	r19,7872(r2)
  20fb78:	dc800215 	stw	r18,8(sp)
  20fb7c:	dfc00815 	stw	ra,32(sp)
  20fb80:	9c805217 	ldw	r18,328(r19)
  20fb84:	ddc00715 	stw	r23,28(sp)
  20fb88:	dd800615 	stw	r22,24(sp)
  20fb8c:	dd400515 	stw	r21,20(sp)
  20fb90:	dd000415 	stw	r20,16(sp)
  20fb94:	dc400115 	stw	r17,4(sp)
  20fb98:	dc000015 	stw	r16,0(sp)
  20fb9c:	90001026 	beq	r18,zero,20fbe0 <__call_exitprocs+0x78>
  20fba0:	202b883a 	mov	r21,r4
  20fba4:	282d883a 	mov	r22,r5
  20fba8:	05000044 	movi	r20,1
  20fbac:	94000117 	ldw	r16,4(r18)
  20fbb0:	847fffc4 	addi	r17,r16,-1
  20fbb4:	88000a16 	blt	r17,zero,20fbe0 <__call_exitprocs+0x78>
  20fbb8:	84000044 	addi	r16,r16,1
  20fbbc:	802090ba 	slli	r16,r16,2
  20fbc0:	9421883a 	add	r16,r18,r16
  20fbc4:	b0001126 	beq	r22,zero,20fc0c <__call_exitprocs+0xa4>
  20fbc8:	80804017 	ldw	r2,256(r16)
  20fbcc:	15800f26 	beq	r2,r22,20fc0c <__call_exitprocs+0xa4>
  20fbd0:	8c7fffc4 	addi	r17,r17,-1
  20fbd4:	88bfffd8 	cmpnei	r2,r17,-1
  20fbd8:	843fff04 	addi	r16,r16,-4
  20fbdc:	103ff91e 	bne	r2,zero,20fbc4 <__call_exitprocs+0x5c>
  20fbe0:	dfc00817 	ldw	ra,32(sp)
  20fbe4:	ddc00717 	ldw	r23,28(sp)
  20fbe8:	dd800617 	ldw	r22,24(sp)
  20fbec:	dd400517 	ldw	r21,20(sp)
  20fbf0:	dd000417 	ldw	r20,16(sp)
  20fbf4:	dcc00317 	ldw	r19,12(sp)
  20fbf8:	dc800217 	ldw	r18,8(sp)
  20fbfc:	dc400117 	ldw	r17,4(sp)
  20fc00:	dc000017 	ldw	r16,0(sp)
  20fc04:	dec00904 	addi	sp,sp,36
  20fc08:	f800283a 	ret
  20fc0c:	90800117 	ldw	r2,4(r18)
  20fc10:	81800017 	ldw	r6,0(r16)
  20fc14:	10bfffc4 	addi	r2,r2,-1
  20fc18:	14401726 	beq	r2,r17,20fc78 <__call_exitprocs+0x110>
  20fc1c:	80000015 	stw	zero,0(r16)
  20fc20:	303feb26 	beq	r6,zero,20fbd0 <__call_exitprocs+0x68>
  20fc24:	a446983a 	sll	r3,r20,r17
  20fc28:	90806217 	ldw	r2,392(r18)
  20fc2c:	95c00117 	ldw	r23,4(r18)
  20fc30:	1884703a 	and	r2,r3,r2
  20fc34:	1000081e 	bne	r2,zero,20fc58 <__call_exitprocs+0xf0>
  20fc38:	303ee83a 	callr	r6
  20fc3c:	90c00117 	ldw	r3,4(r18)
  20fc40:	98805217 	ldw	r2,328(r19)
  20fc44:	1dc0011e 	bne	r3,r23,20fc4c <__call_exitprocs+0xe4>
  20fc48:	90bfe126 	beq	r18,r2,20fbd0 <__call_exitprocs+0x68>
  20fc4c:	103fe426 	beq	r2,zero,20fbe0 <__call_exitprocs+0x78>
  20fc50:	1025883a 	mov	r18,r2
  20fc54:	003fd506 	br	20fbac <__call_exitprocs+0x44>
  20fc58:	90806317 	ldw	r2,396(r18)
  20fc5c:	81002017 	ldw	r4,128(r16)
  20fc60:	1886703a 	and	r3,r3,r2
  20fc64:	1800061e 	bne	r3,zero,20fc80 <__call_exitprocs+0x118>
  20fc68:	200b883a 	mov	r5,r4
  20fc6c:	a809883a 	mov	r4,r21
  20fc70:	303ee83a 	callr	r6
  20fc74:	003ff106 	br	20fc3c <__call_exitprocs+0xd4>
  20fc78:	94400115 	stw	r17,4(r18)
  20fc7c:	003fe806 	br	20fc20 <__call_exitprocs+0xb8>
  20fc80:	303ee83a 	callr	r6
  20fc84:	003fed06 	br	20fc3c <__call_exitprocs+0xd4>
