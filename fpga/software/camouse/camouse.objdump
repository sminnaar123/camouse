
camouse.elf:     file format elf32-littlenios2
camouse.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00020238

Program Header:
    LOAD off    0x00001000 vaddr 0x00020000 paddr 0x00020000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00020020 paddr 0x00020020 align 2**12
         filesz 0x00010564 memsz 0x00010564 flags r-x
    LOAD off    0x00011584 vaddr 0x00030584 paddr 0x0003215c align 2**12
         filesz 0x00001bd8 memsz 0x00001bd8 flags rw-
    LOAD off    0x00000d34 vaddr 0x00033d34 paddr 0x00033d34 align 2**12
         filesz 0x00000000 memsz 0x00000164 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00020000  00020000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000218  00020020  00020020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         0000fc24  00020238  00020238  00001238  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000728  0002fe5c  0002fe5c  00010e5c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001bd8  00030584  0003215c  00011584  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000164  00033d34  00033d34  00013d34  2**2
                  ALLOC, SMALL_DATA
  6 .onchip_memory2_0 00000000  00033e98  00033e98  0001315c  2**0
                  CONTENTS
  7 .comment      0000002d  00000000  00000000  0001315c  2**0
                  CONTENTS, READONLY
  8 .debug_aranges 00001110  00000000  00000000  00013190  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_info   00030213  00000000  00000000  000142a0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_abbrev 0000beb2  00000000  00000000  000444b3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_line   000174eb  00000000  00000000  00050365  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_frame  00002660  00000000  00000000  00067850  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_str    00003f31  00000000  00000000  00069eb0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_loc    0001e0fb  00000000  00000000  0006dde1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_alt_sim_info 00000060  00000000  00000000  0008bedc  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 000024e8  00000000  00000000  0008bf40  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .thread_model 00000003  00000000  00000000  0009199d  2**0
                  CONTENTS, READONLY
 18 .cpu          0000000a  00000000  00000000  000919a0  2**0
                  CONTENTS, READONLY
 19 .qsys         00000001  00000000  00000000  000919aa  2**0
                  CONTENTS, READONLY
 20 .simulation_enabled 00000001  00000000  00000000  000919ab  2**0
                  CONTENTS, READONLY
 21 .sysid_hash   00000004  00000000  00000000  000919ac  2**0
                  CONTENTS, READONLY
 22 .sysid_base   00000004  00000000  00000000  000919b0  2**0
                  CONTENTS, READONLY
 23 .sysid_time   00000004  00000000  00000000  000919b4  2**0
                  CONTENTS, READONLY
 24 .stderr_dev   00000009  00000000  00000000  000919b8  2**0
                  CONTENTS, READONLY
 25 .stdin_dev    00000009  00000000  00000000  000919c1  2**0
                  CONTENTS, READONLY
 26 .stdout_dev   00000009  00000000  00000000  000919ca  2**0
                  CONTENTS, READONLY
 27 .sopc_system_name 00000004  00000000  00000000  000919d3  2**0
                  CONTENTS, READONLY
 28 .quartus_project_dir 00000017  00000000  00000000  000919d7  2**0
                  CONTENTS, READONLY
 29 .sopcinfo     0008460c  00000000  00000000  000919ee  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00020000 l    d  .entry	00000000 .entry
00020020 l    d  .exceptions	00000000 .exceptions
00020238 l    d  .text	00000000 .text
0002fe5c l    d  .rodata	00000000 .rodata
00030584 l    d  .rwdata	00000000 .rwdata
00033d34 l    d  .bss	00000000 .bss
00033e98 l    d  .onchip_memory2_0	00000000 .onchip_memory2_0
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 c:/vcs/git/camouse/fpga/software/camouse_bsp//obj/HAL/src/crt0.o
00020280 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 count_binary.c
00033d34 l     O .bss	00000001 count
00020284 l     F .text	00000024 lcd_init
000202a8 l     F .text	00000058 initial_message
00020300 l     F .text	00000020 count_led
00020320 l     F .text	00000020 count_sevenseg
00020340 l     F .text	0000002c count_lcd
0002036c l     F .text	00000054 count_all
000203c0 l     F .text	00000144 handle_button_press
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 putchar.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
000229d8 l     F .text	000000c0 __sbprintf
0002ff94 l     O .rodata	00000010 blanks.1
0002ff84 l     O .rodata	00000010 zeroes.0
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
00022bfc l     F .text	000001fc quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
0002484c l     F .text	00000008 __fp_lock
00024860 l     F .text	00000008 __fp_unlock
00024868 l     F .text	00000168 __sinit.part.0
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
00030584 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 localeconv.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
00030040 l     O .rodata	0000000c p05.0
00000000 l    df *ABS*	00000000 putc.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 vfprintf.c
00027dd8 l     F .text	000000f4 __sprint_r.part.0
00029150 l     F .text	000000c0 __sbprintf
00030174 l     O .rodata	00000010 blanks.1
00030164 l     O .rodata	00000010 zeroes.0
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 assert.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 errno.c
00000000 l    df *ABS*	00000000 fclose.c
000295dc l     F .text	000000c0 _fclose_r.part.0
00000000 l    df *ABS*	00000000 fiprintf.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 locale.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 mbtowc_r.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 vfiprintfr_1.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 abort.c
00000000 l    df *ABS*	00000000 ctype_.c
00000000 l    df *ABS*	00000000 signal.c
00000000 l    df *ABS*	00000000 signalr.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 unorddf2.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 alt_close.c
0002d430 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
0002d53c l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_exit.c
00000000 l    df *ABS*	00000000 alt_fstat.c
0002d5a0 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_getpid.c
00000000 l    df *ABS*	00000000 alt_isatty.c
0002d6ac l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_kill.c
0002d78c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
0002d8f4 l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
0002d9e0 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
0002dbb4 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
0003214c l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_usleep.c
00000000 l    df *ABS*	00000000 alt_write.c
0002de2c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
0002df60 l     F .text	00000034 alt_dev_reg
000310c4 l     O .rwdata	00001060 jtag_uart
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
0002e258 l     F .text	0000020c altera_avalon_jtag_uart_irq
0002e464 l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_sc.c
0002eaa8 l     F .text	0000007c alt_avalon_timer_sc_irq
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_busy_sleep.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
0002eeac l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
0002f324 l     F .text	000000b0 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
0002f450 l     F .text	0000003c alt_get_errno
0002f48c l     F .text	000000b8 alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 alt_icache_flush.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00033d6c g     O .bss	00000004 alt_instruction_exception_handler
00020828 g     F .text	00000018 putchar
0002740c g     F .text	00000070 _mprec_log10
000274f8 g     F .text	00000060 __any_on
00029a34 g     F .text	00000058 _isatty_r
0003004c g     O .rodata	00000028 __mprec_tinytens
0002daf0 g     F .text	0000007c alt_main
00020840 g     F .text	000000cc _puts_r
00033d98 g     O .bss	00000100 alt_irq
00029b80 g     F .text	00000064 _lseek_r
0003215c g       *ABS*	00000000 __flash_rwdata_start
0002bff0 g     F .text	00000080 .hidden __eqdf2
00033e98 g       *ABS*	00000000 __alt_heap_start
0002a388 g     F .text	00000060 _kill_r
000207e8 g     F .text	00000038 printf
00029d54 g     F .text	0000006c _wcrtomb_r
00029ef8 g     F .text	00000098 _signal_r
00027d74 g     F .text	0000005c __sseek
00024ba0 g     F .text	00000010 __sinit
00029210 g     F .text	00000148 __swbuf_r
00029a8c g     F .text	00000074 _setlocale_r
000249d0 g     F .text	00000068 __sfmoreglue
0002db90 g     F .text	00000024 __malloc_unlock
000261dc g     F .text	0000012c memmove
00024b8c g     F .text	00000014 _cleanup
000263f8 g     F .text	000000a4 _Balloc
0002c070 g     F .text	000000e8 .hidden __gtdf2
0002f868 g     F .text	00000024 altera_nios2_gen2_irq_init
000295d0 g     F .text	0000000c __errno
00020000 g     F .entry	0000001c __reset
000255c4 g     F .text	00000008 __localeconv_l
00033d38 g     O .bss	00000004 edge_capture
00020020 g       *ABS*	00000000 __flash_exceptions_start
000299d4 g     F .text	00000060 _fstat_r
00033d48 g     O .bss	00000004 errno
00027cec g     F .text	00000008 __seofread
00033d54 g     O .bss	00000004 alt_argv
0003a124 g       *ABS*	00000000 _gp
0002ddfc g     F .text	00000030 usleep
0002d68c g     F .text	00000020 getpid
00030f44 g     O .rwdata	00000180 alt_fd_list
00020820 g     F .text	00000008 _putchar_r
0002f88c g     F .text	00000090 alt_find_dev
000260dc g     F .text	00000100 memcpy
00024854 g     F .text	0000000c _cleanup_r
0002d294 g     F .text	000000b8 .hidden __floatsidf
0002f3d4 g     F .text	0000007c alt_io_redirect
0002c158 g     F .text	000000e8 .hidden __ltdf2
0002fe5c g       *ABS*	00000000 __DTOR_END__
0002090c g     F .text	00000010 puts
0002fb54 g     F .text	00000098 alt_exception_cause_generated_bad_addr
00027364 g     F .text	000000a8 __ratio
00029134 g     F .text	0000001c __vfiprintf_internal
0002e660 g     F .text	00000220 altera_avalon_jtag_uart_read
000207b8 g     F .text	00000030 _printf_r
00020000 g       *ABS*	00000000 __alt_mem_onchip_memory2_0
000206f8 g     F .text	00000064 .hidden __udivsi3
0002d6e8 g     F .text	000000a4 isatty
00029f90 g     F .text	000000c4 _raise_r
0002942c g     F .text	00000064 __assert_func
0003009c g     O .rodata	000000c8 __mprec_tens
0002fac4 g     F .text	00000090 alt_icache_flush
00033d44 g     O .bss	00000004 __malloc_top_pad
0002a3e8 g     F .text	00000004 _getpid_r
000255cc g     F .text	0000000c _localeconv_r
00026844 g     F .text	000000b0 __i2b
00025000 g     F .text	00000484 __sfvwrite_r
0002a054 g     F .text	000000bc __sigtramp_r
00027c40 g     F .text	00000058 _sbrk_r
00029c34 g     F .text	00000064 _read_r
00032144 g     O .rwdata	00000004 alt_max_fd
0002969c g     F .text	00000070 _fclose_r
000247c8 g     F .text	00000084 fflush
00033d40 g     O .bss	00000004 __malloc_max_sbrked_mem
0002aeb0 g     F .text	000008f0 .hidden __adddf3
000270f8 g     F .text	00000108 __b2d
0002a97c g     F .text	00000534 .hidden __umoddi3
0002da1c g     F .text	000000d4 lseek
00032124 g     O .rwdata	00000004 _global_impure_ptr
00027704 g     F .text	0000053c _realloc_r
00033e98 g       *ABS*	00000000 __bss_end
0002f23c g     F .text	000000e8 alt_iic_isr_register
0002f73c g     F .text	0000012c alt_tick
0002a3ec g     F .text	00000590 .hidden __udivdi3
00029938 g     F .text	00000024 _fputwc_r
00030074 g     O .rodata	00000028 __mprec_bigtens
000265f8 g     F .text	00000138 __s2b
00029e84 g     F .text	00000018 abort
0002d34c g     F .text	00000090 .hidden __floatunsidf
00026e18 g     F .text	00000058 __mcmp
00024bc0 g     F .text	00000014 __fp_lock_all
0002f1f0 g     F .text	0000004c alt_ic_irq_enabled
0002f698 g     F .text	000000a4 alt_alarm_stop
00033d5c g     O .bss	00000004 alt_irq_active
000200fc g     F .exceptions	000000c8 alt_irq_handler
00030f1c g     O .rwdata	00000028 alt_dev_null
0002ee60 g     F .text	0000004c alt_dcache_flush_all
00026730 g     F .text	00000064 __hi0bits
0002d214 g     F .text	00000080 .hidden __fixdfsi
0003215c g       *ABS*	00000000 __ram_rwdata_end
0003213c g     O .rwdata	00000008 alt_dev_list
0002de68 g     F .text	000000f8 write
00027558 g     F .text	000000cc _putc_r
00030584 g       *ABS*	00000000 __ram_rodata_end
0002d5dc g     F .text	000000b0 fstat
0002d7c8 g     F .text	0000012c kill
0002c158 g     F .text	000000e8 .hidden __ledf2
00026b48 g     F .text	00000148 __pow5mult
00027ee4 g     F .text	00001250 ___vfiprintf_internal_r
0002075c g     F .text	0000005c .hidden __umodsi3
00033e98 g       *ABS*	00000000 end
0002e198 g     F .text	000000c0 altera_avalon_jtag_uart_init
000201c4 g     F .exceptions	00000074 alt_instruction_exception_entry
0002fe5c g       *ABS*	00000000 __CTOR_LIST__
000386a0 g       *ABS*	00000000 __alt_stack_pointer
0002eb24 g     F .text	00000084 alt_avalon_timer_sc_init
0002d3dc g     F .text	00000054 .hidden __clzsi2
0002e880 g     F .text	00000228 altera_avalon_jtag_uart_write
00024bb0 g     F .text	00000004 __sfp_lock_acquire
0002600c g     F .text	000000d0 memchr
000209b4 g     F .text	00002008 ___vfprintf_internal_r
00024d04 g     F .text	000002fc _free_r
000302d8 g     O .rodata	00000180 _ctype_b
00029b00 g     F .text	0000000c __locale_mb_cur_max
0002fd3c g     F .text	00000120 __call_exitprocs
0003212c g     O .rwdata	00000004 __malloc_sbrk_base
00020238 g     F .text	0000004c _start
00033d60 g     O .bss	00000004 _alt_tick_rate
00026c90 g     F .text	00000188 __lshift
00033d64 g     O .bss	00000008 _alt_nticks
0002a1cc g     F .text	000000a0 signal
0002dbf0 g     F .text	000000fc read
0002dfd0 g     F .text	00000064 alt_sys_init
0002fcac g     F .text	00000090 __register_exitproc
000268f4 g     F .text	00000254 __multiply
0002e504 g     F .text	00000068 altera_avalon_jtag_uart_close
00030584 g       *ABS*	00000000 __ram_rwdata_start
0002fe5c g       *ABS*	00000000 __ram_rodata_start
00033d70 g     O .bss	00000028 __malloc_current_mallinfo
00027200 g     F .text	00000164 __d2b
0002e034 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
0002fa24 g     F .text	000000a0 alt_get_fd
0002ed08 g     F .text	00000158 alt_busy_sleep
000293d4 g     F .text	00000058 _close_r
0002fc34 g     F .text	00000078 memcmp
0002e0f4 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
00033e98 g       *ABS*	00000000 __alt_stack_base
0002e144 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
00022a98 g     F .text	00000164 __swsetup_r
0002b7a0 g     F .text	00000850 .hidden __divdf3
00024a38 g     F .text	00000154 __sfp
0002747c g     F .text	0000007c __copybits
000309a8 g     O .rwdata	00000408 __malloc_av_
00024bbc g     F .text	00000004 __sinit_lock_release
0002c240 g     F .text	00000674 .hidden __muldf3
00027c98 g     F .text	00000054 __sread
0002f91c g     F .text	00000108 alt_find_file
0002eee8 g     F .text	000000a8 alt_dev_llist_insert
0002db6c g     F .text	00000024 __malloc_lock
0002dd44 g     F .text	000000b8 sbrk
00024768 g     F .text	00000060 _fflush_r
000294a4 g     F .text	0000012c _calloc_r
00033d34 g       *ABS*	00000000 __bss_start
00026308 g     F .text	000000f0 memset
00020504 g     F .text	00000100 main
00033d58 g     O .bss	00000004 alt_envp
00033d3c g     O .bss	00000004 __malloc_max_total_mem
0002e094 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
00029358 g     F .text	00000018 __swbuf
00027dd0 g     F .text	00000008 __sclose
000386a0 g       *ABS*	00000000 __alt_heap_limit
0002970c g     F .text	00000070 fclose
00022df8 g     F .text	00001748 _dtoa_r
0002582c g     F .text	000007e0 _malloc_r
00029e54 g     F .text	00000030 __ascii_wctomb
00032148 g     O .rwdata	00000004 alt_errno
0002977c g     F .text	00000020 _fiprintf_r
0002a26c g     F .text	00000060 _init_signal
00025484 g     F .text	00000098 _fwalk
00029be4 g     F .text	0000000c _mbtowc_r
00027624 g     F .text	000000e0 putc
00020604 g     F .text	00000080 .hidden __divsi3
00024be8 g     F .text	0000011c _malloc_trim_r
0002fe5c g       *ABS*	00000000 __CTOR_END__
00029c98 g     F .text	000000b8 strcmp
0002fe5c g       *ABS*	00000000 __flash_rodata_start
0002fe5c g       *ABS*	00000000 __DTOR_LIST__
0002bff0 g     F .text	00000080 .hidden __nedf2
0002df94 g     F .text	0000003c alt_irq_init
0002dcec g     F .text	00000058 alt_release_fd
00030458 g     O .rodata	00000100 .hidden __clz_tab
00033d4c g     O .bss	00000004 _PathLocale
0002fbec g     F .text	00000014 atexit
00029370 g     F .text	00000064 _write_r
00029b0c g     F .text	00000074 setlocale
00032128 g     O .rwdata	00000004 _impure_ptr
00033d50 g     O .bss	00000004 alt_argc
00024540 g     F .text	00000228 __sflush_r
0002eff4 g     F .text	00000064 _do_dtors
00020020 g       .exceptions	00000000 alt_irq_entry
00029bf0 g     F .text	00000044 __ascii_mbtowc
0002709c g     F .text	0000005c __ulp
00024bd4 g     F .text	00000014 __fp_unlock_all
00032134 g     O .rwdata	00000008 alt_fs_list
00020020 g       *ABS*	00000000 __ram_exceptions_start
000255d8 g     F .text	0000000c localeconv
00025794 g     F .text	00000098 __swhatbuf_r
0002f08c g     F .text	00000050 alt_ic_isr_register
0003215c g       *ABS*	00000000 _edata
00033e98 g       *ABS*	00000000 _end
000297d4 g     F .text	00000164 __fputwc
00020238 g       *ABS*	00000000 __ram_exceptions_end
0002e56c g     F .text	000000f4 altera_avalon_jtag_uart_ioctl
0002f164 g     F .text	0000008c alt_ic_irq_disable
00027cf4 g     F .text	00000080 __swrite
00032130 g     O .rwdata	00000004 __malloc_trim_threshold
0002fc00 g     F .text	00000034 exit
0002979c g     F .text	00000038 fiprintf
00029d50 g     F .text	00000004 _vfiprintf_r
0002551c g     F .text	000000a8 _fwalk_reent
00026e70 g     F .text	0000022c __mdiff
00020684 g     F .text	00000074 .hidden __modsi3
000386a0 g       *ABS*	00000000 __alt_data_end
00020020 g     F .exceptions	00000000 alt_exception
00024bb4 g     F .text	00000004 __sfp_lock_release
000301d4 g     O .rodata	00000101 _ctype_
0002d1c0 g     F .text	00000054 .hidden __unorddf2
0002d568 g     F .text	00000038 _exit
0002eba8 g     F .text	00000160 alt_alarm_start
000255e4 g     F .text	000001b0 __smakebuf_r
0002091c g     F .text	00000098 strlen
00029e9c g     F .text	0000005c _init_signal_r
0002f544 g     F .text	00000154 open
0002c070 g     F .text	000000e8 .hidden __gedf2
00029490 g     F .text	00000014 __assert
00027ecc g     F .text	00000018 __sprint_r
0002f058 g     F .text	00000034 alt_icache_flush_all
00032150 g     O .rwdata	00000004 alt_priority_mask
0002f0dc g     F .text	00000088 alt_ic_irq_enable
000229bc g     F .text	0000001c __vfprintf_internal
00029e48 g     F .text	0000000c _wctomb_r
0002c8b4 g     F .text	0000090c .hidden __subdf3
00026794 g     F .text	000000b0 __lo0bits
00032154 g     O .rwdata	00000008 alt_alarm_list
0002ef90 g     F .text	00000064 _do_ctors
0002a2cc g     F .text	000000bc __sigtramp
00029dc0 g     F .text	00000088 wcrtomb
0002d46c g     F .text	000000d0 close
00030db0 g     O .rwdata	0000016c __global_locale
0002d95c g     F .text	00000084 alt_load
0002995c g     F .text	00000078 fputwc
0002a110 g     F .text	000000bc raise
00024bb8 g     F .text	00000004 __sinit_lock_acquire
000264c0 g     F .text	00000138 __multadd
0002649c g     F .text	00000024 _Bfree



Disassembly of section .entry:

00020000 <__reset>:
#if NIOS2_ICACHE_SIZE > 0 && defined(ALT_ALLOW_CODE_AT_RESET) && (!defined(ALT_SIM_OPTIMIZE) || defined(NIOS2_ECC_PRESENT))
    /* Assume the instruction cache size is always a power of two. */
#if NIOS2_ICACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_ICACHE_SIZE)
#else
    movui r2, NIOS2_ICACHE_SIZE
   20000:	00840014 	movui	r2,4096
#endif

0:
    initi r2
   20004:	1001483a 	initi	r2
    addi r2, r2, -NIOS2_ICACHE_LINE_SIZE
   20008:	10bff804 	addi	r2,r2,-32
    bgt r2, zero, 0b
   2000c:	00bffd16 	blt	zero,r2,20004 <__reset+0x4>
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
   20010:	004000b4 	movhi	at,2
    ori r1, r1, %lo(_start)
   20014:	08408e14 	ori	at,at,568
    jmp r1
   20018:	0800683a 	jmp	at
   2001c:	00000000 	call	0 <__reset-0x20000>

Disassembly of section .exceptions:

00020020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
   20020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
   20024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
   20028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
   2002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
   20030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
   20034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
   20038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
   2003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
   20040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
   20044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
   20048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
   2004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
   20050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
   20054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
   20058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
   2005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
   20060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
   20064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
   20068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
   2006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
   20070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
   20074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
   20078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
   2007c:	10000326 	beq	r2,zero,2008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
   20080:	20000226 	beq	r4,zero,2008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
   20084:	00200fc0 	call	200fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
   20088:	00000706 	br	200a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
   2008c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
   20090:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
   20094:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
   20098:	00201c40 	call	201c4 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
   2009c:	1000021e 	bne	r2,zero,200a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
   200a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
   200a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
   200a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
   200ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
   200b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
   200b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
   200b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
   200bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
   200c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
   200c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
   200c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
   200cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
   200d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
   200d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
   200d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
   200dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
   200e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
   200e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
   200e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
   200ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
   200f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
   200f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
   200f8:	ef80083a 	eret

000200fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
   200fc:	defff904 	addi	sp,sp,-28
   20100:	dfc00615 	stw	ra,24(sp)
   20104:	df000515 	stw	fp,20(sp)
   20108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
   2010c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
   20110:	0005313a 	rdctl	r2,ipending
   20114:	e0bffc15 	stw	r2,-16(fp)

  return active;
   20118:	e0bffc17 	ldw	r2,-16(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
   2011c:	e0bfff15 	stw	r2,-4(fp)

  do
  {
    i = 0;
   20120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
   20124:	00800044 	movi	r2,1
   20128:	e0bffe15 	stw	r2,-8(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
   2012c:	e0ffff17 	ldw	r3,-4(fp)
   20130:	e0bffe17 	ldw	r2,-8(fp)
   20134:	1884703a 	and	r2,r3,r2
   20138:	10001126 	beq	r2,zero,20180 <alt_irq_handler+0x84>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
   2013c:	e0bffd17 	ldw	r2,-12(fp)
   20140:	100690fa 	slli	r3,r2,3
   20144:	008000f4 	movhi	r2,3
   20148:	1885883a 	add	r2,r3,r2
   2014c:	10cf6617 	ldw	r3,15768(r2)
   20150:	e0bffd17 	ldw	r2,-12(fp)
   20154:	100890fa 	slli	r4,r2,3
   20158:	008000f4 	movhi	r2,3
   2015c:	2085883a 	add	r2,r4,r2
   20160:	108f6717 	ldw	r2,15772(r2)
   20164:	1009883a 	mov	r4,r2
   20168:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
   2016c:	0001883a 	nop
  NIOS2_READ_IPENDING (active);
   20170:	0005313a 	rdctl	r2,ipending
   20174:	e0bffb15 	stw	r2,-20(fp)
  return active;
   20178:	e0bffb17 	ldw	r2,-20(fp)
   2017c:	00000706 	br	2019c <alt_irq_handler+0xa0>
      }
      mask <<= 1;
   20180:	e0bffe17 	ldw	r2,-8(fp)
   20184:	1085883a 	add	r2,r2,r2
   20188:	e0bffe15 	stw	r2,-8(fp)
      i++;
   2018c:	e0bffd17 	ldw	r2,-12(fp)
   20190:	10800044 	addi	r2,r2,1
   20194:	e0bffd15 	stw	r2,-12(fp)
      if (active & mask)
   20198:	003fe406 	br	2012c <alt_irq_handler+0x30>

    } while (1);

    active = alt_irq_pending ();
   2019c:	e0bfff15 	stw	r2,-4(fp)
    
  } while (active);
   201a0:	e0bfff17 	ldw	r2,-4(fp)
   201a4:	103fde1e 	bne	r2,zero,20120 <alt_irq_handler+0x24>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
   201a8:	0001883a 	nop
}
   201ac:	0001883a 	nop
   201b0:	e037883a 	mov	sp,fp
   201b4:	dfc00117 	ldw	ra,4(sp)
   201b8:	df000017 	ldw	fp,0(sp)
   201bc:	dec00204 	addi	sp,sp,8
   201c0:	f800283a 	ret

000201c4 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
   201c4:	defffb04 	addi	sp,sp,-20
   201c8:	dfc00415 	stw	ra,16(sp)
   201cc:	df000315 	stw	fp,12(sp)
   201d0:	df000304 	addi	fp,sp,12
   201d4:	e13ffd15 	stw	r4,-12(fp)
 * NIOS2_EXCEPTION_CAUSE_NOT_PRESENT. Your handling routine should
 * check the validity of the cause argument before proceeding.
 */
#ifdef NIOS2_HAS_EXTRA_EXCEPTION_INFO
  /* Get exception cause & "badaddr" */
  NIOS2_READ_EXCEPTION(cause);
   201d8:	000531fa 	rdctl	r2,exception
   201dc:	e0bfff15 	stw	r2,-4(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
   201e0:	e0bfff17 	ldw	r2,-4(fp)
   201e4:	1004d0ba 	srli	r2,r2,2
   201e8:	108007cc 	andi	r2,r2,31
   201ec:	e0bfff15 	stw	r2,-4(fp)
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
   201f0:	0005333a 	rdctl	r2,badaddr
   201f4:	e0bffe15 	stw	r2,-8(fp)
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
  badaddr = 0;
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
   201f8:	d0a71217 	ldw	r2,-25528(gp)
   201fc:	10000726 	beq	r2,zero,2021c <alt_instruction_exception_entry+0x58>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
   20200:	d0a71217 	ldw	r2,-25528(gp)
   20204:	e0ffff17 	ldw	r3,-4(fp)
   20208:	e1bffe17 	ldw	r6,-8(fp)
   2020c:	e17ffd17 	ldw	r5,-12(fp)
   20210:	1809883a 	mov	r4,r3
   20214:	103ee83a 	callr	r2
   20218:	00000206 	br	20224 <alt_instruction_exception_entry+0x60>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
   2021c:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
   20220:	0005883a 	mov	r2,zero
}
   20224:	e037883a 	mov	sp,fp
   20228:	dfc00117 	ldw	ra,4(sp)
   2022c:	df000017 	ldw	fp,0(sp)
   20230:	dec00204 	addi	sp,sp,8
   20234:	f800283a 	ret

Disassembly of section .text:

00020238 <_start>:

    /* Assume the data cache size is always a power of two. */
#if NIOS2_DCACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_DCACHE_SIZE)
#else
    movui r2, NIOS2_DCACHE_SIZE
   20238:	00820014 	movui	r2,2048
#endif

0:
    initd 0(r2)
   2023c:	10000033 	initd	0(r2)
#ifdef NIOS2_ECC_PRESENT
    addi r2, r2, -4
#else
    addi r2, r2, -NIOS2_DCACHE_LINE_SIZE
   20240:	10bff804 	addi	r2,r2,-32
#endif
    bgt r2, zero, 0b
   20244:	00bffd16 	blt	zero,r2,2023c <_start+0x4>

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
   20248:	06c000f4 	movhi	sp,3
    ori sp, sp, %lo(__alt_stack_pointer)
   2024c:	dee1a814 	ori	sp,sp,34464
    movhi gp, %hi(_gp)
   20250:	068000f4 	movhi	gp,3
    ori gp, gp, %lo(_gp)
   20254:	d6a84914 	ori	gp,gp,41252
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
   20258:	008000f4 	movhi	r2,3
    ori r2, r2, %lo(__bss_start)
   2025c:	108f4d14 	ori	r2,r2,15668

    movhi r3, %hi(__bss_end)
   20260:	00c000f4 	movhi	r3,3
    ori r3, r3, %lo(__bss_end)
   20264:	18cfa614 	ori	r3,r3,16024

    beq r2, r3, 1f
   20268:	10c00326 	beq	r2,r3,20278 <_start+0x40>

0:
    stw zero, (r2)
   2026c:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
   20270:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
   20274:	10fffd36 	bltu	r2,r3,2026c <_start+0x34>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
   20278:	002d95c0 	call	2d95c <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
   2027c:	002daf00 	call	2daf0 <alt_main>

00020280 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
   20280:	003fff06 	br	20280 <alt_after_alt_main>

00020284 <lcd_init>:
 * count_<device>() -- Implements the counting on the respective device.
 * handle_button_press() -- Determines what to do when one of the buttons
 * is pressed.
 */
static void lcd_init( FILE *lcd )
{
   20284:	defffe04 	addi	sp,sp,-8
   20288:	df000115 	stw	fp,4(sp)
   2028c:	df000104 	addi	fp,sp,4
   20290:	e13fff15 	stw	r4,-4(fp)
    /* If the LCD Display exists, write a simple message on the first line. */
    LCD_PRINTF(lcd, "%c%s Counting will be displayed below...", ESC,
               ESC_TOP_LEFT);
}
   20294:	0001883a 	nop
   20298:	e037883a 	mov	sp,fp
   2029c:	df000017 	ldw	fp,0(sp)
   202a0:	dec00104 	addi	sp,sp,4
   202a4:	f800283a 	ret

000202a8 <initial_message>:

static void initial_message()
{
   202a8:	defffe04 	addi	sp,sp,-8
   202ac:	dfc00115 	stw	ra,4(sp)
   202b0:	df000015 	stw	fp,0(sp)
   202b4:	d839883a 	mov	fp,sp
    printf("\n\n**************************\n");
   202b8:	010000f4 	movhi	r4,3
   202bc:	213f9704 	addi	r4,r4,-420
   202c0:	002090c0 	call	2090c <puts>
    printf("* Hello from Nios II!    *\n");
   202c4:	010000f4 	movhi	r4,3
   202c8:	213f9f04 	addi	r4,r4,-388
   202cc:	002090c0 	call	2090c <puts>
    printf("* Counting from 00 to ff *\n");
   202d0:	010000f4 	movhi	r4,3
   202d4:	213fa604 	addi	r4,r4,-360
   202d8:	002090c0 	call	2090c <puts>
    printf("**************************\n");
   202dc:	010000f4 	movhi	r4,3
   202e0:	213fad04 	addi	r4,r4,-332
   202e4:	002090c0 	call	2090c <puts>
}
   202e8:	0001883a 	nop
   202ec:	e037883a 	mov	sp,fp
   202f0:	dfc00117 	ldw	ra,4(sp)
   202f4:	df000017 	ldw	fp,0(sp)
   202f8:	dec00204 	addi	sp,sp,8
   202fc:	f800283a 	ret

00020300 <count_led>:
 * Illuminate LEDs with the value of 'count', if they
 * exist in the system
 */

static void count_led()
{
   20300:	deffff04 	addi	sp,sp,-4
   20304:	df000015 	stw	fp,0(sp)
   20308:	d839883a 	mov	fp,sp
    IOWR_ALTERA_AVALON_PIO_DATA(
        LED_PIO_BASE,
        count
        );
#endif
}
   2030c:	0001883a 	nop
   20310:	e037883a 	mov	sp,fp
   20314:	df000017 	ldw	fp,0(sp)
   20318:	dec00104 	addi	sp,sp,4
   2031c:	f800283a 	ret

00020320 <count_sevenseg>:
 * 
 * Display value of 'count' on the Seven Segment Display
 */

static void count_sevenseg()
{
   20320:	deffff04 	addi	sp,sp,-4
   20324:	df000015 	stw	fp,0(sp)
   20328:	d839883a 	mov	fp,sp
#ifdef SEVEN_SEG_PIO_BASE
    sevenseg_set_hex(count);
#endif
}
   2032c:	0001883a 	nop
   20330:	e037883a 	mov	sp,fp
   20334:	df000017 	ldw	fp,0(sp)
   20338:	dec00104 	addi	sp,sp,4
   2033c:	f800283a 	ret

00020340 <count_lcd>:
 * is treated as an I/O device (i.e.: using fprintf).  You
 * can read more about HAL drivers <link/reference here>.
 */

static void count_lcd( void* arg )
{
   20340:	defffd04 	addi	sp,sp,-12
   20344:	df000215 	stw	fp,8(sp)
   20348:	df000204 	addi	fp,sp,8
   2034c:	e13ffe15 	stw	r4,-8(fp)
    FILE* __attribute__ ((unused))  lcd;  /* Attribute suppresses "unused variable" warning. */
    lcd = (FILE*) arg;
   20350:	e0bffe17 	ldw	r2,-8(fp)
   20354:	e0bfff15 	stw	r2,-4(fp)
    LCD_PRINTF(lcd, "%c%s 0x%x\n", ESC, ESC_COL2_INDENT5, count);
}
   20358:	0001883a 	nop
   2035c:	e037883a 	mov	sp,fp
   20360:	df000017 	ldw	fp,0(sp)
   20364:	dec00104 	addi	sp,sp,4
   20368:	f800283a 	ret

0002036c <count_all>:

/* count_all merely combines all three peripherals counting */

static void count_all( void* arg )
{
   2036c:	defffd04 	addi	sp,sp,-12
   20370:	dfc00215 	stw	ra,8(sp)
   20374:	df000115 	stw	fp,4(sp)
   20378:	df000104 	addi	fp,sp,4
   2037c:	e13fff15 	stw	r4,-4(fp)
    count_led();
   20380:	00203000 	call	20300 <count_led>
    count_sevenseg();
   20384:	00203200 	call	20320 <count_sevenseg>
    count_lcd( arg );
   20388:	e13fff17 	ldw	r4,-4(fp)
   2038c:	00203400 	call	20340 <count_lcd>
    printf("%02x,  ", count);
   20390:	d0a70403 	ldbu	r2,-25584(gp)
   20394:	10803fcc 	andi	r2,r2,255
   20398:	100b883a 	mov	r5,r2
   2039c:	010000f4 	movhi	r4,3
   203a0:	213fb404 	addi	r4,r4,-304
   203a4:	00207e80 	call	207e8 <printf>
}
   203a8:	0001883a 	nop
   203ac:	e037883a 	mov	sp,fp
   203b0:	dfc00117 	ldw	ra,4(sp)
   203b4:	df000017 	ldw	fp,0(sp)
   203b8:	dec00204 	addi	sp,sp,8
   203bc:	f800283a 	ret

000203c0 <handle_button_press>:
  

static void handle_button_press(alt_u8 type, FILE *lcd)
{
   203c0:	defffc04 	addi	sp,sp,-16
   203c4:	dfc00315 	stw	ra,12(sp)
   203c8:	df000215 	stw	fp,8(sp)
   203cc:	df000204 	addi	fp,sp,8
   203d0:	2005883a 	mov	r2,r4
   203d4:	e17ffe15 	stw	r5,-8(fp)
   203d8:	e0bfff05 	stb	r2,-4(fp)
    /* Button press actions while counting. */
    if (type == 'c')
   203dc:	e0bfff03 	ldbu	r2,-4(fp)
   203e0:	108018d8 	cmpnei	r2,r2,99
   203e4:	10001b1e 	bne	r2,zero,20454 <handle_button_press+0x94>
    {
        switch (edge_capture) 
   203e8:	d0a70517 	ldw	r2,-25580(gp)
   203ec:	10c00220 	cmpeqi	r3,r2,8
   203f0:	1800121e 	bne	r3,zero,2043c <handle_button_press+0x7c>
   203f4:	10c00248 	cmpgei	r3,r2,9
   203f8:	1800131e 	bne	r3,zero,20448 <handle_button_press+0x88>
   203fc:	10c00120 	cmpeqi	r3,r2,4
   20400:	18000b1e 	bne	r3,zero,20430 <handle_button_press+0x70>
   20404:	10c00148 	cmpgei	r3,r2,5
   20408:	18000f1e 	bne	r3,zero,20448 <handle_button_press+0x88>
   2040c:	10c00060 	cmpeqi	r3,r2,1
   20410:	1800031e 	bne	r3,zero,20420 <handle_button_press+0x60>
   20414:	108000a0 	cmpeqi	r2,r2,2
   20418:	1000031e 	bne	r2,zero,20428 <handle_button_press+0x68>
   2041c:	00000a06 	br	20448 <handle_button_press+0x88>
        {
            /* Button 1:  Output counting to LED only. */
        case 0x1:
            count_led();
   20420:	00203000 	call	20300 <count_led>
            break;
   20424:	00003106 	br	204ec <handle_button_press+0x12c>
            /* Button 2:  Output counting to SEVEN SEG only. */
        case 0x2:
            count_sevenseg();
   20428:	00203200 	call	20320 <count_sevenseg>
            break;
   2042c:	00002f06 	br	204ec <handle_button_press+0x12c>
            /* Button 3:  Output counting to D only. */
        case 0x4:
            count_lcd( lcd );
   20430:	e13ffe17 	ldw	r4,-8(fp)
   20434:	00203400 	call	20340 <count_lcd>
            break;
   20438:	00002c06 	br	204ec <handle_button_press+0x12c>
            /* Button 4:  Output counting to LED, SEVEN_SEG, and D. */ 
        case 0x8:
            count_all( lcd );
   2043c:	e13ffe17 	ldw	r4,-8(fp)
   20440:	002036c0 	call	2036c <count_all>
            break;
   20444:	00002906 	br	204ec <handle_button_press+0x12c>
            /* If value ends up being something different (shouldn't) do
               same as 8. */
        default:
            count_all( lcd );
   20448:	e13ffe17 	ldw	r4,-8(fp)
   2044c:	002036c0 	call	2036c <count_all>
            break;
   20450:	00002606 	br	204ec <handle_button_press+0x12c>
        }
    }
    /* If 'type' is anything else, assume we're "waiting"...*/
    else
    {
        switch (edge_capture)
   20454:	d0a70517 	ldw	r2,-25580(gp)
   20458:	10c00220 	cmpeqi	r3,r2,8
   2045c:	18001a1e 	bne	r3,zero,204c8 <handle_button_press+0x108>
   20460:	10c00248 	cmpgei	r3,r2,9
   20464:	18001d1e 	bne	r3,zero,204dc <handle_button_press+0x11c>
   20468:	10c00120 	cmpeqi	r3,r2,4
   2046c:	1800111e 	bne	r3,zero,204b4 <handle_button_press+0xf4>
   20470:	10c00148 	cmpgei	r3,r2,5
   20474:	1800191e 	bne	r3,zero,204dc <handle_button_press+0x11c>
   20478:	10c00060 	cmpeqi	r3,r2,1
   2047c:	1800031e 	bne	r3,zero,2048c <handle_button_press+0xcc>
   20480:	108000a0 	cmpeqi	r2,r2,2
   20484:	1000061e 	bne	r2,zero,204a0 <handle_button_press+0xe0>
   20488:	00001406 	br	204dc <handle_button_press+0x11c>
        {
        case 0x1:
            printf( "Button 1\n");
   2048c:	010000f4 	movhi	r4,3
   20490:	213fb604 	addi	r4,r4,-296
   20494:	002090c0 	call	2090c <puts>
            edge_capture = 0;
   20498:	d0270515 	stw	zero,-25580(gp)
            break;
   2049c:	00001306 	br	204ec <handle_button_press+0x12c>
        case 0x2:
            printf( "Button 2\n");
   204a0:	010000f4 	movhi	r4,3
   204a4:	213fb904 	addi	r4,r4,-284
   204a8:	002090c0 	call	2090c <puts>
            edge_capture = 0;
   204ac:	d0270515 	stw	zero,-25580(gp)
            break;
   204b0:	00000e06 	br	204ec <handle_button_press+0x12c>
        case 0x4:
            printf( "Button 3\n");
   204b4:	010000f4 	movhi	r4,3
   204b8:	213fbc04 	addi	r4,r4,-272
   204bc:	002090c0 	call	2090c <puts>
            edge_capture = 0;
   204c0:	d0270515 	stw	zero,-25580(gp)
            break;
   204c4:	00000906 	br	204ec <handle_button_press+0x12c>
        case 0x8:
            printf( "Button 4\n");
   204c8:	010000f4 	movhi	r4,3
   204cc:	213fbf04 	addi	r4,r4,-260
   204d0:	002090c0 	call	2090c <puts>
            edge_capture = 0;
   204d4:	d0270515 	stw	zero,-25580(gp)
            break;
   204d8:	00000406 	br	204ec <handle_button_press+0x12c>
        default:
            printf( "Button press UNKNOWN!!\n");
   204dc:	010000f4 	movhi	r4,3
   204e0:	213fc204 	addi	r4,r4,-248
   204e4:	002090c0 	call	2090c <puts>
        }
    }
}
   204e8:	0001883a 	nop
   204ec:	0001883a 	nop
   204f0:	e037883a 	mov	sp,fp
   204f4:	dfc00117 	ldw	ra,4(sp)
   204f8:	df000017 	ldw	fp,0(sp)
   204fc:	dec00204 	addi	sp,sp,8
   20500:	f800283a 	ret

00020504 <main>:
 * NOTE:  References to Buttons 1-4 correspond to SW0-SW3 on the Development   *
 * Board.                                                                      *
 ******************************************************************************/

int main(void)
{ 
   20504:	defffb04 	addi	sp,sp,-20
   20508:	dfc00415 	stw	ra,16(sp)
   2050c:	df000315 	stw	fp,12(sp)
   20510:	df000304 	addi	fp,sp,12
    int i;
    int  __attribute__ ((unused))  wait_time;  /* Attribute suppresses "var set but not used" warning. */
    FILE * lcd;

    count = 0;
   20514:	d0270405 	stb	zero,-25584(gp)

    /* Initialize the LCD, if there is one.
     */
    lcd = LCD_OPEN();
   20518:	e03ffe15 	stw	zero,-8(fp)
    if(lcd != NULL) {lcd_init( lcd );}
   2051c:	e0bffe17 	ldw	r2,-8(fp)
   20520:	10000226 	beq	r2,zero,2052c <main+0x28>
   20524:	e13ffe17 	ldw	r4,-8(fp)
   20528:	00202840 	call	20284 <lcd_init>
    init_button_pio();
#endif

/* Initial message to output. */

    initial_message();
   2052c:	00202a80 	call	202a8 <initial_message>

/* Continue 0-ff counting loop. */

    while( 1 ) 
    {
        usleep(100000);
   20530:	010000b4 	movhi	r4,2
   20534:	2121a804 	addi	r4,r4,-31072
   20538:	002ddfc0 	call	2ddfc <usleep>
        if (edge_capture != 0)
   2053c:	d0a70517 	ldw	r2,-25580(gp)
   20540:	10000426 	beq	r2,zero,20554 <main+0x50>
        {
            /* Handle button presses while counting... */
            handle_button_press('c', lcd);
   20544:	e17ffe17 	ldw	r5,-8(fp)
   20548:	010018c4 	movi	r4,99
   2054c:	00203c00 	call	203c0 <handle_button_press>
   20550:	00000206 	br	2055c <main+0x58>
        }
        /* If no button presses, try to output counting to all. */
        else
        {
            count_all( lcd );
   20554:	e13ffe17 	ldw	r4,-8(fp)
   20558:	002036c0 	call	2036c <count_all>
        }
        /*
         * If done counting, wait about 7 seconds...
         * detect button presses while waiting.
         */
        if( count == 0xff )
   2055c:	d0a70403 	ldbu	r2,-25584(gp)
   20560:	10803fcc 	andi	r2,r2,255
   20564:	10803fd8 	cmpnei	r2,r2,255
   20568:	1000221e 	bne	r2,zero,205f4 <main+0xf0>
        {
            LCD_PRINTF(lcd, "%c%s %c%s %c%s Waiting...\n", ESC, ESC_TOP_LEFT,
                       ESC, ESC_CLEAR, ESC, ESC_COL1_INDENT5);
            printf("\nWaiting...");
   2056c:	010000f4 	movhi	r4,3
   20570:	213fc804 	addi	r4,r4,-224
   20574:	00207e80 	call	207e8 <printf>
            edge_capture = 0; /* Reset to 0 during wait/pause period. */
   20578:	d0270515 	stw	zero,-25580(gp)

            /* Clear the 2nd. line of the LCD screen. */
            LCD_PRINTF(lcd, "%c%s, %c%s", ESC, ESC_COL2_INDENT5, ESC,
                       ESC_CLEAR);
            wait_time = 0;
   2057c:	e03ffd15 	stw	zero,-12(fp)
            for (i = 0; i<70; ++i)
   20580:	e03fff15 	stw	zero,-4(fp)
   20584:	00001506 	br	205dc <main+0xd8>
            {
                printf(".");
   20588:	01000b84 	movi	r4,46
   2058c:	00208280 	call	20828 <putchar>
                wait_time = i/10;
   20590:	e0bfff17 	ldw	r2,-4(fp)
   20594:	01400284 	movi	r5,10
   20598:	1009883a 	mov	r4,r2
   2059c:	00206040 	call	20604 <__divsi3>
   205a0:	e0bffd15 	stw	r2,-12(fp)
                LCD_PRINTF(lcd, "%c%s %ds\n", ESC, ESC_COL2_INDENT5,
                    wait_time+1);

                if (edge_capture != 0) 
   205a4:	d0a70517 	ldw	r2,-25580(gp)
   205a8:	10000626 	beq	r2,zero,205c4 <main+0xc0>
                {
                    printf( "\nYou pushed:  " );
   205ac:	010000f4 	movhi	r4,3
   205b0:	213fcb04 	addi	r4,r4,-212
   205b4:	00207e80 	call	207e8 <printf>
                    handle_button_press('w', lcd);
   205b8:	e17ffe17 	ldw	r5,-8(fp)
   205bc:	01001dc4 	movi	r4,119
   205c0:	00203c00 	call	203c0 <handle_button_press>
                }
                usleep(100000); /* Sleep for 0.1s. */
   205c4:	010000b4 	movhi	r4,2
   205c8:	2121a804 	addi	r4,r4,-31072
   205cc:	002ddfc0 	call	2ddfc <usleep>
            for (i = 0; i<70; ++i)
   205d0:	e0bfff17 	ldw	r2,-4(fp)
   205d4:	10800044 	addi	r2,r2,1
   205d8:	e0bfff15 	stw	r2,-4(fp)
   205dc:	e0bfff17 	ldw	r2,-4(fp)
   205e0:	10801190 	cmplti	r2,r2,70
   205e4:	103fe81e 	bne	r2,zero,20588 <main+0x84>
            }
            /*  Output the "loop start" messages before looping, again.
             */
            initial_message();
   205e8:	00202a80 	call	202a8 <initial_message>
            lcd_init( lcd );
   205ec:	e13ffe17 	ldw	r4,-8(fp)
   205f0:	00202840 	call	20284 <lcd_init>
        }
        count++;
   205f4:	d0a70403 	ldbu	r2,-25584(gp)
   205f8:	10800044 	addi	r2,r2,1
   205fc:	d0a70405 	stb	r2,-25584(gp)
        usleep(100000);
   20600:	003fcb06 	br	20530 <main+0x2c>

00020604 <__divsi3>:
   20604:	20001a16 	blt	r4,zero,20670 <__divsi3+0x6c>
   20608:	000f883a 	mov	r7,zero
   2060c:	2800020e 	bge	r5,zero,20618 <__divsi3+0x14>
   20610:	014bc83a 	sub	r5,zero,r5
   20614:	39c0005c 	xori	r7,r7,1
   20618:	200d883a 	mov	r6,r4
   2061c:	00c00044 	movi	r3,1
   20620:	2900092e 	bgeu	r5,r4,20648 <__divsi3+0x44>
   20624:	00800804 	movi	r2,32
   20628:	00c00044 	movi	r3,1
   2062c:	00000106 	br	20634 <__divsi3+0x30>
   20630:	10001226 	beq	r2,zero,2067c <__divsi3+0x78>
   20634:	294b883a 	add	r5,r5,r5
   20638:	10bfffc4 	addi	r2,r2,-1
   2063c:	18c7883a 	add	r3,r3,r3
   20640:	293ffb36 	bltu	r5,r4,20630 <__divsi3+0x2c>
   20644:	18000d26 	beq	r3,zero,2067c <__divsi3+0x78>
   20648:	0005883a 	mov	r2,zero
   2064c:	31400236 	bltu	r6,r5,20658 <__divsi3+0x54>
   20650:	314dc83a 	sub	r6,r6,r5
   20654:	10c4b03a 	or	r2,r2,r3
   20658:	1806d07a 	srli	r3,r3,1
   2065c:	280ad07a 	srli	r5,r5,1
   20660:	183ffa1e 	bne	r3,zero,2064c <__divsi3+0x48>
   20664:	38000126 	beq	r7,zero,2066c <__divsi3+0x68>
   20668:	0085c83a 	sub	r2,zero,r2
   2066c:	f800283a 	ret
   20670:	0109c83a 	sub	r4,zero,r4
   20674:	01c00044 	movi	r7,1
   20678:	003fe406 	br	2060c <__divsi3+0x8>
   2067c:	0005883a 	mov	r2,zero
   20680:	003ff806 	br	20664 <__divsi3+0x60>

00020684 <__modsi3>:
   20684:	20001916 	blt	r4,zero,206ec <__modsi3+0x68>
   20688:	000f883a 	mov	r7,zero
   2068c:	2005883a 	mov	r2,r4
   20690:	2800010e 	bge	r5,zero,20698 <__modsi3+0x14>
   20694:	014bc83a 	sub	r5,zero,r5
   20698:	00c00044 	movi	r3,1
   2069c:	2900092e 	bgeu	r5,r4,206c4 <__modsi3+0x40>
   206a0:	01800804 	movi	r6,32
   206a4:	00c00044 	movi	r3,1
   206a8:	00000106 	br	206b0 <__modsi3+0x2c>
   206ac:	30000d26 	beq	r6,zero,206e4 <__modsi3+0x60>
   206b0:	294b883a 	add	r5,r5,r5
   206b4:	31bfffc4 	addi	r6,r6,-1
   206b8:	18c7883a 	add	r3,r3,r3
   206bc:	293ffb36 	bltu	r5,r4,206ac <__modsi3+0x28>
   206c0:	18000826 	beq	r3,zero,206e4 <__modsi3+0x60>
   206c4:	1806d07a 	srli	r3,r3,1
   206c8:	11400136 	bltu	r2,r5,206d0 <__modsi3+0x4c>
   206cc:	1145c83a 	sub	r2,r2,r5
   206d0:	280ad07a 	srli	r5,r5,1
   206d4:	183ffb1e 	bne	r3,zero,206c4 <__modsi3+0x40>
   206d8:	38000126 	beq	r7,zero,206e0 <__modsi3+0x5c>
   206dc:	0085c83a 	sub	r2,zero,r2
   206e0:	f800283a 	ret
   206e4:	2005883a 	mov	r2,r4
   206e8:	003ffb06 	br	206d8 <__modsi3+0x54>
   206ec:	0109c83a 	sub	r4,zero,r4
   206f0:	01c00044 	movi	r7,1
   206f4:	003fe506 	br	2068c <__modsi3+0x8>

000206f8 <__udivsi3>:
   206f8:	200d883a 	mov	r6,r4
   206fc:	2900152e 	bgeu	r5,r4,20754 <__udivsi3+0x5c>
   20700:	28001416 	blt	r5,zero,20754 <__udivsi3+0x5c>
   20704:	00800804 	movi	r2,32
   20708:	00c00044 	movi	r3,1
   2070c:	00000206 	br	20718 <__udivsi3+0x20>
   20710:	10000e26 	beq	r2,zero,2074c <__udivsi3+0x54>
   20714:	28000516 	blt	r5,zero,2072c <__udivsi3+0x34>
   20718:	294b883a 	add	r5,r5,r5
   2071c:	10bfffc4 	addi	r2,r2,-1
   20720:	18c7883a 	add	r3,r3,r3
   20724:	293ffa36 	bltu	r5,r4,20710 <__udivsi3+0x18>
   20728:	18000826 	beq	r3,zero,2074c <__udivsi3+0x54>
   2072c:	0005883a 	mov	r2,zero
   20730:	31400236 	bltu	r6,r5,2073c <__udivsi3+0x44>
   20734:	314dc83a 	sub	r6,r6,r5
   20738:	10c4b03a 	or	r2,r2,r3
   2073c:	1806d07a 	srli	r3,r3,1
   20740:	280ad07a 	srli	r5,r5,1
   20744:	183ffa1e 	bne	r3,zero,20730 <__udivsi3+0x38>
   20748:	f800283a 	ret
   2074c:	0005883a 	mov	r2,zero
   20750:	f800283a 	ret
   20754:	00c00044 	movi	r3,1
   20758:	003ff406 	br	2072c <__udivsi3+0x34>

0002075c <__umodsi3>:
   2075c:	2005883a 	mov	r2,r4
   20760:	2900132e 	bgeu	r5,r4,207b0 <__umodsi3+0x54>
   20764:	28001216 	blt	r5,zero,207b0 <__umodsi3+0x54>
   20768:	01800804 	movi	r6,32
   2076c:	00c00044 	movi	r3,1
   20770:	00000206 	br	2077c <__umodsi3+0x20>
   20774:	30000c26 	beq	r6,zero,207a8 <__umodsi3+0x4c>
   20778:	28000516 	blt	r5,zero,20790 <__umodsi3+0x34>
   2077c:	294b883a 	add	r5,r5,r5
   20780:	31bfffc4 	addi	r6,r6,-1
   20784:	18c7883a 	add	r3,r3,r3
   20788:	293ffa36 	bltu	r5,r4,20774 <__umodsi3+0x18>
   2078c:	18000626 	beq	r3,zero,207a8 <__umodsi3+0x4c>
   20790:	1806d07a 	srli	r3,r3,1
   20794:	11400136 	bltu	r2,r5,2079c <__umodsi3+0x40>
   20798:	1145c83a 	sub	r2,r2,r5
   2079c:	280ad07a 	srli	r5,r5,1
   207a0:	183ffb1e 	bne	r3,zero,20790 <__umodsi3+0x34>
   207a4:	f800283a 	ret
   207a8:	2005883a 	mov	r2,r4
   207ac:	f800283a 	ret
   207b0:	00c00044 	movi	r3,1
   207b4:	003ff606 	br	20790 <__umodsi3+0x34>

000207b8 <_printf_r>:
   207b8:	defffd04 	addi	sp,sp,-12
   207bc:	2805883a 	mov	r2,r5
   207c0:	dfc00015 	stw	ra,0(sp)
   207c4:	d9800115 	stw	r6,4(sp)
   207c8:	d9c00215 	stw	r7,8(sp)
   207cc:	21400217 	ldw	r5,8(r4)
   207d0:	d9c00104 	addi	r7,sp,4
   207d4:	100d883a 	mov	r6,r2
   207d8:	00209b40 	call	209b4 <___vfprintf_internal_r>
   207dc:	dfc00017 	ldw	ra,0(sp)
   207e0:	dec00304 	addi	sp,sp,12
   207e4:	f800283a 	ret

000207e8 <printf>:
   207e8:	defffc04 	addi	sp,sp,-16
   207ec:	dfc00015 	stw	ra,0(sp)
   207f0:	d9400115 	stw	r5,4(sp)
   207f4:	d9800215 	stw	r6,8(sp)
   207f8:	d9c00315 	stw	r7,12(sp)
   207fc:	008000f4 	movhi	r2,3
   20800:	10884a17 	ldw	r2,8488(r2)
   20804:	200b883a 	mov	r5,r4
   20808:	d9800104 	addi	r6,sp,4
   2080c:	11000217 	ldw	r4,8(r2)
   20810:	00229bc0 	call	229bc <__vfprintf_internal>
   20814:	dfc00017 	ldw	ra,0(sp)
   20818:	dec00404 	addi	sp,sp,16
   2081c:	f800283a 	ret

00020820 <_putchar_r>:
   20820:	21800217 	ldw	r6,8(r4)
   20824:	00275581 	jmpi	27558 <_putc_r>

00020828 <putchar>:
   20828:	008000f4 	movhi	r2,3
   2082c:	10884a17 	ldw	r2,8488(r2)
   20830:	200b883a 	mov	r5,r4
   20834:	11800217 	ldw	r6,8(r2)
   20838:	1009883a 	mov	r4,r2
   2083c:	00275581 	jmpi	27558 <_putc_r>

00020840 <_puts_r>:
   20840:	defff504 	addi	sp,sp,-44
   20844:	dc000815 	stw	r16,32(sp)
   20848:	2021883a 	mov	r16,r4
   2084c:	2809883a 	mov	r4,r5
   20850:	dc400915 	stw	r17,36(sp)
   20854:	dfc00a15 	stw	ra,40(sp)
   20858:	2823883a 	mov	r17,r5
   2085c:	002091c0 	call	2091c <strlen>
   20860:	11000044 	addi	r4,r2,1
   20864:	d8800515 	stw	r2,20(sp)
   20868:	00800044 	movi	r2,1
   2086c:	00c000f4 	movhi	r3,3
   20870:	d8800715 	stw	r2,28(sp)
   20874:	d8800404 	addi	r2,sp,16
   20878:	18ffcf04 	addi	r3,r3,-196
   2087c:	d8800115 	stw	r2,4(sp)
   20880:	00800084 	movi	r2,2
   20884:	dc400415 	stw	r17,16(sp)
   20888:	d8c00615 	stw	r3,24(sp)
   2088c:	d9000315 	stw	r4,12(sp)
   20890:	d8800215 	stw	r2,8(sp)
   20894:	81400217 	ldw	r5,8(r16)
   20898:	80000226 	beq	r16,zero,208a4 <_puts_r+0x64>
   2089c:	80800e17 	ldw	r2,56(r16)
   208a0:	10001326 	beq	r2,zero,208f0 <_puts_r+0xb0>
   208a4:	2880030b 	ldhu	r2,12(r5)
   208a8:	10c8000c 	andi	r3,r2,8192
   208ac:	1800061e 	bne	r3,zero,208c8 <_puts_r+0x88>
   208b0:	28c01917 	ldw	r3,100(r5)
   208b4:	0137ffc4 	movi	r4,-8193
   208b8:	10880014 	ori	r2,r2,8192
   208bc:	1906703a 	and	r3,r3,r4
   208c0:	2880030d 	sth	r2,12(r5)
   208c4:	28c01915 	stw	r3,100(r5)
   208c8:	d9800104 	addi	r6,sp,4
   208cc:	8009883a 	mov	r4,r16
   208d0:	00250000 	call	25000 <__sfvwrite_r>
   208d4:	10000b1e 	bne	r2,zero,20904 <_puts_r+0xc4>
   208d8:	00800284 	movi	r2,10
   208dc:	dfc00a17 	ldw	ra,40(sp)
   208e0:	dc400917 	ldw	r17,36(sp)
   208e4:	dc000817 	ldw	r16,32(sp)
   208e8:	dec00b04 	addi	sp,sp,44
   208ec:	f800283a 	ret
   208f0:	8009883a 	mov	r4,r16
   208f4:	d9400015 	stw	r5,0(sp)
   208f8:	0024ba00 	call	24ba0 <__sinit>
   208fc:	d9400017 	ldw	r5,0(sp)
   20900:	003fe806 	br	208a4 <_puts_r+0x64>
   20904:	00bfffc4 	movi	r2,-1
   20908:	003ff406 	br	208dc <_puts_r+0x9c>

0002090c <puts>:
   2090c:	008000f4 	movhi	r2,3
   20910:	200b883a 	mov	r5,r4
   20914:	11084a17 	ldw	r4,8488(r2)
   20918:	00208401 	jmpi	20840 <_puts_r>

0002091c <strlen>:
   2091c:	208000cc 	andi	r2,r4,3
   20920:	10000926 	beq	r2,zero,20948 <strlen+0x2c>
   20924:	2005883a 	mov	r2,r4
   20928:	00000306 	br	20938 <strlen+0x1c>
   2092c:	10800044 	addi	r2,r2,1
   20930:	10c000cc 	andi	r3,r2,3
   20934:	18000526 	beq	r3,zero,2094c <strlen+0x30>
   20938:	10c00007 	ldb	r3,0(r2)
   2093c:	183ffb1e 	bne	r3,zero,2092c <strlen+0x10>
   20940:	1105c83a 	sub	r2,r2,r4
   20944:	f800283a 	ret
   20948:	2005883a 	mov	r2,r4
   2094c:	11400017 	ldw	r5,0(r2)
   20950:	01ffbff4 	movhi	r7,65279
   20954:	39ffbfc4 	addi	r7,r7,-257
   20958:	29c7883a 	add	r3,r5,r7
   2095c:	01a02074 	movhi	r6,32897
   20960:	014a303a 	nor	r5,zero,r5
   20964:	1946703a 	and	r3,r3,r5
   20968:	31a02004 	addi	r6,r6,-32640
   2096c:	1986703a 	and	r3,r3,r6
   20970:	1800071e 	bne	r3,zero,20990 <strlen+0x74>
   20974:	11400117 	ldw	r5,4(r2)
   20978:	10800104 	addi	r2,r2,4
   2097c:	29c7883a 	add	r3,r5,r7
   20980:	014a303a 	nor	r5,zero,r5
   20984:	1946703a 	and	r3,r3,r5
   20988:	1986703a 	and	r3,r3,r6
   2098c:	183ff926 	beq	r3,zero,20974 <strlen+0x58>
   20990:	10c00007 	ldb	r3,0(r2)
   20994:	183fea26 	beq	r3,zero,20940 <strlen+0x24>
   20998:	10c00047 	ldb	r3,1(r2)
   2099c:	10800044 	addi	r2,r2,1
   209a0:	183fe726 	beq	r3,zero,20940 <strlen+0x24>
   209a4:	10c00047 	ldb	r3,1(r2)
   209a8:	10800044 	addi	r2,r2,1
   209ac:	183ffa1e 	bne	r3,zero,20998 <strlen+0x7c>
   209b0:	003fe306 	br	20940 <strlen+0x24>

000209b4 <___vfprintf_internal_r>:
   209b4:	deffbf04 	addi	sp,sp,-260
   209b8:	dfc04015 	stw	ra,256(sp)
   209bc:	dd803d15 	stw	r22,244(sp)
   209c0:	dcc03a15 	stw	r19,232(sp)
   209c4:	dc803915 	stw	r18,228(sp)
   209c8:	2027883a 	mov	r19,r4
   209cc:	2825883a 	mov	r18,r5
   209d0:	302d883a 	mov	r22,r6
   209d4:	d9c00615 	stw	r7,24(sp)
   209d8:	df003f15 	stw	fp,252(sp)
   209dc:	ddc03e15 	stw	r23,248(sp)
   209e0:	dd403c15 	stw	r21,240(sp)
   209e4:	dd003b15 	stw	r20,236(sp)
   209e8:	dc403815 	stw	r17,224(sp)
   209ec:	dc003715 	stw	r16,220(sp)
   209f0:	00255cc0 	call	255cc <_localeconv_r>
   209f4:	10800017 	ldw	r2,0(r2)
   209f8:	1009883a 	mov	r4,r2
   209fc:	d8800d15 	stw	r2,52(sp)
   20a00:	002091c0 	call	2091c <strlen>
   20a04:	d8800b15 	stw	r2,44(sp)
   20a08:	98000226 	beq	r19,zero,20a14 <___vfprintf_internal_r+0x60>
   20a0c:	98800e17 	ldw	r2,56(r19)
   20a10:	1001de26 	beq	r2,zero,2118c <___vfprintf_internal_r+0x7d8>
   20a14:	9080030b 	ldhu	r2,12(r18)
   20a18:	10c8000c 	andi	r3,r2,8192
   20a1c:	1800061e 	bne	r3,zero,20a38 <___vfprintf_internal_r+0x84>
   20a20:	90c01917 	ldw	r3,100(r18)
   20a24:	0137ffc4 	movi	r4,-8193
   20a28:	10880014 	ori	r2,r2,8192
   20a2c:	1906703a 	and	r3,r3,r4
   20a30:	9080030d 	sth	r2,12(r18)
   20a34:	90c01915 	stw	r3,100(r18)
   20a38:	10c0020c 	andi	r3,r2,8
   20a3c:	1800fa26 	beq	r3,zero,20e28 <___vfprintf_internal_r+0x474>
   20a40:	90c00417 	ldw	r3,16(r18)
   20a44:	1800f826 	beq	r3,zero,20e28 <___vfprintf_internal_r+0x474>
   20a48:	1080068c 	andi	r2,r2,26
   20a4c:	10800298 	cmpnei	r2,r2,10
   20a50:	1000fd26 	beq	r2,zero,20e48 <___vfprintf_internal_r+0x494>
   20a54:	d8802704 	addi	r2,sp,156
   20a58:	b02f883a 	mov	r23,r22
   20a5c:	d8801a15 	stw	r2,104(sp)
   20a60:	d8001c15 	stw	zero,112(sp)
   20a64:	d8001b15 	stw	zero,108(sp)
   20a68:	d8000815 	stw	zero,32(sp)
   20a6c:	d8000915 	stw	zero,36(sp)
   20a70:	d8000a15 	stw	zero,40(sp)
   20a74:	d8000c15 	stw	zero,48(sp)
   20a78:	d8001015 	stw	zero,64(sp)
   20a7c:	d8000515 	stw	zero,20(sp)
   20a80:	102d883a 	mov	r22,r2
   20a84:	b8800007 	ldb	r2,0(r23)
   20a88:	1000d526 	beq	r2,zero,20de0 <___vfprintf_internal_r+0x42c>
   20a8c:	b821883a 	mov	r16,r23
   20a90:	00000306 	br	20aa0 <___vfprintf_internal_r+0xec>
   20a94:	80800047 	ldb	r2,1(r16)
   20a98:	84000044 	addi	r16,r16,1
   20a9c:	10012026 	beq	r2,zero,20f20 <___vfprintf_internal_r+0x56c>
   20aa0:	10800958 	cmpnei	r2,r2,37
   20aa4:	103ffb1e 	bne	r2,zero,20a94 <___vfprintf_internal_r+0xe0>
   20aa8:	85e3c83a 	sub	r17,r16,r23
   20aac:	85c11e1e 	bne	r16,r23,20f28 <___vfprintf_internal_r+0x574>
   20ab0:	80800003 	ldbu	r2,0(r16)
   20ab4:	10803fcc 	andi	r2,r2,255
   20ab8:	1080201c 	xori	r2,r2,128
   20abc:	10bfe004 	addi	r2,r2,-128
   20ac0:	1000c726 	beq	r2,zero,20de0 <___vfprintf_internal_r+0x42c>
   20ac4:	82c00047 	ldb	r11,1(r16)
   20ac8:	85c00044 	addi	r23,r16,1
   20acc:	d8001345 	stb	zero,77(sp)
   20ad0:	0009883a 	mov	r4,zero
   20ad4:	000b883a 	mov	r5,zero
   20ad8:	023fffc4 	movi	r8,-1
   20adc:	0021883a 	mov	r16,zero
   20ae0:	0019883a 	mov	r12,zero
   20ae4:	bdc00044 	addi	r23,r23,1
   20ae8:	5839883a 	mov	fp,r11
   20aec:	e0bff804 	addi	r2,fp,-32
   20af0:	10c01668 	cmpgeui	r3,r2,89
   20af4:	18006a1e 	bne	r3,zero,20ca0 <___vfprintf_internal_r+0x2ec>
   20af8:	100490ba 	slli	r2,r2,2
   20afc:	00c000b4 	movhi	r3,2
   20b00:	10c7883a 	add	r3,r2,r3
   20b04:	1882c317 	ldw	r2,2828(r3)
   20b08:	1000683a 	jmp	r2
   20b0c:	000213b0 	cmpltui	zero,zero,2126
   20b10:	00020ca0 	cmpeqi	zero,zero,2098
   20b14:	00020ca0 	cmpeqi	zero,zero,2098
   20b18:	000213a4 	muli	zero,zero,2126
   20b1c:	00020ca0 	cmpeqi	zero,zero,2098
   20b20:	00020ca0 	cmpeqi	zero,zero,2098
   20b24:	00020ca0 	cmpeqi	zero,zero,2098
   20b28:	00020ca0 	cmpeqi	zero,zero,2098
   20b2c:	00020ca0 	cmpeqi	zero,zero,2098
   20b30:	00020ca0 	cmpeqi	zero,zero,2098
   20b34:	00021230 	cmpltui	zero,zero,2120
   20b38:	00021394 	movui	zero,2126
   20b3c:	00020ca0 	cmpeqi	zero,zero,2098
   20b40:	00021248 	cmpgei	zero,zero,2121
   20b44:	00021254 	movui	zero,2121
   20b48:	00020ca0 	cmpeqi	zero,zero,2098
   20b4c:	00021388 	cmpgei	zero,zero,2126
   20b50:	00020c70 	cmpltui	zero,zero,2097
   20b54:	00020c70 	cmpltui	zero,zero,2097
   20b58:	00020c70 	cmpltui	zero,zero,2097
   20b5c:	00020c70 	cmpltui	zero,zero,2097
   20b60:	00020c70 	cmpltui	zero,zero,2097
   20b64:	00020c70 	cmpltui	zero,zero,2097
   20b68:	00020c70 	cmpltui	zero,zero,2097
   20b6c:	00020c70 	cmpltui	zero,zero,2097
   20b70:	00020c70 	cmpltui	zero,zero,2097
   20b74:	00020ca0 	cmpeqi	zero,zero,2098
   20b78:	00020ca0 	cmpeqi	zero,zero,2098
   20b7c:	00020ca0 	cmpeqi	zero,zero,2098
   20b80:	00020ca0 	cmpeqi	zero,zero,2098
   20b84:	00020ca0 	cmpeqi	zero,zero,2098
   20b88:	00020ca0 	cmpeqi	zero,zero,2098
   20b8c:	00020ca0 	cmpeqi	zero,zero,2098
   20b90:	00020ca0 	cmpeqi	zero,zero,2098
   20b94:	00020ca0 	cmpeqi	zero,zero,2098
   20b98:	00020ca0 	cmpeqi	zero,zero,2098
   20b9c:	00021298 	cmpnei	zero,zero,2122
   20ba0:	00020f84 	movi	zero,2110
   20ba4:	00020ca0 	cmpeqi	zero,zero,2098
   20ba8:	00020f84 	movi	zero,2110
   20bac:	00020ca0 	cmpeqi	zero,zero,2098
   20bb0:	00020ca0 	cmpeqi	zero,zero,2098
   20bb4:	00020ca0 	cmpeqi	zero,zero,2098
   20bb8:	00020ca0 	cmpeqi	zero,zero,2098
   20bbc:	00021530 	cmpltui	zero,zero,2132
   20bc0:	00020ca0 	cmpeqi	zero,zero,2098
   20bc4:	00020ca0 	cmpeqi	zero,zero,2098
   20bc8:	00020eb8 	rdprs	zero,zero,2106
   20bcc:	00020ca0 	cmpeqi	zero,zero,2098
   20bd0:	00020ca0 	cmpeqi	zero,zero,2098
   20bd4:	00020ca0 	cmpeqi	zero,zero,2098
   20bd8:	00020ca0 	cmpeqi	zero,zero,2098
   20bdc:	00020ca0 	cmpeqi	zero,zero,2098
   20be0:	00020e90 	cmplti	zero,zero,2106
   20be4:	00020ca0 	cmpeqi	zero,zero,2098
   20be8:	00020ca0 	cmpeqi	zero,zero,2098
   20bec:	00021570 	cmpltui	zero,zero,2133
   20bf0:	00020ca0 	cmpeqi	zero,zero,2098
   20bf4:	00020ca0 	cmpeqi	zero,zero,2098
   20bf8:	00020ca0 	cmpeqi	zero,zero,2098
   20bfc:	00020ca0 	cmpeqi	zero,zero,2098
   20c00:	00020ca0 	cmpeqi	zero,zero,2098
   20c04:	00020ca0 	cmpeqi	zero,zero,2098
   20c08:	00020ca0 	cmpeqi	zero,zero,2098
   20c0c:	00020ca0 	cmpeqi	zero,zero,2098
   20c10:	00020ca0 	cmpeqi	zero,zero,2098
   20c14:	00020ca0 	cmpeqi	zero,zero,2098
   20c18:	00021548 	cmpgei	zero,zero,2133
   20c1c:	00021198 	cmpnei	zero,zero,2118
   20c20:	00020f84 	movi	zero,2110
   20c24:	00020f84 	movi	zero,2110
   20c28:	00020f84 	movi	zero,2110
   20c2c:	0002153c 	xorhi	zero,zero,2132
   20c30:	00021198 	cmpnei	zero,zero,2118
   20c34:	00020ca0 	cmpeqi	zero,zero,2098
   20c38:	00020ca0 	cmpeqi	zero,zero,2098
   20c3c:	000213dc 	xori	zero,zero,2127
   20c40:	00020ca0 	cmpeqi	zero,zero,2098
   20c44:	000214f0 	cmpltui	zero,zero,2131
   20c48:	00020ebc 	xorhi	zero,zero,2106
   20c4c:	000214b0 	cmpltui	zero,zero,2130
   20c50:	000214a4 	muli	zero,zero,2130
   20c54:	00020ca0 	cmpeqi	zero,zero,2098
   20c58:	0002144c 	andi	zero,zero,2129
   20c5c:	00020ca0 	cmpeqi	zero,zero,2098
   20c60:	00020e94 	movui	zero,2106
   20c64:	00020ca0 	cmpeqi	zero,zero,2098
   20c68:	00020ca0 	cmpeqi	zero,zero,2098
   20c6c:	00021404 	movi	zero,2128
   20c70:	0021883a 	mov	r16,zero
   20c74:	e0bff404 	addi	r2,fp,-48
   20c78:	bf000007 	ldb	fp,0(r23)
   20c7c:	840002a4 	muli	r16,r16,10
   20c80:	bdc00044 	addi	r23,r23,1
   20c84:	1421883a 	add	r16,r2,r16
   20c88:	e0bff404 	addi	r2,fp,-48
   20c8c:	10c002b0 	cmpltui	r3,r2,10
   20c90:	183ff91e 	bne	r3,zero,20c78 <___vfprintf_internal_r+0x2c4>
   20c94:	e0bff804 	addi	r2,fp,-32
   20c98:	10c01668 	cmpgeui	r3,r2,89
   20c9c:	183f9626 	beq	r3,zero,20af8 <___vfprintf_internal_r+0x144>
   20ca0:	21003fcc 	andi	r4,r4,255
   20ca4:	2006521e 	bne	r4,zero,225f0 <___vfprintf_internal_r+0x1c3c>
   20ca8:	e0004d26 	beq	fp,zero,20de0 <___vfprintf_internal_r+0x42c>
   20cac:	df001d05 	stb	fp,116(sp)
   20cb0:	d8001345 	stb	zero,77(sp)
   20cb4:	05000044 	movi	r20,1
   20cb8:	05400044 	movi	r21,1
   20cbc:	dc401d04 	addi	r17,sp,116
   20cc0:	db000415 	stw	r12,16(sp)
   20cc4:	0011883a 	mov	r8,zero
   20cc8:	d8000715 	stw	zero,28(sp)
   20ccc:	d8800417 	ldw	r2,16(sp)
   20cd0:	1380008c 	andi	r14,r2,2
   20cd4:	70000126 	beq	r14,zero,20cdc <___vfprintf_internal_r+0x328>
   20cd8:	a5000084 	addi	r20,r20,2
   20cdc:	d8800417 	ldw	r2,16(sp)
   20ce0:	d8c01c17 	ldw	r3,112(sp)
   20ce4:	1340210c 	andi	r13,r2,132
   20ce8:	6800021e 	bne	r13,zero,20cf4 <___vfprintf_internal_r+0x340>
   20cec:	850fc83a 	sub	r7,r16,r20
   20cf0:	01c36916 	blt	zero,r7,21a98 <___vfprintf_internal_r+0x10e4>
   20cf4:	d8801347 	ldb	r2,77(sp)
   20cf8:	10000c26 	beq	r2,zero,20d2c <___vfprintf_internal_r+0x378>
   20cfc:	d8801b17 	ldw	r2,108(sp)
   20d00:	d9001344 	addi	r4,sp,77
   20d04:	18c00044 	addi	r3,r3,1
   20d08:	10800044 	addi	r2,r2,1
   20d0c:	b1000015 	stw	r4,0(r22)
   20d10:	01000044 	movi	r4,1
   20d14:	d8801b15 	stw	r2,108(sp)
   20d18:	b1000115 	stw	r4,4(r22)
   20d1c:	d8c01c15 	stw	r3,112(sp)
   20d20:	10800208 	cmpgei	r2,r2,8
   20d24:	10039d1e 	bne	r2,zero,21b9c <___vfprintf_internal_r+0x11e8>
   20d28:	b5800204 	addi	r22,r22,8
   20d2c:	70000c26 	beq	r14,zero,20d60 <___vfprintf_internal_r+0x3ac>
   20d30:	d8801b17 	ldw	r2,108(sp)
   20d34:	d9001384 	addi	r4,sp,78
   20d38:	18c00084 	addi	r3,r3,2
   20d3c:	10800044 	addi	r2,r2,1
   20d40:	b1000015 	stw	r4,0(r22)
   20d44:	01000084 	movi	r4,2
   20d48:	d8801b15 	stw	r2,108(sp)
   20d4c:	b1000115 	stw	r4,4(r22)
   20d50:	d8c01c15 	stw	r3,112(sp)
   20d54:	10800208 	cmpgei	r2,r2,8
   20d58:	10039e1e 	bne	r2,zero,21bd4 <___vfprintf_internal_r+0x1220>
   20d5c:	b5800204 	addi	r22,r22,8
   20d60:	6b402018 	cmpnei	r13,r13,128
   20d64:	68025a26 	beq	r13,zero,216d0 <___vfprintf_internal_r+0xd1c>
   20d68:	4551c83a 	sub	r8,r8,r21
   20d6c:	02029216 	blt	zero,r8,217b8 <___vfprintf_internal_r+0xe04>
   20d70:	d8800417 	ldw	r2,16(sp)
   20d74:	1080400c 	andi	r2,r2,256
   20d78:	10020f1e 	bne	r2,zero,215b8 <___vfprintf_internal_r+0xc04>
   20d7c:	d8801b17 	ldw	r2,108(sp)
   20d80:	1d47883a 	add	r3,r3,r21
   20d84:	b4400015 	stw	r17,0(r22)
   20d88:	10800044 	addi	r2,r2,1
   20d8c:	b5400115 	stw	r21,4(r22)
   20d90:	d8801b15 	stw	r2,108(sp)
   20d94:	d8c01c15 	stw	r3,112(sp)
   20d98:	10800208 	cmpgei	r2,r2,8
   20d9c:	1002fb1e 	bne	r2,zero,2198c <___vfprintf_internal_r+0xfd8>
   20da0:	b5800204 	addi	r22,r22,8
   20da4:	d8800417 	ldw	r2,16(sp)
   20da8:	1440010c 	andi	r17,r2,4
   20dac:	88000226 	beq	r17,zero,20db8 <___vfprintf_internal_r+0x404>
   20db0:	8523c83a 	sub	r17,r16,r20
   20db4:	0440c616 	blt	zero,r17,210d0 <___vfprintf_internal_r+0x71c>
   20db8:	8500010e 	bge	r16,r20,20dc0 <___vfprintf_internal_r+0x40c>
   20dbc:	a021883a 	mov	r16,r20
   20dc0:	d8800517 	ldw	r2,20(sp)
   20dc4:	1405883a 	add	r2,r2,r16
   20dc8:	d8800515 	stw	r2,20(sp)
   20dcc:	1802c11e 	bne	r3,zero,218d4 <___vfprintf_internal_r+0xf20>
   20dd0:	b8800007 	ldb	r2,0(r23)
   20dd4:	d8001b15 	stw	zero,108(sp)
   20dd8:	dd802704 	addi	r22,sp,156
   20ddc:	103f2b1e 	bne	r2,zero,20a8c <___vfprintf_internal_r+0xd8>
   20de0:	d8801c17 	ldw	r2,112(sp)
   20de4:	1005fd1e 	bne	r2,zero,225dc <___vfprintf_internal_r+0x1c28>
   20de8:	9080030b 	ldhu	r2,12(r18)
   20dec:	1080100c 	andi	r2,r2,64
   20df0:	1006a91e 	bne	r2,zero,22898 <___vfprintf_internal_r+0x1ee4>
   20df4:	d8800517 	ldw	r2,20(sp)
   20df8:	dfc04017 	ldw	ra,256(sp)
   20dfc:	df003f17 	ldw	fp,252(sp)
   20e00:	ddc03e17 	ldw	r23,248(sp)
   20e04:	dd803d17 	ldw	r22,244(sp)
   20e08:	dd403c17 	ldw	r21,240(sp)
   20e0c:	dd003b17 	ldw	r20,236(sp)
   20e10:	dcc03a17 	ldw	r19,232(sp)
   20e14:	dc803917 	ldw	r18,228(sp)
   20e18:	dc403817 	ldw	r17,224(sp)
   20e1c:	dc003717 	ldw	r16,220(sp)
   20e20:	dec04104 	addi	sp,sp,260
   20e24:	f800283a 	ret
   20e28:	900b883a 	mov	r5,r18
   20e2c:	9809883a 	mov	r4,r19
   20e30:	0022a980 	call	22a98 <__swsetup_r>
   20e34:	1006981e 	bne	r2,zero,22898 <___vfprintf_internal_r+0x1ee4>
   20e38:	9080030b 	ldhu	r2,12(r18)
   20e3c:	1080068c 	andi	r2,r2,26
   20e40:	10800298 	cmpnei	r2,r2,10
   20e44:	103f031e 	bne	r2,zero,20a54 <___vfprintf_internal_r+0xa0>
   20e48:	9080038f 	ldh	r2,14(r18)
   20e4c:	103f0116 	blt	r2,zero,20a54 <___vfprintf_internal_r+0xa0>
   20e50:	d9c00617 	ldw	r7,24(sp)
   20e54:	b00d883a 	mov	r6,r22
   20e58:	900b883a 	mov	r5,r18
   20e5c:	9809883a 	mov	r4,r19
   20e60:	dfc04017 	ldw	ra,256(sp)
   20e64:	df003f17 	ldw	fp,252(sp)
   20e68:	ddc03e17 	ldw	r23,248(sp)
   20e6c:	dd803d17 	ldw	r22,244(sp)
   20e70:	dd403c17 	ldw	r21,240(sp)
   20e74:	dd003b17 	ldw	r20,236(sp)
   20e78:	dcc03a17 	ldw	r19,232(sp)
   20e7c:	dc803917 	ldw	r18,228(sp)
   20e80:	dc403817 	ldw	r17,224(sp)
   20e84:	dc003717 	ldw	r16,220(sp)
   20e88:	dec04104 	addi	sp,sp,260
   20e8c:	00229d81 	jmpi	229d8 <__sbprintf>
   20e90:	63000414 	ori	r12,r12,16
   20e94:	6080080c 	andi	r2,r12,32
   20e98:	10008126 	beq	r2,zero,210a0 <___vfprintf_internal_r+0x6ec>
   20e9c:	d8c00617 	ldw	r3,24(sp)
   20ea0:	00800044 	movi	r2,1
   20ea4:	1d000017 	ldw	r20,0(r3)
   20ea8:	1d400117 	ldw	r21,4(r3)
   20eac:	18c00204 	addi	r3,r3,8
   20eb0:	d8c00615 	stw	r3,24(sp)
   20eb4:	00000906 	br	20edc <___vfprintf_internal_r+0x528>
   20eb8:	63000414 	ori	r12,r12,16
   20ebc:	6080080c 	andi	r2,r12,32
   20ec0:	10006b26 	beq	r2,zero,21070 <___vfprintf_internal_r+0x6bc>
   20ec4:	d8c00617 	ldw	r3,24(sp)
   20ec8:	0005883a 	mov	r2,zero
   20ecc:	1d000017 	ldw	r20,0(r3)
   20ed0:	1d400117 	ldw	r21,4(r3)
   20ed4:	18c00204 	addi	r3,r3,8
   20ed8:	d8c00615 	stw	r3,24(sp)
   20edc:	d8001345 	stb	zero,77(sp)
   20ee0:	40ffffe0 	cmpeqi	r3,r8,-1
   20ee4:	001b883a 	mov	r13,zero
   20ee8:	1801081e 	bne	r3,zero,2130c <___vfprintf_internal_r+0x958>
   20eec:	047fdfc4 	movi	r17,-129
   20ef0:	6448703a 	and	r4,r12,r17
   20ef4:	a546b03a 	or	r3,r20,r21
   20ef8:	d9000415 	stw	r4,16(sp)
   20efc:	1802e41e 	bne	r3,zero,21a90 <___vfprintf_internal_r+0x10dc>
   20f00:	40025e1e 	bne	r8,zero,2187c <___vfprintf_internal_r+0xec8>
   20f04:	1003ac1e 	bne	r2,zero,21db8 <___vfprintf_internal_r+0x1404>
   20f08:	6540004c 	andi	r21,r12,1
   20f0c:	a803e226 	beq	r21,zero,21e98 <___vfprintf_internal_r+0x14e4>
   20f10:	00800c04 	movi	r2,48
   20f14:	d88026c5 	stb	r2,155(sp)
   20f18:	dc4026c4 	addi	r17,sp,155
   20f1c:	0000ba06 	br	21208 <___vfprintf_internal_r+0x854>
   20f20:	85e3c83a 	sub	r17,r16,r23
   20f24:	85ffae26 	beq	r16,r23,20de0 <___vfprintf_internal_r+0x42c>
   20f28:	d8c01c17 	ldw	r3,112(sp)
   20f2c:	d8801b17 	ldw	r2,108(sp)
   20f30:	b5c00015 	stw	r23,0(r22)
   20f34:	1c47883a 	add	r3,r3,r17
   20f38:	10800044 	addi	r2,r2,1
   20f3c:	d8801b15 	stw	r2,108(sp)
   20f40:	b4400115 	stw	r17,4(r22)
   20f44:	d8c01c15 	stw	r3,112(sp)
   20f48:	10800208 	cmpgei	r2,r2,8
   20f4c:	1000061e 	bne	r2,zero,20f68 <___vfprintf_internal_r+0x5b4>
   20f50:	b5800204 	addi	r22,r22,8
   20f54:	d8c00517 	ldw	r3,20(sp)
   20f58:	80800003 	ldbu	r2,0(r16)
   20f5c:	1c47883a 	add	r3,r3,r17
   20f60:	d8c00515 	stw	r3,20(sp)
   20f64:	003ed306 	br	20ab4 <___vfprintf_internal_r+0x100>
   20f68:	d9801a04 	addi	r6,sp,104
   20f6c:	900b883a 	mov	r5,r18
   20f70:	9809883a 	mov	r4,r19
   20f74:	0027ecc0 	call	27ecc <__sprint_r>
   20f78:	103f9b1e 	bne	r2,zero,20de8 <___vfprintf_internal_r+0x434>
   20f7c:	dd802704 	addi	r22,sp,156
   20f80:	003ff406 	br	20f54 <___vfprintf_internal_r+0x5a0>
   20f84:	21003fcc 	andi	r4,r4,255
   20f88:	2006271e 	bne	r4,zero,22828 <___vfprintf_internal_r+0x1e74>
   20f8c:	d8c00617 	ldw	r3,24(sp)
   20f90:	6080020c 	andi	r2,r12,8
   20f94:	19000204 	addi	r4,r3,8
   20f98:	d9000e15 	stw	r4,56(sp)
   20f9c:	1003c01e 	bne	r2,zero,21ea0 <___vfprintf_internal_r+0x14ec>
   20fa0:	d8800617 	ldw	r2,24(sp)
   20fa4:	10c00017 	ldw	r3,0(r2)
   20fa8:	10800117 	ldw	r2,4(r2)
   20fac:	d8c00915 	stw	r3,36(sp)
   20fb0:	d8800a15 	stw	r2,40(sp)
   20fb4:	dd400a17 	ldw	r21,40(sp)
   20fb8:	dd000917 	ldw	r20,36(sp)
   20fbc:	00a00034 	movhi	r2,32768
   20fc0:	10bfffc4 	addi	r2,r2,-1
   20fc4:	a8a2703a 	and	r17,r21,r2
   20fc8:	01dffc34 	movhi	r7,32752
   20fcc:	01bfffc4 	movi	r6,-1
   20fd0:	39ffffc4 	addi	r7,r7,-1
   20fd4:	a009883a 	mov	r4,r20
   20fd8:	880b883a 	mov	r5,r17
   20fdc:	da000615 	stw	r8,24(sp)
   20fe0:	db000415 	stw	r12,16(sp)
   20fe4:	002d1c00 	call	2d1c0 <__unorddf2>
   20fe8:	db000417 	ldw	r12,16(sp)
   20fec:	da000617 	ldw	r8,24(sp)
   20ff0:	10044b1e 	bne	r2,zero,22120 <___vfprintf_internal_r+0x176c>
   20ff4:	01dffc34 	movhi	r7,32752
   20ff8:	01bfffc4 	movi	r6,-1
   20ffc:	39ffffc4 	addi	r7,r7,-1
   21000:	a009883a 	mov	r4,r20
   21004:	880b883a 	mov	r5,r17
   21008:	002c1580 	call	2c158 <__ledf2>
   2100c:	db000417 	ldw	r12,16(sp)
   21010:	da000617 	ldw	r8,24(sp)
   21014:	0084420e 	bge	zero,r2,22120 <___vfprintf_internal_r+0x176c>
   21018:	000d883a 	mov	r6,zero
   2101c:	000f883a 	mov	r7,zero
   21020:	a009883a 	mov	r4,r20
   21024:	a80b883a 	mov	r5,r21
   21028:	002c1580 	call	2c158 <__ledf2>
   2102c:	db000417 	ldw	r12,16(sp)
   21030:	10055716 	blt	r2,zero,22590 <___vfprintf_internal_r+0x1bdc>
   21034:	db401343 	ldbu	r13,77(sp)
   21038:	e0801210 	cmplti	r2,fp,72
   2103c:	1005451e 	bne	r2,zero,22554 <___vfprintf_internal_r+0x1ba0>
   21040:	044000f4 	movhi	r17,3
   21044:	8c7fd104 	addi	r17,r17,-188
   21048:	00bfdfc4 	movi	r2,-129
   2104c:	6084703a 	and	r2,r12,r2
   21050:	d8800415 	stw	r2,16(sp)
   21054:	d8800e17 	ldw	r2,56(sp)
   21058:	050000c4 	movi	r20,3
   2105c:	054000c4 	movi	r21,3
   21060:	d8800615 	stw	r2,24(sp)
   21064:	0011883a 	mov	r8,zero
   21068:	d8000715 	stw	zero,28(sp)
   2106c:	00006a06 	br	21218 <___vfprintf_internal_r+0x864>
   21070:	d8c00617 	ldw	r3,24(sp)
   21074:	6080040c 	andi	r2,r12,16
   21078:	1d000017 	ldw	r20,0(r3)
   2107c:	18c00104 	addi	r3,r3,4
   21080:	d8c00615 	stw	r3,24(sp)
   21084:	1000031e 	bne	r2,zero,21094 <___vfprintf_internal_r+0x6e0>
   21088:	6080100c 	andi	r2,r12,64
   2108c:	10000126 	beq	r2,zero,21094 <___vfprintf_internal_r+0x6e0>
   21090:	a53fffcc 	andi	r20,r20,65535
   21094:	002b883a 	mov	r21,zero
   21098:	0005883a 	mov	r2,zero
   2109c:	003f8f06 	br	20edc <___vfprintf_internal_r+0x528>
   210a0:	d8c00617 	ldw	r3,24(sp)
   210a4:	6080040c 	andi	r2,r12,16
   210a8:	1d000017 	ldw	r20,0(r3)
   210ac:	18c00104 	addi	r3,r3,4
   210b0:	d8c00615 	stw	r3,24(sp)
   210b4:	1000031e 	bne	r2,zero,210c4 <___vfprintf_internal_r+0x710>
   210b8:	6080100c 	andi	r2,r12,64
   210bc:	10000126 	beq	r2,zero,210c4 <___vfprintf_internal_r+0x710>
   210c0:	a53fffcc 	andi	r20,r20,65535
   210c4:	002b883a 	mov	r21,zero
   210c8:	00800044 	movi	r2,1
   210cc:	003f8306 	br	20edc <___vfprintf_internal_r+0x528>
   210d0:	030000f4 	movhi	r12,3
   210d4:	89000450 	cmplti	r4,r17,17
   210d8:	d8801b17 	ldw	r2,108(sp)
   210dc:	633fe504 	addi	r12,r12,-108
   210e0:	20001b1e 	bne	r4,zero,21150 <___vfprintf_internal_r+0x79c>
   210e4:	05400404 	movi	r21,16
   210e8:	6039883a 	mov	fp,r12
   210ec:	00000406 	br	21100 <___vfprintf_internal_r+0x74c>
   210f0:	8c7ffc04 	addi	r17,r17,-16
   210f4:	89000448 	cmpgei	r4,r17,17
   210f8:	b5800204 	addi	r22,r22,8
   210fc:	20001326 	beq	r4,zero,2114c <___vfprintf_internal_r+0x798>
   21100:	10800044 	addi	r2,r2,1
   21104:	18c00404 	addi	r3,r3,16
   21108:	b7000015 	stw	fp,0(r22)
   2110c:	b5400115 	stw	r21,4(r22)
   21110:	d8c01c15 	stw	r3,112(sp)
   21114:	d8801b15 	stw	r2,108(sp)
   21118:	11000208 	cmpgei	r4,r2,8
   2111c:	203ff426 	beq	r4,zero,210f0 <___vfprintf_internal_r+0x73c>
   21120:	d9801a04 	addi	r6,sp,104
   21124:	900b883a 	mov	r5,r18
   21128:	9809883a 	mov	r4,r19
   2112c:	0027ecc0 	call	27ecc <__sprint_r>
   21130:	103f2d1e 	bne	r2,zero,20de8 <___vfprintf_internal_r+0x434>
   21134:	8c7ffc04 	addi	r17,r17,-16
   21138:	89000448 	cmpgei	r4,r17,17
   2113c:	d8c01c17 	ldw	r3,112(sp)
   21140:	d8801b17 	ldw	r2,108(sp)
   21144:	dd802704 	addi	r22,sp,156
   21148:	203fed1e 	bne	r4,zero,21100 <___vfprintf_internal_r+0x74c>
   2114c:	e019883a 	mov	r12,fp
   21150:	10800044 	addi	r2,r2,1
   21154:	1c47883a 	add	r3,r3,r17
   21158:	d8801b15 	stw	r2,108(sp)
   2115c:	b3000015 	stw	r12,0(r22)
   21160:	b4400115 	stw	r17,4(r22)
   21164:	d8c01c15 	stw	r3,112(sp)
   21168:	10800210 	cmplti	r2,r2,8
   2116c:	103f121e 	bne	r2,zero,20db8 <___vfprintf_internal_r+0x404>
   21170:	d9801a04 	addi	r6,sp,104
   21174:	900b883a 	mov	r5,r18
   21178:	9809883a 	mov	r4,r19
   2117c:	0027ecc0 	call	27ecc <__sprint_r>
   21180:	103f191e 	bne	r2,zero,20de8 <___vfprintf_internal_r+0x434>
   21184:	d8c01c17 	ldw	r3,112(sp)
   21188:	003f0b06 	br	20db8 <___vfprintf_internal_r+0x404>
   2118c:	9809883a 	mov	r4,r19
   21190:	0024ba00 	call	24ba0 <__sinit>
   21194:	003e1f06 	br	20a14 <___vfprintf_internal_r+0x60>
   21198:	21003fcc 	andi	r4,r4,255
   2119c:	2005a41e 	bne	r4,zero,22830 <___vfprintf_internal_r+0x1e7c>
   211a0:	6080080c 	andi	r2,r12,32
   211a4:	10004126 	beq	r2,zero,212ac <___vfprintf_internal_r+0x8f8>
   211a8:	d8c00617 	ldw	r3,24(sp)
   211ac:	18800117 	ldw	r2,4(r3)
   211b0:	1d000017 	ldw	r20,0(r3)
   211b4:	18c00204 	addi	r3,r3,8
   211b8:	d8c00615 	stw	r3,24(sp)
   211bc:	102b883a 	mov	r21,r2
   211c0:	10004816 	blt	r2,zero,212e4 <___vfprintf_internal_r+0x930>
   211c4:	40bfffd8 	cmpnei	r2,r8,-1
   211c8:	db401343 	ldbu	r13,77(sp)
   211cc:	10000626 	beq	r2,zero,211e8 <___vfprintf_internal_r+0x834>
   211d0:	047fdfc4 	movi	r17,-129
   211d4:	6446703a 	and	r3,r12,r17
   211d8:	a544b03a 	or	r2,r20,r21
   211dc:	d8c00415 	stw	r3,16(sp)
   211e0:	1002f426 	beq	r2,zero,21db4 <___vfprintf_internal_r+0x1400>
   211e4:	db000417 	ldw	r12,16(sp)
   211e8:	a8037d1e 	bne	r21,zero,21fe0 <___vfprintf_internal_r+0x162c>
   211ec:	a08002a8 	cmpgeui	r2,r20,10
   211f0:	10037b1e 	bne	r2,zero,21fe0 <___vfprintf_internal_r+0x162c>
   211f4:	a5000c04 	addi	r20,r20,48
   211f8:	dd0026c5 	stb	r20,155(sp)
   211fc:	db000415 	stw	r12,16(sp)
   21200:	05400044 	movi	r21,1
   21204:	dc4026c4 	addi	r17,sp,155
   21208:	4029883a 	mov	r20,r8
   2120c:	4540010e 	bge	r8,r21,21214 <___vfprintf_internal_r+0x860>
   21210:	a829883a 	mov	r20,r21
   21214:	d8000715 	stw	zero,28(sp)
   21218:	6b403fcc 	andi	r13,r13,255
   2121c:	6b40201c 	xori	r13,r13,128
   21220:	6b7fe004 	addi	r13,r13,-128
   21224:	683ea926 	beq	r13,zero,20ccc <___vfprintf_internal_r+0x318>
   21228:	a5000044 	addi	r20,r20,1
   2122c:	003ea706 	br	20ccc <___vfprintf_internal_r+0x318>
   21230:	d8800617 	ldw	r2,24(sp)
   21234:	14000017 	ldw	r16,0(r2)
   21238:	10800104 	addi	r2,r2,4
   2123c:	8003130e 	bge	r16,zero,21e8c <___vfprintf_internal_r+0x14d8>
   21240:	0421c83a 	sub	r16,zero,r16
   21244:	d8800615 	stw	r2,24(sp)
   21248:	bac00007 	ldb	r11,0(r23)
   2124c:	63000114 	ori	r12,r12,4
   21250:	003e2406 	br	20ae4 <___vfprintf_internal_r+0x130>
   21254:	bf000007 	ldb	fp,0(r23)
   21258:	b8c00044 	addi	r3,r23,1
   2125c:	e0800aa0 	cmpeqi	r2,fp,42
   21260:	1005c71e 	bne	r2,zero,22980 <___vfprintf_internal_r+0x1fcc>
   21264:	e0bff404 	addi	r2,fp,-48
   21268:	118002b0 	cmpltui	r6,r2,10
   2126c:	182f883a 	mov	r23,r3
   21270:	0011883a 	mov	r8,zero
   21274:	303e1d26 	beq	r6,zero,20aec <___vfprintf_internal_r+0x138>
   21278:	bf000007 	ldb	fp,0(r23)
   2127c:	420002a4 	muli	r8,r8,10
   21280:	bdc00044 	addi	r23,r23,1
   21284:	4091883a 	add	r8,r8,r2
   21288:	e0bff404 	addi	r2,fp,-48
   2128c:	10c002b0 	cmpltui	r3,r2,10
   21290:	183ff91e 	bne	r3,zero,21278 <___vfprintf_internal_r+0x8c4>
   21294:	003e1506 	br	20aec <___vfprintf_internal_r+0x138>
   21298:	21003fcc 	andi	r4,r4,255
   2129c:	20055e1e 	bne	r4,zero,22818 <___vfprintf_internal_r+0x1e64>
   212a0:	63000414 	ori	r12,r12,16
   212a4:	6080080c 	andi	r2,r12,32
   212a8:	103fbf1e 	bne	r2,zero,211a8 <___vfprintf_internal_r+0x7f4>
   212ac:	d8c00617 	ldw	r3,24(sp)
   212b0:	6080040c 	andi	r2,r12,16
   212b4:	1d000017 	ldw	r20,0(r3)
   212b8:	18c00104 	addi	r3,r3,4
   212bc:	d8c00615 	stw	r3,24(sp)
   212c0:	1002e91e 	bne	r2,zero,21e68 <___vfprintf_internal_r+0x14b4>
   212c4:	6080100c 	andi	r2,r12,64
   212c8:	1002e726 	beq	r2,zero,21e68 <___vfprintf_internal_r+0x14b4>
   212cc:	a53fffcc 	andi	r20,r20,65535
   212d0:	a520001c 	xori	r20,r20,32768
   212d4:	a5200004 	addi	r20,r20,-32768
   212d8:	a02bd7fa 	srai	r21,r20,31
   212dc:	a805883a 	mov	r2,r21
   212e0:	103fb80e 	bge	r2,zero,211c4 <___vfprintf_internal_r+0x810>
   212e4:	a004c03a 	cmpne	r2,r20,zero
   212e8:	056bc83a 	sub	r21,zero,r21
   212ec:	a8abc83a 	sub	r21,r21,r2
   212f0:	00800b44 	movi	r2,45
   212f4:	d8801345 	stb	r2,77(sp)
   212f8:	40ffffe0 	cmpeqi	r3,r8,-1
   212fc:	0529c83a 	sub	r20,zero,r20
   21300:	03400b44 	movi	r13,45
   21304:	00800044 	movi	r2,1
   21308:	183ef826 	beq	r3,zero,20eec <___vfprintf_internal_r+0x538>
   2130c:	10c00060 	cmpeqi	r3,r2,1
   21310:	183fb51e 	bne	r3,zero,211e8 <___vfprintf_internal_r+0x834>
   21314:	108000a0 	cmpeqi	r2,r2,2
   21318:	10015d1e 	bne	r2,zero,21890 <___vfprintf_internal_r+0xedc>
   2131c:	dc402704 	addi	r17,sp,156
   21320:	a006d0fa 	srli	r3,r20,3
   21324:	a808977a 	slli	r4,r21,29
   21328:	a82ad0fa 	srli	r21,r21,3
   2132c:	a50001cc 	andi	r20,r20,7
   21330:	a0800c04 	addi	r2,r20,48
   21334:	20e8b03a 	or	r20,r4,r3
   21338:	88bfffc5 	stb	r2,-1(r17)
   2133c:	a546b03a 	or	r3,r20,r21
   21340:	880b883a 	mov	r5,r17
   21344:	8c7fffc4 	addi	r17,r17,-1
   21348:	183ff51e 	bne	r3,zero,21320 <___vfprintf_internal_r+0x96c>
   2134c:	60c0004c 	andi	r3,r12,1
   21350:	18015c26 	beq	r3,zero,218c4 <___vfprintf_internal_r+0xf10>
   21354:	10803fcc 	andi	r2,r2,255
   21358:	1080201c 	xori	r2,r2,128
   2135c:	10bfe004 	addi	r2,r2,-128
   21360:	10800c18 	cmpnei	r2,r2,48
   21364:	10015726 	beq	r2,zero,218c4 <___vfprintf_internal_r+0xf10>
   21368:	00800c04 	movi	r2,48
   2136c:	297fff84 	addi	r5,r5,-2
   21370:	88bfffc5 	stb	r2,-1(r17)
   21374:	d8802704 	addi	r2,sp,156
   21378:	116bc83a 	sub	r21,r2,r5
   2137c:	db000415 	stw	r12,16(sp)
   21380:	2823883a 	mov	r17,r5
   21384:	003fa006 	br	21208 <___vfprintf_internal_r+0x854>
   21388:	bac00007 	ldb	r11,0(r23)
   2138c:	63002014 	ori	r12,r12,128
   21390:	003dd406 	br	20ae4 <___vfprintf_internal_r+0x130>
   21394:	bac00007 	ldb	r11,0(r23)
   21398:	01000044 	movi	r4,1
   2139c:	01400ac4 	movi	r5,43
   213a0:	003dd006 	br	20ae4 <___vfprintf_internal_r+0x130>
   213a4:	bac00007 	ldb	r11,0(r23)
   213a8:	63000054 	ori	r12,r12,1
   213ac:	003dcd06 	br	20ae4 <___vfprintf_internal_r+0x130>
   213b0:	28803fcc 	andi	r2,r5,255
   213b4:	1080201c 	xori	r2,r2,128
   213b8:	10bfe004 	addi	r2,r2,-128
   213bc:	bf000003 	ldbu	fp,0(r23)
   213c0:	10000c1e 	bne	r2,zero,213f4 <___vfprintf_internal_r+0xa40>
   213c4:	e2c03fcc 	andi	r11,fp,255
   213c8:	5ac0201c 	xori	r11,r11,128
   213cc:	01000044 	movi	r4,1
   213d0:	01400804 	movi	r5,32
   213d4:	5affe004 	addi	r11,r11,-128
   213d8:	003dc206 	br	20ae4 <___vfprintf_internal_r+0x130>
   213dc:	bac00007 	ldb	r11,0(r23)
   213e0:	58801b18 	cmpnei	r2,r11,108
   213e4:	1002a71e 	bne	r2,zero,21e84 <___vfprintf_internal_r+0x14d0>
   213e8:	bf000043 	ldbu	fp,1(r23)
   213ec:	63000814 	ori	r12,r12,32
   213f0:	bdc00044 	addi	r23,r23,1
   213f4:	e2c03fcc 	andi	r11,fp,255
   213f8:	5ac0201c 	xori	r11,r11,128
   213fc:	5affe004 	addi	r11,r11,-128
   21400:	003db806 	br	20ae4 <___vfprintf_internal_r+0x130>
   21404:	21003fcc 	andi	r4,r4,255
   21408:	20050b1e 	bne	r4,zero,22838 <___vfprintf_internal_r+0x1e84>
   2140c:	008000f4 	movhi	r2,3
   21410:	10bfd404 	addi	r2,r2,-176
   21414:	d8800c15 	stw	r2,48(sp)
   21418:	6080080c 	andi	r2,r12,32
   2141c:	10005b26 	beq	r2,zero,2158c <___vfprintf_internal_r+0xbd8>
   21420:	d8800617 	ldw	r2,24(sp)
   21424:	15000017 	ldw	r20,0(r2)
   21428:	15400117 	ldw	r21,4(r2)
   2142c:	10800204 	addi	r2,r2,8
   21430:	d8800615 	stw	r2,24(sp)
   21434:	6080004c 	andi	r2,r12,1
   21438:	10000226 	beq	r2,zero,21444 <___vfprintf_internal_r+0xa90>
   2143c:	a544b03a 	or	r2,r20,r21
   21440:	10029c1e 	bne	r2,zero,21eb4 <___vfprintf_internal_r+0x1500>
   21444:	00800084 	movi	r2,2
   21448:	003ea406 	br	20edc <___vfprintf_internal_r+0x528>
   2144c:	d8800617 	ldw	r2,24(sp)
   21450:	d8001345 	stb	zero,77(sp)
   21454:	14400017 	ldw	r17,0(r2)
   21458:	10c00104 	addi	r3,r2,4
   2145c:	8802ba26 	beq	r17,zero,21f48 <___vfprintf_internal_r+0x1594>
   21460:	40bfffe0 	cmpeqi	r2,r8,-1
   21464:	1003c61e 	bne	r2,zero,22380 <___vfprintf_internal_r+0x19cc>
   21468:	400d883a 	mov	r6,r8
   2146c:	000b883a 	mov	r5,zero
   21470:	8809883a 	mov	r4,r17
   21474:	d8c00715 	stw	r3,28(sp)
   21478:	db000615 	stw	r12,24(sp)
   2147c:	da000415 	stw	r8,16(sp)
   21480:	002600c0 	call	2600c <memchr>
   21484:	da000417 	ldw	r8,16(sp)
   21488:	db000617 	ldw	r12,24(sp)
   2148c:	d8c00717 	ldw	r3,28(sp)
   21490:	1004d126 	beq	r2,zero,227d8 <___vfprintf_internal_r+0x1e24>
   21494:	146bc83a 	sub	r21,r2,r17
   21498:	a829883a 	mov	r20,r21
   2149c:	d8c00615 	stw	r3,24(sp)
   214a0:	003e0706 	br	20cc0 <___vfprintf_internal_r+0x30c>
   214a4:	bac00007 	ldb	r11,0(r23)
   214a8:	63000814 	ori	r12,r12,32
   214ac:	003d8d06 	br	20ae4 <___vfprintf_internal_r+0x130>
   214b0:	d8c00617 	ldw	r3,24(sp)
   214b4:	00800c04 	movi	r2,48
   214b8:	d8801385 	stb	r2,78(sp)
   214bc:	00801e04 	movi	r2,120
   214c0:	010000f4 	movhi	r4,3
   214c4:	d88013c5 	stb	r2,79(sp)
   214c8:	18800104 	addi	r2,r3,4
   214cc:	d8800615 	stw	r2,24(sp)
   214d0:	20bfd404 	addi	r2,r4,-176
   214d4:	d8800c15 	stw	r2,48(sp)
   214d8:	1d000017 	ldw	r20,0(r3)
   214dc:	002b883a 	mov	r21,zero
   214e0:	63000094 	ori	r12,r12,2
   214e4:	00800084 	movi	r2,2
   214e8:	07001e04 	movi	fp,120
   214ec:	003e7b06 	br	20edc <___vfprintf_internal_r+0x528>
   214f0:	21003fcc 	andi	r4,r4,255
   214f4:	2004ca1e 	bne	r4,zero,22820 <___vfprintf_internal_r+0x1e6c>
   214f8:	d9000617 	ldw	r4,24(sp)
   214fc:	6080080c 	andi	r2,r12,32
   21500:	20c00104 	addi	r3,r4,4
   21504:	1002711e 	bne	r2,zero,21ecc <___vfprintf_internal_r+0x1518>
   21508:	6080040c 	andi	r2,r12,16
   2150c:	1002dc1e 	bne	r2,zero,22080 <___vfprintf_internal_r+0x16cc>
   21510:	6300100c 	andi	r12,r12,64
   21514:	6002da26 	beq	r12,zero,22080 <___vfprintf_internal_r+0x16cc>
   21518:	d8800617 	ldw	r2,24(sp)
   2151c:	d8c00615 	stw	r3,24(sp)
   21520:	d8c00517 	ldw	r3,20(sp)
   21524:	10800017 	ldw	r2,0(r2)
   21528:	10c0000d 	sth	r3,0(r2)
   2152c:	003d5506 	br	20a84 <___vfprintf_internal_r+0xd0>
   21530:	bac00007 	ldb	r11,0(r23)
   21534:	63000214 	ori	r12,r12,8
   21538:	003d6a06 	br	20ae4 <___vfprintf_internal_r+0x130>
   2153c:	bac00007 	ldb	r11,0(r23)
   21540:	63001014 	ori	r12,r12,64
   21544:	003d6706 	br	20ae4 <___vfprintf_internal_r+0x130>
   21548:	d8c00617 	ldw	r3,24(sp)
   2154c:	d8001345 	stb	zero,77(sp)
   21550:	05000044 	movi	r20,1
   21554:	18800017 	ldw	r2,0(r3)
   21558:	18c00104 	addi	r3,r3,4
   2155c:	d8c00615 	stw	r3,24(sp)
   21560:	d8801d05 	stb	r2,116(sp)
   21564:	05400044 	movi	r21,1
   21568:	dc401d04 	addi	r17,sp,116
   2156c:	003dd406 	br	20cc0 <___vfprintf_internal_r+0x30c>
   21570:	21003fcc 	andi	r4,r4,255
   21574:	2004b21e 	bne	r4,zero,22840 <___vfprintf_internal_r+0x1e8c>
   21578:	008000f4 	movhi	r2,3
   2157c:	10bfd904 	addi	r2,r2,-156
   21580:	d8800c15 	stw	r2,48(sp)
   21584:	6080080c 	andi	r2,r12,32
   21588:	103fa51e 	bne	r2,zero,21420 <___vfprintf_internal_r+0xa6c>
   2158c:	d8c00617 	ldw	r3,24(sp)
   21590:	6080040c 	andi	r2,r12,16
   21594:	1d000017 	ldw	r20,0(r3)
   21598:	18c00104 	addi	r3,r3,4
   2159c:	d8c00615 	stw	r3,24(sp)
   215a0:	10022f1e 	bne	r2,zero,21e60 <___vfprintf_internal_r+0x14ac>
   215a4:	6080100c 	andi	r2,r12,64
   215a8:	10022d26 	beq	r2,zero,21e60 <___vfprintf_internal_r+0x14ac>
   215ac:	a53fffcc 	andi	r20,r20,65535
   215b0:	002b883a 	mov	r21,zero
   215b4:	003f9f06 	br	21434 <___vfprintf_internal_r+0xa80>
   215b8:	e2c01990 	cmplti	r11,fp,102
   215bc:	5800fb1e 	bne	r11,zero,219ac <___vfprintf_internal_r+0xff8>
   215c0:	d9000917 	ldw	r4,36(sp)
   215c4:	d9400a17 	ldw	r5,40(sp)
   215c8:	000d883a 	mov	r6,zero
   215cc:	000f883a 	mov	r7,zero
   215d0:	d8c00e15 	stw	r3,56(sp)
   215d4:	002bff00 	call	2bff0 <__eqdf2>
   215d8:	d8c00e17 	ldw	r3,56(sp)
   215dc:	1001891e 	bne	r2,zero,21c04 <___vfprintf_internal_r+0x1250>
   215e0:	d8801b17 	ldw	r2,108(sp)
   215e4:	010000f4 	movhi	r4,3
   215e8:	213fe004 	addi	r4,r4,-128
   215ec:	10800044 	addi	r2,r2,1
   215f0:	18c00044 	addi	r3,r3,1
   215f4:	b1000015 	stw	r4,0(r22)
   215f8:	01000044 	movi	r4,1
   215fc:	d8801b15 	stw	r2,108(sp)
   21600:	b1000115 	stw	r4,4(r22)
   21604:	d8c01c15 	stw	r3,112(sp)
   21608:	10800208 	cmpgei	r2,r2,8
   2160c:	10034a1e 	bne	r2,zero,22338 <___vfprintf_internal_r+0x1984>
   21610:	b5800204 	addi	r22,r22,8
   21614:	d8801417 	ldw	r2,80(sp)
   21618:	d9000817 	ldw	r4,32(sp)
   2161c:	1102150e 	bge	r2,r4,21e74 <___vfprintf_internal_r+0x14c0>
   21620:	d8800d17 	ldw	r2,52(sp)
   21624:	d9000b17 	ldw	r4,44(sp)
   21628:	b0800015 	stw	r2,0(r22)
   2162c:	d8801b17 	ldw	r2,108(sp)
   21630:	1907883a 	add	r3,r3,r4
   21634:	b1000115 	stw	r4,4(r22)
   21638:	10800044 	addi	r2,r2,1
   2163c:	d8801b15 	stw	r2,108(sp)
   21640:	d8c01c15 	stw	r3,112(sp)
   21644:	10800208 	cmpgei	r2,r2,8
   21648:	1002371e 	bne	r2,zero,21f28 <___vfprintf_internal_r+0x1574>
   2164c:	b5800204 	addi	r22,r22,8
   21650:	d8800817 	ldw	r2,32(sp)
   21654:	157fffc4 	addi	r21,r2,-1
   21658:	057dd20e 	bge	zero,r21,20da4 <___vfprintf_internal_r+0x3f0>
   2165c:	01c000f4 	movhi	r7,3
   21660:	a9000450 	cmplti	r4,r21,17
   21664:	d8801b17 	ldw	r2,108(sp)
   21668:	39ffe104 	addi	r7,r7,-124
   2166c:	20032e1e 	bne	r4,zero,22328 <___vfprintf_internal_r+0x1974>
   21670:	07000404 	movi	fp,16
   21674:	3823883a 	mov	r17,r7
   21678:	00000406 	br	2168c <___vfprintf_internal_r+0xcd8>
   2167c:	b5800204 	addi	r22,r22,8
   21680:	ad7ffc04 	addi	r21,r21,-16
   21684:	a9000448 	cmpgei	r4,r21,17
   21688:	20032626 	beq	r4,zero,22324 <___vfprintf_internal_r+0x1970>
   2168c:	10800044 	addi	r2,r2,1
   21690:	18c00404 	addi	r3,r3,16
   21694:	b4400015 	stw	r17,0(r22)
   21698:	b7000115 	stw	fp,4(r22)
   2169c:	d8c01c15 	stw	r3,112(sp)
   216a0:	d8801b15 	stw	r2,108(sp)
   216a4:	11000208 	cmpgei	r4,r2,8
   216a8:	203ff426 	beq	r4,zero,2167c <___vfprintf_internal_r+0xcc8>
   216ac:	d9801a04 	addi	r6,sp,104
   216b0:	900b883a 	mov	r5,r18
   216b4:	9809883a 	mov	r4,r19
   216b8:	0027ecc0 	call	27ecc <__sprint_r>
   216bc:	103dca1e 	bne	r2,zero,20de8 <___vfprintf_internal_r+0x434>
   216c0:	d8c01c17 	ldw	r3,112(sp)
   216c4:	d8801b17 	ldw	r2,108(sp)
   216c8:	dd802704 	addi	r22,sp,156
   216cc:	003fec06 	br	21680 <___vfprintf_internal_r+0xccc>
   216d0:	8519c83a 	sub	r12,r16,r20
   216d4:	033da40e 	bge	zero,r12,20d68 <___vfprintf_internal_r+0x3b4>
   216d8:	01c000f4 	movhi	r7,3
   216dc:	61000450 	cmplti	r4,r12,17
   216e0:	d8801b17 	ldw	r2,108(sp)
   216e4:	39ffe104 	addi	r7,r7,-124
   216e8:	2000281e 	bne	r4,zero,2178c <___vfprintf_internal_r+0xdd8>
   216ec:	dc400e15 	stw	r17,56(sp)
   216f0:	dc000f15 	stw	r16,60(sp)
   216f4:	b009883a 	mov	r4,r22
   216f8:	03400404 	movi	r13,16
   216fc:	a02d883a 	mov	r22,r20
   21700:	6021883a 	mov	r16,r12
   21704:	4029883a 	mov	r20,r8
   21708:	3823883a 	mov	r17,r7
   2170c:	00000406 	br	21720 <___vfprintf_internal_r+0xd6c>
   21710:	843ffc04 	addi	r16,r16,-16
   21714:	81400448 	cmpgei	r5,r16,17
   21718:	21000204 	addi	r4,r4,8
   2171c:	28001426 	beq	r5,zero,21770 <___vfprintf_internal_r+0xdbc>
   21720:	10800044 	addi	r2,r2,1
   21724:	18c00404 	addi	r3,r3,16
   21728:	24400015 	stw	r17,0(r4)
   2172c:	23400115 	stw	r13,4(r4)
   21730:	d8c01c15 	stw	r3,112(sp)
   21734:	d8801b15 	stw	r2,108(sp)
   21738:	11400208 	cmpgei	r5,r2,8
   2173c:	283ff426 	beq	r5,zero,21710 <___vfprintf_internal_r+0xd5c>
   21740:	d9801a04 	addi	r6,sp,104
   21744:	900b883a 	mov	r5,r18
   21748:	9809883a 	mov	r4,r19
   2174c:	0027ecc0 	call	27ecc <__sprint_r>
   21750:	103da51e 	bne	r2,zero,20de8 <___vfprintf_internal_r+0x434>
   21754:	843ffc04 	addi	r16,r16,-16
   21758:	81400448 	cmpgei	r5,r16,17
   2175c:	d8c01c17 	ldw	r3,112(sp)
   21760:	d8801b17 	ldw	r2,108(sp)
   21764:	d9002704 	addi	r4,sp,156
   21768:	03400404 	movi	r13,16
   2176c:	283fec1e 	bne	r5,zero,21720 <___vfprintf_internal_r+0xd6c>
   21770:	8019883a 	mov	r12,r16
   21774:	880f883a 	mov	r7,r17
   21778:	dc000f17 	ldw	r16,60(sp)
   2177c:	dc400e17 	ldw	r17,56(sp)
   21780:	a011883a 	mov	r8,r20
   21784:	b029883a 	mov	r20,r22
   21788:	202d883a 	mov	r22,r4
   2178c:	10800044 	addi	r2,r2,1
   21790:	1b07883a 	add	r3,r3,r12
   21794:	d8801b15 	stw	r2,108(sp)
   21798:	b1c00015 	stw	r7,0(r22)
   2179c:	b3000115 	stw	r12,4(r22)
   217a0:	d8c01c15 	stw	r3,112(sp)
   217a4:	10800208 	cmpgei	r2,r2,8
   217a8:	1002eb1e 	bne	r2,zero,22358 <___vfprintf_internal_r+0x19a4>
   217ac:	4551c83a 	sub	r8,r8,r21
   217b0:	b5800204 	addi	r22,r22,8
   217b4:	023d6e0e 	bge	zero,r8,20d70 <___vfprintf_internal_r+0x3bc>
   217b8:	01c000f4 	movhi	r7,3
   217bc:	41000450 	cmplti	r4,r8,17
   217c0:	d8801b17 	ldw	r2,108(sp)
   217c4:	39ffe104 	addi	r7,r7,-124
   217c8:	2000221e 	bne	r4,zero,21854 <___vfprintf_internal_r+0xea0>
   217cc:	dc400e15 	stw	r17,56(sp)
   217d0:	dc000f15 	stw	r16,60(sp)
   217d4:	03000404 	movi	r12,16
   217d8:	4021883a 	mov	r16,r8
   217dc:	3823883a 	mov	r17,r7
   217e0:	00000406 	br	217f4 <___vfprintf_internal_r+0xe40>
   217e4:	843ffc04 	addi	r16,r16,-16
   217e8:	81000448 	cmpgei	r4,r16,17
   217ec:	b5800204 	addi	r22,r22,8
   217f0:	20001426 	beq	r4,zero,21844 <___vfprintf_internal_r+0xe90>
   217f4:	10800044 	addi	r2,r2,1
   217f8:	18c00404 	addi	r3,r3,16
   217fc:	b4400015 	stw	r17,0(r22)
   21800:	b3000115 	stw	r12,4(r22)
   21804:	d8c01c15 	stw	r3,112(sp)
   21808:	d8801b15 	stw	r2,108(sp)
   2180c:	11000208 	cmpgei	r4,r2,8
   21810:	203ff426 	beq	r4,zero,217e4 <___vfprintf_internal_r+0xe30>
   21814:	d9801a04 	addi	r6,sp,104
   21818:	900b883a 	mov	r5,r18
   2181c:	9809883a 	mov	r4,r19
   21820:	0027ecc0 	call	27ecc <__sprint_r>
   21824:	103d701e 	bne	r2,zero,20de8 <___vfprintf_internal_r+0x434>
   21828:	843ffc04 	addi	r16,r16,-16
   2182c:	81000448 	cmpgei	r4,r16,17
   21830:	d8c01c17 	ldw	r3,112(sp)
   21834:	d8801b17 	ldw	r2,108(sp)
   21838:	dd802704 	addi	r22,sp,156
   2183c:	03000404 	movi	r12,16
   21840:	203fec1e 	bne	r4,zero,217f4 <___vfprintf_internal_r+0xe40>
   21844:	8011883a 	mov	r8,r16
   21848:	880f883a 	mov	r7,r17
   2184c:	dc000f17 	ldw	r16,60(sp)
   21850:	dc400e17 	ldw	r17,56(sp)
   21854:	10800044 	addi	r2,r2,1
   21858:	1a07883a 	add	r3,r3,r8
   2185c:	d8801b15 	stw	r2,108(sp)
   21860:	b1c00015 	stw	r7,0(r22)
   21864:	b2000115 	stw	r8,4(r22)
   21868:	d8c01c15 	stw	r3,112(sp)
   2186c:	10800208 	cmpgei	r2,r2,8
   21870:	1001731e 	bne	r2,zero,21e40 <___vfprintf_internal_r+0x148c>
   21874:	b5800204 	addi	r22,r22,8
   21878:	003d3d06 	br	20d70 <___vfprintf_internal_r+0x3bc>
   2187c:	10c00060 	cmpeqi	r3,r2,1
   21880:	1803831e 	bne	r3,zero,22690 <___vfprintf_internal_r+0x1cdc>
   21884:	108000a0 	cmpeqi	r2,r2,2
   21888:	db000417 	ldw	r12,16(sp)
   2188c:	103ea326 	beq	r2,zero,2131c <___vfprintf_internal_r+0x968>
   21890:	d9000c17 	ldw	r4,48(sp)
   21894:	dc402704 	addi	r17,sp,156
   21898:	a08003cc 	andi	r2,r20,15
   2189c:	a806973a 	slli	r3,r21,28
   218a0:	a028d13a 	srli	r20,r20,4
   218a4:	2085883a 	add	r2,r4,r2
   218a8:	10800003 	ldbu	r2,0(r2)
   218ac:	a82ad13a 	srli	r21,r21,4
   218b0:	1d28b03a 	or	r20,r3,r20
   218b4:	88bfffc5 	stb	r2,-1(r17)
   218b8:	a544b03a 	or	r2,r20,r21
   218bc:	8c7fffc4 	addi	r17,r17,-1
   218c0:	103ff51e 	bne	r2,zero,21898 <___vfprintf_internal_r+0xee4>
   218c4:	d8802704 	addi	r2,sp,156
   218c8:	146bc83a 	sub	r21,r2,r17
   218cc:	db000415 	stw	r12,16(sp)
   218d0:	003e4d06 	br	21208 <___vfprintf_internal_r+0x854>
   218d4:	d9801a04 	addi	r6,sp,104
   218d8:	900b883a 	mov	r5,r18
   218dc:	9809883a 	mov	r4,r19
   218e0:	0027ecc0 	call	27ecc <__sprint_r>
   218e4:	103d3a26 	beq	r2,zero,20dd0 <___vfprintf_internal_r+0x41c>
   218e8:	003d3f06 	br	20de8 <___vfprintf_internal_r+0x434>
   218ec:	d8801b17 	ldw	r2,108(sp)
   218f0:	010000f4 	movhi	r4,3
   218f4:	213fe004 	addi	r4,r4,-128
   218f8:	10800044 	addi	r2,r2,1
   218fc:	18c00044 	addi	r3,r3,1
   21900:	b1000015 	stw	r4,0(r22)
   21904:	01000044 	movi	r4,1
   21908:	d8801b15 	stw	r2,108(sp)
   2190c:	b1000115 	stw	r4,4(r22)
   21910:	d8c01c15 	stw	r3,112(sp)
   21914:	10800208 	cmpgei	r2,r2,8
   21918:	1003211e 	bne	r2,zero,225a0 <___vfprintf_internal_r+0x1bec>
   2191c:	b5800204 	addi	r22,r22,8
   21920:	2802a51e 	bne	r5,zero,223b8 <___vfprintf_internal_r+0x1a04>
   21924:	d8800417 	ldw	r2,16(sp)
   21928:	d9000817 	ldw	r4,32(sp)
   2192c:	1080004c 	andi	r2,r2,1
   21930:	1104b03a 	or	r2,r2,r4
   21934:	103d1b26 	beq	r2,zero,20da4 <___vfprintf_internal_r+0x3f0>
   21938:	d8800d17 	ldw	r2,52(sp)
   2193c:	d9000b17 	ldw	r4,44(sp)
   21940:	b0800015 	stw	r2,0(r22)
   21944:	d8801b17 	ldw	r2,108(sp)
   21948:	20c7883a 	add	r3,r4,r3
   2194c:	b1000115 	stw	r4,4(r22)
   21950:	10800044 	addi	r2,r2,1
   21954:	d8c01c15 	stw	r3,112(sp)
   21958:	d8801b15 	stw	r2,108(sp)
   2195c:	11000208 	cmpgei	r4,r2,8
   21960:	2003381e 	bne	r4,zero,22644 <___vfprintf_internal_r+0x1c90>
   21964:	b5800204 	addi	r22,r22,8
   21968:	d9000817 	ldw	r4,32(sp)
   2196c:	10800044 	addi	r2,r2,1
   21970:	d8801b15 	stw	r2,108(sp)
   21974:	20c7883a 	add	r3,r4,r3
   21978:	b4400015 	stw	r17,0(r22)
   2197c:	b1000115 	stw	r4,4(r22)
   21980:	d8c01c15 	stw	r3,112(sp)
   21984:	10800208 	cmpgei	r2,r2,8
   21988:	103d0526 	beq	r2,zero,20da0 <___vfprintf_internal_r+0x3ec>
   2198c:	d9801a04 	addi	r6,sp,104
   21990:	900b883a 	mov	r5,r18
   21994:	9809883a 	mov	r4,r19
   21998:	0027ecc0 	call	27ecc <__sprint_r>
   2199c:	103d121e 	bne	r2,zero,20de8 <___vfprintf_internal_r+0x434>
   219a0:	d8c01c17 	ldw	r3,112(sp)
   219a4:	dd802704 	addi	r22,sp,156
   219a8:	003cfe06 	br	20da4 <___vfprintf_internal_r+0x3f0>
   219ac:	d8800817 	ldw	r2,32(sp)
   219b0:	dd401b17 	ldw	r21,108(sp)
   219b4:	18c00044 	addi	r3,r3,1
   219b8:	10800088 	cmpgei	r2,r2,2
   219bc:	ad400044 	addi	r21,r21,1
   219c0:	b7000204 	addi	fp,r22,8
   219c4:	1000e826 	beq	r2,zero,21d68 <___vfprintf_internal_r+0x13b4>
   219c8:	00800044 	movi	r2,1
   219cc:	b0800115 	stw	r2,4(r22)
   219d0:	b4400015 	stw	r17,0(r22)
   219d4:	d8c01c15 	stw	r3,112(sp)
   219d8:	dd401b15 	stw	r21,108(sp)
   219dc:	a8800210 	cmplti	r2,r21,8
   219e0:	1001ad26 	beq	r2,zero,22098 <___vfprintf_internal_r+0x16e4>
   219e4:	d8800b17 	ldw	r2,44(sp)
   219e8:	d9000d17 	ldw	r4,52(sp)
   219ec:	ad400044 	addi	r21,r21,1
   219f0:	1887883a 	add	r3,r3,r2
   219f4:	e0800115 	stw	r2,4(fp)
   219f8:	e1000015 	stw	r4,0(fp)
   219fc:	d8c01c15 	stw	r3,112(sp)
   21a00:	dd401b15 	stw	r21,108(sp)
   21a04:	a8800208 	cmpgei	r2,r21,8
   21a08:	1001ac1e 	bne	r2,zero,220bc <___vfprintf_internal_r+0x1708>
   21a0c:	e7000204 	addi	fp,fp,8
   21a10:	d9000917 	ldw	r4,36(sp)
   21a14:	d9400a17 	ldw	r5,40(sp)
   21a18:	000d883a 	mov	r6,zero
   21a1c:	000f883a 	mov	r7,zero
   21a20:	d8c00715 	stw	r3,28(sp)
   21a24:	002bff00 	call	2bff0 <__eqdf2>
   21a28:	d8c00817 	ldw	r3,32(sp)
   21a2c:	1dbfffc4 	addi	r22,r3,-1
   21a30:	d8c00717 	ldw	r3,28(sp)
   21a34:	1000e426 	beq	r2,zero,21dc8 <___vfprintf_internal_r+0x1414>
   21a38:	8a400044 	addi	r9,r17,1
   21a3c:	ad400044 	addi	r21,r21,1
   21a40:	1d87883a 	add	r3,r3,r22
   21a44:	e2400015 	stw	r9,0(fp)
   21a48:	e5800115 	stw	r22,4(fp)
   21a4c:	d8c01c15 	stw	r3,112(sp)
   21a50:	dd401b15 	stw	r21,108(sp)
   21a54:	a8800208 	cmpgei	r2,r21,8
   21a58:	1000cd1e 	bne	r2,zero,21d90 <___vfprintf_internal_r+0x13dc>
   21a5c:	e7000204 	addi	fp,fp,8
   21a60:	d9001017 	ldw	r4,64(sp)
   21a64:	ad400044 	addi	r21,r21,1
   21a68:	d8801644 	addi	r2,sp,89
   21a6c:	20c7883a 	add	r3,r4,r3
   21a70:	dd401b15 	stw	r21,108(sp)
   21a74:	e0800015 	stw	r2,0(fp)
   21a78:	e1000115 	stw	r4,4(fp)
   21a7c:	d8c01c15 	stw	r3,112(sp)
   21a80:	ad400208 	cmpgei	r21,r21,8
   21a84:	a83fc11e 	bne	r21,zero,2198c <___vfprintf_internal_r+0xfd8>
   21a88:	e5800204 	addi	r22,fp,8
   21a8c:	003cc506 	br	20da4 <___vfprintf_internal_r+0x3f0>
   21a90:	db000417 	ldw	r12,16(sp)
   21a94:	003e1d06 	br	2130c <___vfprintf_internal_r+0x958>
   21a98:	030000f4 	movhi	r12,3
   21a9c:	39000450 	cmplti	r4,r7,17
   21aa0:	d8801b17 	ldw	r2,108(sp)
   21aa4:	633fe504 	addi	r12,r12,-108
   21aa8:	2000321e 	bne	r4,zero,21b74 <___vfprintf_internal_r+0x11c0>
   21aac:	dc401115 	stw	r17,68(sp)
   21ab0:	b009883a 	mov	r4,r22
   21ab4:	9023883a 	mov	r17,r18
   21ab8:	a82d883a 	mov	r22,r21
   21abc:	ddc01215 	stw	r23,72(sp)
   21ac0:	03c00404 	movi	r15,16
   21ac4:	a02f883a 	mov	r23,r20
   21ac8:	db800e15 	stw	r14,56(sp)
   21acc:	8029883a 	mov	r20,r16
   21ad0:	db400f15 	stw	r13,60(sp)
   21ad4:	402b883a 	mov	r21,r8
   21ad8:	3821883a 	mov	r16,r7
   21adc:	6025883a 	mov	r18,r12
   21ae0:	00000406 	br	21af4 <___vfprintf_internal_r+0x1140>
   21ae4:	843ffc04 	addi	r16,r16,-16
   21ae8:	81800448 	cmpgei	r6,r16,17
   21aec:	21000204 	addi	r4,r4,8
   21af0:	30001426 	beq	r6,zero,21b44 <___vfprintf_internal_r+0x1190>
   21af4:	10800044 	addi	r2,r2,1
   21af8:	18c00404 	addi	r3,r3,16
   21afc:	24800015 	stw	r18,0(r4)
   21b00:	23c00115 	stw	r15,4(r4)
   21b04:	d8c01c15 	stw	r3,112(sp)
   21b08:	d8801b15 	stw	r2,108(sp)
   21b0c:	11800208 	cmpgei	r6,r2,8
   21b10:	303ff426 	beq	r6,zero,21ae4 <___vfprintf_internal_r+0x1130>
   21b14:	d9801a04 	addi	r6,sp,104
   21b18:	880b883a 	mov	r5,r17
   21b1c:	9809883a 	mov	r4,r19
   21b20:	0027ecc0 	call	27ecc <__sprint_r>
   21b24:	10017c1e 	bne	r2,zero,22118 <___vfprintf_internal_r+0x1764>
   21b28:	843ffc04 	addi	r16,r16,-16
   21b2c:	81800448 	cmpgei	r6,r16,17
   21b30:	d8c01c17 	ldw	r3,112(sp)
   21b34:	d8801b17 	ldw	r2,108(sp)
   21b38:	d9002704 	addi	r4,sp,156
   21b3c:	03c00404 	movi	r15,16
   21b40:	303fec1e 	bne	r6,zero,21af4 <___vfprintf_internal_r+0x1140>
   21b44:	800f883a 	mov	r7,r16
   21b48:	9019883a 	mov	r12,r18
   21b4c:	a021883a 	mov	r16,r20
   21b50:	8825883a 	mov	r18,r17
   21b54:	b829883a 	mov	r20,r23
   21b58:	db800e17 	ldw	r14,56(sp)
   21b5c:	db400f17 	ldw	r13,60(sp)
   21b60:	ddc01217 	ldw	r23,72(sp)
   21b64:	dc401117 	ldw	r17,68(sp)
   21b68:	a811883a 	mov	r8,r21
   21b6c:	b02b883a 	mov	r21,r22
   21b70:	202d883a 	mov	r22,r4
   21b74:	10800044 	addi	r2,r2,1
   21b78:	19c7883a 	add	r3,r3,r7
   21b7c:	d8801b15 	stw	r2,108(sp)
   21b80:	b3000015 	stw	r12,0(r22)
   21b84:	b1c00115 	stw	r7,4(r22)
   21b88:	d8c01c15 	stw	r3,112(sp)
   21b8c:	10800208 	cmpgei	r2,r2,8
   21b90:	1001531e 	bne	r2,zero,220e0 <___vfprintf_internal_r+0x172c>
   21b94:	b5800204 	addi	r22,r22,8
   21b98:	003c5606 	br	20cf4 <___vfprintf_internal_r+0x340>
   21b9c:	d9801a04 	addi	r6,sp,104
   21ba0:	900b883a 	mov	r5,r18
   21ba4:	9809883a 	mov	r4,r19
   21ba8:	da001115 	stw	r8,68(sp)
   21bac:	db400f15 	stw	r13,60(sp)
   21bb0:	db800e15 	stw	r14,56(sp)
   21bb4:	0027ecc0 	call	27ecc <__sprint_r>
   21bb8:	103c8b1e 	bne	r2,zero,20de8 <___vfprintf_internal_r+0x434>
   21bbc:	d8c01c17 	ldw	r3,112(sp)
   21bc0:	da001117 	ldw	r8,68(sp)
   21bc4:	db400f17 	ldw	r13,60(sp)
   21bc8:	db800e17 	ldw	r14,56(sp)
   21bcc:	dd802704 	addi	r22,sp,156
   21bd0:	003c5606 	br	20d2c <___vfprintf_internal_r+0x378>
   21bd4:	d9801a04 	addi	r6,sp,104
   21bd8:	900b883a 	mov	r5,r18
   21bdc:	9809883a 	mov	r4,r19
   21be0:	da000f15 	stw	r8,60(sp)
   21be4:	db400e15 	stw	r13,56(sp)
   21be8:	0027ecc0 	call	27ecc <__sprint_r>
   21bec:	103c7e1e 	bne	r2,zero,20de8 <___vfprintf_internal_r+0x434>
   21bf0:	d8c01c17 	ldw	r3,112(sp)
   21bf4:	da000f17 	ldw	r8,60(sp)
   21bf8:	db400e17 	ldw	r13,56(sp)
   21bfc:	dd802704 	addi	r22,sp,156
   21c00:	003c5706 	br	20d60 <___vfprintf_internal_r+0x3ac>
   21c04:	d9401417 	ldw	r5,80(sp)
   21c08:	017f380e 	bge	zero,r5,218ec <___vfprintf_internal_r+0xf38>
   21c0c:	d8800717 	ldw	r2,28(sp)
   21c10:	d9000817 	ldw	r4,32(sp)
   21c14:	102b883a 	mov	r21,r2
   21c18:	2080b316 	blt	r4,r2,21ee8 <___vfprintf_internal_r+0x1534>
   21c1c:	05400a0e 	bge	zero,r21,21c48 <___vfprintf_internal_r+0x1294>
   21c20:	d8801b17 	ldw	r2,108(sp)
   21c24:	1d47883a 	add	r3,r3,r21
   21c28:	b4400015 	stw	r17,0(r22)
   21c2c:	10800044 	addi	r2,r2,1
   21c30:	d8801b15 	stw	r2,108(sp)
   21c34:	b5400115 	stw	r21,4(r22)
   21c38:	d8c01c15 	stw	r3,112(sp)
   21c3c:	10800208 	cmpgei	r2,r2,8
   21c40:	1002cf1e 	bne	r2,zero,22780 <___vfprintf_internal_r+0x1dcc>
   21c44:	b5800204 	addi	r22,r22,8
   21c48:	a800b516 	blt	r21,zero,21f20 <___vfprintf_internal_r+0x156c>
   21c4c:	d8800717 	ldw	r2,28(sp)
   21c50:	156bc83a 	sub	r21,r2,r21
   21c54:	0540c416 	blt	zero,r21,21f68 <___vfprintf_internal_r+0x15b4>
   21c58:	dd401417 	ldw	r21,80(sp)
   21c5c:	d8800817 	ldw	r2,32(sp)
   21c60:	a880a40e 	bge	r21,r2,21ef4 <___vfprintf_internal_r+0x1540>
   21c64:	d8800d17 	ldw	r2,52(sp)
   21c68:	d9000b17 	ldw	r4,44(sp)
   21c6c:	b0800015 	stw	r2,0(r22)
   21c70:	d8801b17 	ldw	r2,108(sp)
   21c74:	1907883a 	add	r3,r3,r4
   21c78:	b1000115 	stw	r4,4(r22)
   21c7c:	10800044 	addi	r2,r2,1
   21c80:	d8801b15 	stw	r2,108(sp)
   21c84:	d8c01c15 	stw	r3,112(sp)
   21c88:	10800208 	cmpgei	r2,r2,8
   21c8c:	1002b31e 	bne	r2,zero,2275c <___vfprintf_internal_r+0x1da8>
   21c90:	b5800204 	addi	r22,r22,8
   21c94:	d9000817 	ldw	r4,32(sp)
   21c98:	d9400717 	ldw	r5,28(sp)
   21c9c:	2545c83a 	sub	r2,r4,r21
   21ca0:	2149c83a 	sub	r4,r4,r5
   21ca4:	102b883a 	mov	r21,r2
   21ca8:	2080010e 	bge	r4,r2,21cb0 <___vfprintf_internal_r+0x12fc>
   21cac:	202b883a 	mov	r21,r4
   21cb0:	05400c0e 	bge	zero,r21,21ce4 <___vfprintf_internal_r+0x1330>
   21cb4:	d9000717 	ldw	r4,28(sp)
   21cb8:	1d47883a 	add	r3,r3,r21
   21cbc:	b5400115 	stw	r21,4(r22)
   21cc0:	8913883a 	add	r9,r17,r4
   21cc4:	d9001b17 	ldw	r4,108(sp)
   21cc8:	b2400015 	stw	r9,0(r22)
   21ccc:	d8c01c15 	stw	r3,112(sp)
   21cd0:	21000044 	addi	r4,r4,1
   21cd4:	d9001b15 	stw	r4,108(sp)
   21cd8:	21000208 	cmpgei	r4,r4,8
   21cdc:	2002b31e 	bne	r4,zero,227ac <___vfprintf_internal_r+0x1df8>
   21ce0:	b5800204 	addi	r22,r22,8
   21ce4:	a800010e 	bge	r21,zero,21cec <___vfprintf_internal_r+0x1338>
   21ce8:	002b883a 	mov	r21,zero
   21cec:	156bc83a 	sub	r21,r2,r21
   21cf0:	057c2c0e 	bge	zero,r21,20da4 <___vfprintf_internal_r+0x3f0>
   21cf4:	01c000f4 	movhi	r7,3
   21cf8:	a9000450 	cmplti	r4,r21,17
   21cfc:	d8801b17 	ldw	r2,108(sp)
   21d00:	39ffe104 	addi	r7,r7,-124
   21d04:	2001881e 	bne	r4,zero,22328 <___vfprintf_internal_r+0x1974>
   21d08:	07000404 	movi	fp,16
   21d0c:	3823883a 	mov	r17,r7
   21d10:	00000406 	br	21d24 <___vfprintf_internal_r+0x1370>
   21d14:	b5800204 	addi	r22,r22,8
   21d18:	ad7ffc04 	addi	r21,r21,-16
   21d1c:	a9000448 	cmpgei	r4,r21,17
   21d20:	20018026 	beq	r4,zero,22324 <___vfprintf_internal_r+0x1970>
   21d24:	10800044 	addi	r2,r2,1
   21d28:	18c00404 	addi	r3,r3,16
   21d2c:	b4400015 	stw	r17,0(r22)
   21d30:	b7000115 	stw	fp,4(r22)
   21d34:	d8c01c15 	stw	r3,112(sp)
   21d38:	d8801b15 	stw	r2,108(sp)
   21d3c:	11000208 	cmpgei	r4,r2,8
   21d40:	203ff426 	beq	r4,zero,21d14 <___vfprintf_internal_r+0x1360>
   21d44:	d9801a04 	addi	r6,sp,104
   21d48:	900b883a 	mov	r5,r18
   21d4c:	9809883a 	mov	r4,r19
   21d50:	0027ecc0 	call	27ecc <__sprint_r>
   21d54:	103c241e 	bne	r2,zero,20de8 <___vfprintf_internal_r+0x434>
   21d58:	d8c01c17 	ldw	r3,112(sp)
   21d5c:	d8801b17 	ldw	r2,108(sp)
   21d60:	dd802704 	addi	r22,sp,156
   21d64:	003fec06 	br	21d18 <___vfprintf_internal_r+0x1364>
   21d68:	d8800417 	ldw	r2,16(sp)
   21d6c:	1080004c 	andi	r2,r2,1
   21d70:	103f151e 	bne	r2,zero,219c8 <___vfprintf_internal_r+0x1014>
   21d74:	00800044 	movi	r2,1
   21d78:	b0800115 	stw	r2,4(r22)
   21d7c:	b4400015 	stw	r17,0(r22)
   21d80:	d8c01c15 	stw	r3,112(sp)
   21d84:	dd401b15 	stw	r21,108(sp)
   21d88:	a8800210 	cmplti	r2,r21,8
   21d8c:	103f341e 	bne	r2,zero,21a60 <___vfprintf_internal_r+0x10ac>
   21d90:	d9801a04 	addi	r6,sp,104
   21d94:	900b883a 	mov	r5,r18
   21d98:	9809883a 	mov	r4,r19
   21d9c:	0027ecc0 	call	27ecc <__sprint_r>
   21da0:	103c111e 	bne	r2,zero,20de8 <___vfprintf_internal_r+0x434>
   21da4:	d8c01c17 	ldw	r3,112(sp)
   21da8:	dd401b17 	ldw	r21,108(sp)
   21dac:	df002704 	addi	fp,sp,156
   21db0:	003f2b06 	br	21a60 <___vfprintf_internal_r+0x10ac>
   21db4:	4002361e 	bne	r8,zero,22690 <___vfprintf_internal_r+0x1cdc>
   21db8:	0011883a 	mov	r8,zero
   21dbc:	002b883a 	mov	r21,zero
   21dc0:	dc402704 	addi	r17,sp,156
   21dc4:	003d1006 	br	21208 <___vfprintf_internal_r+0x854>
   21dc8:	05bf250e 	bge	zero,r22,21a60 <___vfprintf_internal_r+0x10ac>
   21dcc:	01c000f4 	movhi	r7,3
   21dd0:	b0800450 	cmplti	r2,r22,17
   21dd4:	39ffe104 	addi	r7,r7,-124
   21dd8:	1001731e 	bne	r2,zero,223a8 <___vfprintf_internal_r+0x19f4>
   21ddc:	dc000715 	stw	r16,28(sp)
   21de0:	04400404 	movi	r17,16
   21de4:	3821883a 	mov	r16,r7
   21de8:	00000406 	br	21dfc <___vfprintf_internal_r+0x1448>
   21dec:	e7000204 	addi	fp,fp,8
   21df0:	b5bffc04 	addi	r22,r22,-16
   21df4:	b0800448 	cmpgei	r2,r22,17
   21df8:	10016926 	beq	r2,zero,223a0 <___vfprintf_internal_r+0x19ec>
   21dfc:	ad400044 	addi	r21,r21,1
   21e00:	18c00404 	addi	r3,r3,16
   21e04:	e4000015 	stw	r16,0(fp)
   21e08:	e4400115 	stw	r17,4(fp)
   21e0c:	d8c01c15 	stw	r3,112(sp)
   21e10:	dd401b15 	stw	r21,108(sp)
   21e14:	a8800208 	cmpgei	r2,r21,8
   21e18:	103ff426 	beq	r2,zero,21dec <___vfprintf_internal_r+0x1438>
   21e1c:	d9801a04 	addi	r6,sp,104
   21e20:	900b883a 	mov	r5,r18
   21e24:	9809883a 	mov	r4,r19
   21e28:	0027ecc0 	call	27ecc <__sprint_r>
   21e2c:	103bee1e 	bne	r2,zero,20de8 <___vfprintf_internal_r+0x434>
   21e30:	d8c01c17 	ldw	r3,112(sp)
   21e34:	dd401b17 	ldw	r21,108(sp)
   21e38:	df002704 	addi	fp,sp,156
   21e3c:	003fec06 	br	21df0 <___vfprintf_internal_r+0x143c>
   21e40:	d9801a04 	addi	r6,sp,104
   21e44:	900b883a 	mov	r5,r18
   21e48:	9809883a 	mov	r4,r19
   21e4c:	0027ecc0 	call	27ecc <__sprint_r>
   21e50:	103be51e 	bne	r2,zero,20de8 <___vfprintf_internal_r+0x434>
   21e54:	d8c01c17 	ldw	r3,112(sp)
   21e58:	dd802704 	addi	r22,sp,156
   21e5c:	003bc406 	br	20d70 <___vfprintf_internal_r+0x3bc>
   21e60:	002b883a 	mov	r21,zero
   21e64:	003d7306 	br	21434 <___vfprintf_internal_r+0xa80>
   21e68:	a02bd7fa 	srai	r21,r20,31
   21e6c:	a805883a 	mov	r2,r21
   21e70:	003cd306 	br	211c0 <___vfprintf_internal_r+0x80c>
   21e74:	d8800417 	ldw	r2,16(sp)
   21e78:	1080004c 	andi	r2,r2,1
   21e7c:	103bc926 	beq	r2,zero,20da4 <___vfprintf_internal_r+0x3f0>
   21e80:	003de706 	br	21620 <___vfprintf_internal_r+0xc6c>
   21e84:	63000414 	ori	r12,r12,16
   21e88:	003b1606 	br	20ae4 <___vfprintf_internal_r+0x130>
   21e8c:	bac00007 	ldb	r11,0(r23)
   21e90:	d8800615 	stw	r2,24(sp)
   21e94:	003b1306 	br	20ae4 <___vfprintf_internal_r+0x130>
   21e98:	dc402704 	addi	r17,sp,156
   21e9c:	003cda06 	br	21208 <___vfprintf_internal_r+0x854>
   21ea0:	18800017 	ldw	r2,0(r3)
   21ea4:	d8800915 	stw	r2,36(sp)
   21ea8:	18800117 	ldw	r2,4(r3)
   21eac:	d8800a15 	stw	r2,40(sp)
   21eb0:	003c4006 	br	20fb4 <___vfprintf_internal_r+0x600>
   21eb4:	00800c04 	movi	r2,48
   21eb8:	d8801385 	stb	r2,78(sp)
   21ebc:	df0013c5 	stb	fp,79(sp)
   21ec0:	63000094 	ori	r12,r12,2
   21ec4:	00800084 	movi	r2,2
   21ec8:	003c0406 	br	20edc <___vfprintf_internal_r+0x528>
   21ecc:	d9400517 	ldw	r5,20(sp)
   21ed0:	20800017 	ldw	r2,0(r4)
   21ed4:	d8c00615 	stw	r3,24(sp)
   21ed8:	2809d7fa 	srai	r4,r5,31
   21edc:	11400015 	stw	r5,0(r2)
   21ee0:	11000115 	stw	r4,4(r2)
   21ee4:	003ae706 	br	20a84 <___vfprintf_internal_r+0xd0>
   21ee8:	202b883a 	mov	r21,r4
   21eec:	057f4c16 	blt	zero,r21,21c20 <___vfprintf_internal_r+0x126c>
   21ef0:	003f5506 	br	21c48 <___vfprintf_internal_r+0x1294>
   21ef4:	d8800417 	ldw	r2,16(sp)
   21ef8:	1080004c 	andi	r2,r2,1
   21efc:	103f591e 	bne	r2,zero,21c64 <___vfprintf_internal_r+0x12b0>
   21f00:	d9000817 	ldw	r4,32(sp)
   21f04:	d9400717 	ldw	r5,28(sp)
   21f08:	2545c83a 	sub	r2,r4,r21
   21f0c:	2179c83a 	sub	fp,r4,r5
   21f10:	102b883a 	mov	r21,r2
   21f14:	e0bf730e 	bge	fp,r2,21ce4 <___vfprintf_internal_r+0x1330>
   21f18:	e02b883a 	mov	r21,fp
   21f1c:	003f7106 	br	21ce4 <___vfprintf_internal_r+0x1330>
   21f20:	002b883a 	mov	r21,zero
   21f24:	003f4906 	br	21c4c <___vfprintf_internal_r+0x1298>
   21f28:	d9801a04 	addi	r6,sp,104
   21f2c:	900b883a 	mov	r5,r18
   21f30:	9809883a 	mov	r4,r19
   21f34:	0027ecc0 	call	27ecc <__sprint_r>
   21f38:	103bab1e 	bne	r2,zero,20de8 <___vfprintf_internal_r+0x434>
   21f3c:	d8c01c17 	ldw	r3,112(sp)
   21f40:	dd802704 	addi	r22,sp,156
   21f44:	003dc206 	br	21650 <___vfprintf_internal_r+0xc9c>
   21f48:	408001f0 	cmpltui	r2,r8,7
   21f4c:	402b883a 	mov	r21,r8
   21f50:	1001a026 	beq	r2,zero,225d4 <___vfprintf_internal_r+0x1c20>
   21f54:	044000f4 	movhi	r17,3
   21f58:	a829883a 	mov	r20,r21
   21f5c:	d8c00615 	stw	r3,24(sp)
   21f60:	8c7fde04 	addi	r17,r17,-136
   21f64:	003b5606 	br	20cc0 <___vfprintf_internal_r+0x30c>
   21f68:	01c000f4 	movhi	r7,3
   21f6c:	a9000450 	cmplti	r4,r21,17
   21f70:	d8801b17 	ldw	r2,108(sp)
   21f74:	39ffe104 	addi	r7,r7,-124
   21f78:	20017b1e 	bne	r4,zero,22568 <___vfprintf_internal_r+0x1bb4>
   21f7c:	dc000e15 	stw	r16,56(sp)
   21f80:	07000404 	movi	fp,16
   21f84:	3821883a 	mov	r16,r7
   21f88:	00000406 	br	21f9c <___vfprintf_internal_r+0x15e8>
   21f8c:	b5800204 	addi	r22,r22,8
   21f90:	ad7ffc04 	addi	r21,r21,-16
   21f94:	a9000448 	cmpgei	r4,r21,17
   21f98:	20017126 	beq	r4,zero,22560 <___vfprintf_internal_r+0x1bac>
   21f9c:	10800044 	addi	r2,r2,1
   21fa0:	18c00404 	addi	r3,r3,16
   21fa4:	b4000015 	stw	r16,0(r22)
   21fa8:	b7000115 	stw	fp,4(r22)
   21fac:	d8c01c15 	stw	r3,112(sp)
   21fb0:	d8801b15 	stw	r2,108(sp)
   21fb4:	11000208 	cmpgei	r4,r2,8
   21fb8:	203ff426 	beq	r4,zero,21f8c <___vfprintf_internal_r+0x15d8>
   21fbc:	d9801a04 	addi	r6,sp,104
   21fc0:	900b883a 	mov	r5,r18
   21fc4:	9809883a 	mov	r4,r19
   21fc8:	0027ecc0 	call	27ecc <__sprint_r>
   21fcc:	103b861e 	bne	r2,zero,20de8 <___vfprintf_internal_r+0x434>
   21fd0:	d8c01c17 	ldw	r3,112(sp)
   21fd4:	d8801b17 	ldw	r2,108(sp)
   21fd8:	dd802704 	addi	r22,sp,156
   21fdc:	003fec06 	br	21f90 <___vfprintf_internal_r+0x15dc>
   21fe0:	dc402704 	addi	r17,sp,156
   21fe4:	a805883a 	mov	r2,r21
   21fe8:	dc000715 	stw	r16,28(sp)
   21fec:	902b883a 	mov	r21,r18
   21ff0:	8821883a 	mov	r16,r17
   21ff4:	db000415 	stw	r12,16(sp)
   21ff8:	a023883a 	mov	r17,r20
   21ffc:	da000e15 	stw	r8,56(sp)
   22000:	9829883a 	mov	r20,r19
   22004:	1025883a 	mov	r18,r2
   22008:	6827883a 	mov	r19,r13
   2200c:	8809883a 	mov	r4,r17
   22010:	900b883a 	mov	r5,r18
   22014:	01800284 	movi	r6,10
   22018:	000f883a 	mov	r7,zero
   2201c:	002a97c0 	call	2a97c <__umoddi3>
   22020:	10800c04 	addi	r2,r2,48
   22024:	8809883a 	mov	r4,r17
   22028:	900b883a 	mov	r5,r18
   2202c:	01800284 	movi	r6,10
   22030:	000f883a 	mov	r7,zero
   22034:	80bfffc5 	stb	r2,-1(r16)
   22038:	002a3ec0 	call	2a3ec <__udivdi3>
   2203c:	900d883a 	mov	r6,r18
   22040:	880f883a 	mov	r7,r17
   22044:	843fffc4 	addi	r16,r16,-1
   22048:	1023883a 	mov	r17,r2
   2204c:	1825883a 	mov	r18,r3
   22050:	303fee1e 	bne	r6,zero,2200c <___vfprintf_internal_r+0x1658>
   22054:	39c002a8 	cmpgeui	r7,r7,10
   22058:	383fec1e 	bne	r7,zero,2200c <___vfprintf_internal_r+0x1658>
   2205c:	8023883a 	mov	r17,r16
   22060:	d8802704 	addi	r2,sp,156
   22064:	981b883a 	mov	r13,r19
   22068:	a825883a 	mov	r18,r21
   2206c:	dc000717 	ldw	r16,28(sp)
   22070:	da000e17 	ldw	r8,56(sp)
   22074:	a027883a 	mov	r19,r20
   22078:	146bc83a 	sub	r21,r2,r17
   2207c:	003c6206 	br	21208 <___vfprintf_internal_r+0x854>
   22080:	d8800617 	ldw	r2,24(sp)
   22084:	10800017 	ldw	r2,0(r2)
   22088:	d8c00615 	stw	r3,24(sp)
   2208c:	d8c00517 	ldw	r3,20(sp)
   22090:	10c00015 	stw	r3,0(r2)
   22094:	003a7b06 	br	20a84 <___vfprintf_internal_r+0xd0>
   22098:	d9801a04 	addi	r6,sp,104
   2209c:	900b883a 	mov	r5,r18
   220a0:	9809883a 	mov	r4,r19
   220a4:	0027ecc0 	call	27ecc <__sprint_r>
   220a8:	103b4f1e 	bne	r2,zero,20de8 <___vfprintf_internal_r+0x434>
   220ac:	d8c01c17 	ldw	r3,112(sp)
   220b0:	dd401b17 	ldw	r21,108(sp)
   220b4:	df002704 	addi	fp,sp,156
   220b8:	003e4a06 	br	219e4 <___vfprintf_internal_r+0x1030>
   220bc:	d9801a04 	addi	r6,sp,104
   220c0:	900b883a 	mov	r5,r18
   220c4:	9809883a 	mov	r4,r19
   220c8:	0027ecc0 	call	27ecc <__sprint_r>
   220cc:	103b461e 	bne	r2,zero,20de8 <___vfprintf_internal_r+0x434>
   220d0:	d8c01c17 	ldw	r3,112(sp)
   220d4:	dd401b17 	ldw	r21,108(sp)
   220d8:	df002704 	addi	fp,sp,156
   220dc:	003e4c06 	br	21a10 <___vfprintf_internal_r+0x105c>
   220e0:	d9801a04 	addi	r6,sp,104
   220e4:	900b883a 	mov	r5,r18
   220e8:	9809883a 	mov	r4,r19
   220ec:	da001115 	stw	r8,68(sp)
   220f0:	db400f15 	stw	r13,60(sp)
   220f4:	db800e15 	stw	r14,56(sp)
   220f8:	0027ecc0 	call	27ecc <__sprint_r>
   220fc:	103b3a1e 	bne	r2,zero,20de8 <___vfprintf_internal_r+0x434>
   22100:	d8c01c17 	ldw	r3,112(sp)
   22104:	da001117 	ldw	r8,68(sp)
   22108:	db400f17 	ldw	r13,60(sp)
   2210c:	db800e17 	ldw	r14,56(sp)
   22110:	dd802704 	addi	r22,sp,156
   22114:	003af706 	br	20cf4 <___vfprintf_internal_r+0x340>
   22118:	8825883a 	mov	r18,r17
   2211c:	003b3206 	br	20de8 <___vfprintf_internal_r+0x434>
   22120:	d9000917 	ldw	r4,36(sp)
   22124:	d9400a17 	ldw	r5,40(sp)
   22128:	da000615 	stw	r8,24(sp)
   2212c:	200d883a 	mov	r6,r4
   22130:	280f883a 	mov	r7,r5
   22134:	db000415 	stw	r12,16(sp)
   22138:	002d1c00 	call	2d1c0 <__unorddf2>
   2213c:	db000417 	ldw	r12,16(sp)
   22140:	da000617 	ldw	r8,24(sp)
   22144:	1001f51e 	bne	r2,zero,2291c <___vfprintf_internal_r+0x1f68>
   22148:	057ff7c4 	movi	r21,-33
   2214c:	40bfffe0 	cmpeqi	r2,r8,-1
   22150:	e56a703a 	and	r21,fp,r21
   22154:	1001931e 	bne	r2,zero,227a4 <___vfprintf_internal_r+0x1df0>
   22158:	a88011d8 	cmpnei	r2,r21,71
   2215c:	10013626 	beq	r2,zero,22638 <___vfprintf_internal_r+0x1c84>
   22160:	60804014 	ori	r2,r12,256
   22164:	d8800415 	stw	r2,16(sp)
   22168:	d8800a17 	ldw	r2,40(sp)
   2216c:	10011516 	blt	r2,zero,225c4 <___vfprintf_internal_r+0x1c10>
   22170:	dd000a17 	ldw	r20,40(sp)
   22174:	d8000605 	stb	zero,24(sp)
   22178:	e08019a0 	cmpeqi	r2,fp,102
   2217c:	d8800f15 	stw	r2,60(sp)
   22180:	1000b91e 	bne	r2,zero,22468 <___vfprintf_internal_r+0x1ab4>
   22184:	e08011a0 	cmpeqi	r2,fp,70
   22188:	1000b71e 	bne	r2,zero,22468 <___vfprintf_internal_r+0x1ab4>
   2218c:	a8801158 	cmpnei	r2,r21,69
   22190:	10014126 	beq	r2,zero,22698 <___vfprintf_internal_r+0x1ce4>
   22194:	d8801804 	addi	r2,sp,96
   22198:	d8800315 	stw	r2,12(sp)
   2219c:	d9400917 	ldw	r5,36(sp)
   221a0:	d8801504 	addi	r2,sp,84
   221a4:	d8800215 	stw	r2,8(sp)
   221a8:	d8801404 	addi	r2,sp,80
   221ac:	da000015 	stw	r8,0(sp)
   221b0:	9809883a 	mov	r4,r19
   221b4:	d8800115 	stw	r2,4(sp)
   221b8:	01c00084 	movi	r7,2
   221bc:	a00d883a 	mov	r6,r20
   221c0:	db000815 	stw	r12,32(sp)
   221c4:	da000715 	stw	r8,28(sp)
   221c8:	0022df80 	call	22df8 <_dtoa_r>
   221cc:	da000717 	ldw	r8,28(sp)
   221d0:	e10019d8 	cmpnei	r4,fp,103
   221d4:	db000817 	ldw	r12,32(sp)
   221d8:	1023883a 	mov	r17,r2
   221dc:	4007883a 	mov	r3,r8
   221e0:	2001411e 	bne	r4,zero,226e8 <___vfprintf_internal_r+0x1d34>
   221e4:	6080004c 	andi	r2,r12,1
   221e8:	1001411e 	bne	r2,zero,226f0 <___vfprintf_internal_r+0x1d3c>
   221ec:	d8801417 	ldw	r2,80(sp)
   221f0:	ad4011e0 	cmpeqi	r21,r21,71
   221f4:	d8800715 	stw	r2,28(sp)
   221f8:	d8801817 	ldw	r2,96(sp)
   221fc:	1445c83a 	sub	r2,r2,r17
   22200:	d8800815 	stw	r2,32(sp)
   22204:	a8000526 	beq	r21,zero,2221c <___vfprintf_internal_r+0x1868>
   22208:	d8c00717 	ldw	r3,28(sp)
   2220c:	18bfff50 	cmplti	r2,r3,-3
   22210:	1000011e 	bne	r2,zero,22218 <___vfprintf_internal_r+0x1864>
   22214:	40c1460e 	bge	r8,r3,22730 <___vfprintf_internal_r+0x1d7c>
   22218:	e73fff84 	addi	fp,fp,-2
   2221c:	d8800717 	ldw	r2,28(sp)
   22220:	df001645 	stb	fp,89(sp)
   22224:	157fffc4 	addi	r21,r2,-1
   22228:	dd401415 	stw	r21,80(sp)
   2222c:	a801ab16 	blt	r21,zero,228dc <___vfprintf_internal_r+0x1f28>
   22230:	00800ac4 	movi	r2,43
   22234:	d8801685 	stb	r2,90(sp)
   22238:	a8800290 	cmplti	r2,r21,10
   2223c:	1001a01e 	bne	r2,zero,228c0 <___vfprintf_internal_r+0x1f0c>
   22240:	d98019c4 	addi	r6,sp,103
   22244:	9029883a 	mov	r20,r18
   22248:	dc400715 	stw	r17,28(sp)
   2224c:	8025883a 	mov	r18,r16
   22250:	db000f15 	stw	r12,60(sp)
   22254:	3021883a 	mov	r16,r6
   22258:	a809883a 	mov	r4,r21
   2225c:	01400284 	movi	r5,10
   22260:	00206840 	call	20684 <__modsi3>
   22264:	10800c04 	addi	r2,r2,48
   22268:	a809883a 	mov	r4,r21
   2226c:	80bfffc5 	stb	r2,-1(r16)
   22270:	01400284 	movi	r5,10
   22274:	00206040 	call	20604 <__divsi3>
   22278:	a9001908 	cmpgei	r4,r21,100
   2227c:	8023883a 	mov	r17,r16
   22280:	102b883a 	mov	r21,r2
   22284:	843fffc4 	addi	r16,r16,-1
   22288:	203ff31e 	bne	r4,zero,22258 <___vfprintf_internal_r+0x18a4>
   2228c:	800d883a 	mov	r6,r16
   22290:	11000c04 	addi	r4,r2,48
   22294:	9021883a 	mov	r16,r18
   22298:	a025883a 	mov	r18,r20
   2229c:	8829883a 	mov	r20,r17
   222a0:	a0bfff84 	addi	r2,r20,-2
   222a4:	313fffc5 	stb	r4,-1(r6)
   222a8:	d8c019c4 	addi	r3,sp,103
   222ac:	db000f17 	ldw	r12,60(sp)
   222b0:	dc400717 	ldw	r17,28(sp)
   222b4:	10c1be2e 	bgeu	r2,r3,229b0 <___vfprintf_internal_r+0x1ffc>
   222b8:	d8c016c4 	addi	r3,sp,91
   222bc:	00000106 	br	222c4 <___vfprintf_internal_r+0x1910>
   222c0:	11000003 	ldbu	r4,0(r2)
   222c4:	19000005 	stb	r4,0(r3)
   222c8:	10800044 	addi	r2,r2,1
   222cc:	d90019c4 	addi	r4,sp,103
   222d0:	18c00044 	addi	r3,r3,1
   222d4:	113ffa1e 	bne	r2,r4,222c0 <___vfprintf_internal_r+0x190c>
   222d8:	d8801a44 	addi	r2,sp,105
   222dc:	d8c016c4 	addi	r3,sp,91
   222e0:	1505c83a 	sub	r2,r2,r20
   222e4:	1885883a 	add	r2,r3,r2
   222e8:	d8c01644 	addi	r3,sp,89
   222ec:	10c5c83a 	sub	r2,r2,r3
   222f0:	d8801015 	stw	r2,64(sp)
   222f4:	d8c00817 	ldw	r3,32(sp)
   222f8:	d9001017 	ldw	r4,64(sp)
   222fc:	18800088 	cmpgei	r2,r3,2
   22300:	192b883a 	add	r21,r3,r4
   22304:	10018126 	beq	r2,zero,2290c <___vfprintf_internal_r+0x1f58>
   22308:	d8800b17 	ldw	r2,44(sp)
   2230c:	a8ab883a 	add	r21,r21,r2
   22310:	a829883a 	mov	r20,r21
   22314:	a800010e 	bge	r21,zero,2231c <___vfprintf_internal_r+0x1968>
   22318:	0029883a 	mov	r20,zero
   2231c:	d8000715 	stw	zero,28(sp)
   22320:	00008406 	br	22534 <___vfprintf_internal_r+0x1b80>
   22324:	880f883a 	mov	r7,r17
   22328:	10800044 	addi	r2,r2,1
   2232c:	1d47883a 	add	r3,r3,r21
   22330:	b1c00015 	stw	r7,0(r22)
   22334:	003a9506 	br	20d8c <___vfprintf_internal_r+0x3d8>
   22338:	d9801a04 	addi	r6,sp,104
   2233c:	900b883a 	mov	r5,r18
   22340:	9809883a 	mov	r4,r19
   22344:	0027ecc0 	call	27ecc <__sprint_r>
   22348:	103aa71e 	bne	r2,zero,20de8 <___vfprintf_internal_r+0x434>
   2234c:	d8c01c17 	ldw	r3,112(sp)
   22350:	dd802704 	addi	r22,sp,156
   22354:	003caf06 	br	21614 <___vfprintf_internal_r+0xc60>
   22358:	d9801a04 	addi	r6,sp,104
   2235c:	900b883a 	mov	r5,r18
   22360:	9809883a 	mov	r4,r19
   22364:	da000e15 	stw	r8,56(sp)
   22368:	0027ecc0 	call	27ecc <__sprint_r>
   2236c:	103a9e1e 	bne	r2,zero,20de8 <___vfprintf_internal_r+0x434>
   22370:	d8c01c17 	ldw	r3,112(sp)
   22374:	da000e17 	ldw	r8,56(sp)
   22378:	dd802704 	addi	r22,sp,156
   2237c:	003a7a06 	br	20d68 <___vfprintf_internal_r+0x3b4>
   22380:	8809883a 	mov	r4,r17
   22384:	db000415 	stw	r12,16(sp)
   22388:	d8c00615 	stw	r3,24(sp)
   2238c:	002091c0 	call	2091c <strlen>
   22390:	db000417 	ldw	r12,16(sp)
   22394:	102b883a 	mov	r21,r2
   22398:	1029883a 	mov	r20,r2
   2239c:	003a4806 	br	20cc0 <___vfprintf_internal_r+0x30c>
   223a0:	800f883a 	mov	r7,r16
   223a4:	dc000717 	ldw	r16,28(sp)
   223a8:	ad400044 	addi	r21,r21,1
   223ac:	1d87883a 	add	r3,r3,r22
   223b0:	e1c00015 	stw	r7,0(fp)
   223b4:	003da406 	br	21a48 <___vfprintf_internal_r+0x1094>
   223b8:	d8800d17 	ldw	r2,52(sp)
   223bc:	d9000b17 	ldw	r4,44(sp)
   223c0:	b0800015 	stw	r2,0(r22)
   223c4:	d8801b17 	ldw	r2,108(sp)
   223c8:	20c7883a 	add	r3,r4,r3
   223cc:	b1000115 	stw	r4,4(r22)
   223d0:	10800044 	addi	r2,r2,1
   223d4:	d8c01c15 	stw	r3,112(sp)
   223d8:	d8801b15 	stw	r2,108(sp)
   223dc:	11000208 	cmpgei	r4,r2,8
   223e0:	2000981e 	bne	r4,zero,22644 <___vfprintf_internal_r+0x1c90>
   223e4:	b5800204 	addi	r22,r22,8
   223e8:	283d5f0e 	bge	r5,zero,21968 <___vfprintf_internal_r+0xfb4>
   223ec:	01c000f4 	movhi	r7,3
   223f0:	293ffc08 	cmpgei	r4,r5,-16
   223f4:	39ffe104 	addi	r7,r7,-124
   223f8:	0179c83a 	sub	fp,zero,r5
   223fc:	2001151e 	bne	r4,zero,22854 <___vfprintf_internal_r+0x1ea0>
   22400:	dc000715 	stw	r16,28(sp)
   22404:	05400404 	movi	r21,16
   22408:	9021883a 	mov	r16,r18
   2240c:	3825883a 	mov	r18,r7
   22410:	00000406 	br	22424 <___vfprintf_internal_r+0x1a70>
   22414:	b5800204 	addi	r22,r22,8
   22418:	e73ffc04 	addi	fp,fp,-16
   2241c:	e1800448 	cmpgei	r6,fp,17
   22420:	30010926 	beq	r6,zero,22848 <___vfprintf_internal_r+0x1e94>
   22424:	10800044 	addi	r2,r2,1
   22428:	18c00404 	addi	r3,r3,16
   2242c:	b4800015 	stw	r18,0(r22)
   22430:	b5400115 	stw	r21,4(r22)
   22434:	d8c01c15 	stw	r3,112(sp)
   22438:	d8801b15 	stw	r2,108(sp)
   2243c:	11800208 	cmpgei	r6,r2,8
   22440:	303ff426 	beq	r6,zero,22414 <___vfprintf_internal_r+0x1a60>
   22444:	d9801a04 	addi	r6,sp,104
   22448:	800b883a 	mov	r5,r16
   2244c:	9809883a 	mov	r4,r19
   22450:	0027ecc0 	call	27ecc <__sprint_r>
   22454:	1001411e 	bne	r2,zero,2295c <___vfprintf_internal_r+0x1fa8>
   22458:	d8c01c17 	ldw	r3,112(sp)
   2245c:	d8801b17 	ldw	r2,108(sp)
   22460:	dd802704 	addi	r22,sp,156
   22464:	003fec06 	br	22418 <___vfprintf_internal_r+0x1a64>
   22468:	d8801804 	addi	r2,sp,96
   2246c:	d8800315 	stw	r2,12(sp)
   22470:	d9400917 	ldw	r5,36(sp)
   22474:	d8801504 	addi	r2,sp,84
   22478:	d8800215 	stw	r2,8(sp)
   2247c:	d8801404 	addi	r2,sp,80
   22480:	da000015 	stw	r8,0(sp)
   22484:	d8800115 	stw	r2,4(sp)
   22488:	01c000c4 	movi	r7,3
   2248c:	a00d883a 	mov	r6,r20
   22490:	9809883a 	mov	r4,r19
   22494:	db000815 	stw	r12,32(sp)
   22498:	da000715 	stw	r8,28(sp)
   2249c:	0022df80 	call	22df8 <_dtoa_r>
   224a0:	da000717 	ldw	r8,28(sp)
   224a4:	1023883a 	mov	r17,r2
   224a8:	db000817 	ldw	r12,32(sp)
   224ac:	1207883a 	add	r3,r2,r8
   224b0:	88800007 	ldb	r2,0(r17)
   224b4:	10800c20 	cmpeqi	r2,r2,48
   224b8:	10004f1e 	bne	r2,zero,225f8 <___vfprintf_internal_r+0x1c44>
   224bc:	d8801417 	ldw	r2,80(sp)
   224c0:	1893883a 	add	r9,r3,r2
   224c4:	d9000917 	ldw	r4,36(sp)
   224c8:	000d883a 	mov	r6,zero
   224cc:	000f883a 	mov	r7,zero
   224d0:	a00b883a 	mov	r5,r20
   224d4:	da401115 	stw	r9,68(sp)
   224d8:	da000815 	stw	r8,32(sp)
   224dc:	db000715 	stw	r12,28(sp)
   224e0:	002bff00 	call	2bff0 <__eqdf2>
   224e4:	db000717 	ldw	r12,28(sp)
   224e8:	da000817 	ldw	r8,32(sp)
   224ec:	da401117 	ldw	r9,68(sp)
   224f0:	1000811e 	bne	r2,zero,226f8 <___vfprintf_internal_r+0x1d44>
   224f4:	4805883a 	mov	r2,r9
   224f8:	d8c01417 	ldw	r3,80(sp)
   224fc:	1445c83a 	sub	r2,r2,r17
   22500:	ad4011d8 	cmpnei	r21,r21,71
   22504:	d8c00715 	stw	r3,28(sp)
   22508:	d8800815 	stw	r2,32(sp)
   2250c:	a83f3e26 	beq	r21,zero,22208 <___vfprintf_internal_r+0x1854>
   22510:	d8800f17 	ldw	r2,60(sp)
   22514:	103f4126 	beq	r2,zero,2221c <___vfprintf_internal_r+0x1868>
   22518:	d8c00717 	ldw	r3,28(sp)
   2251c:	6080004c 	andi	r2,r12,1
   22520:	1204b03a 	or	r2,r2,r8
   22524:	00c1050e 	bge	zero,r3,2293c <___vfprintf_internal_r+0x1f88>
   22528:	1000f11e 	bne	r2,zero,228f0 <___vfprintf_internal_r+0x1f3c>
   2252c:	dd400717 	ldw	r21,28(sp)
   22530:	a829883a 	mov	r20,r21
   22534:	d8800607 	ldb	r2,24(sp)
   22538:	10007826 	beq	r2,zero,2271c <___vfprintf_internal_r+0x1d68>
   2253c:	00800b44 	movi	r2,45
   22540:	d8801345 	stb	r2,77(sp)
   22544:	d8800e17 	ldw	r2,56(sp)
   22548:	0011883a 	mov	r8,zero
   2254c:	d8800615 	stw	r2,24(sp)
   22550:	003b3506 	br	21228 <___vfprintf_internal_r+0x874>
   22554:	044000f4 	movhi	r17,3
   22558:	8c7fd004 	addi	r17,r17,-192
   2255c:	003aba06 	br	21048 <___vfprintf_internal_r+0x694>
   22560:	800f883a 	mov	r7,r16
   22564:	dc000e17 	ldw	r16,56(sp)
   22568:	10800044 	addi	r2,r2,1
   2256c:	1d47883a 	add	r3,r3,r21
   22570:	d8801b15 	stw	r2,108(sp)
   22574:	b1c00015 	stw	r7,0(r22)
   22578:	b5400115 	stw	r21,4(r22)
   2257c:	d8c01c15 	stw	r3,112(sp)
   22580:	10800208 	cmpgei	r2,r2,8
   22584:	10003a1e 	bne	r2,zero,22670 <___vfprintf_internal_r+0x1cbc>
   22588:	b5800204 	addi	r22,r22,8
   2258c:	003db206 	br	21c58 <___vfprintf_internal_r+0x12a4>
   22590:	00800b44 	movi	r2,45
   22594:	d8801345 	stb	r2,77(sp)
   22598:	03400b44 	movi	r13,45
   2259c:	003aa606 	br	21038 <___vfprintf_internal_r+0x684>
   225a0:	d9801a04 	addi	r6,sp,104
   225a4:	900b883a 	mov	r5,r18
   225a8:	9809883a 	mov	r4,r19
   225ac:	0027ecc0 	call	27ecc <__sprint_r>
   225b0:	103a0d1e 	bne	r2,zero,20de8 <___vfprintf_internal_r+0x434>
   225b4:	d9401417 	ldw	r5,80(sp)
   225b8:	d8c01c17 	ldw	r3,112(sp)
   225bc:	dd802704 	addi	r22,sp,156
   225c0:	003cd706 	br	21920 <___vfprintf_internal_r+0xf6c>
   225c4:	1520003c 	xorhi	r20,r2,32768
   225c8:	00800b44 	movi	r2,45
   225cc:	d8800605 	stb	r2,24(sp)
   225d0:	003ee906 	br	22178 <___vfprintf_internal_r+0x17c4>
   225d4:	05400184 	movi	r21,6
   225d8:	003e5e06 	br	21f54 <___vfprintf_internal_r+0x15a0>
   225dc:	d9801a04 	addi	r6,sp,104
   225e0:	900b883a 	mov	r5,r18
   225e4:	9809883a 	mov	r4,r19
   225e8:	0027ecc0 	call	27ecc <__sprint_r>
   225ec:	0039fe06 	br	20de8 <___vfprintf_internal_r+0x434>
   225f0:	d9401345 	stb	r5,77(sp)
   225f4:	0039ac06 	br	20ca8 <___vfprintf_internal_r+0x2f4>
   225f8:	d9000917 	ldw	r4,36(sp)
   225fc:	000d883a 	mov	r6,zero
   22600:	000f883a 	mov	r7,zero
   22604:	a00b883a 	mov	r5,r20
   22608:	d8c01115 	stw	r3,68(sp)
   2260c:	da000815 	stw	r8,32(sp)
   22610:	db000715 	stw	r12,28(sp)
   22614:	002bff00 	call	2bff0 <__eqdf2>
   22618:	db000717 	ldw	r12,28(sp)
   2261c:	da000817 	ldw	r8,32(sp)
   22620:	d8c01117 	ldw	r3,68(sp)
   22624:	103fa526 	beq	r2,zero,224bc <___vfprintf_internal_r+0x1b08>
   22628:	00800044 	movi	r2,1
   2262c:	1205c83a 	sub	r2,r2,r8
   22630:	d8801415 	stw	r2,80(sp)
   22634:	003fa206 	br	224c0 <___vfprintf_internal_r+0x1b0c>
   22638:	403ec91e 	bne	r8,zero,22160 <___vfprintf_internal_r+0x17ac>
   2263c:	02000044 	movi	r8,1
   22640:	003ec706 	br	22160 <___vfprintf_internal_r+0x17ac>
   22644:	d9801a04 	addi	r6,sp,104
   22648:	900b883a 	mov	r5,r18
   2264c:	9809883a 	mov	r4,r19
   22650:	0027ecc0 	call	27ecc <__sprint_r>
   22654:	1039e41e 	bne	r2,zero,20de8 <___vfprintf_internal_r+0x434>
   22658:	d9401417 	ldw	r5,80(sp)
   2265c:	d8c01c17 	ldw	r3,112(sp)
   22660:	d8801b17 	ldw	r2,108(sp)
   22664:	dd802704 	addi	r22,sp,156
   22668:	283cbf0e 	bge	r5,zero,21968 <___vfprintf_internal_r+0xfb4>
   2266c:	003f5f06 	br	223ec <___vfprintf_internal_r+0x1a38>
   22670:	d9801a04 	addi	r6,sp,104
   22674:	900b883a 	mov	r5,r18
   22678:	9809883a 	mov	r4,r19
   2267c:	0027ecc0 	call	27ecc <__sprint_r>
   22680:	1039d91e 	bne	r2,zero,20de8 <___vfprintf_internal_r+0x434>
   22684:	d8c01c17 	ldw	r3,112(sp)
   22688:	dd802704 	addi	r22,sp,156
   2268c:	003d7206 	br	21c58 <___vfprintf_internal_r+0x12a4>
   22690:	db000417 	ldw	r12,16(sp)
   22694:	003ad706 	br	211f4 <___vfprintf_internal_r+0x840>
   22698:	d8801804 	addi	r2,sp,96
   2269c:	d8800315 	stw	r2,12(sp)
   226a0:	d9400917 	ldw	r5,36(sp)
   226a4:	d8801504 	addi	r2,sp,84
   226a8:	40c00044 	addi	r3,r8,1
   226ac:	d8800215 	stw	r2,8(sp)
   226b0:	d8801404 	addi	r2,sp,80
   226b4:	d8c00015 	stw	r3,0(sp)
   226b8:	d8800115 	stw	r2,4(sp)
   226bc:	01c00084 	movi	r7,2
   226c0:	a00d883a 	mov	r6,r20
   226c4:	9809883a 	mov	r4,r19
   226c8:	db001115 	stw	r12,68(sp)
   226cc:	da000815 	stw	r8,32(sp)
   226d0:	d8c00715 	stw	r3,28(sp)
   226d4:	0022df80 	call	22df8 <_dtoa_r>
   226d8:	d8c00717 	ldw	r3,28(sp)
   226dc:	da000817 	ldw	r8,32(sp)
   226e0:	db001117 	ldw	r12,68(sp)
   226e4:	1023883a 	mov	r17,r2
   226e8:	e08011d8 	cmpnei	r2,fp,71
   226ec:	103ebd26 	beq	r2,zero,221e4 <___vfprintf_internal_r+0x1830>
   226f0:	88d3883a 	add	r9,r17,r3
   226f4:	003f7306 	br	224c4 <___vfprintf_internal_r+0x1b10>
   226f8:	d8801817 	ldw	r2,96(sp)
   226fc:	127f7e2e 	bgeu	r2,r9,224f8 <___vfprintf_internal_r+0x1b44>
   22700:	01000c04 	movi	r4,48
   22704:	10c00044 	addi	r3,r2,1
   22708:	d8c01815 	stw	r3,96(sp)
   2270c:	11000005 	stb	r4,0(r2)
   22710:	d8801817 	ldw	r2,96(sp)
   22714:	127ffb36 	bltu	r2,r9,22704 <___vfprintf_internal_r+0x1d50>
   22718:	003f7706 	br	224f8 <___vfprintf_internal_r+0x1b44>
   2271c:	d8800e17 	ldw	r2,56(sp)
   22720:	db401343 	ldbu	r13,77(sp)
   22724:	0011883a 	mov	r8,zero
   22728:	d8800615 	stw	r2,24(sp)
   2272c:	003aba06 	br	21218 <___vfprintf_internal_r+0x864>
   22730:	d8800717 	ldw	r2,28(sp)
   22734:	d8c00817 	ldw	r3,32(sp)
   22738:	10c02b16 	blt	r2,r3,227e8 <___vfprintf_internal_r+0x1e34>
   2273c:	6300004c 	andi	r12,r12,1
   22740:	6000581e 	bne	r12,zero,228a4 <___vfprintf_internal_r+0x1ef0>
   22744:	1029883a 	mov	r20,r2
   22748:	1000010e 	bge	r2,zero,22750 <___vfprintf_internal_r+0x1d9c>
   2274c:	0029883a 	mov	r20,zero
   22750:	dd400717 	ldw	r21,28(sp)
   22754:	070019c4 	movi	fp,103
   22758:	003f7606 	br	22534 <___vfprintf_internal_r+0x1b80>
   2275c:	d9801a04 	addi	r6,sp,104
   22760:	900b883a 	mov	r5,r18
   22764:	9809883a 	mov	r4,r19
   22768:	0027ecc0 	call	27ecc <__sprint_r>
   2276c:	10399e1e 	bne	r2,zero,20de8 <___vfprintf_internal_r+0x434>
   22770:	dd401417 	ldw	r21,80(sp)
   22774:	d8c01c17 	ldw	r3,112(sp)
   22778:	dd802704 	addi	r22,sp,156
   2277c:	003d4506 	br	21c94 <___vfprintf_internal_r+0x12e0>
   22780:	d9801a04 	addi	r6,sp,104
   22784:	900b883a 	mov	r5,r18
   22788:	9809883a 	mov	r4,r19
   2278c:	0027ecc0 	call	27ecc <__sprint_r>
   22790:	1039951e 	bne	r2,zero,20de8 <___vfprintf_internal_r+0x434>
   22794:	d8c01c17 	ldw	r3,112(sp)
   22798:	dd802704 	addi	r22,sp,156
   2279c:	a83d2b0e 	bge	r21,zero,21c4c <___vfprintf_internal_r+0x1298>
   227a0:	003ddf06 	br	21f20 <___vfprintf_internal_r+0x156c>
   227a4:	02000184 	movi	r8,6
   227a8:	003e6d06 	br	22160 <___vfprintf_internal_r+0x17ac>
   227ac:	d9801a04 	addi	r6,sp,104
   227b0:	900b883a 	mov	r5,r18
   227b4:	9809883a 	mov	r4,r19
   227b8:	0027ecc0 	call	27ecc <__sprint_r>
   227bc:	10398a1e 	bne	r2,zero,20de8 <___vfprintf_internal_r+0x434>
   227c0:	d8801417 	ldw	r2,80(sp)
   227c4:	d9000817 	ldw	r4,32(sp)
   227c8:	d8c01c17 	ldw	r3,112(sp)
   227cc:	dd802704 	addi	r22,sp,156
   227d0:	2085c83a 	sub	r2,r4,r2
   227d4:	003d4306 	br	21ce4 <___vfprintf_internal_r+0x1330>
   227d8:	4029883a 	mov	r20,r8
   227dc:	d8c00615 	stw	r3,24(sp)
   227e0:	402b883a 	mov	r21,r8
   227e4:	00393606 	br	20cc0 <___vfprintf_internal_r+0x30c>
   227e8:	d8800817 	ldw	r2,32(sp)
   227ec:	d8c00b17 	ldw	r3,44(sp)
   227f0:	10eb883a 	add	r21,r2,r3
   227f4:	d8800717 	ldw	r2,28(sp)
   227f8:	00800316 	blt	zero,r2,22808 <___vfprintf_internal_r+0x1e54>
   227fc:	d8800717 	ldw	r2,28(sp)
   22800:	a8abc83a 	sub	r21,r21,r2
   22804:	ad400044 	addi	r21,r21,1
   22808:	a829883a 	mov	r20,r21
   2280c:	a8002a16 	blt	r21,zero,228b8 <___vfprintf_internal_r+0x1f04>
   22810:	070019c4 	movi	fp,103
   22814:	003f4706 	br	22534 <___vfprintf_internal_r+0x1b80>
   22818:	d9401345 	stb	r5,77(sp)
   2281c:	003aa006 	br	212a0 <___vfprintf_internal_r+0x8ec>
   22820:	d9401345 	stb	r5,77(sp)
   22824:	003b3406 	br	214f8 <___vfprintf_internal_r+0xb44>
   22828:	d9401345 	stb	r5,77(sp)
   2282c:	0039d706 	br	20f8c <___vfprintf_internal_r+0x5d8>
   22830:	d9401345 	stb	r5,77(sp)
   22834:	003a5a06 	br	211a0 <___vfprintf_internal_r+0x7ec>
   22838:	d9401345 	stb	r5,77(sp)
   2283c:	003af306 	br	2140c <___vfprintf_internal_r+0xa58>
   22840:	d9401345 	stb	r5,77(sp)
   22844:	003b4c06 	br	21578 <___vfprintf_internal_r+0xbc4>
   22848:	900f883a 	mov	r7,r18
   2284c:	8025883a 	mov	r18,r16
   22850:	dc000717 	ldw	r16,28(sp)
   22854:	10800044 	addi	r2,r2,1
   22858:	1f07883a 	add	r3,r3,fp
   2285c:	b1c00015 	stw	r7,0(r22)
   22860:	b7000115 	stw	fp,4(r22)
   22864:	d8c01c15 	stw	r3,112(sp)
   22868:	d8801b15 	stw	r2,108(sp)
   2286c:	11000208 	cmpgei	r4,r2,8
   22870:	203c3c26 	beq	r4,zero,21964 <___vfprintf_internal_r+0xfb0>
   22874:	d9801a04 	addi	r6,sp,104
   22878:	900b883a 	mov	r5,r18
   2287c:	9809883a 	mov	r4,r19
   22880:	0027ecc0 	call	27ecc <__sprint_r>
   22884:	1039581e 	bne	r2,zero,20de8 <___vfprintf_internal_r+0x434>
   22888:	d8c01c17 	ldw	r3,112(sp)
   2288c:	d8801b17 	ldw	r2,108(sp)
   22890:	dd802704 	addi	r22,sp,156
   22894:	003c3406 	br	21968 <___vfprintf_internal_r+0xfb4>
   22898:	00bfffc4 	movi	r2,-1
   2289c:	d8800515 	stw	r2,20(sp)
   228a0:	00395406 	br	20df4 <___vfprintf_internal_r+0x440>
   228a4:	d8800717 	ldw	r2,28(sp)
   228a8:	d8c00b17 	ldw	r3,44(sp)
   228ac:	10eb883a 	add	r21,r2,r3
   228b0:	a829883a 	mov	r20,r21
   228b4:	a83fd60e 	bge	r21,zero,22810 <___vfprintf_internal_r+0x1e5c>
   228b8:	0029883a 	mov	r20,zero
   228bc:	003fd406 	br	22810 <___vfprintf_internal_r+0x1e5c>
   228c0:	00800c04 	movi	r2,48
   228c4:	ad400c04 	addi	r21,r21,48
   228c8:	d88016c5 	stb	r2,91(sp)
   228cc:	00800104 	movi	r2,4
   228d0:	dd401705 	stb	r21,92(sp)
   228d4:	d8801015 	stw	r2,64(sp)
   228d8:	003e8606 	br	222f4 <___vfprintf_internal_r+0x1940>
   228dc:	05400044 	movi	r21,1
   228e0:	a8abc83a 	sub	r21,r21,r2
   228e4:	00800b44 	movi	r2,45
   228e8:	d8801685 	stb	r2,90(sp)
   228ec:	003e5206 	br	22238 <___vfprintf_internal_r+0x1884>
   228f0:	d8800b17 	ldw	r2,44(sp)
   228f4:	18ab883a 	add	r21,r3,r2
   228f8:	aa2b883a 	add	r21,r21,r8
   228fc:	a829883a 	mov	r20,r21
   22900:	a83f0c0e 	bge	r21,zero,22534 <___vfprintf_internal_r+0x1b80>
   22904:	0029883a 	mov	r20,zero
   22908:	003f0a06 	br	22534 <___vfprintf_internal_r+0x1b80>
   2290c:	6080004c 	andi	r2,r12,1
   22910:	d8800715 	stw	r2,28(sp)
   22914:	103e7c1e 	bne	r2,zero,22308 <___vfprintf_internal_r+0x1954>
   22918:	003ff806 	br	228fc <___vfprintf_internal_r+0x1f48>
   2291c:	d8800a17 	ldw	r2,40(sp)
   22920:	10001316 	blt	r2,zero,22970 <___vfprintf_internal_r+0x1fbc>
   22924:	db401343 	ldbu	r13,77(sp)
   22928:	e0801210 	cmplti	r2,fp,72
   2292c:	10000d1e 	bne	r2,zero,22964 <___vfprintf_internal_r+0x1fb0>
   22930:	044000f4 	movhi	r17,3
   22934:	8c7fd304 	addi	r17,r17,-180
   22938:	0039c306 	br	21048 <___vfprintf_internal_r+0x694>
   2293c:	1000031e 	bne	r2,zero,2294c <___vfprintf_internal_r+0x1f98>
   22940:	05000044 	movi	r20,1
   22944:	05400044 	movi	r21,1
   22948:	003efa06 	br	22534 <___vfprintf_internal_r+0x1b80>
   2294c:	d8800b17 	ldw	r2,44(sp)
   22950:	15400044 	addi	r21,r2,1
   22954:	aa2b883a 	add	r21,r21,r8
   22958:	003fe806 	br	228fc <___vfprintf_internal_r+0x1f48>
   2295c:	8025883a 	mov	r18,r16
   22960:	00392106 	br	20de8 <___vfprintf_internal_r+0x434>
   22964:	044000f4 	movhi	r17,3
   22968:	8c7fd204 	addi	r17,r17,-184
   2296c:	0039b606 	br	21048 <___vfprintf_internal_r+0x694>
   22970:	00800b44 	movi	r2,45
   22974:	d8801345 	stb	r2,77(sp)
   22978:	03400b44 	movi	r13,45
   2297c:	003fea06 	br	22928 <___vfprintf_internal_r+0x1f74>
   22980:	d8800617 	ldw	r2,24(sp)
   22984:	12000017 	ldw	r8,0(r2)
   22988:	10800104 	addi	r2,r2,4
   2298c:	4000010e 	bge	r8,zero,22994 <___vfprintf_internal_r+0x1fe0>
   22990:	023fffc4 	movi	r8,-1
   22994:	bf000043 	ldbu	fp,1(r23)
   22998:	d8800615 	stw	r2,24(sp)
   2299c:	182f883a 	mov	r23,r3
   229a0:	e2c03fcc 	andi	r11,fp,255
   229a4:	5ac0201c 	xori	r11,r11,128
   229a8:	5affe004 	addi	r11,r11,-128
   229ac:	00384d06 	br	20ae4 <___vfprintf_internal_r+0x130>
   229b0:	00800084 	movi	r2,2
   229b4:	d8801015 	stw	r2,64(sp)
   229b8:	003e4e06 	br	222f4 <___vfprintf_internal_r+0x1940>

000229bc <__vfprintf_internal>:
   229bc:	00c000f4 	movhi	r3,3
   229c0:	2005883a 	mov	r2,r4
   229c4:	19084a17 	ldw	r4,8488(r3)
   229c8:	300f883a 	mov	r7,r6
   229cc:	280d883a 	mov	r6,r5
   229d0:	100b883a 	mov	r5,r2
   229d4:	00209b41 	jmpi	209b4 <___vfprintf_internal_r>

000229d8 <__sbprintf>:
   229d8:	2880030b 	ldhu	r2,12(r5)
   229dc:	2b001917 	ldw	r12,100(r5)
   229e0:	2ac0038b 	ldhu	r11,14(r5)
   229e4:	2a800717 	ldw	r10,28(r5)
   229e8:	2a400917 	ldw	r9,36(r5)
   229ec:	defee204 	addi	sp,sp,-1144
   229f0:	da001a04 	addi	r8,sp,104
   229f4:	00c10004 	movi	r3,1024
   229f8:	dc011a15 	stw	r16,1128(sp)
   229fc:	10bfff4c 	andi	r2,r2,65533
   22a00:	2821883a 	mov	r16,r5
   22a04:	d80b883a 	mov	r5,sp
   22a08:	dc811c15 	stw	r18,1136(sp)
   22a0c:	dc411b15 	stw	r17,1132(sp)
   22a10:	dfc11d15 	stw	ra,1140(sp)
   22a14:	2025883a 	mov	r18,r4
   22a18:	d880030d 	sth	r2,12(sp)
   22a1c:	db001915 	stw	r12,100(sp)
   22a20:	dac0038d 	sth	r11,14(sp)
   22a24:	da800715 	stw	r10,28(sp)
   22a28:	da400915 	stw	r9,36(sp)
   22a2c:	da000015 	stw	r8,0(sp)
   22a30:	da000415 	stw	r8,16(sp)
   22a34:	d8c00215 	stw	r3,8(sp)
   22a38:	d8c00515 	stw	r3,20(sp)
   22a3c:	d8000615 	stw	zero,24(sp)
   22a40:	00209b40 	call	209b4 <___vfprintf_internal_r>
   22a44:	1023883a 	mov	r17,r2
   22a48:	10000d0e 	bge	r2,zero,22a80 <__sbprintf+0xa8>
   22a4c:	d880030b 	ldhu	r2,12(sp)
   22a50:	1080100c 	andi	r2,r2,64
   22a54:	10000326 	beq	r2,zero,22a64 <__sbprintf+0x8c>
   22a58:	8080030b 	ldhu	r2,12(r16)
   22a5c:	10801014 	ori	r2,r2,64
   22a60:	8080030d 	sth	r2,12(r16)
   22a64:	8805883a 	mov	r2,r17
   22a68:	dfc11d17 	ldw	ra,1140(sp)
   22a6c:	dc811c17 	ldw	r18,1136(sp)
   22a70:	dc411b17 	ldw	r17,1132(sp)
   22a74:	dc011a17 	ldw	r16,1128(sp)
   22a78:	dec11e04 	addi	sp,sp,1144
   22a7c:	f800283a 	ret
   22a80:	d80b883a 	mov	r5,sp
   22a84:	9009883a 	mov	r4,r18
   22a88:	00247680 	call	24768 <_fflush_r>
   22a8c:	103fef26 	beq	r2,zero,22a4c <__sbprintf+0x74>
   22a90:	047fffc4 	movi	r17,-1
   22a94:	003fed06 	br	22a4c <__sbprintf+0x74>

00022a98 <__swsetup_r>:
   22a98:	008000f4 	movhi	r2,3
   22a9c:	10884a17 	ldw	r2,8488(r2)
   22aa0:	defffd04 	addi	sp,sp,-12
   22aa4:	dc400115 	stw	r17,4(sp)
   22aa8:	dc000015 	stw	r16,0(sp)
   22aac:	dfc00215 	stw	ra,8(sp)
   22ab0:	2023883a 	mov	r17,r4
   22ab4:	2821883a 	mov	r16,r5
   22ab8:	10000226 	beq	r2,zero,22ac4 <__swsetup_r+0x2c>
   22abc:	10c00e17 	ldw	r3,56(r2)
   22ac0:	18001f26 	beq	r3,zero,22b40 <__swsetup_r+0xa8>
   22ac4:	8180030b 	ldhu	r6,12(r16)
   22ac8:	30c0020c 	andi	r3,r6,8
   22acc:	3005883a 	mov	r2,r6
   22ad0:	18002126 	beq	r3,zero,22b58 <__swsetup_r+0xc0>
   22ad4:	80c00417 	ldw	r3,16(r16)
   22ad8:	18002826 	beq	r3,zero,22b7c <__swsetup_r+0xe4>
   22adc:	1100004c 	andi	r4,r2,1
   22ae0:	20000b1e 	bne	r4,zero,22b10 <__swsetup_r+0x78>
   22ae4:	1100008c 	andi	r4,r2,2
   22ae8:	20002e1e 	bne	r4,zero,22ba4 <__swsetup_r+0x10c>
   22aec:	81000517 	ldw	r4,20(r16)
   22af0:	81000215 	stw	r4,8(r16)
   22af4:	18000b26 	beq	r3,zero,22b24 <__swsetup_r+0x8c>
   22af8:	0005883a 	mov	r2,zero
   22afc:	dfc00217 	ldw	ra,8(sp)
   22b00:	dc400117 	ldw	r17,4(sp)
   22b04:	dc000017 	ldw	r16,0(sp)
   22b08:	dec00304 	addi	sp,sp,12
   22b0c:	f800283a 	ret
   22b10:	81000517 	ldw	r4,20(r16)
   22b14:	80000215 	stw	zero,8(r16)
   22b18:	0109c83a 	sub	r4,zero,r4
   22b1c:	81000615 	stw	r4,24(r16)
   22b20:	183ff51e 	bne	r3,zero,22af8 <__swsetup_r+0x60>
   22b24:	10c0200c 	andi	r3,r2,128
   22b28:	0005883a 	mov	r2,zero
   22b2c:	183ff326 	beq	r3,zero,22afc <__swsetup_r+0x64>
   22b30:	31801014 	ori	r6,r6,64
   22b34:	8180030d 	sth	r6,12(r16)
   22b38:	00bfffc4 	movi	r2,-1
   22b3c:	003fef06 	br	22afc <__swsetup_r+0x64>
   22b40:	1009883a 	mov	r4,r2
   22b44:	0024ba00 	call	24ba0 <__sinit>
   22b48:	8180030b 	ldhu	r6,12(r16)
   22b4c:	30c0020c 	andi	r3,r6,8
   22b50:	3005883a 	mov	r2,r6
   22b54:	183fdf1e 	bne	r3,zero,22ad4 <__swsetup_r+0x3c>
   22b58:	3080040c 	andi	r2,r6,16
   22b5c:	10002126 	beq	r2,zero,22be4 <__swsetup_r+0x14c>
   22b60:	3080010c 	andi	r2,r6,4
   22b64:	1000111e 	bne	r2,zero,22bac <__swsetup_r+0x114>
   22b68:	80c00417 	ldw	r3,16(r16)
   22b6c:	30800214 	ori	r2,r6,8
   22b70:	8080030d 	sth	r2,12(r16)
   22b74:	100d883a 	mov	r6,r2
   22b78:	183fd81e 	bne	r3,zero,22adc <__swsetup_r+0x44>
   22b7c:	1100a00c 	andi	r4,r2,640
   22b80:	21008020 	cmpeqi	r4,r4,512
   22b84:	203fd51e 	bne	r4,zero,22adc <__swsetup_r+0x44>
   22b88:	800b883a 	mov	r5,r16
   22b8c:	8809883a 	mov	r4,r17
   22b90:	00255e40 	call	255e4 <__smakebuf_r>
   22b94:	8180030b 	ldhu	r6,12(r16)
   22b98:	80c00417 	ldw	r3,16(r16)
   22b9c:	3005883a 	mov	r2,r6
   22ba0:	003fce06 	br	22adc <__swsetup_r+0x44>
   22ba4:	0009883a 	mov	r4,zero
   22ba8:	003fd106 	br	22af0 <__swsetup_r+0x58>
   22bac:	81400c17 	ldw	r5,48(r16)
   22bb0:	28000626 	beq	r5,zero,22bcc <__swsetup_r+0x134>
   22bb4:	80801004 	addi	r2,r16,64
   22bb8:	28800326 	beq	r5,r2,22bc8 <__swsetup_r+0x130>
   22bbc:	8809883a 	mov	r4,r17
   22bc0:	0024d040 	call	24d04 <_free_r>
   22bc4:	8180030b 	ldhu	r6,12(r16)
   22bc8:	80000c15 	stw	zero,48(r16)
   22bcc:	80c00417 	ldw	r3,16(r16)
   22bd0:	00bff6c4 	movi	r2,-37
   22bd4:	118c703a 	and	r6,r2,r6
   22bd8:	80000115 	stw	zero,4(r16)
   22bdc:	80c00015 	stw	r3,0(r16)
   22be0:	003fe206 	br	22b6c <__swsetup_r+0xd4>
   22be4:	00800244 	movi	r2,9
   22be8:	88800015 	stw	r2,0(r17)
   22bec:	31801014 	ori	r6,r6,64
   22bf0:	8180030d 	sth	r6,12(r16)
   22bf4:	00bfffc4 	movi	r2,-1
   22bf8:	003fc006 	br	22afc <__swsetup_r+0x64>

00022bfc <quorem>:
   22bfc:	defff504 	addi	sp,sp,-44
   22c00:	dc800315 	stw	r18,12(sp)
   22c04:	20800417 	ldw	r2,16(r4)
   22c08:	2c800417 	ldw	r18,16(r5)
   22c0c:	dfc00a15 	stw	ra,40(sp)
   22c10:	df000915 	stw	fp,36(sp)
   22c14:	ddc00815 	stw	r23,32(sp)
   22c18:	dd800715 	stw	r22,28(sp)
   22c1c:	dd400615 	stw	r21,24(sp)
   22c20:	dd000515 	stw	r20,20(sp)
   22c24:	dcc00415 	stw	r19,16(sp)
   22c28:	dc400215 	stw	r17,8(sp)
   22c2c:	dc000115 	stw	r16,4(sp)
   22c30:	14806f16 	blt	r2,r18,22df0 <quorem+0x1f4>
   22c34:	94bfffc4 	addi	r18,r18,-1
   22c38:	902c90ba 	slli	r22,r18,2
   22c3c:	2c000504 	addi	r16,r5,20
   22c40:	25000504 	addi	r20,r4,20
   22c44:	85a7883a 	add	r19,r16,r22
   22c48:	9f000017 	ldw	fp,0(r19)
   22c4c:	a5ad883a 	add	r22,r20,r22
   22c50:	202b883a 	mov	r21,r4
   22c54:	b1000017 	ldw	r4,0(r22)
   22c58:	e7000044 	addi	fp,fp,1
   22c5c:	282f883a 	mov	r23,r5
   22c60:	e00b883a 	mov	r5,fp
   22c64:	d9000015 	stw	r4,0(sp)
   22c68:	00206f80 	call	206f8 <__udivsi3>
   22c6c:	d9000017 	ldw	r4,0(sp)
   22c70:	1023883a 	mov	r17,r2
   22c74:	27002a36 	bltu	r4,fp,22d20 <quorem+0x124>
   22c78:	800b883a 	mov	r5,r16
   22c7c:	a009883a 	mov	r4,r20
   22c80:	0013883a 	mov	r9,zero
   22c84:	0007883a 	mov	r3,zero
   22c88:	2a000017 	ldw	r8,0(r5)
   22c8c:	21800017 	ldw	r6,0(r4)
   22c90:	21000104 	addi	r4,r4,4
   22c94:	40bfffcc 	andi	r2,r8,65535
   22c98:	1445383a 	mul	r2,r2,r17
   22c9c:	400ed43a 	srli	r7,r8,16
   22ca0:	32bfffcc 	andi	r10,r6,65535
   22ca4:	1245883a 	add	r2,r2,r9
   22ca8:	1012d43a 	srli	r9,r2,16
   22cac:	123fffcc 	andi	r8,r2,65535
   22cb0:	3c4f383a 	mul	r7,r7,r17
   22cb4:	1a07c83a 	sub	r3,r3,r8
   22cb8:	1a91883a 	add	r8,r3,r10
   22cbc:	3006d43a 	srli	r3,r6,16
   22cc0:	4005d43a 	srai	r2,r8,16
   22cc4:	3a4f883a 	add	r7,r7,r9
   22cc8:	39bfffcc 	andi	r6,r7,65535
   22ccc:	1987c83a 	sub	r3,r3,r6
   22cd0:	1887883a 	add	r3,r3,r2
   22cd4:	1804943a 	slli	r2,r3,16
   22cd8:	423fffcc 	andi	r8,r8,65535
   22cdc:	29400104 	addi	r5,r5,4
   22ce0:	1210b03a 	or	r8,r2,r8
   22ce4:	223fff15 	stw	r8,-4(r4)
   22ce8:	3812d43a 	srli	r9,r7,16
   22cec:	1807d43a 	srai	r3,r3,16
   22cf0:	997fe52e 	bgeu	r19,r5,22c88 <quorem+0x8c>
   22cf4:	b0800017 	ldw	r2,0(r22)
   22cf8:	1000091e 	bne	r2,zero,22d20 <quorem+0x124>
   22cfc:	b5bfff04 	addi	r22,r22,-4
   22d00:	a5800336 	bltu	r20,r22,22d10 <quorem+0x114>
   22d04:	00000506 	br	22d1c <quorem+0x120>
   22d08:	94bfffc4 	addi	r18,r18,-1
   22d0c:	a580032e 	bgeu	r20,r22,22d1c <quorem+0x120>
   22d10:	b0800017 	ldw	r2,0(r22)
   22d14:	b5bfff04 	addi	r22,r22,-4
   22d18:	103ffb26 	beq	r2,zero,22d08 <quorem+0x10c>
   22d1c:	ac800415 	stw	r18,16(r21)
   22d20:	b80b883a 	mov	r5,r23
   22d24:	a809883a 	mov	r4,r21
   22d28:	0026e180 	call	26e18 <__mcmp>
   22d2c:	10002316 	blt	r2,zero,22dbc <quorem+0x1c0>
   22d30:	8c400044 	addi	r17,r17,1
   22d34:	a00d883a 	mov	r6,r20
   22d38:	0007883a 	mov	r3,zero
   22d3c:	81000017 	ldw	r4,0(r16)
   22d40:	31400017 	ldw	r5,0(r6)
   22d44:	31800104 	addi	r6,r6,4
   22d48:	20bfffcc 	andi	r2,r4,65535
   22d4c:	1887c83a 	sub	r3,r3,r2
   22d50:	28bfffcc 	andi	r2,r5,65535
   22d54:	1885883a 	add	r2,r3,r2
   22d58:	2008d43a 	srli	r4,r4,16
   22d5c:	2806d43a 	srli	r3,r5,16
   22d60:	100fd43a 	srai	r7,r2,16
   22d64:	117fffcc 	andi	r5,r2,65535
   22d68:	1907c83a 	sub	r3,r3,r4
   22d6c:	19c7883a 	add	r3,r3,r7
   22d70:	1804943a 	slli	r2,r3,16
   22d74:	84000104 	addi	r16,r16,4
   22d78:	1807d43a 	srai	r3,r3,16
   22d7c:	1144b03a 	or	r2,r2,r5
   22d80:	30bfff15 	stw	r2,-4(r6)
   22d84:	9c3fed2e 	bgeu	r19,r16,22d3c <quorem+0x140>
   22d88:	900490ba 	slli	r2,r18,2
   22d8c:	a085883a 	add	r2,r20,r2
   22d90:	10c00017 	ldw	r3,0(r2)
   22d94:	1800091e 	bne	r3,zero,22dbc <quorem+0x1c0>
   22d98:	10bfff04 	addi	r2,r2,-4
   22d9c:	a0800336 	bltu	r20,r2,22dac <quorem+0x1b0>
   22da0:	00000506 	br	22db8 <quorem+0x1bc>
   22da4:	94bfffc4 	addi	r18,r18,-1
   22da8:	a080032e 	bgeu	r20,r2,22db8 <quorem+0x1bc>
   22dac:	10c00017 	ldw	r3,0(r2)
   22db0:	10bfff04 	addi	r2,r2,-4
   22db4:	183ffb26 	beq	r3,zero,22da4 <quorem+0x1a8>
   22db8:	ac800415 	stw	r18,16(r21)
   22dbc:	8805883a 	mov	r2,r17
   22dc0:	dfc00a17 	ldw	ra,40(sp)
   22dc4:	df000917 	ldw	fp,36(sp)
   22dc8:	ddc00817 	ldw	r23,32(sp)
   22dcc:	dd800717 	ldw	r22,28(sp)
   22dd0:	dd400617 	ldw	r21,24(sp)
   22dd4:	dd000517 	ldw	r20,20(sp)
   22dd8:	dcc00417 	ldw	r19,16(sp)
   22ddc:	dc800317 	ldw	r18,12(sp)
   22de0:	dc400217 	ldw	r17,8(sp)
   22de4:	dc000117 	ldw	r16,4(sp)
   22de8:	dec00b04 	addi	sp,sp,44
   22dec:	f800283a 	ret
   22df0:	0005883a 	mov	r2,zero
   22df4:	003ff206 	br	22dc0 <quorem+0x1c4>

00022df8 <_dtoa_r>:
   22df8:	20801017 	ldw	r2,64(r4)
   22dfc:	deffe304 	addi	sp,sp,-116
   22e00:	df001b15 	stw	fp,108(sp)
   22e04:	dcc01615 	stw	r19,88(sp)
   22e08:	dc801515 	stw	r18,84(sp)
   22e0c:	dc401415 	stw	r17,80(sp)
   22e10:	dc001315 	stw	r16,76(sp)
   22e14:	dfc01c15 	stw	ra,112(sp)
   22e18:	ddc01a15 	stw	r23,104(sp)
   22e1c:	dd801915 	stw	r22,100(sp)
   22e20:	dd401815 	stw	r21,96(sp)
   22e24:	dd001715 	stw	r20,92(sp)
   22e28:	d9c00215 	stw	r7,8(sp)
   22e2c:	dc001f17 	ldw	r16,124(sp)
   22e30:	2039883a 	mov	fp,r4
   22e34:	3025883a 	mov	r18,r6
   22e38:	2827883a 	mov	r19,r5
   22e3c:	3023883a 	mov	r17,r6
   22e40:	10000826 	beq	r2,zero,22e64 <_dtoa_r+0x6c>
   22e44:	21801117 	ldw	r6,68(r4)
   22e48:	00c00044 	movi	r3,1
   22e4c:	100b883a 	mov	r5,r2
   22e50:	1986983a 	sll	r3,r3,r6
   22e54:	11800115 	stw	r6,4(r2)
   22e58:	10c00215 	stw	r3,8(r2)
   22e5c:	002649c0 	call	2649c <_Bfree>
   22e60:	e0001015 	stw	zero,64(fp)
   22e64:	90018916 	blt	r18,zero,2348c <_dtoa_r+0x694>
   22e68:	80000015 	stw	zero,0(r16)
   22e6c:	909ffc2c 	andhi	r2,r18,32752
   22e70:	00dffc34 	movhi	r3,32752
   22e74:	10c18e26 	beq	r2,r3,234b0 <_dtoa_r+0x6b8>
   22e78:	000d883a 	mov	r6,zero
   22e7c:	000f883a 	mov	r7,zero
   22e80:	9809883a 	mov	r4,r19
   22e84:	880b883a 	mov	r5,r17
   22e88:	002bff00 	call	2bff0 <__eqdf2>
   22e8c:	1000191e 	bne	r2,zero,22ef4 <_dtoa_r+0xfc>
   22e90:	d8c01e17 	ldw	r3,120(sp)
   22e94:	00800044 	movi	r2,1
   22e98:	18800015 	stw	r2,0(r3)
   22e9c:	d8802017 	ldw	r2,128(sp)
   22ea0:	1002ff26 	beq	r2,zero,23aa0 <_dtoa_r+0xca8>
   22ea4:	d9002017 	ldw	r4,128(sp)
   22ea8:	008000f4 	movhi	r2,3
   22eac:	10bfe044 	addi	r2,r2,-127
   22eb0:	00c000f4 	movhi	r3,3
   22eb4:	20800015 	stw	r2,0(r4)
   22eb8:	18bfe004 	addi	r2,r3,-128
   22ebc:	d8800115 	stw	r2,4(sp)
   22ec0:	d8800117 	ldw	r2,4(sp)
   22ec4:	dfc01c17 	ldw	ra,112(sp)
   22ec8:	df001b17 	ldw	fp,108(sp)
   22ecc:	ddc01a17 	ldw	r23,104(sp)
   22ed0:	dd801917 	ldw	r22,100(sp)
   22ed4:	dd401817 	ldw	r21,96(sp)
   22ed8:	dd001717 	ldw	r20,92(sp)
   22edc:	dcc01617 	ldw	r19,88(sp)
   22ee0:	dc801517 	ldw	r18,84(sp)
   22ee4:	dc401417 	ldw	r17,80(sp)
   22ee8:	dc001317 	ldw	r16,76(sp)
   22eec:	dec01d04 	addi	sp,sp,116
   22ef0:	f800283a 	ret
   22ef4:	d8801104 	addi	r2,sp,68
   22ef8:	9020d53a 	srli	r16,r18,20
   22efc:	d8800015 	stw	r2,0(sp)
   22f00:	d9c01204 	addi	r7,sp,72
   22f04:	980b883a 	mov	r5,r19
   22f08:	880d883a 	mov	r6,r17
   22f0c:	e009883a 	mov	r4,fp
   22f10:	00272000 	call	27200 <__d2b>
   22f14:	102f883a 	mov	r23,r2
   22f18:	8001781e 	bne	r16,zero,234fc <_dtoa_r+0x704>
   22f1c:	dd001117 	ldw	r20,68(sp)
   22f20:	dc001217 	ldw	r16,72(sp)
   22f24:	a421883a 	add	r16,r20,r16
   22f28:	80810c84 	addi	r2,r16,1074
   22f2c:	10c00850 	cmplti	r3,r2,33
   22f30:	1802eb1e 	bne	r3,zero,23ae0 <_dtoa_r+0xce8>
   22f34:	01001004 	movi	r4,64
   22f38:	2085c83a 	sub	r2,r4,r2
   22f3c:	81010484 	addi	r4,r16,1042
   22f40:	90a4983a 	sll	r18,r18,r2
   22f44:	9908d83a 	srl	r4,r19,r4
   22f48:	9108b03a 	or	r4,r18,r4
   22f4c:	002d34c0 	call	2d34c <__floatunsidf>
   22f50:	1009883a 	mov	r4,r2
   22f54:	017f8434 	movhi	r5,65040
   22f58:	00800044 	movi	r2,1
   22f5c:	194b883a 	add	r5,r3,r5
   22f60:	843fffc4 	addi	r16,r16,-1
   22f64:	d8800915 	stw	r2,36(sp)
   22f68:	000d883a 	mov	r6,zero
   22f6c:	01cffe34 	movhi	r7,16376
   22f70:	002c8b40 	call	2c8b4 <__subdf3>
   22f74:	0198dbf4 	movhi	r6,25455
   22f78:	01cff4f4 	movhi	r7,16339
   22f7c:	3190d844 	addi	r6,r6,17249
   22f80:	39e1e9c4 	addi	r7,r7,-30809
   22f84:	1009883a 	mov	r4,r2
   22f88:	180b883a 	mov	r5,r3
   22f8c:	002c2400 	call	2c240 <__muldf3>
   22f90:	01a2d874 	movhi	r6,35681
   22f94:	01cff1f4 	movhi	r7,16327
   22f98:	31b22cc4 	addi	r6,r6,-14157
   22f9c:	39e28a04 	addi	r7,r7,-30168
   22fa0:	180b883a 	mov	r5,r3
   22fa4:	1009883a 	mov	r4,r2
   22fa8:	002aeb00 	call	2aeb0 <__adddf3>
   22fac:	8009883a 	mov	r4,r16
   22fb0:	102b883a 	mov	r21,r2
   22fb4:	1825883a 	mov	r18,r3
   22fb8:	002d2940 	call	2d294 <__floatsidf>
   22fbc:	019427f4 	movhi	r6,20639
   22fc0:	01cff4f4 	movhi	r7,16339
   22fc4:	319e7ec4 	addi	r6,r6,31227
   22fc8:	39d104c4 	addi	r7,r7,17427
   22fcc:	1009883a 	mov	r4,r2
   22fd0:	180b883a 	mov	r5,r3
   22fd4:	002c2400 	call	2c240 <__muldf3>
   22fd8:	100d883a 	mov	r6,r2
   22fdc:	180f883a 	mov	r7,r3
   22fe0:	a809883a 	mov	r4,r21
   22fe4:	900b883a 	mov	r5,r18
   22fe8:	002aeb00 	call	2aeb0 <__adddf3>
   22fec:	1009883a 	mov	r4,r2
   22ff0:	180b883a 	mov	r5,r3
   22ff4:	1025883a 	mov	r18,r2
   22ff8:	182d883a 	mov	r22,r3
   22ffc:	002d2140 	call	2d214 <__fixdfsi>
   23000:	000d883a 	mov	r6,zero
   23004:	000f883a 	mov	r7,zero
   23008:	9009883a 	mov	r4,r18
   2300c:	b00b883a 	mov	r5,r22
   23010:	102b883a 	mov	r21,r2
   23014:	002c1580 	call	2c158 <__ledf2>
   23018:	10029716 	blt	r2,zero,23a78 <_dtoa_r+0xc80>
   2301c:	a421c83a 	sub	r16,r20,r16
   23020:	a88005e8 	cmpgeui	r2,r21,23
   23024:	85bfffc4 	addi	r22,r16,-1
   23028:	10028b1e 	bne	r2,zero,23a58 <_dtoa_r+0xc60>
   2302c:	a80690fa 	slli	r3,r21,3
   23030:	008000f4 	movhi	r2,3
   23034:	10802704 	addi	r2,r2,156
   23038:	10c5883a 	add	r2,r2,r3
   2303c:	11800017 	ldw	r6,0(r2)
   23040:	11c00117 	ldw	r7,4(r2)
   23044:	9809883a 	mov	r4,r19
   23048:	880b883a 	mov	r5,r17
   2304c:	002c1580 	call	2c158 <__ledf2>
   23050:	10025f0e 	bge	r2,zero,239d0 <_dtoa_r+0xbd8>
   23054:	d8000815 	stw	zero,32(sp)
   23058:	ad7fffc4 	addi	r21,r21,-1
   2305c:	b0028116 	blt	r22,zero,23a64 <_dtoa_r+0xc6c>
   23060:	d8000415 	stw	zero,16(sp)
   23064:	a8025d0e 	bge	r21,zero,239dc <_dtoa_r+0xbe4>
   23068:	d8800417 	ldw	r2,16(sp)
   2306c:	d8c00217 	ldw	r3,8(sp)
   23070:	dd400615 	stw	r21,24(sp)
   23074:	1545c83a 	sub	r2,r2,r21
   23078:	d8800415 	stw	r2,16(sp)
   2307c:	0545c83a 	sub	r2,zero,r21
   23080:	d8800715 	stw	r2,28(sp)
   23084:	188002a8 	cmpgeui	r2,r3,10
   23088:	002b883a 	mov	r21,zero
   2308c:	1002591e 	bne	r2,zero,239f4 <_dtoa_r+0xbfc>
   23090:	18800190 	cmplti	r2,r3,6
   23094:	1002961e 	bne	r2,zero,23af0 <_dtoa_r+0xcf8>
   23098:	18bfff04 	addi	r2,r3,-4
   2309c:	d8800215 	stw	r2,8(sp)
   230a0:	0021883a 	mov	r16,zero
   230a4:	d8c00217 	ldw	r3,8(sp)
   230a8:	18800120 	cmpeqi	r2,r3,4
   230ac:	10036d1e 	bne	r2,zero,23e64 <_dtoa_r+0x106c>
   230b0:	18800160 	cmpeqi	r2,r3,5
   230b4:	1003291e 	bne	r2,zero,23d5c <_dtoa_r+0xf64>
   230b8:	188000a0 	cmpeqi	r2,r3,2
   230bc:	10025926 	beq	r2,zero,23a24 <_dtoa_r+0xc2c>
   230c0:	d8000515 	stw	zero,20(sp)
   230c4:	d8801d17 	ldw	r2,116(sp)
   230c8:	0083340e 	bge	zero,r2,23d9c <_dtoa_r+0xfa4>
   230cc:	d8800b15 	stw	r2,44(sp)
   230d0:	d8800315 	stw	r2,12(sp)
   230d4:	100d883a 	mov	r6,r2
   230d8:	e0001115 	stw	zero,68(fp)
   230dc:	30800610 	cmplti	r2,r6,24
   230e0:	1004f61e 	bne	r2,zero,244bc <_dtoa_r+0x16c4>
   230e4:	00c00044 	movi	r3,1
   230e8:	00800104 	movi	r2,4
   230ec:	1085883a 	add	r2,r2,r2
   230f0:	11000504 	addi	r4,r2,20
   230f4:	180b883a 	mov	r5,r3
   230f8:	18c00044 	addi	r3,r3,1
   230fc:	313ffb2e 	bgeu	r6,r4,230ec <_dtoa_r+0x2f4>
   23100:	e1401115 	stw	r5,68(fp)
   23104:	e009883a 	mov	r4,fp
   23108:	00263f80 	call	263f8 <_Balloc>
   2310c:	d8800115 	stw	r2,4(sp)
   23110:	1004e326 	beq	r2,zero,244a0 <_dtoa_r+0x16a8>
   23114:	d8800117 	ldw	r2,4(sp)
   23118:	e0801015 	stw	r2,64(fp)
   2311c:	d8800317 	ldw	r2,12(sp)
   23120:	108003e8 	cmpgeui	r2,r2,15
   23124:	1001091e 	bne	r2,zero,2354c <_dtoa_r+0x754>
   23128:	80010826 	beq	r16,zero,2354c <_dtoa_r+0x754>
   2312c:	d9000617 	ldw	r4,24(sp)
   23130:	0103970e 	bge	zero,r4,23f90 <_dtoa_r+0x1198>
   23134:	208003cc 	andi	r2,r4,15
   23138:	100690fa 	slli	r3,r2,3
   2313c:	2029d13a 	srai	r20,r4,4
   23140:	008000f4 	movhi	r2,3
   23144:	10802704 	addi	r2,r2,156
   23148:	10c5883a 	add	r2,r2,r3
   2314c:	a0c0040c 	andi	r3,r20,16
   23150:	12800017 	ldw	r10,0(r2)
   23154:	12400117 	ldw	r9,4(r2)
   23158:	18033c26 	beq	r3,zero,23e4c <_dtoa_r+0x1054>
   2315c:	008000f4 	movhi	r2,3
   23160:	10801d04 	addi	r2,r2,116
   23164:	11800817 	ldw	r6,32(r2)
   23168:	11c00917 	ldw	r7,36(r2)
   2316c:	9809883a 	mov	r4,r19
   23170:	880b883a 	mov	r5,r17
   23174:	da400e15 	stw	r9,56(sp)
   23178:	da800d15 	stw	r10,52(sp)
   2317c:	002b7a00 	call	2b7a0 <__divdf3>
   23180:	da800d17 	ldw	r10,52(sp)
   23184:	da400e17 	ldw	r9,56(sp)
   23188:	a50003cc 	andi	r20,r20,15
   2318c:	d8800a15 	stw	r2,40(sp)
   23190:	d8c00c15 	stw	r3,48(sp)
   23194:	040000c4 	movi	r16,3
   23198:	a0001126 	beq	r20,zero,231e0 <_dtoa_r+0x3e8>
   2319c:	048000f4 	movhi	r18,3
   231a0:	94801d04 	addi	r18,r18,116
   231a4:	5009883a 	mov	r4,r10
   231a8:	480b883a 	mov	r5,r9
   231ac:	a180004c 	andi	r6,r20,1
   231b0:	30000626 	beq	r6,zero,231cc <_dtoa_r+0x3d4>
   231b4:	91800017 	ldw	r6,0(r18)
   231b8:	91c00117 	ldw	r7,4(r18)
   231bc:	84000044 	addi	r16,r16,1
   231c0:	002c2400 	call	2c240 <__muldf3>
   231c4:	1009883a 	mov	r4,r2
   231c8:	180b883a 	mov	r5,r3
   231cc:	a029d07a 	srai	r20,r20,1
   231d0:	94800204 	addi	r18,r18,8
   231d4:	a03ff51e 	bne	r20,zero,231ac <_dtoa_r+0x3b4>
   231d8:	2015883a 	mov	r10,r4
   231dc:	2813883a 	mov	r9,r5
   231e0:	d9000a17 	ldw	r4,40(sp)
   231e4:	d9400c17 	ldw	r5,48(sp)
   231e8:	500d883a 	mov	r6,r10
   231ec:	480f883a 	mov	r7,r9
   231f0:	002b7a00 	call	2b7a0 <__divdf3>
   231f4:	d8800a15 	stw	r2,40(sp)
   231f8:	1825883a 	mov	r18,r3
   231fc:	d8800817 	ldw	r2,32(sp)
   23200:	10000726 	beq	r2,zero,23220 <_dtoa_r+0x428>
   23204:	dd000a17 	ldw	r20,40(sp)
   23208:	000d883a 	mov	r6,zero
   2320c:	01cffc34 	movhi	r7,16368
   23210:	a009883a 	mov	r4,r20
   23214:	900b883a 	mov	r5,r18
   23218:	002c1580 	call	2c158 <__ledf2>
   2321c:	10044516 	blt	r2,zero,24334 <_dtoa_r+0x153c>
   23220:	8009883a 	mov	r4,r16
   23224:	002d2940 	call	2d294 <__floatsidf>
   23228:	d9800a17 	ldw	r6,40(sp)
   2322c:	900f883a 	mov	r7,r18
   23230:	1009883a 	mov	r4,r2
   23234:	180b883a 	mov	r5,r3
   23238:	002c2400 	call	2c240 <__muldf3>
   2323c:	000d883a 	mov	r6,zero
   23240:	01d00734 	movhi	r7,16412
   23244:	1009883a 	mov	r4,r2
   23248:	180b883a 	mov	r5,r3
   2324c:	002aeb00 	call	2aeb0 <__adddf3>
   23250:	1029883a 	mov	r20,r2
   23254:	00bf3034 	movhi	r2,64704
   23258:	1885883a 	add	r2,r3,r2
   2325c:	d8800c15 	stw	r2,48(sp)
   23260:	d8800317 	ldw	r2,12(sp)
   23264:	10032d26 	beq	r2,zero,23f1c <_dtoa_r+0x1124>
   23268:	d8800617 	ldw	r2,24(sp)
   2326c:	d8801015 	stw	r2,64(sp)
   23270:	d8800317 	ldw	r2,12(sp)
   23274:	d8800d15 	stw	r2,52(sp)
   23278:	d8800d17 	ldw	r2,52(sp)
   2327c:	dc000a17 	ldw	r16,40(sp)
   23280:	900b883a 	mov	r5,r18
   23284:	10bfffc4 	addi	r2,r2,-1
   23288:	100690fa 	slli	r3,r2,3
   2328c:	008000f4 	movhi	r2,3
   23290:	10802704 	addi	r2,r2,156
   23294:	10c5883a 	add	r2,r2,r3
   23298:	12c00017 	ldw	r11,0(r2)
   2329c:	13000117 	ldw	r12,4(r2)
   232a0:	8009883a 	mov	r4,r16
   232a4:	dac00e15 	stw	r11,56(sp)
   232a8:	db000a15 	stw	r12,40(sp)
   232ac:	002d2140 	call	2d214 <__fixdfsi>
   232b0:	1009883a 	mov	r4,r2
   232b4:	10800c04 	addi	r2,r2,48
   232b8:	d8800f15 	stw	r2,60(sp)
   232bc:	002d2940 	call	2d294 <__floatsidf>
   232c0:	8009883a 	mov	r4,r16
   232c4:	100d883a 	mov	r6,r2
   232c8:	180f883a 	mov	r7,r3
   232cc:	900b883a 	mov	r5,r18
   232d0:	002c8b40 	call	2c8b4 <__subdf3>
   232d4:	d9000117 	ldw	r4,4(sp)
   232d8:	dac00e17 	ldw	r11,56(sp)
   232dc:	db000a17 	ldw	r12,40(sp)
   232e0:	1825883a 	mov	r18,r3
   232e4:	d8c00517 	ldw	r3,20(sp)
   232e8:	22000044 	addi	r8,r4,1
   232ec:	da000e15 	stw	r8,56(sp)
   232f0:	1021883a 	mov	r16,r2
   232f4:	580d883a 	mov	r6,r11
   232f8:	600f883a 	mov	r7,r12
   232fc:	1803b226 	beq	r3,zero,241c8 <_dtoa_r+0x13d0>
   23300:	0009883a 	mov	r4,zero
   23304:	014ff834 	movhi	r5,16352
   23308:	002b7a00 	call	2b7a0 <__divdf3>
   2330c:	d9c00c17 	ldw	r7,48(sp)
   23310:	a00d883a 	mov	r6,r20
   23314:	1009883a 	mov	r4,r2
   23318:	180b883a 	mov	r5,r3
   2331c:	002c8b40 	call	2c8b4 <__subdf3>
   23320:	d9000117 	ldw	r4,4(sp)
   23324:	1029883a 	mov	r20,r2
   23328:	d8800f17 	ldw	r2,60(sp)
   2332c:	800d883a 	mov	r6,r16
   23330:	900f883a 	mov	r7,r18
   23334:	20800005 	stb	r2,0(r4)
   23338:	180b883a 	mov	r5,r3
   2333c:	a009883a 	mov	r4,r20
   23340:	d8c00a15 	stw	r3,40(sp)
   23344:	002c0700 	call	2c070 <__gedf2>
   23348:	da000e17 	ldw	r8,56(sp)
   2334c:	0083e516 	blt	zero,r2,242e4 <_dtoa_r+0x14ec>
   23350:	0005883a 	mov	r2,zero
   23354:	dd400e15 	stw	r21,56(sp)
   23358:	dd800f15 	stw	r22,60(sp)
   2335c:	ddc00c15 	stw	r23,48(sp)
   23360:	dd800d17 	ldw	r22,52(sp)
   23364:	402b883a 	mov	r21,r8
   23368:	dc400d15 	stw	r17,52(sp)
   2336c:	dc400a17 	ldw	r17,40(sp)
   23370:	dcc00a15 	stw	r19,40(sp)
   23374:	1027883a 	mov	r19,r2
   23378:	00002606 	br	23414 <_dtoa_r+0x61c>
   2337c:	9cc00044 	addi	r19,r19,1
   23380:	9d806d0e 	bge	r19,r22,23538 <_dtoa_r+0x740>
   23384:	a009883a 	mov	r4,r20
   23388:	880b883a 	mov	r5,r17
   2338c:	000d883a 	mov	r6,zero
   23390:	01d00934 	movhi	r7,16420
   23394:	002c2400 	call	2c240 <__muldf3>
   23398:	000d883a 	mov	r6,zero
   2339c:	01d00934 	movhi	r7,16420
   233a0:	8009883a 	mov	r4,r16
   233a4:	900b883a 	mov	r5,r18
   233a8:	1029883a 	mov	r20,r2
   233ac:	1823883a 	mov	r17,r3
   233b0:	002c2400 	call	2c240 <__muldf3>
   233b4:	180b883a 	mov	r5,r3
   233b8:	1009883a 	mov	r4,r2
   233bc:	1821883a 	mov	r16,r3
   233c0:	1025883a 	mov	r18,r2
   233c4:	002d2140 	call	2d214 <__fixdfsi>
   233c8:	1009883a 	mov	r4,r2
   233cc:	102f883a 	mov	r23,r2
   233d0:	002d2940 	call	2d294 <__floatsidf>
   233d4:	9009883a 	mov	r4,r18
   233d8:	800b883a 	mov	r5,r16
   233dc:	100d883a 	mov	r6,r2
   233e0:	180f883a 	mov	r7,r3
   233e4:	002c8b40 	call	2c8b4 <__subdf3>
   233e8:	ad400044 	addi	r21,r21,1
   233ec:	ba000c04 	addi	r8,r23,48
   233f0:	aa3fffc5 	stb	r8,-1(r21)
   233f4:	a00d883a 	mov	r6,r20
   233f8:	880f883a 	mov	r7,r17
   233fc:	1009883a 	mov	r4,r2
   23400:	180b883a 	mov	r5,r3
   23404:	1021883a 	mov	r16,r2
   23408:	1825883a 	mov	r18,r3
   2340c:	002c1580 	call	2c158 <__ledf2>
   23410:	10040516 	blt	r2,zero,24428 <_dtoa_r+0x1630>
   23414:	800d883a 	mov	r6,r16
   23418:	900f883a 	mov	r7,r18
   2341c:	0009883a 	mov	r4,zero
   23420:	014ffc34 	movhi	r5,16368
   23424:	002c8b40 	call	2c8b4 <__subdf3>
   23428:	a00d883a 	mov	r6,r20
   2342c:	880f883a 	mov	r7,r17
   23430:	1009883a 	mov	r4,r2
   23434:	180b883a 	mov	r5,r3
   23438:	002c1580 	call	2c158 <__ledf2>
   2343c:	103fcf0e 	bge	r2,zero,2337c <_dtoa_r+0x584>
   23440:	d8801017 	ldw	r2,64(sp)
   23444:	ddc00c17 	ldw	r23,48(sp)
   23448:	d9000117 	ldw	r4,4(sp)
   2344c:	a829883a 	mov	r20,r21
   23450:	14c00044 	addi	r19,r2,1
   23454:	00000106 	br	2345c <_dtoa_r+0x664>
   23458:	a103d826 	beq	r20,r4,243bc <_dtoa_r+0x15c4>
   2345c:	a0ffffc3 	ldbu	r3,-1(r20)
   23460:	a011883a 	mov	r8,r20
   23464:	a53fffc4 	addi	r20,r20,-1
   23468:	18803fcc 	andi	r2,r3,255
   2346c:	1080201c 	xori	r2,r2,128
   23470:	10bfe004 	addi	r2,r2,-128
   23474:	10800e60 	cmpeqi	r2,r2,57
   23478:	103ff71e 	bne	r2,zero,23458 <_dtoa_r+0x660>
   2347c:	18c00044 	addi	r3,r3,1
   23480:	a0c00005 	stb	r3,0(r20)
   23484:	dcc00215 	stw	r19,8(sp)
   23488:	00014406 	br	2399c <_dtoa_r+0xba4>
   2348c:	04600034 	movhi	r17,32768
   23490:	8c7fffc4 	addi	r17,r17,-1
   23494:	9462703a 	and	r17,r18,r17
   23498:	00800044 	movi	r2,1
   2349c:	8825883a 	mov	r18,r17
   234a0:	80800015 	stw	r2,0(r16)
   234a4:	00dffc34 	movhi	r3,32752
   234a8:	909ffc2c 	andhi	r2,r18,32752
   234ac:	10fe721e 	bne	r2,r3,22e78 <_dtoa_r+0x80>
   234b0:	d9001e17 	ldw	r4,120(sp)
   234b4:	00800434 	movhi	r2,16
   234b8:	10bfffc4 	addi	r2,r2,-1
   234bc:	9084703a 	and	r2,r18,r2
   234c0:	00c9c3c4 	movi	r3,9999
   234c4:	20c00015 	stw	r3,0(r4)
   234c8:	14e6b03a 	or	r19,r2,r19
   234cc:	9800141e 	bne	r19,zero,23520 <_dtoa_r+0x728>
   234d0:	d8802017 	ldw	r2,128(sp)
   234d4:	10041126 	beq	r2,zero,2451c <_dtoa_r+0x1724>
   234d8:	008000f4 	movhi	r2,3
   234dc:	1007883a 	mov	r3,r2
   234e0:	18ffea04 	addi	r3,r3,-88
   234e4:	008000f4 	movhi	r2,3
   234e8:	d8c00115 	stw	r3,4(sp)
   234ec:	10bfec04 	addi	r2,r2,-80
   234f0:	d8c02017 	ldw	r3,128(sp)
   234f4:	18800015 	stw	r2,0(r3)
   234f8:	003e7106 	br	22ec0 <_dtoa_r+0xc8>
   234fc:	01400434 	movhi	r5,16
   23500:	297fffc4 	addi	r5,r5,-1
   23504:	894a703a 	and	r5,r17,r5
   23508:	dd001117 	ldw	r20,68(sp)
   2350c:	9809883a 	mov	r4,r19
   23510:	294ffc34 	orhi	r5,r5,16368
   23514:	843f0044 	addi	r16,r16,-1023
   23518:	d8000915 	stw	zero,36(sp)
   2351c:	003e9206 	br	22f68 <_dtoa_r+0x170>
   23520:	d8802017 	ldw	r2,128(sp)
   23524:	1002061e 	bne	r2,zero,23d40 <_dtoa_r+0xf48>
   23528:	008000f4 	movhi	r2,3
   2352c:	10bfe904 	addi	r2,r2,-92
   23530:	d8800115 	stw	r2,4(sp)
   23534:	003e6206 	br	22ec0 <_dtoa_r+0xc8>
   23538:	dd400e17 	ldw	r21,56(sp)
   2353c:	dd800f17 	ldw	r22,60(sp)
   23540:	ddc00c17 	ldw	r23,48(sp)
   23544:	dc400d17 	ldw	r17,52(sp)
   23548:	dcc00a17 	ldw	r19,40(sp)
   2354c:	d8801217 	ldw	r2,72(sp)
   23550:	10006e16 	blt	r2,zero,2370c <_dtoa_r+0x914>
   23554:	d9000617 	ldw	r4,24(sp)
   23558:	20c003c8 	cmpgei	r3,r4,15
   2355c:	18006b1e 	bne	r3,zero,2370c <_dtoa_r+0x914>
   23560:	200690fa 	slli	r3,r4,3
   23564:	008000f4 	movhi	r2,3
   23568:	10802704 	addi	r2,r2,156
   2356c:	10c5883a 	add	r2,r2,r3
   23570:	14000017 	ldw	r16,0(r2)
   23574:	14800117 	ldw	r18,4(r2)
   23578:	d8801d17 	ldw	r2,116(sp)
   2357c:	1000150e 	bge	r2,zero,235d4 <_dtoa_r+0x7dc>
   23580:	d8800317 	ldw	r2,12(sp)
   23584:	00801316 	blt	zero,r2,235d4 <_dtoa_r+0x7dc>
   23588:	d8800317 	ldw	r2,12(sp)
   2358c:	1002771e 	bne	r2,zero,23f6c <_dtoa_r+0x1174>
   23590:	8009883a 	mov	r4,r16
   23594:	000d883a 	mov	r6,zero
   23598:	01d00534 	movhi	r7,16404
   2359c:	900b883a 	mov	r5,r18
   235a0:	002c2400 	call	2c240 <__muldf3>
   235a4:	100d883a 	mov	r6,r2
   235a8:	180f883a 	mov	r7,r3
   235ac:	9809883a 	mov	r4,r19
   235b0:	880b883a 	mov	r5,r17
   235b4:	002c1580 	call	2c158 <__ledf2>
   235b8:	0029883a 	mov	r20,zero
   235bc:	0021883a 	mov	r16,zero
   235c0:	00820916 	blt	zero,r2,23de8 <_dtoa_r+0xff0>
   235c4:	d8801d17 	ldw	r2,116(sp)
   235c8:	da000117 	ldw	r8,4(sp)
   235cc:	00a6303a 	nor	r19,zero,r2
   235d0:	00020b06 	br	23e00 <_dtoa_r+0x1008>
   235d4:	800d883a 	mov	r6,r16
   235d8:	900f883a 	mov	r7,r18
   235dc:	9809883a 	mov	r4,r19
   235e0:	880b883a 	mov	r5,r17
   235e4:	002b7a00 	call	2b7a0 <__divdf3>
   235e8:	180b883a 	mov	r5,r3
   235ec:	1009883a 	mov	r4,r2
   235f0:	002d2140 	call	2d214 <__fixdfsi>
   235f4:	1009883a 	mov	r4,r2
   235f8:	102b883a 	mov	r21,r2
   235fc:	002d2940 	call	2d294 <__floatsidf>
   23600:	800d883a 	mov	r6,r16
   23604:	900f883a 	mov	r7,r18
   23608:	1009883a 	mov	r4,r2
   2360c:	180b883a 	mov	r5,r3
   23610:	002c2400 	call	2c240 <__muldf3>
   23614:	100d883a 	mov	r6,r2
   23618:	9809883a 	mov	r4,r19
   2361c:	880b883a 	mov	r5,r17
   23620:	180f883a 	mov	r7,r3
   23624:	002c8b40 	call	2c8b4 <__subdf3>
   23628:	d9800117 	ldw	r6,4(sp)
   2362c:	dd800317 	ldw	r22,12(sp)
   23630:	1009883a 	mov	r4,r2
   23634:	a8800c04 	addi	r2,r21,48
   23638:	30800005 	stb	r2,0(r6)
   2363c:	b0800060 	cmpeqi	r2,r22,1
   23640:	180b883a 	mov	r5,r3
   23644:	35000044 	addi	r20,r6,1
   23648:	10029c1e 	bne	r2,zero,240bc <_dtoa_r+0x12c4>
   2364c:	04400044 	movi	r17,1
   23650:	ddc00215 	stw	r23,8(sp)
   23654:	00001c06 	br	236c8 <_dtoa_r+0x8d0>
   23658:	800d883a 	mov	r6,r16
   2365c:	900f883a 	mov	r7,r18
   23660:	a809883a 	mov	r4,r21
   23664:	980b883a 	mov	r5,r19
   23668:	002b7a00 	call	2b7a0 <__divdf3>
   2366c:	180b883a 	mov	r5,r3
   23670:	1009883a 	mov	r4,r2
   23674:	002d2140 	call	2d214 <__fixdfsi>
   23678:	1009883a 	mov	r4,r2
   2367c:	102f883a 	mov	r23,r2
   23680:	002d2940 	call	2d294 <__floatsidf>
   23684:	800d883a 	mov	r6,r16
   23688:	900f883a 	mov	r7,r18
   2368c:	1009883a 	mov	r4,r2
   23690:	180b883a 	mov	r5,r3
   23694:	002c2400 	call	2c240 <__muldf3>
   23698:	a809883a 	mov	r4,r21
   2369c:	980b883a 	mov	r5,r19
   236a0:	100d883a 	mov	r6,r2
   236a4:	180f883a 	mov	r7,r3
   236a8:	002c8b40 	call	2c8b4 <__subdf3>
   236ac:	b9000c04 	addi	r4,r23,48
   236b0:	a1000005 	stb	r4,0(r20)
   236b4:	8c400044 	addi	r17,r17,1
   236b8:	a5000044 	addi	r20,r20,1
   236bc:	1009883a 	mov	r4,r2
   236c0:	180b883a 	mov	r5,r3
   236c4:	b4427b26 	beq	r22,r17,240b4 <_dtoa_r+0x12bc>
   236c8:	000d883a 	mov	r6,zero
   236cc:	01d00934 	movhi	r7,16420
   236d0:	002c2400 	call	2c240 <__muldf3>
   236d4:	000d883a 	mov	r6,zero
   236d8:	000f883a 	mov	r7,zero
   236dc:	1009883a 	mov	r4,r2
   236e0:	180b883a 	mov	r5,r3
   236e4:	102b883a 	mov	r21,r2
   236e8:	1827883a 	mov	r19,r3
   236ec:	002bff00 	call	2bff0 <__eqdf2>
   236f0:	103fd91e 	bne	r2,zero,23658 <_dtoa_r+0x860>
   236f4:	d8800617 	ldw	r2,24(sp)
   236f8:	ddc00217 	ldw	r23,8(sp)
   236fc:	a011883a 	mov	r8,r20
   23700:	10800044 	addi	r2,r2,1
   23704:	d8800215 	stw	r2,8(sp)
   23708:	0000a406 	br	2399c <_dtoa_r+0xba4>
   2370c:	d8c00517 	ldw	r3,20(sp)
   23710:	1800e726 	beq	r3,zero,23ab0 <_dtoa_r+0xcb8>
   23714:	d8c00217 	ldw	r3,8(sp)
   23718:	18c00088 	cmpgei	r3,r3,2
   2371c:	1801e526 	beq	r3,zero,23eb4 <_dtoa_r+0x10bc>
   23720:	d8800317 	ldw	r2,12(sp)
   23724:	153fffc4 	addi	r20,r2,-1
   23728:	d8800717 	ldw	r2,28(sp)
   2372c:	1501c50e 	bge	r2,r20,23e44 <_dtoa_r+0x104c>
   23730:	d8800717 	ldw	r2,28(sp)
   23734:	dd000715 	stw	r20,28(sp)
   23738:	a085c83a 	sub	r2,r20,r2
   2373c:	a8ab883a 	add	r21,r21,r2
   23740:	0029883a 	mov	r20,zero
   23744:	d8800317 	ldw	r2,12(sp)
   23748:	10028b16 	blt	r2,zero,24178 <_dtoa_r+0x1380>
   2374c:	d8c00417 	ldw	r3,16(sp)
   23750:	b0ad883a 	add	r22,r22,r2
   23754:	1885883a 	add	r2,r3,r2
   23758:	1825883a 	mov	r18,r3
   2375c:	d8800415 	stw	r2,16(sp)
   23760:	01400044 	movi	r5,1
   23764:	e009883a 	mov	r4,fp
   23768:	00268440 	call	26844 <__i2b>
   2376c:	1021883a 	mov	r16,r2
   23770:	0480080e 	bge	zero,r18,23794 <_dtoa_r+0x99c>
   23774:	0580070e 	bge	zero,r22,23794 <_dtoa_r+0x99c>
   23778:	9005883a 	mov	r2,r18
   2377c:	b481a916 	blt	r22,r18,23e24 <_dtoa_r+0x102c>
   23780:	d8c00417 	ldw	r3,16(sp)
   23784:	90a5c83a 	sub	r18,r18,r2
   23788:	b0adc83a 	sub	r22,r22,r2
   2378c:	1887c83a 	sub	r3,r3,r2
   23790:	d8c00415 	stw	r3,16(sp)
   23794:	d8800717 	ldw	r2,28(sp)
   23798:	10001526 	beq	r2,zero,237f0 <_dtoa_r+0x9f8>
   2379c:	d8800517 	ldw	r2,20(sp)
   237a0:	1001f526 	beq	r2,zero,23f78 <_dtoa_r+0x1180>
   237a4:	05000f0e 	bge	zero,r20,237e4 <_dtoa_r+0x9ec>
   237a8:	800b883a 	mov	r5,r16
   237ac:	a00d883a 	mov	r6,r20
   237b0:	e009883a 	mov	r4,fp
   237b4:	0026b480 	call	26b48 <__pow5mult>
   237b8:	b80d883a 	mov	r6,r23
   237bc:	100b883a 	mov	r5,r2
   237c0:	e009883a 	mov	r4,fp
   237c4:	1021883a 	mov	r16,r2
   237c8:	00268f40 	call	268f4 <__multiply>
   237cc:	b80b883a 	mov	r5,r23
   237d0:	e009883a 	mov	r4,fp
   237d4:	d8800915 	stw	r2,36(sp)
   237d8:	002649c0 	call	2649c <_Bfree>
   237dc:	d8800917 	ldw	r2,36(sp)
   237e0:	102f883a 	mov	r23,r2
   237e4:	d8800717 	ldw	r2,28(sp)
   237e8:	150dc83a 	sub	r6,r2,r20
   237ec:	15025d1e 	bne	r2,r20,24164 <_dtoa_r+0x136c>
   237f0:	01400044 	movi	r5,1
   237f4:	e009883a 	mov	r4,fp
   237f8:	00268440 	call	26844 <__i2b>
   237fc:	1029883a 	mov	r20,r2
   23800:	0540bd16 	blt	zero,r21,23af8 <_dtoa_r+0xd00>
   23804:	d8800217 	ldw	r2,8(sp)
   23808:	10800088 	cmpgei	r2,r2,2
   2380c:	10015626 	beq	r2,zero,23d68 <_dtoa_r+0xf70>
   23810:	0023883a 	mov	r17,zero
   23814:	00800044 	movi	r2,1
   23818:	a800c01e 	bne	r21,zero,23b1c <_dtoa_r+0xd24>
   2381c:	1585883a 	add	r2,r2,r22
   23820:	108007cc 	andi	r2,r2,31
   23824:	1000ac26 	beq	r2,zero,23ad8 <_dtoa_r+0xce0>
   23828:	00c00804 	movi	r3,32
   2382c:	1887c83a 	sub	r3,r3,r2
   23830:	19000150 	cmplti	r4,r3,5
   23834:	20033d1e 	bne	r4,zero,2452c <_dtoa_r+0x1734>
   23838:	00c00704 	movi	r3,28
   2383c:	1885c83a 	sub	r2,r3,r2
   23840:	d8c00417 	ldw	r3,16(sp)
   23844:	90a5883a 	add	r18,r18,r2
   23848:	b0ad883a 	add	r22,r22,r2
   2384c:	1887883a 	add	r3,r3,r2
   23850:	d8c00415 	stw	r3,16(sp)
   23854:	d8800417 	ldw	r2,16(sp)
   23858:	00809916 	blt	zero,r2,23ac0 <_dtoa_r+0xcc8>
   2385c:	0580050e 	bge	zero,r22,23874 <_dtoa_r+0xa7c>
   23860:	a00b883a 	mov	r5,r20
   23864:	b00d883a 	mov	r6,r22
   23868:	e009883a 	mov	r4,fp
   2386c:	0026c900 	call	26c90 <__lshift>
   23870:	1029883a 	mov	r20,r2
   23874:	d8800817 	ldw	r2,32(sp)
   23878:	10011d1e 	bne	r2,zero,23cf0 <_dtoa_r+0xef8>
   2387c:	d8800317 	ldw	r2,12(sp)
   23880:	00810a0e 	bge	zero,r2,23cac <_dtoa_r+0xeb4>
   23884:	d8800517 	ldw	r2,20(sp)
   23888:	1000b71e 	bne	r2,zero,23b68 <_dtoa_r+0xd70>
   2388c:	d8800617 	ldw	r2,24(sp)
   23890:	10800044 	addi	r2,r2,1
   23894:	d8800215 	stw	r2,8(sp)
   23898:	dc800317 	ldw	r18,12(sp)
   2389c:	dd400117 	ldw	r21,4(sp)
   238a0:	04400044 	movi	r17,1
   238a4:	00000706 	br	238c4 <_dtoa_r+0xacc>
   238a8:	b80b883a 	mov	r5,r23
   238ac:	000f883a 	mov	r7,zero
   238b0:	01800284 	movi	r6,10
   238b4:	e009883a 	mov	r4,fp
   238b8:	00264c00 	call	264c0 <__multadd>
   238bc:	102f883a 	mov	r23,r2
   238c0:	8c400044 	addi	r17,r17,1
   238c4:	a00b883a 	mov	r5,r20
   238c8:	b809883a 	mov	r4,r23
   238cc:	0022bfc0 	call	22bfc <quorem>
   238d0:	14c00c04 	addi	r19,r2,48
   238d4:	ac45883a 	add	r2,r21,r17
   238d8:	14ffffc5 	stb	r19,-1(r2)
   238dc:	8cbff216 	blt	r17,r18,238a8 <_dtoa_r+0xab0>
   238e0:	d8800317 	ldw	r2,12(sp)
   238e4:	00815d0e 	bge	zero,r2,23e5c <_dtoa_r+0x1064>
   238e8:	d8c00117 	ldw	r3,4(sp)
   238ec:	0023883a 	mov	r17,zero
   238f0:	1891883a 	add	r8,r3,r2
   238f4:	b80b883a 	mov	r5,r23
   238f8:	01800044 	movi	r6,1
   238fc:	e009883a 	mov	r4,fp
   23900:	da000315 	stw	r8,12(sp)
   23904:	0026c900 	call	26c90 <__lshift>
   23908:	a00b883a 	mov	r5,r20
   2390c:	1009883a 	mov	r4,r2
   23910:	102f883a 	mov	r23,r2
   23914:	0026e180 	call	26e18 <__mcmp>
   23918:	da000317 	ldw	r8,12(sp)
   2391c:	0081540e 	bge	zero,r2,23e70 <_dtoa_r+0x1078>
   23920:	413fffc3 	ldbu	r4,-1(r8)
   23924:	d9400117 	ldw	r5,4(sp)
   23928:	00000306 	br	23938 <_dtoa_r+0xb40>
   2392c:	28c15a26 	beq	r5,r3,23e98 <_dtoa_r+0x10a0>
   23930:	193fffc3 	ldbu	r4,-1(r3)
   23934:	1811883a 	mov	r8,r3
   23938:	20803fcc 	andi	r2,r4,255
   2393c:	1080201c 	xori	r2,r2,128
   23940:	10bfe004 	addi	r2,r2,-128
   23944:	10800e60 	cmpeqi	r2,r2,57
   23948:	40ffffc4 	addi	r3,r8,-1
   2394c:	103ff71e 	bne	r2,zero,2392c <_dtoa_r+0xb34>
   23950:	21000044 	addi	r4,r4,1
   23954:	19000005 	stb	r4,0(r3)
   23958:	a00b883a 	mov	r5,r20
   2395c:	e009883a 	mov	r4,fp
   23960:	da000315 	stw	r8,12(sp)
   23964:	002649c0 	call	2649c <_Bfree>
   23968:	da000317 	ldw	r8,12(sp)
   2396c:	80000b26 	beq	r16,zero,2399c <_dtoa_r+0xba4>
   23970:	88000526 	beq	r17,zero,23988 <_dtoa_r+0xb90>
   23974:	8c000426 	beq	r17,r16,23988 <_dtoa_r+0xb90>
   23978:	880b883a 	mov	r5,r17
   2397c:	e009883a 	mov	r4,fp
   23980:	002649c0 	call	2649c <_Bfree>
   23984:	da000317 	ldw	r8,12(sp)
   23988:	800b883a 	mov	r5,r16
   2398c:	e009883a 	mov	r4,fp
   23990:	da000315 	stw	r8,12(sp)
   23994:	002649c0 	call	2649c <_Bfree>
   23998:	da000317 	ldw	r8,12(sp)
   2399c:	b80b883a 	mov	r5,r23
   239a0:	e009883a 	mov	r4,fp
   239a4:	da000315 	stw	r8,12(sp)
   239a8:	002649c0 	call	2649c <_Bfree>
   239ac:	da000317 	ldw	r8,12(sp)
   239b0:	d8801e17 	ldw	r2,120(sp)
   239b4:	d8c00217 	ldw	r3,8(sp)
   239b8:	40000005 	stb	zero,0(r8)
   239bc:	10c00015 	stw	r3,0(r2)
   239c0:	d8802017 	ldw	r2,128(sp)
   239c4:	103d3e26 	beq	r2,zero,22ec0 <_dtoa_r+0xc8>
   239c8:	12000015 	stw	r8,0(r2)
   239cc:	003d3c06 	br	22ec0 <_dtoa_r+0xc8>
   239d0:	d8000815 	stw	zero,32(sp)
   239d4:	b0002316 	blt	r22,zero,23a64 <_dtoa_r+0xc6c>
   239d8:	d8000415 	stw	zero,16(sp)
   239dc:	d8c00217 	ldw	r3,8(sp)
   239e0:	dd400615 	stw	r21,24(sp)
   239e4:	d8000715 	stw	zero,28(sp)
   239e8:	188002a8 	cmpgeui	r2,r3,10
   239ec:	b56d883a 	add	r22,r22,r21
   239f0:	103da726 	beq	r2,zero,23090 <_dtoa_r+0x298>
   239f4:	00800044 	movi	r2,1
   239f8:	d8800515 	stw	r2,20(sp)
   239fc:	00bfffc4 	movi	r2,-1
   23a00:	04000044 	movi	r16,1
   23a04:	d8000215 	stw	zero,8(sp)
   23a08:	d8800315 	stw	r2,12(sp)
   23a0c:	d8001d15 	stw	zero,116(sp)
   23a10:	d8800317 	ldw	r2,12(sp)
   23a14:	e0001115 	stw	zero,68(fp)
   23a18:	000b883a 	mov	r5,zero
   23a1c:	d8800b15 	stw	r2,44(sp)
   23a20:	003db806 	br	23104 <_dtoa_r+0x30c>
   23a24:	188000e0 	cmpeqi	r2,r3,3
   23a28:	d8000515 	stw	zero,20(sp)
   23a2c:	1002a526 	beq	r2,zero,244c4 <_dtoa_r+0x16cc>
   23a30:	d8801d17 	ldw	r2,116(sp)
   23a34:	d8c00617 	ldw	r3,24(sp)
   23a38:	10c5883a 	add	r2,r2,r3
   23a3c:	d8800b15 	stw	r2,44(sp)
   23a40:	10800044 	addi	r2,r2,1
   23a44:	d8800315 	stw	r2,12(sp)
   23a48:	100d883a 	mov	r6,r2
   23a4c:	00bda216 	blt	zero,r2,230d8 <_dtoa_r+0x2e0>
   23a50:	01800044 	movi	r6,1
   23a54:	003da006 	br	230d8 <_dtoa_r+0x2e0>
   23a58:	00800044 	movi	r2,1
   23a5c:	d8800815 	stw	r2,32(sp)
   23a60:	b03d7f0e 	bge	r22,zero,23060 <_dtoa_r+0x268>
   23a64:	00800044 	movi	r2,1
   23a68:	1405c83a 	sub	r2,r2,r16
   23a6c:	d8800415 	stw	r2,16(sp)
   23a70:	002d883a 	mov	r22,zero
   23a74:	003d7b06 	br	23064 <_dtoa_r+0x26c>
   23a78:	a809883a 	mov	r4,r21
   23a7c:	002d2940 	call	2d294 <__floatsidf>
   23a80:	900d883a 	mov	r6,r18
   23a84:	b00f883a 	mov	r7,r22
   23a88:	1009883a 	mov	r4,r2
   23a8c:	180b883a 	mov	r5,r3
   23a90:	002bff00 	call	2bff0 <__eqdf2>
   23a94:	103d6126 	beq	r2,zero,2301c <_dtoa_r+0x224>
   23a98:	ad7fffc4 	addi	r21,r21,-1
   23a9c:	003d5f06 	br	2301c <_dtoa_r+0x224>
   23aa0:	008000f4 	movhi	r2,3
   23aa4:	10bfe004 	addi	r2,r2,-128
   23aa8:	d8800115 	stw	r2,4(sp)
   23aac:	003d0406 	br	22ec0 <_dtoa_r+0xc8>
   23ab0:	dd000717 	ldw	r20,28(sp)
   23ab4:	dc800417 	ldw	r18,16(sp)
   23ab8:	0021883a 	mov	r16,zero
   23abc:	003f2c06 	br	23770 <_dtoa_r+0x978>
   23ac0:	b80b883a 	mov	r5,r23
   23ac4:	100d883a 	mov	r6,r2
   23ac8:	e009883a 	mov	r4,fp
   23acc:	0026c900 	call	26c90 <__lshift>
   23ad0:	102f883a 	mov	r23,r2
   23ad4:	003f6106 	br	2385c <_dtoa_r+0xa64>
   23ad8:	00800704 	movi	r2,28
   23adc:	003f5806 	br	23840 <_dtoa_r+0xa48>
   23ae0:	01000804 	movi	r4,32
   23ae4:	2089c83a 	sub	r4,r4,r2
   23ae8:	9908983a 	sll	r4,r19,r4
   23aec:	003d1706 	br	22f4c <_dtoa_r+0x154>
   23af0:	04000044 	movi	r16,1
   23af4:	003d6b06 	br	230a4 <_dtoa_r+0x2ac>
   23af8:	100b883a 	mov	r5,r2
   23afc:	a80d883a 	mov	r6,r21
   23b00:	e009883a 	mov	r4,fp
   23b04:	0026b480 	call	26b48 <__pow5mult>
   23b08:	d8c00217 	ldw	r3,8(sp)
   23b0c:	1029883a 	mov	r20,r2
   23b10:	18c00090 	cmplti	r3,r3,2
   23b14:	18014b1e 	bne	r3,zero,24044 <_dtoa_r+0x124c>
   23b18:	0023883a 	mov	r17,zero
   23b1c:	a0800417 	ldw	r2,16(r20)
   23b20:	10800104 	addi	r2,r2,4
   23b24:	100490ba 	slli	r2,r2,2
   23b28:	a085883a 	add	r2,r20,r2
   23b2c:	11000017 	ldw	r4,0(r2)
   23b30:	00267300 	call	26730 <__hi0bits>
   23b34:	00c00804 	movi	r3,32
   23b38:	1885c83a 	sub	r2,r3,r2
   23b3c:	003f3706 	br	2381c <_dtoa_r+0xa24>
   23b40:	800b883a 	mov	r5,r16
   23b44:	000f883a 	mov	r7,zero
   23b48:	01800284 	movi	r6,10
   23b4c:	e009883a 	mov	r4,fp
   23b50:	00264c00 	call	264c0 <__multadd>
   23b54:	1021883a 	mov	r16,r2
   23b58:	d8800b17 	ldw	r2,44(sp)
   23b5c:	0082460e 	bge	zero,r2,24478 <_dtoa_r+0x1680>
   23b60:	dd400615 	stw	r21,24(sp)
   23b64:	d8800315 	stw	r2,12(sp)
   23b68:	0480b016 	blt	zero,r18,23e2c <_dtoa_r+0x1034>
   23b6c:	88016c1e 	bne	r17,zero,24120 <_dtoa_r+0x1328>
   23b70:	8025883a 	mov	r18,r16
   23b74:	dd800117 	ldw	r22,4(sp)
   23b78:	d9000317 	ldw	r4,12(sp)
   23b7c:	98c0004c 	andi	r3,r19,1
   23b80:	b0bfffc4 	addi	r2,r22,-1
   23b84:	1105883a 	add	r2,r2,r4
   23b88:	d8800515 	stw	r2,20(sp)
   23b8c:	d8800217 	ldw	r2,8(sp)
   23b90:	d8c00815 	stw	r3,32(sp)
   23b94:	1884b03a 	or	r2,r3,r2
   23b98:	d8800715 	stw	r2,28(sp)
   23b9c:	00002b06 	br	23c4c <_dtoa_r+0xe54>
   23ba0:	b809883a 	mov	r4,r23
   23ba4:	d9400415 	stw	r5,16(sp)
   23ba8:	0026e180 	call	26e18 <__mcmp>
   23bac:	d9400417 	ldw	r5,16(sp)
   23bb0:	e009883a 	mov	r4,fp
   23bb4:	d8800315 	stw	r2,12(sp)
   23bb8:	002649c0 	call	2649c <_Bfree>
   23bbc:	d8800317 	ldw	r2,12(sp)
   23bc0:	1000021e 	bne	r2,zero,23bcc <_dtoa_r+0xdd4>
   23bc4:	d8c00717 	ldw	r3,28(sp)
   23bc8:	18021d26 	beq	r3,zero,24440 <_dtoa_r+0x1648>
   23bcc:	b2000044 	addi	r8,r22,1
   23bd0:	da000315 	stw	r8,12(sp)
   23bd4:	88012116 	blt	r17,zero,2405c <_dtoa_r+0x1264>
   23bd8:	d8c00217 	ldw	r3,8(sp)
   23bdc:	88e2b03a 	or	r17,r17,r3
   23be0:	d8c00817 	ldw	r3,32(sp)
   23be4:	1c62b03a 	or	r17,r3,r17
   23be8:	88011c26 	beq	r17,zero,2405c <_dtoa_r+0x1264>
   23bec:	00816616 	blt	zero,r2,24188 <_dtoa_r+0x1390>
   23bf0:	d8800517 	ldw	r2,20(sp)
   23bf4:	b4c00005 	stb	r19,0(r22)
   23bf8:	15816d26 	beq	r2,r22,241b0 <_dtoa_r+0x13b8>
   23bfc:	b80b883a 	mov	r5,r23
   23c00:	000f883a 	mov	r7,zero
   23c04:	01800284 	movi	r6,10
   23c08:	e009883a 	mov	r4,fp
   23c0c:	00264c00 	call	264c0 <__multadd>
   23c10:	102f883a 	mov	r23,r2
   23c14:	800b883a 	mov	r5,r16
   23c18:	000f883a 	mov	r7,zero
   23c1c:	01800284 	movi	r6,10
   23c20:	e009883a 	mov	r4,fp
   23c24:	84801d26 	beq	r16,r18,23c9c <_dtoa_r+0xea4>
   23c28:	00264c00 	call	264c0 <__multadd>
   23c2c:	900b883a 	mov	r5,r18
   23c30:	000f883a 	mov	r7,zero
   23c34:	01800284 	movi	r6,10
   23c38:	e009883a 	mov	r4,fp
   23c3c:	1021883a 	mov	r16,r2
   23c40:	00264c00 	call	264c0 <__multadd>
   23c44:	1025883a 	mov	r18,r2
   23c48:	dd800317 	ldw	r22,12(sp)
   23c4c:	a00b883a 	mov	r5,r20
   23c50:	b809883a 	mov	r4,r23
   23c54:	0022bfc0 	call	22bfc <quorem>
   23c58:	800b883a 	mov	r5,r16
   23c5c:	b809883a 	mov	r4,r23
   23c60:	102b883a 	mov	r21,r2
   23c64:	0026e180 	call	26e18 <__mcmp>
   23c68:	a00b883a 	mov	r5,r20
   23c6c:	900d883a 	mov	r6,r18
   23c70:	e009883a 	mov	r4,fp
   23c74:	1023883a 	mov	r17,r2
   23c78:	0026e700 	call	26e70 <__mdiff>
   23c7c:	100b883a 	mov	r5,r2
   23c80:	10800317 	ldw	r2,12(r2)
   23c84:	acc00c04 	addi	r19,r21,48
   23c88:	103fc526 	beq	r2,zero,23ba0 <_dtoa_r+0xda8>
   23c8c:	e009883a 	mov	r4,fp
   23c90:	002649c0 	call	2649c <_Bfree>
   23c94:	00800044 	movi	r2,1
   23c98:	003fcc06 	br	23bcc <_dtoa_r+0xdd4>
   23c9c:	00264c00 	call	264c0 <__multadd>
   23ca0:	1021883a 	mov	r16,r2
   23ca4:	1025883a 	mov	r18,r2
   23ca8:	003fe706 	br	23c48 <_dtoa_r+0xe50>
   23cac:	d8800217 	ldw	r2,8(sp)
   23cb0:	108000d0 	cmplti	r2,r2,3
   23cb4:	10004026 	beq	r2,zero,23db8 <_dtoa_r+0xfc0>
   23cb8:	d8800517 	ldw	r2,20(sp)
   23cbc:	103faa1e 	bne	r2,zero,23b68 <_dtoa_r+0xd70>
   23cc0:	a00b883a 	mov	r5,r20
   23cc4:	b809883a 	mov	r4,r23
   23cc8:	0022bfc0 	call	22bfc <quorem>
   23ccc:	14c00c04 	addi	r19,r2,48
   23cd0:	d8800117 	ldw	r2,4(sp)
   23cd4:	0023883a 	mov	r17,zero
   23cd8:	12000044 	addi	r8,r2,1
   23cdc:	14c00005 	stb	r19,0(r2)
   23ce0:	d8800617 	ldw	r2,24(sp)
   23ce4:	10800044 	addi	r2,r2,1
   23ce8:	d8800215 	stw	r2,8(sp)
   23cec:	003f0106 	br	238f4 <_dtoa_r+0xafc>
   23cf0:	a00b883a 	mov	r5,r20
   23cf4:	b809883a 	mov	r4,r23
   23cf8:	0026e180 	call	26e18 <__mcmp>
   23cfc:	103edf0e 	bge	r2,zero,2387c <_dtoa_r+0xa84>
   23d00:	b80b883a 	mov	r5,r23
   23d04:	000f883a 	mov	r7,zero
   23d08:	01800284 	movi	r6,10
   23d0c:	e009883a 	mov	r4,fp
   23d10:	00264c00 	call	264c0 <__multadd>
   23d14:	d8c00617 	ldw	r3,24(sp)
   23d18:	102f883a 	mov	r23,r2
   23d1c:	d8800517 	ldw	r2,20(sp)
   23d20:	1d7fffc4 	addi	r21,r3,-1
   23d24:	103f861e 	bne	r2,zero,23b40 <_dtoa_r+0xd48>
   23d28:	d8800b17 	ldw	r2,44(sp)
   23d2c:	0081cb0e 	bge	zero,r2,2445c <_dtoa_r+0x1664>
   23d30:	d8c00617 	ldw	r3,24(sp)
   23d34:	d8800315 	stw	r2,12(sp)
   23d38:	d8c00215 	stw	r3,8(sp)
   23d3c:	003ed606 	br	23898 <_dtoa_r+0xaa0>
   23d40:	008000f4 	movhi	r2,3
   23d44:	1007883a 	mov	r3,r2
   23d48:	18ffe904 	addi	r3,r3,-92
   23d4c:	008000f4 	movhi	r2,3
   23d50:	d8c00115 	stw	r3,4(sp)
   23d54:	10bfe9c4 	addi	r2,r2,-89
   23d58:	003de506 	br	234f0 <_dtoa_r+0x6f8>
   23d5c:	00800044 	movi	r2,1
   23d60:	d8800515 	stw	r2,20(sp)
   23d64:	003f3206 	br	23a30 <_dtoa_r+0xc38>
   23d68:	983ea91e 	bne	r19,zero,23810 <_dtoa_r+0xa18>
   23d6c:	00800434 	movhi	r2,16
   23d70:	10bfffc4 	addi	r2,r2,-1
   23d74:	8884703a 	and	r2,r17,r2
   23d78:	103ea51e 	bne	r2,zero,23810 <_dtoa_r+0xa18>
   23d7c:	8c5ffc2c 	andhi	r17,r17,32752
   23d80:	883ea326 	beq	r17,zero,23810 <_dtoa_r+0xa18>
   23d84:	d8800417 	ldw	r2,16(sp)
   23d88:	b5800044 	addi	r22,r22,1
   23d8c:	04400044 	movi	r17,1
   23d90:	10800044 	addi	r2,r2,1
   23d94:	d8800415 	stw	r2,16(sp)
   23d98:	003e9e06 	br	23814 <_dtoa_r+0xa1c>
   23d9c:	00800044 	movi	r2,1
   23da0:	d8800315 	stw	r2,12(sp)
   23da4:	d8801d15 	stw	r2,116(sp)
   23da8:	003f1906 	br	23a10 <_dtoa_r+0xc18>
   23dac:	d8800b17 	ldw	r2,44(sp)
   23db0:	dd400615 	stw	r21,24(sp)
   23db4:	d8800315 	stw	r2,12(sp)
   23db8:	d8800317 	ldw	r2,12(sp)
   23dbc:	103e011e 	bne	r2,zero,235c4 <_dtoa_r+0x7cc>
   23dc0:	a00b883a 	mov	r5,r20
   23dc4:	e009883a 	mov	r4,fp
   23dc8:	000f883a 	mov	r7,zero
   23dcc:	01800144 	movi	r6,5
   23dd0:	00264c00 	call	264c0 <__multadd>
   23dd4:	100b883a 	mov	r5,r2
   23dd8:	b809883a 	mov	r4,r23
   23ddc:	1029883a 	mov	r20,r2
   23de0:	0026e180 	call	26e18 <__mcmp>
   23de4:	00bdf70e 	bge	zero,r2,235c4 <_dtoa_r+0x7cc>
   23de8:	d8c00117 	ldw	r3,4(sp)
   23dec:	00800c44 	movi	r2,49
   23df0:	18800005 	stb	r2,0(r3)
   23df4:	d8800617 	ldw	r2,24(sp)
   23df8:	1a000044 	addi	r8,r3,1
   23dfc:	14c00044 	addi	r19,r2,1
   23e00:	a00b883a 	mov	r5,r20
   23e04:	e009883a 	mov	r4,fp
   23e08:	da000315 	stw	r8,12(sp)
   23e0c:	002649c0 	call	2649c <_Bfree>
   23e10:	98800044 	addi	r2,r19,1
   23e14:	d8800215 	stw	r2,8(sp)
   23e18:	da000317 	ldw	r8,12(sp)
   23e1c:	803eda1e 	bne	r16,zero,23988 <_dtoa_r+0xb90>
   23e20:	003ede06 	br	2399c <_dtoa_r+0xba4>
   23e24:	b005883a 	mov	r2,r22
   23e28:	003e5506 	br	23780 <_dtoa_r+0x988>
   23e2c:	800b883a 	mov	r5,r16
   23e30:	900d883a 	mov	r6,r18
   23e34:	e009883a 	mov	r4,fp
   23e38:	0026c900 	call	26c90 <__lshift>
   23e3c:	1021883a 	mov	r16,r2
   23e40:	003f4a06 	br	23b6c <_dtoa_r+0xd74>
   23e44:	1529c83a 	sub	r20,r2,r20
   23e48:	003e3e06 	br	23744 <_dtoa_r+0x94c>
   23e4c:	dcc00a15 	stw	r19,40(sp)
   23e50:	dc400c15 	stw	r17,48(sp)
   23e54:	04000084 	movi	r16,2
   23e58:	003ccf06 	br	23198 <_dtoa_r+0x3a0>
   23e5c:	00800044 	movi	r2,1
   23e60:	003ea106 	br	238e8 <_dtoa_r+0xaf0>
   23e64:	00800044 	movi	r2,1
   23e68:	d8800515 	stw	r2,20(sp)
   23e6c:	003c9506 	br	230c4 <_dtoa_r+0x2cc>
   23e70:	1000021e 	bne	r2,zero,23e7c <_dtoa_r+0x1084>
   23e74:	98c0004c 	andi	r3,r19,1
   23e78:	183ea91e 	bne	r3,zero,23920 <_dtoa_r+0xb28>
   23e7c:	40bfffc7 	ldb	r2,-1(r8)
   23e80:	4007883a 	mov	r3,r8
   23e84:	423fffc4 	addi	r8,r8,-1
   23e88:	10800c20 	cmpeqi	r2,r2,48
   23e8c:	103ffb1e 	bne	r2,zero,23e7c <_dtoa_r+0x1084>
   23e90:	1811883a 	mov	r8,r3
   23e94:	003eb006 	br	23958 <_dtoa_r+0xb60>
   23e98:	d8c00117 	ldw	r3,4(sp)
   23e9c:	00800c44 	movi	r2,49
   23ea0:	18800005 	stb	r2,0(r3)
   23ea4:	d8800217 	ldw	r2,8(sp)
   23ea8:	10800044 	addi	r2,r2,1
   23eac:	d8800215 	stw	r2,8(sp)
   23eb0:	003ea906 	br	23958 <_dtoa_r+0xb60>
   23eb4:	d8c00917 	ldw	r3,36(sp)
   23eb8:	18010e26 	beq	r3,zero,242f4 <_dtoa_r+0x14fc>
   23ebc:	d8c00417 	ldw	r3,16(sp)
   23ec0:	10810cc4 	addi	r2,r2,1075
   23ec4:	b0ad883a 	add	r22,r22,r2
   23ec8:	1885883a 	add	r2,r3,r2
   23ecc:	dd000717 	ldw	r20,28(sp)
   23ed0:	1825883a 	mov	r18,r3
   23ed4:	d8800415 	stw	r2,16(sp)
   23ed8:	003e2106 	br	23760 <_dtoa_r+0x968>
   23edc:	8009883a 	mov	r4,r16
   23ee0:	002d2940 	call	2d294 <__floatsidf>
   23ee4:	d9800a17 	ldw	r6,40(sp)
   23ee8:	900f883a 	mov	r7,r18
   23eec:	1009883a 	mov	r4,r2
   23ef0:	180b883a 	mov	r5,r3
   23ef4:	002c2400 	call	2c240 <__muldf3>
   23ef8:	000d883a 	mov	r6,zero
   23efc:	01d00734 	movhi	r7,16412
   23f00:	1009883a 	mov	r4,r2
   23f04:	180b883a 	mov	r5,r3
   23f08:	002aeb00 	call	2aeb0 <__adddf3>
   23f0c:	1029883a 	mov	r20,r2
   23f10:	00bf3034 	movhi	r2,64704
   23f14:	1885883a 	add	r2,r3,r2
   23f18:	d8800c15 	stw	r2,48(sp)
   23f1c:	d9000a17 	ldw	r4,40(sp)
   23f20:	900b883a 	mov	r5,r18
   23f24:	000d883a 	mov	r6,zero
   23f28:	01d00534 	movhi	r7,16404
   23f2c:	002c8b40 	call	2c8b4 <__subdf3>
   23f30:	d9c00c17 	ldw	r7,48(sp)
   23f34:	a00d883a 	mov	r6,r20
   23f38:	1009883a 	mov	r4,r2
   23f3c:	180b883a 	mov	r5,r3
   23f40:	1025883a 	mov	r18,r2
   23f44:	1821883a 	mov	r16,r3
   23f48:	002c0700 	call	2c070 <__gedf2>
   23f4c:	00812b16 	blt	zero,r2,243fc <_dtoa_r+0x1604>
   23f50:	d8800c17 	ldw	r2,48(sp)
   23f54:	a00d883a 	mov	r6,r20
   23f58:	9009883a 	mov	r4,r18
   23f5c:	11e0003c 	xorhi	r7,r2,32768
   23f60:	800b883a 	mov	r5,r16
   23f64:	002c1580 	call	2c158 <__ledf2>
   23f68:	103d780e 	bge	r2,zero,2354c <_dtoa_r+0x754>
   23f6c:	0029883a 	mov	r20,zero
   23f70:	0021883a 	mov	r16,zero
   23f74:	003d9306 	br	235c4 <_dtoa_r+0x7cc>
   23f78:	d9800717 	ldw	r6,28(sp)
   23f7c:	b80b883a 	mov	r5,r23
   23f80:	e009883a 	mov	r4,fp
   23f84:	0026b480 	call	26b48 <__pow5mult>
   23f88:	102f883a 	mov	r23,r2
   23f8c:	003e1806 	br	237f0 <_dtoa_r+0x9f8>
   23f90:	d8800617 	ldw	r2,24(sp)
   23f94:	1000e326 	beq	r2,zero,24324 <_dtoa_r+0x152c>
   23f98:	00a9c83a 	sub	r20,zero,r2
   23f9c:	a08003cc 	andi	r2,r20,15
   23fa0:	100690fa 	slli	r3,r2,3
   23fa4:	008000f4 	movhi	r2,3
   23fa8:	10802704 	addi	r2,r2,156
   23fac:	10c5883a 	add	r2,r2,r3
   23fb0:	11800017 	ldw	r6,0(r2)
   23fb4:	11c00117 	ldw	r7,4(r2)
   23fb8:	9809883a 	mov	r4,r19
   23fbc:	880b883a 	mov	r5,r17
   23fc0:	a029d13a 	srai	r20,r20,4
   23fc4:	002c2400 	call	2c240 <__muldf3>
   23fc8:	d8800a15 	stw	r2,40(sp)
   23fcc:	1825883a 	mov	r18,r3
   23fd0:	a0013126 	beq	r20,zero,24498 <_dtoa_r+0x16a0>
   23fd4:	020000f4 	movhi	r8,3
   23fd8:	04000084 	movi	r16,2
   23fdc:	42001d04 	addi	r8,r8,116
   23fe0:	180b883a 	mov	r5,r3
   23fe4:	dc400c15 	stw	r17,48(sp)
   23fe8:	1009883a 	mov	r4,r2
   23fec:	8023883a 	mov	r17,r16
   23ff0:	0007883a 	mov	r3,zero
   23ff4:	4021883a 	mov	r16,r8
   23ff8:	a180004c 	andi	r6,r20,1
   23ffc:	30000726 	beq	r6,zero,2401c <_dtoa_r+0x1224>
   24000:	81800017 	ldw	r6,0(r16)
   24004:	81c00117 	ldw	r7,4(r16)
   24008:	8c400044 	addi	r17,r17,1
   2400c:	002c2400 	call	2c240 <__muldf3>
   24010:	180b883a 	mov	r5,r3
   24014:	1009883a 	mov	r4,r2
   24018:	00c00044 	movi	r3,1
   2401c:	a029d07a 	srai	r20,r20,1
   24020:	84000204 	addi	r16,r16,8
   24024:	a03ff41e 	bne	r20,zero,23ff8 <_dtoa_r+0x1200>
   24028:	18c03fcc 	andi	r3,r3,255
   2402c:	8821883a 	mov	r16,r17
   24030:	dc400c17 	ldw	r17,48(sp)
   24034:	183c7126 	beq	r3,zero,231fc <_dtoa_r+0x404>
   24038:	d9000a15 	stw	r4,40(sp)
   2403c:	2825883a 	mov	r18,r5
   24040:	003c6e06 	br	231fc <_dtoa_r+0x404>
   24044:	983eb41e 	bne	r19,zero,23b18 <_dtoa_r+0xd20>
   24048:	00800434 	movhi	r2,16
   2404c:	10bfffc4 	addi	r2,r2,-1
   24050:	8884703a 	and	r2,r17,r2
   24054:	103f4926 	beq	r2,zero,23d7c <_dtoa_r+0xf84>
   24058:	003eaf06 	br	23b18 <_dtoa_r+0xd20>
   2405c:	00800e0e 	bge	zero,r2,24098 <_dtoa_r+0x12a0>
   24060:	b80b883a 	mov	r5,r23
   24064:	01800044 	movi	r6,1
   24068:	e009883a 	mov	r4,fp
   2406c:	da000215 	stw	r8,8(sp)
   24070:	0026c900 	call	26c90 <__lshift>
   24074:	a00b883a 	mov	r5,r20
   24078:	1009883a 	mov	r4,r2
   2407c:	102f883a 	mov	r23,r2
   24080:	0026e180 	call	26e18 <__mcmp>
   24084:	da000217 	ldw	r8,8(sp)
   24088:	0080e30e 	bge	zero,r2,24418 <_dtoa_r+0x1620>
   2408c:	98c00e60 	cmpeqi	r3,r19,57
   24090:	1800cf1e 	bne	r3,zero,243d0 <_dtoa_r+0x15d8>
   24094:	acc00c44 	addi	r19,r21,49
   24098:	8023883a 	mov	r17,r16
   2409c:	d8800617 	ldw	r2,24(sp)
   240a0:	b4c00005 	stb	r19,0(r22)
   240a4:	9021883a 	mov	r16,r18
   240a8:	10800044 	addi	r2,r2,1
   240ac:	d8800215 	stw	r2,8(sp)
   240b0:	003e2906 	br	23958 <_dtoa_r+0xb60>
   240b4:	b82b883a 	mov	r21,r23
   240b8:	ddc00217 	ldw	r23,8(sp)
   240bc:	200d883a 	mov	r6,r4
   240c0:	280f883a 	mov	r7,r5
   240c4:	002aeb00 	call	2aeb0 <__adddf3>
   240c8:	102d883a 	mov	r22,r2
   240cc:	1009883a 	mov	r4,r2
   240d0:	d8800617 	ldw	r2,24(sp)
   240d4:	800d883a 	mov	r6,r16
   240d8:	900f883a 	mov	r7,r18
   240dc:	10800044 	addi	r2,r2,1
   240e0:	180b883a 	mov	r5,r3
   240e4:	1823883a 	mov	r17,r3
   240e8:	1027883a 	mov	r19,r2
   240ec:	d8800215 	stw	r2,8(sp)
   240f0:	002c0700 	call	2c070 <__gedf2>
   240f4:	00808916 	blt	zero,r2,2431c <_dtoa_r+0x1524>
   240f8:	800d883a 	mov	r6,r16
   240fc:	900f883a 	mov	r7,r18
   24100:	b009883a 	mov	r4,r22
   24104:	880b883a 	mov	r5,r17
   24108:	002bff00 	call	2bff0 <__eqdf2>
   2410c:	1000021e 	bne	r2,zero,24118 <_dtoa_r+0x1320>
   24110:	ad40004c 	andi	r21,r21,1
   24114:	a800811e 	bne	r21,zero,2431c <_dtoa_r+0x1524>
   24118:	a011883a 	mov	r8,r20
   2411c:	003e1f06 	br	2399c <_dtoa_r+0xba4>
   24120:	81400117 	ldw	r5,4(r16)
   24124:	e009883a 	mov	r4,fp
   24128:	00263f80 	call	263f8 <_Balloc>
   2412c:	1023883a 	mov	r17,r2
   24130:	1000f326 	beq	r2,zero,24500 <_dtoa_r+0x1708>
   24134:	81800417 	ldw	r6,16(r16)
   24138:	81400304 	addi	r5,r16,12
   2413c:	11000304 	addi	r4,r2,12
   24140:	31800084 	addi	r6,r6,2
   24144:	300c90ba 	slli	r6,r6,2
   24148:	00260dc0 	call	260dc <memcpy>
   2414c:	01800044 	movi	r6,1
   24150:	880b883a 	mov	r5,r17
   24154:	e009883a 	mov	r4,fp
   24158:	0026c900 	call	26c90 <__lshift>
   2415c:	1025883a 	mov	r18,r2
   24160:	003e8406 	br	23b74 <_dtoa_r+0xd7c>
   24164:	b80b883a 	mov	r5,r23
   24168:	e009883a 	mov	r4,fp
   2416c:	0026b480 	call	26b48 <__pow5mult>
   24170:	102f883a 	mov	r23,r2
   24174:	003d9e06 	br	237f0 <_dtoa_r+0x9f8>
   24178:	d8800417 	ldw	r2,16(sp)
   2417c:	d8c00317 	ldw	r3,12(sp)
   24180:	10e5c83a 	sub	r18,r2,r3
   24184:	003d7606 	br	23760 <_dtoa_r+0x968>
   24188:	98800e58 	cmpnei	r2,r19,57
   2418c:	10009026 	beq	r2,zero,243d0 <_dtoa_r+0x15d8>
   24190:	d8800617 	ldw	r2,24(sp)
   24194:	98c00044 	addi	r3,r19,1
   24198:	8023883a 	mov	r17,r16
   2419c:	10800044 	addi	r2,r2,1
   241a0:	d8800215 	stw	r2,8(sp)
   241a4:	b0c00005 	stb	r3,0(r22)
   241a8:	9021883a 	mov	r16,r18
   241ac:	003dea06 	br	23958 <_dtoa_r+0xb60>
   241b0:	d8800617 	ldw	r2,24(sp)
   241b4:	8023883a 	mov	r17,r16
   241b8:	9021883a 	mov	r16,r18
   241bc:	10800044 	addi	r2,r2,1
   241c0:	d8800215 	stw	r2,8(sp)
   241c4:	003dcb06 	br	238f4 <_dtoa_r+0xafc>
   241c8:	d9400c17 	ldw	r5,48(sp)
   241cc:	a009883a 	mov	r4,r20
   241d0:	002c2400 	call	2c240 <__muldf3>
   241d4:	d9400117 	ldw	r5,4(sp)
   241d8:	d9000f17 	ldw	r4,60(sp)
   241dc:	d9800d17 	ldw	r6,52(sp)
   241e0:	d8800a15 	stw	r2,40(sp)
   241e4:	29000005 	stb	r4,0(r5)
   241e8:	d8c00c15 	stw	r3,48(sp)
   241ec:	31000058 	cmpnei	r4,r6,1
   241f0:	da000e17 	ldw	r8,56(sp)
   241f4:	29a9883a 	add	r20,r5,r6
   241f8:	20009d26 	beq	r4,zero,24470 <_dtoa_r+0x1678>
   241fc:	dc400d15 	stw	r17,52(sp)
   24200:	8009883a 	mov	r4,r16
   24204:	900b883a 	mov	r5,r18
   24208:	4023883a 	mov	r17,r8
   2420c:	dcc00e15 	stw	r19,56(sp)
   24210:	000d883a 	mov	r6,zero
   24214:	01d00934 	movhi	r7,16420
   24218:	002c2400 	call	2c240 <__muldf3>
   2421c:	180b883a 	mov	r5,r3
   24220:	1009883a 	mov	r4,r2
   24224:	1825883a 	mov	r18,r3
   24228:	1027883a 	mov	r19,r2
   2422c:	002d2140 	call	2d214 <__fixdfsi>
   24230:	1009883a 	mov	r4,r2
   24234:	1021883a 	mov	r16,r2
   24238:	002d2940 	call	2d294 <__floatsidf>
   2423c:	9809883a 	mov	r4,r19
   24240:	900b883a 	mov	r5,r18
   24244:	100d883a 	mov	r6,r2
   24248:	180f883a 	mov	r7,r3
   2424c:	8c400044 	addi	r17,r17,1
   24250:	84000c04 	addi	r16,r16,48
   24254:	002c8b40 	call	2c8b4 <__subdf3>
   24258:	8c3fffc5 	stb	r16,-1(r17)
   2425c:	1009883a 	mov	r4,r2
   24260:	180b883a 	mov	r5,r3
   24264:	a47fea1e 	bne	r20,r17,24210 <_dtoa_r+0x1418>
   24268:	dc400d17 	ldw	r17,52(sp)
   2426c:	dcc00e17 	ldw	r19,56(sp)
   24270:	1021883a 	mov	r16,r2
   24274:	1825883a 	mov	r18,r3
   24278:	d9000a17 	ldw	r4,40(sp)
   2427c:	d9400c17 	ldw	r5,48(sp)
   24280:	000d883a 	mov	r6,zero
   24284:	01cff834 	movhi	r7,16352
   24288:	002aeb00 	call	2aeb0 <__adddf3>
   2428c:	800d883a 	mov	r6,r16
   24290:	900f883a 	mov	r7,r18
   24294:	1009883a 	mov	r4,r2
   24298:	180b883a 	mov	r5,r3
   2429c:	002c1580 	call	2c158 <__ledf2>
   242a0:	10005916 	blt	r2,zero,24408 <_dtoa_r+0x1610>
   242a4:	d9800a17 	ldw	r6,40(sp)
   242a8:	d9c00c17 	ldw	r7,48(sp)
   242ac:	0009883a 	mov	r4,zero
   242b0:	014ff834 	movhi	r5,16352
   242b4:	002c8b40 	call	2c8b4 <__subdf3>
   242b8:	800d883a 	mov	r6,r16
   242bc:	900f883a 	mov	r7,r18
   242c0:	1009883a 	mov	r4,r2
   242c4:	180b883a 	mov	r5,r3
   242c8:	002c0700 	call	2c070 <__gedf2>
   242cc:	00bc9f0e 	bge	zero,r2,2354c <_dtoa_r+0x754>
   242d0:	a0bfffc7 	ldb	r2,-1(r20)
   242d4:	a011883a 	mov	r8,r20
   242d8:	a53fffc4 	addi	r20,r20,-1
   242dc:	10800c20 	cmpeqi	r2,r2,48
   242e0:	103ffb1e 	bne	r2,zero,242d0 <_dtoa_r+0x14d8>
   242e4:	d8801017 	ldw	r2,64(sp)
   242e8:	10800044 	addi	r2,r2,1
   242ec:	d8800215 	stw	r2,8(sp)
   242f0:	003daa06 	br	2399c <_dtoa_r+0xba4>
   242f4:	d8c01117 	ldw	r3,68(sp)
   242f8:	d9000417 	ldw	r4,16(sp)
   242fc:	00800d84 	movi	r2,54
   24300:	10c5c83a 	sub	r2,r2,r3
   24304:	b0ad883a 	add	r22,r22,r2
   24308:	2085883a 	add	r2,r4,r2
   2430c:	dd000717 	ldw	r20,28(sp)
   24310:	2025883a 	mov	r18,r4
   24314:	d8800415 	stw	r2,16(sp)
   24318:	003d1106 	br	23760 <_dtoa_r+0x968>
   2431c:	d9000117 	ldw	r4,4(sp)
   24320:	003c4e06 	br	2345c <_dtoa_r+0x664>
   24324:	dcc00a15 	stw	r19,40(sp)
   24328:	8825883a 	mov	r18,r17
   2432c:	04000084 	movi	r16,2
   24330:	003bb206 	br	231fc <_dtoa_r+0x404>
   24334:	d8800317 	ldw	r2,12(sp)
   24338:	103ee826 	beq	r2,zero,23edc <_dtoa_r+0x10e4>
   2433c:	d8800b17 	ldw	r2,44(sp)
   24340:	00bc820e 	bge	zero,r2,2354c <_dtoa_r+0x754>
   24344:	900b883a 	mov	r5,r18
   24348:	a009883a 	mov	r4,r20
   2434c:	000d883a 	mov	r6,zero
   24350:	01d00934 	movhi	r7,16420
   24354:	002c2400 	call	2c240 <__muldf3>
   24358:	81000044 	addi	r4,r16,1
   2435c:	1029883a 	mov	r20,r2
   24360:	1825883a 	mov	r18,r3
   24364:	d8800a15 	stw	r2,40(sp)
   24368:	002d2940 	call	2d294 <__floatsidf>
   2436c:	a00d883a 	mov	r6,r20
   24370:	900f883a 	mov	r7,r18
   24374:	1009883a 	mov	r4,r2
   24378:	180b883a 	mov	r5,r3
   2437c:	002c2400 	call	2c240 <__muldf3>
   24380:	1009883a 	mov	r4,r2
   24384:	000d883a 	mov	r6,zero
   24388:	01d00734 	movhi	r7,16412
   2438c:	180b883a 	mov	r5,r3
   24390:	002aeb00 	call	2aeb0 <__adddf3>
   24394:	d9000617 	ldw	r4,24(sp)
   24398:	1029883a 	mov	r20,r2
   2439c:	00bf3034 	movhi	r2,64704
   243a0:	1887883a 	add	r3,r3,r2
   243a4:	d8800b17 	ldw	r2,44(sp)
   243a8:	213fffc4 	addi	r4,r4,-1
   243ac:	d9001015 	stw	r4,64(sp)
   243b0:	d8c00c15 	stw	r3,48(sp)
   243b4:	d8800d15 	stw	r2,52(sp)
   243b8:	003baf06 	br	23278 <_dtoa_r+0x480>
   243bc:	00c00c44 	movi	r3,49
   243c0:	9cc00044 	addi	r19,r19,1
   243c4:	003c2e06 	br	23480 <_dtoa_r+0x688>
   243c8:	b0800044 	addi	r2,r22,1
   243cc:	d8800315 	stw	r2,12(sp)
   243d0:	00800e44 	movi	r2,57
   243d4:	b0800005 	stb	r2,0(r22)
   243d8:	d8800617 	ldw	r2,24(sp)
   243dc:	8023883a 	mov	r17,r16
   243e0:	da000317 	ldw	r8,12(sp)
   243e4:	10800044 	addi	r2,r2,1
   243e8:	d9400117 	ldw	r5,4(sp)
   243ec:	d8800215 	stw	r2,8(sp)
   243f0:	9021883a 	mov	r16,r18
   243f4:	01000e44 	movi	r4,57
   243f8:	003d4f06 	br	23938 <_dtoa_r+0xb40>
   243fc:	0029883a 	mov	r20,zero
   24400:	0021883a 	mov	r16,zero
   24404:	003e7806 	br	23de8 <_dtoa_r+0xff0>
   24408:	d8801017 	ldw	r2,64(sp)
   2440c:	d9000117 	ldw	r4,4(sp)
   24410:	14c00044 	addi	r19,r2,1
   24414:	003c1106 	br	2345c <_dtoa_r+0x664>
   24418:	103f1f1e 	bne	r2,zero,24098 <_dtoa_r+0x12a0>
   2441c:	9880004c 	andi	r2,r19,1
   24420:	103f1a1e 	bne	r2,zero,2408c <_dtoa_r+0x1294>
   24424:	003f1c06 	br	24098 <_dtoa_r+0x12a0>
   24428:	d8801017 	ldw	r2,64(sp)
   2442c:	ddc00c17 	ldw	r23,48(sp)
   24430:	a811883a 	mov	r8,r21
   24434:	10800044 	addi	r2,r2,1
   24438:	d8800215 	stw	r2,8(sp)
   2443c:	003d5706 	br	2399c <_dtoa_r+0xba4>
   24440:	98800e60 	cmpeqi	r2,r19,57
   24444:	103fe01e 	bne	r2,zero,243c8 <_dtoa_r+0x15d0>
   24448:	0440010e 	bge	zero,r17,24450 <_dtoa_r+0x1658>
   2444c:	acc00c44 	addi	r19,r21,49
   24450:	8023883a 	mov	r17,r16
   24454:	b2000044 	addi	r8,r22,1
   24458:	003f1006 	br	2409c <_dtoa_r+0x12a4>
   2445c:	d8800217 	ldw	r2,8(sp)
   24460:	108000c8 	cmpgei	r2,r2,3
   24464:	103e511e 	bne	r2,zero,23dac <_dtoa_r+0xfb4>
   24468:	dd400615 	stw	r21,24(sp)
   2446c:	003e1406 	br	23cc0 <_dtoa_r+0xec8>
   24470:	4029883a 	mov	r20,r8
   24474:	003f8006 	br	24278 <_dtoa_r+0x1480>
   24478:	d8800217 	ldw	r2,8(sp)
   2447c:	108000c8 	cmpgei	r2,r2,3
   24480:	103e4a1e 	bne	r2,zero,23dac <_dtoa_r+0xfb4>
   24484:	d8800b17 	ldw	r2,44(sp)
   24488:	dd400615 	stw	r21,24(sp)
   2448c:	d8800315 	stw	r2,12(sp)
   24490:	04bdb60e 	bge	zero,r18,23b6c <_dtoa_r+0xd74>
   24494:	003e6506 	br	23e2c <_dtoa_r+0x1034>
   24498:	04000084 	movi	r16,2
   2449c:	003b5706 	br	231fc <_dtoa_r+0x404>
   244a0:	01c000f4 	movhi	r7,3
   244a4:	010000f4 	movhi	r4,3
   244a8:	39ffed04 	addi	r7,r7,-76
   244ac:	000d883a 	mov	r6,zero
   244b0:	01406a84 	movi	r5,426
   244b4:	213ff204 	addi	r4,r4,-56
   244b8:	002942c0 	call	2942c <__assert_func>
   244bc:	000b883a 	mov	r5,zero
   244c0:	003b1006 	br	23104 <_dtoa_r+0x30c>
   244c4:	e0001115 	stw	zero,68(fp)
   244c8:	000b883a 	mov	r5,zero
   244cc:	e009883a 	mov	r4,fp
   244d0:	00263f80 	call	263f8 <_Balloc>
   244d4:	d8800115 	stw	r2,4(sp)
   244d8:	103ff126 	beq	r2,zero,244a0 <_dtoa_r+0x16a8>
   244dc:	d8800117 	ldw	r2,4(sp)
   244e0:	d8001d15 	stw	zero,116(sp)
   244e4:	e0801015 	stw	r2,64(fp)
   244e8:	00bfffc4 	movi	r2,-1
   244ec:	d8800315 	stw	r2,12(sp)
   244f0:	d8800b15 	stw	r2,44(sp)
   244f4:	00800044 	movi	r2,1
   244f8:	d8800515 	stw	r2,20(sp)
   244fc:	003c1306 	br	2354c <_dtoa_r+0x754>
   24500:	01c000f4 	movhi	r7,3
   24504:	010000f4 	movhi	r4,3
   24508:	39ffed04 	addi	r7,r7,-76
   2450c:	000d883a 	mov	r6,zero
   24510:	0140ba84 	movi	r5,746
   24514:	213ff204 	addi	r4,r4,-56
   24518:	002942c0 	call	2942c <__assert_func>
   2451c:	008000f4 	movhi	r2,3
   24520:	10bfea04 	addi	r2,r2,-88
   24524:	d8800115 	stw	r2,4(sp)
   24528:	003a6506 	br	22ec0 <_dtoa_r+0xc8>
   2452c:	18c00120 	cmpeqi	r3,r3,4
   24530:	183cc81e 	bne	r3,zero,23854 <_dtoa_r+0xa5c>
   24534:	00c00f04 	movi	r3,60
   24538:	1885c83a 	sub	r2,r3,r2
   2453c:	003cc006 	br	23840 <_dtoa_r+0xa48>

00024540 <__sflush_r>:
   24540:	2880030b 	ldhu	r2,12(r5)
   24544:	defffb04 	addi	sp,sp,-20
   24548:	dcc00315 	stw	r19,12(sp)
   2454c:	dc000015 	stw	r16,0(sp)
   24550:	dfc00415 	stw	ra,16(sp)
   24554:	dc800215 	stw	r18,8(sp)
   24558:	dc400115 	stw	r17,4(sp)
   2455c:	10c0020c 	andi	r3,r2,8
   24560:	2821883a 	mov	r16,r5
   24564:	2027883a 	mov	r19,r4
   24568:	18003f1e 	bne	r3,zero,24668 <__sflush_r+0x128>
   2456c:	28c00117 	ldw	r3,4(r5)
   24570:	10820014 	ori	r2,r2,2048
   24574:	2880030d 	sth	r2,12(r5)
   24578:	00c0550e 	bge	zero,r3,246d0 <__sflush_r+0x190>
   2457c:	82000a17 	ldw	r8,40(r16)
   24580:	40003126 	beq	r8,zero,24648 <__sflush_r+0x108>
   24584:	9c400017 	ldw	r17,0(r19)
   24588:	1104000c 	andi	r4,r2,4096
   2458c:	98000015 	stw	zero,0(r19)
   24590:	1007883a 	mov	r3,r2
   24594:	2000531e 	bne	r4,zero,246e4 <__sflush_r+0x1a4>
   24598:	81400717 	ldw	r5,28(r16)
   2459c:	01c00044 	movi	r7,1
   245a0:	000d883a 	mov	r6,zero
   245a4:	9809883a 	mov	r4,r19
   245a8:	403ee83a 	callr	r8
   245ac:	10ffffd8 	cmpnei	r3,r2,-1
   245b0:	18005826 	beq	r3,zero,24714 <__sflush_r+0x1d4>
   245b4:	80c0030b 	ldhu	r3,12(r16)
   245b8:	82000a17 	ldw	r8,40(r16)
   245bc:	18c0010c 	andi	r3,r3,4
   245c0:	18000626 	beq	r3,zero,245dc <__sflush_r+0x9c>
   245c4:	81000117 	ldw	r4,4(r16)
   245c8:	80c00c17 	ldw	r3,48(r16)
   245cc:	1105c83a 	sub	r2,r2,r4
   245d0:	18000226 	beq	r3,zero,245dc <__sflush_r+0x9c>
   245d4:	80c00f17 	ldw	r3,60(r16)
   245d8:	10c5c83a 	sub	r2,r2,r3
   245dc:	81400717 	ldw	r5,28(r16)
   245e0:	100d883a 	mov	r6,r2
   245e4:	000f883a 	mov	r7,zero
   245e8:	9809883a 	mov	r4,r19
   245ec:	403ee83a 	callr	r8
   245f0:	10ffffd8 	cmpnei	r3,r2,-1
   245f4:	18003d1e 	bne	r3,zero,246ec <__sflush_r+0x1ac>
   245f8:	99000017 	ldw	r4,0(r19)
   245fc:	80c0030b 	ldhu	r3,12(r16)
   24600:	20004e26 	beq	r4,zero,2473c <__sflush_r+0x1fc>
   24604:	21400760 	cmpeqi	r5,r4,29
   24608:	2800021e 	bne	r5,zero,24614 <__sflush_r+0xd4>
   2460c:	210005a0 	cmpeqi	r4,r4,22
   24610:	20002c26 	beq	r4,zero,246c4 <__sflush_r+0x184>
   24614:	80800417 	ldw	r2,16(r16)
   24618:	18fdffcc 	andi	r3,r3,63487
   2461c:	80c0030d 	sth	r3,12(r16)
   24620:	80000115 	stw	zero,4(r16)
   24624:	80800015 	stw	r2,0(r16)
   24628:	81400c17 	ldw	r5,48(r16)
   2462c:	9c400015 	stw	r17,0(r19)
   24630:	28000526 	beq	r5,zero,24648 <__sflush_r+0x108>
   24634:	80801004 	addi	r2,r16,64
   24638:	28800226 	beq	r5,r2,24644 <__sflush_r+0x104>
   2463c:	9809883a 	mov	r4,r19
   24640:	0024d040 	call	24d04 <_free_r>
   24644:	80000c15 	stw	zero,48(r16)
   24648:	0005883a 	mov	r2,zero
   2464c:	dfc00417 	ldw	ra,16(sp)
   24650:	dcc00317 	ldw	r19,12(sp)
   24654:	dc800217 	ldw	r18,8(sp)
   24658:	dc400117 	ldw	r17,4(sp)
   2465c:	dc000017 	ldw	r16,0(sp)
   24660:	dec00504 	addi	sp,sp,20
   24664:	f800283a 	ret
   24668:	2c800417 	ldw	r18,16(r5)
   2466c:	903ff626 	beq	r18,zero,24648 <__sflush_r+0x108>
   24670:	2c400017 	ldw	r17,0(r5)
   24674:	108000cc 	andi	r2,r2,3
   24678:	2c800015 	stw	r18,0(r5)
   2467c:	8ca3c83a 	sub	r17,r17,r18
   24680:	1000161e 	bne	r2,zero,246dc <__sflush_r+0x19c>
   24684:	28800517 	ldw	r2,20(r5)
   24688:	80800215 	stw	r2,8(r16)
   2468c:	04400316 	blt	zero,r17,2469c <__sflush_r+0x15c>
   24690:	003fed06 	br	24648 <__sflush_r+0x108>
   24694:	90a5883a 	add	r18,r18,r2
   24698:	047feb0e 	bge	zero,r17,24648 <__sflush_r+0x108>
   2469c:	80800917 	ldw	r2,36(r16)
   246a0:	81400717 	ldw	r5,28(r16)
   246a4:	880f883a 	mov	r7,r17
   246a8:	900d883a 	mov	r6,r18
   246ac:	9809883a 	mov	r4,r19
   246b0:	103ee83a 	callr	r2
   246b4:	88a3c83a 	sub	r17,r17,r2
   246b8:	00bff616 	blt	zero,r2,24694 <__sflush_r+0x154>
   246bc:	80c0030b 	ldhu	r3,12(r16)
   246c0:	00bfffc4 	movi	r2,-1
   246c4:	18c01014 	ori	r3,r3,64
   246c8:	80c0030d 	sth	r3,12(r16)
   246cc:	003fdf06 	br	2464c <__sflush_r+0x10c>
   246d0:	28c00f17 	ldw	r3,60(r5)
   246d4:	00ffa916 	blt	zero,r3,2457c <__sflush_r+0x3c>
   246d8:	003fdb06 	br	24648 <__sflush_r+0x108>
   246dc:	0005883a 	mov	r2,zero
   246e0:	003fe906 	br	24688 <__sflush_r+0x148>
   246e4:	80801417 	ldw	r2,80(r16)
   246e8:	003fb406 	br	245bc <__sflush_r+0x7c>
   246ec:	80c0030b 	ldhu	r3,12(r16)
   246f0:	81000417 	ldw	r4,16(r16)
   246f4:	80000115 	stw	zero,4(r16)
   246f8:	197dffcc 	andi	r5,r3,63487
   246fc:	8140030d 	sth	r5,12(r16)
   24700:	81000015 	stw	r4,0(r16)
   24704:	18c4000c 	andi	r3,r3,4096
   24708:	183fc726 	beq	r3,zero,24628 <__sflush_r+0xe8>
   2470c:	80801415 	stw	r2,80(r16)
   24710:	003fc506 	br	24628 <__sflush_r+0xe8>
   24714:	98c00017 	ldw	r3,0(r19)
   24718:	183fa626 	beq	r3,zero,245b4 <__sflush_r+0x74>
   2471c:	19000760 	cmpeqi	r4,r3,29
   24720:	20000e1e 	bne	r4,zero,2475c <__sflush_r+0x21c>
   24724:	18c00598 	cmpnei	r3,r3,22
   24728:	18000c26 	beq	r3,zero,2475c <__sflush_r+0x21c>
   2472c:	80c0030b 	ldhu	r3,12(r16)
   24730:	18c01014 	ori	r3,r3,64
   24734:	80c0030d 	sth	r3,12(r16)
   24738:	003fc406 	br	2464c <__sflush_r+0x10c>
   2473c:	81000417 	ldw	r4,16(r16)
   24740:	197dffcc 	andi	r5,r3,63487
   24744:	8140030d 	sth	r5,12(r16)
   24748:	80000115 	stw	zero,4(r16)
   2474c:	81000015 	stw	r4,0(r16)
   24750:	18c4000c 	andi	r3,r3,4096
   24754:	183fb426 	beq	r3,zero,24628 <__sflush_r+0xe8>
   24758:	003fec06 	br	2470c <__sflush_r+0x1cc>
   2475c:	9c400015 	stw	r17,0(r19)
   24760:	0005883a 	mov	r2,zero
   24764:	003fb906 	br	2464c <__sflush_r+0x10c>

00024768 <_fflush_r>:
   24768:	defffd04 	addi	sp,sp,-12
   2476c:	dc000115 	stw	r16,4(sp)
   24770:	dfc00215 	stw	ra,8(sp)
   24774:	2021883a 	mov	r16,r4
   24778:	20000226 	beq	r4,zero,24784 <_fflush_r+0x1c>
   2477c:	20800e17 	ldw	r2,56(r4)
   24780:	10000726 	beq	r2,zero,247a0 <_fflush_r+0x38>
   24784:	2880030f 	ldh	r2,12(r5)
   24788:	10000a1e 	bne	r2,zero,247b4 <_fflush_r+0x4c>
   2478c:	0005883a 	mov	r2,zero
   24790:	dfc00217 	ldw	ra,8(sp)
   24794:	dc000117 	ldw	r16,4(sp)
   24798:	dec00304 	addi	sp,sp,12
   2479c:	f800283a 	ret
   247a0:	d9400015 	stw	r5,0(sp)
   247a4:	0024ba00 	call	24ba0 <__sinit>
   247a8:	d9400017 	ldw	r5,0(sp)
   247ac:	2880030f 	ldh	r2,12(r5)
   247b0:	103ff626 	beq	r2,zero,2478c <_fflush_r+0x24>
   247b4:	8009883a 	mov	r4,r16
   247b8:	dfc00217 	ldw	ra,8(sp)
   247bc:	dc000117 	ldw	r16,4(sp)
   247c0:	dec00304 	addi	sp,sp,12
   247c4:	00245401 	jmpi	24540 <__sflush_r>

000247c8 <fflush>:
   247c8:	20001726 	beq	r4,zero,24828 <fflush+0x60>
   247cc:	008000f4 	movhi	r2,3
   247d0:	200b883a 	mov	r5,r4
   247d4:	11084a17 	ldw	r4,8488(r2)
   247d8:	20000226 	beq	r4,zero,247e4 <fflush+0x1c>
   247dc:	20800e17 	ldw	r2,56(r4)
   247e0:	10000526 	beq	r2,zero,247f8 <fflush+0x30>
   247e4:	2880030f 	ldh	r2,12(r5)
   247e8:	1000021e 	bne	r2,zero,247f4 <fflush+0x2c>
   247ec:	0005883a 	mov	r2,zero
   247f0:	f800283a 	ret
   247f4:	00245401 	jmpi	24540 <__sflush_r>
   247f8:	defffd04 	addi	sp,sp,-12
   247fc:	d9400115 	stw	r5,4(sp)
   24800:	d9000015 	stw	r4,0(sp)
   24804:	dfc00215 	stw	ra,8(sp)
   24808:	0024ba00 	call	24ba0 <__sinit>
   2480c:	d9400117 	ldw	r5,4(sp)
   24810:	d9000017 	ldw	r4,0(sp)
   24814:	2880030f 	ldh	r2,12(r5)
   24818:	10000826 	beq	r2,zero,2483c <fflush+0x74>
   2481c:	dfc00217 	ldw	ra,8(sp)
   24820:	dec00304 	addi	sp,sp,12
   24824:	00245401 	jmpi	24540 <__sflush_r>
   24828:	008000f4 	movhi	r2,3
   2482c:	11084917 	ldw	r4,8484(r2)
   24830:	014000b4 	movhi	r5,2
   24834:	2951da04 	addi	r5,r5,18280
   24838:	002551c1 	jmpi	2551c <_fwalk_reent>
   2483c:	0005883a 	mov	r2,zero
   24840:	dfc00217 	ldw	ra,8(sp)
   24844:	dec00304 	addi	sp,sp,12
   24848:	f800283a 	ret

0002484c <__fp_lock>:
   2484c:	0005883a 	mov	r2,zero
   24850:	f800283a 	ret

00024854 <_cleanup_r>:
   24854:	014000f4 	movhi	r5,3
   24858:	2965a704 	addi	r5,r5,-26980
   2485c:	002551c1 	jmpi	2551c <_fwalk_reent>

00024860 <__fp_unlock>:
   24860:	0005883a 	mov	r2,zero
   24864:	f800283a 	ret

00024868 <__sinit.part.0>:
   24868:	00c000b4 	movhi	r3,2
   2486c:	20800117 	ldw	r2,4(r4)
   24870:	18d21504 	addi	r3,r3,18516
   24874:	20c00f15 	stw	r3,60(r4)
   24878:	2140bb04 	addi	r5,r4,748
   2487c:	00c000c4 	movi	r3,3
   24880:	20c0b915 	stw	r3,740(r4)
   24884:	2140ba15 	stw	r5,744(r4)
   24888:	2000b815 	stw	zero,736(r4)
   2488c:	10001705 	stb	zero,92(r2)
   24890:	10001745 	stb	zero,93(r2)
   24894:	10001785 	stb	zero,94(r2)
   24898:	100017c5 	stb	zero,95(r2)
   2489c:	10001805 	stb	zero,96(r2)
   248a0:	10001845 	stb	zero,97(r2)
   248a4:	10001885 	stb	zero,98(r2)
   248a8:	100018c5 	stb	zero,99(r2)
   248ac:	00c00104 	movi	r3,4
   248b0:	10c00315 	stw	r3,12(r2)
   248b4:	020000b4 	movhi	r8,2
   248b8:	20c00217 	ldw	r3,8(r4)
   248bc:	01c000b4 	movhi	r7,2
   248c0:	018000b4 	movhi	r6,2
   248c4:	014000b4 	movhi	r5,2
   248c8:	421f2604 	addi	r8,r8,31896
   248cc:	39df3d04 	addi	r7,r7,31988
   248d0:	319f5d04 	addi	r6,r6,32116
   248d4:	295f7404 	addi	r5,r5,32208
   248d8:	02400074 	movhi	r9,1
   248dc:	10001915 	stw	zero,100(r2)
   248e0:	10000015 	stw	zero,0(r2)
   248e4:	10000115 	stw	zero,4(r2)
   248e8:	10000215 	stw	zero,8(r2)
   248ec:	10000415 	stw	zero,16(r2)
   248f0:	10000515 	stw	zero,20(r2)
   248f4:	10000615 	stw	zero,24(r2)
   248f8:	10800715 	stw	r2,28(r2)
   248fc:	12000815 	stw	r8,32(r2)
   24900:	11c00915 	stw	r7,36(r2)
   24904:	11800a15 	stw	r6,40(r2)
   24908:	11400b15 	stw	r5,44(r2)
   2490c:	4a400284 	addi	r9,r9,10
   24910:	1a400315 	stw	r9,12(r3)
   24914:	18001915 	stw	zero,100(r3)
   24918:	18000015 	stw	zero,0(r3)
   2491c:	18000115 	stw	zero,4(r3)
   24920:	18000215 	stw	zero,8(r3)
   24924:	18000415 	stw	zero,16(r3)
   24928:	18001705 	stb	zero,92(r3)
   2492c:	18001745 	stb	zero,93(r3)
   24930:	18001785 	stb	zero,94(r3)
   24934:	180017c5 	stb	zero,95(r3)
   24938:	18001805 	stb	zero,96(r3)
   2493c:	18001845 	stb	zero,97(r3)
   24940:	18001885 	stb	zero,98(r3)
   24944:	180018c5 	stb	zero,99(r3)
   24948:	20800317 	ldw	r2,12(r4)
   2494c:	024000b4 	movhi	r9,2
   24950:	18000515 	stw	zero,20(r3)
   24954:	18000615 	stw	zero,24(r3)
   24958:	18c00715 	stw	r3,28(r3)
   2495c:	1a000815 	stw	r8,32(r3)
   24960:	19c00915 	stw	r7,36(r3)
   24964:	19800a15 	stw	r6,40(r3)
   24968:	19400b15 	stw	r5,44(r3)
   2496c:	4a400484 	addi	r9,r9,18
   24970:	10001915 	stw	zero,100(r2)
   24974:	10000015 	stw	zero,0(r2)
   24978:	10000115 	stw	zero,4(r2)
   2497c:	10000215 	stw	zero,8(r2)
   24980:	12400315 	stw	r9,12(r2)
   24984:	10000415 	stw	zero,16(r2)
   24988:	10000515 	stw	zero,20(r2)
   2498c:	10000615 	stw	zero,24(r2)
   24990:	10001705 	stb	zero,92(r2)
   24994:	10001745 	stb	zero,93(r2)
   24998:	10001785 	stb	zero,94(r2)
   2499c:	100017c5 	stb	zero,95(r2)
   249a0:	10001805 	stb	zero,96(r2)
   249a4:	10001845 	stb	zero,97(r2)
   249a8:	10001885 	stb	zero,98(r2)
   249ac:	100018c5 	stb	zero,99(r2)
   249b0:	10800715 	stw	r2,28(r2)
   249b4:	12000815 	stw	r8,32(r2)
   249b8:	11c00915 	stw	r7,36(r2)
   249bc:	11800a15 	stw	r6,40(r2)
   249c0:	11400b15 	stw	r5,44(r2)
   249c4:	00800044 	movi	r2,1
   249c8:	20800e15 	stw	r2,56(r4)
   249cc:	f800283a 	ret

000249d0 <__sfmoreglue>:
   249d0:	defffc04 	addi	sp,sp,-16
   249d4:	dc400115 	stw	r17,4(sp)
   249d8:	2c7fffc4 	addi	r17,r5,-1
   249dc:	8c401a24 	muli	r17,r17,104
   249e0:	dc800215 	stw	r18,8(sp)
   249e4:	2825883a 	mov	r18,r5
   249e8:	89401d04 	addi	r5,r17,116
   249ec:	dc000015 	stw	r16,0(sp)
   249f0:	dfc00315 	stw	ra,12(sp)
   249f4:	002582c0 	call	2582c <_malloc_r>
   249f8:	1021883a 	mov	r16,r2
   249fc:	10000726 	beq	r2,zero,24a1c <__sfmoreglue+0x4c>
   24a00:	11000304 	addi	r4,r2,12
   24a04:	10000015 	stw	zero,0(r2)
   24a08:	14800115 	stw	r18,4(r2)
   24a0c:	11000215 	stw	r4,8(r2)
   24a10:	89801a04 	addi	r6,r17,104
   24a14:	000b883a 	mov	r5,zero
   24a18:	00263080 	call	26308 <memset>
   24a1c:	8005883a 	mov	r2,r16
   24a20:	dfc00317 	ldw	ra,12(sp)
   24a24:	dc800217 	ldw	r18,8(sp)
   24a28:	dc400117 	ldw	r17,4(sp)
   24a2c:	dc000017 	ldw	r16,0(sp)
   24a30:	dec00404 	addi	sp,sp,16
   24a34:	f800283a 	ret

00024a38 <__sfp>:
   24a38:	defffb04 	addi	sp,sp,-20
   24a3c:	008000f4 	movhi	r2,3
   24a40:	dc000015 	stw	r16,0(sp)
   24a44:	14084917 	ldw	r16,8484(r2)
   24a48:	dc400115 	stw	r17,4(sp)
   24a4c:	dfc00415 	stw	ra,16(sp)
   24a50:	80800e17 	ldw	r2,56(r16)
   24a54:	dcc00315 	stw	r19,12(sp)
   24a58:	dc800215 	stw	r18,8(sp)
   24a5c:	2023883a 	mov	r17,r4
   24a60:	10003126 	beq	r2,zero,24b28 <__sfp+0xf0>
   24a64:	8100ba17 	ldw	r4,744(r16)
   24a68:	8140b917 	ldw	r5,740(r16)
   24a6c:	04c00104 	movi	r19,4
   24a70:	8400b804 	addi	r16,r16,736
   24a74:	297fffc4 	addi	r5,r5,-1
   24a78:	2800050e 	bge	r5,zero,24a90 <__sfp+0x58>
   24a7c:	00002406 	br	24b10 <__sfp+0xd8>
   24a80:	297fffc4 	addi	r5,r5,-1
   24a84:	28bfffd8 	cmpnei	r2,r5,-1
   24a88:	21001a04 	addi	r4,r4,104
   24a8c:	10002026 	beq	r2,zero,24b10 <__sfp+0xd8>
   24a90:	2080030f 	ldh	r2,12(r4)
   24a94:	103ffa1e 	bne	r2,zero,24a80 <__sfp+0x48>
   24a98:	00bffff4 	movhi	r2,65535
   24a9c:	10800044 	addi	r2,r2,1
   24aa0:	20001915 	stw	zero,100(r4)
   24aa4:	20000015 	stw	zero,0(r4)
   24aa8:	20000115 	stw	zero,4(r4)
   24aac:	20000215 	stw	zero,8(r4)
   24ab0:	20800315 	stw	r2,12(r4)
   24ab4:	20000415 	stw	zero,16(r4)
   24ab8:	20000515 	stw	zero,20(r4)
   24abc:	20000615 	stw	zero,24(r4)
   24ac0:	20001705 	stb	zero,92(r4)
   24ac4:	20001745 	stb	zero,93(r4)
   24ac8:	20001785 	stb	zero,94(r4)
   24acc:	200017c5 	stb	zero,95(r4)
   24ad0:	20001805 	stb	zero,96(r4)
   24ad4:	20001845 	stb	zero,97(r4)
   24ad8:	20001885 	stb	zero,98(r4)
   24adc:	200018c5 	stb	zero,99(r4)
   24ae0:	20000c15 	stw	zero,48(r4)
   24ae4:	20000d15 	stw	zero,52(r4)
   24ae8:	20001115 	stw	zero,68(r4)
   24aec:	20001215 	stw	zero,72(r4)
   24af0:	2005883a 	mov	r2,r4
   24af4:	dfc00417 	ldw	ra,16(sp)
   24af8:	dcc00317 	ldw	r19,12(sp)
   24afc:	dc800217 	ldw	r18,8(sp)
   24b00:	dc400117 	ldw	r17,4(sp)
   24b04:	dc000017 	ldw	r16,0(sp)
   24b08:	dec00504 	addi	sp,sp,20
   24b0c:	f800283a 	ret
   24b10:	80800017 	ldw	r2,0(r16)
   24b14:	10000726 	beq	r2,zero,24b34 <__sfp+0xfc>
   24b18:	11000217 	ldw	r4,8(r2)
   24b1c:	11400117 	ldw	r5,4(r2)
   24b20:	1021883a 	mov	r16,r2
   24b24:	003fd306 	br	24a74 <__sfp+0x3c>
   24b28:	8009883a 	mov	r4,r16
   24b2c:	00248680 	call	24868 <__sinit.part.0>
   24b30:	003fcc06 	br	24a64 <__sfp+0x2c>
   24b34:	01406b04 	movi	r5,428
   24b38:	8809883a 	mov	r4,r17
   24b3c:	002582c0 	call	2582c <_malloc_r>
   24b40:	1025883a 	mov	r18,r2
   24b44:	10000c26 	beq	r2,zero,24b78 <__sfp+0x140>
   24b48:	11000304 	addi	r4,r2,12
   24b4c:	11000215 	stw	r4,8(r2)
   24b50:	000b883a 	mov	r5,zero
   24b54:	10000015 	stw	zero,0(r2)
   24b58:	14c00115 	stw	r19,4(r2)
   24b5c:	01806804 	movi	r6,416
   24b60:	00263080 	call	26308 <memset>
   24b64:	1009883a 	mov	r4,r2
   24b68:	84800015 	stw	r18,0(r16)
   24b6c:	014000c4 	movi	r5,3
   24b70:	9021883a 	mov	r16,r18
   24b74:	003fc606 	br	24a90 <__sfp+0x58>
   24b78:	80000015 	stw	zero,0(r16)
   24b7c:	00800304 	movi	r2,12
   24b80:	88800015 	stw	r2,0(r17)
   24b84:	0009883a 	mov	r4,zero
   24b88:	003fd906 	br	24af0 <__sfp+0xb8>

00024b8c <_cleanup>:
   24b8c:	008000f4 	movhi	r2,3
   24b90:	11084917 	ldw	r4,8484(r2)
   24b94:	014000f4 	movhi	r5,3
   24b98:	2965a704 	addi	r5,r5,-26980
   24b9c:	002551c1 	jmpi	2551c <_fwalk_reent>

00024ba0 <__sinit>:
   24ba0:	20800e17 	ldw	r2,56(r4)
   24ba4:	10000126 	beq	r2,zero,24bac <__sinit+0xc>
   24ba8:	f800283a 	ret
   24bac:	00248681 	jmpi	24868 <__sinit.part.0>

00024bb0 <__sfp_lock_acquire>:
   24bb0:	f800283a 	ret

00024bb4 <__sfp_lock_release>:
   24bb4:	f800283a 	ret

00024bb8 <__sinit_lock_acquire>:
   24bb8:	f800283a 	ret

00024bbc <__sinit_lock_release>:
   24bbc:	f800283a 	ret

00024bc0 <__fp_lock_all>:
   24bc0:	008000f4 	movhi	r2,3
   24bc4:	11084a17 	ldw	r4,8488(r2)
   24bc8:	014000b4 	movhi	r5,2
   24bcc:	29521304 	addi	r5,r5,18508
   24bd0:	00254841 	jmpi	25484 <_fwalk>

00024bd4 <__fp_unlock_all>:
   24bd4:	008000f4 	movhi	r2,3
   24bd8:	11084a17 	ldw	r4,8488(r2)
   24bdc:	014000b4 	movhi	r5,2
   24be0:	29521804 	addi	r5,r5,18528
   24be4:	00254841 	jmpi	25484 <_fwalk>

00024be8 <_malloc_trim_r>:
   24be8:	defffb04 	addi	sp,sp,-20
   24bec:	dcc00315 	stw	r19,12(sp)
   24bf0:	04c000f4 	movhi	r19,3
   24bf4:	dc800215 	stw	r18,8(sp)
   24bf8:	dc400115 	stw	r17,4(sp)
   24bfc:	dc000015 	stw	r16,0(sp)
   24c00:	dfc00415 	stw	ra,16(sp)
   24c04:	2821883a 	mov	r16,r5
   24c08:	9cc26a04 	addi	r19,r19,2472
   24c0c:	2025883a 	mov	r18,r4
   24c10:	002db6c0 	call	2db6c <__malloc_lock>
   24c14:	98800217 	ldw	r2,8(r19)
   24c18:	14400117 	ldw	r17,4(r2)
   24c1c:	00bfff04 	movi	r2,-4
   24c20:	88a2703a 	and	r17,r17,r2
   24c24:	8c21c83a 	sub	r16,r17,r16
   24c28:	8403fbc4 	addi	r16,r16,4079
   24c2c:	8020d33a 	srli	r16,r16,12
   24c30:	843fffc4 	addi	r16,r16,-1
   24c34:	8020933a 	slli	r16,r16,12
   24c38:	80840008 	cmpgei	r2,r16,4096
   24c3c:	10000626 	beq	r2,zero,24c58 <_malloc_trim_r+0x70>
   24c40:	000b883a 	mov	r5,zero
   24c44:	9009883a 	mov	r4,r18
   24c48:	0027c400 	call	27c40 <_sbrk_r>
   24c4c:	98c00217 	ldw	r3,8(r19)
   24c50:	1c47883a 	add	r3,r3,r17
   24c54:	10c00a26 	beq	r2,r3,24c80 <_malloc_trim_r+0x98>
   24c58:	9009883a 	mov	r4,r18
   24c5c:	002db900 	call	2db90 <__malloc_unlock>
   24c60:	0005883a 	mov	r2,zero
   24c64:	dfc00417 	ldw	ra,16(sp)
   24c68:	dcc00317 	ldw	r19,12(sp)
   24c6c:	dc800217 	ldw	r18,8(sp)
   24c70:	dc400117 	ldw	r17,4(sp)
   24c74:	dc000017 	ldw	r16,0(sp)
   24c78:	dec00504 	addi	sp,sp,20
   24c7c:	f800283a 	ret
   24c80:	040bc83a 	sub	r5,zero,r16
   24c84:	9009883a 	mov	r4,r18
   24c88:	0027c400 	call	27c40 <_sbrk_r>
   24c8c:	10bfffd8 	cmpnei	r2,r2,-1
   24c90:	10000d26 	beq	r2,zero,24cc8 <_malloc_trim_r+0xe0>
   24c94:	008000f4 	movhi	r2,3
   24c98:	108f5c17 	ldw	r2,15728(r2)
   24c9c:	98c00217 	ldw	r3,8(r19)
   24ca0:	8c23c83a 	sub	r17,r17,r16
   24ca4:	8c400054 	ori	r17,r17,1
   24ca8:	1421c83a 	sub	r16,r2,r16
   24cac:	1c400115 	stw	r17,4(r3)
   24cb0:	008000f4 	movhi	r2,3
   24cb4:	9009883a 	mov	r4,r18
   24cb8:	140f5c15 	stw	r16,15728(r2)
   24cbc:	002db900 	call	2db90 <__malloc_unlock>
   24cc0:	00800044 	movi	r2,1
   24cc4:	003fe706 	br	24c64 <_malloc_trim_r+0x7c>
   24cc8:	000b883a 	mov	r5,zero
   24ccc:	9009883a 	mov	r4,r18
   24cd0:	0027c400 	call	27c40 <_sbrk_r>
   24cd4:	99000217 	ldw	r4,8(r19)
   24cd8:	1107c83a 	sub	r3,r2,r4
   24cdc:	19400410 	cmplti	r5,r3,16
   24ce0:	283fdd1e 	bne	r5,zero,24c58 <_malloc_trim_r+0x70>
   24ce4:	014000f4 	movhi	r5,3
   24ce8:	29484b17 	ldw	r5,8492(r5)
   24cec:	18c00054 	ori	r3,r3,1
   24cf0:	20c00115 	stw	r3,4(r4)
   24cf4:	1145c83a 	sub	r2,r2,r5
   24cf8:	014000f4 	movhi	r5,3
   24cfc:	288f5c15 	stw	r2,15728(r5)
   24d00:	003fd506 	br	24c58 <_malloc_trim_r+0x70>

00024d04 <_free_r>:
   24d04:	28004f26 	beq	r5,zero,24e44 <_free_r+0x140>
   24d08:	defffd04 	addi	sp,sp,-12
   24d0c:	dc400115 	stw	r17,4(sp)
   24d10:	dc000015 	stw	r16,0(sp)
   24d14:	2023883a 	mov	r17,r4
   24d18:	2821883a 	mov	r16,r5
   24d1c:	dfc00215 	stw	ra,8(sp)
   24d20:	002db6c0 	call	2db6c <__malloc_lock>
   24d24:	81ffff17 	ldw	r7,-4(r16)
   24d28:	00bfff84 	movi	r2,-2
   24d2c:	80fffe04 	addi	r3,r16,-8
   24d30:	3884703a 	and	r2,r7,r2
   24d34:	010000f4 	movhi	r4,3
   24d38:	188d883a 	add	r6,r3,r2
   24d3c:	21026a04 	addi	r4,r4,2472
   24d40:	31400117 	ldw	r5,4(r6)
   24d44:	22000217 	ldw	r8,8(r4)
   24d48:	027fff04 	movi	r9,-4
   24d4c:	2a4a703a 	and	r5,r5,r9
   24d50:	41806426 	beq	r8,r6,24ee4 <_free_r+0x1e0>
   24d54:	31400115 	stw	r5,4(r6)
   24d58:	39c0004c 	andi	r7,r7,1
   24d5c:	3151883a 	add	r8,r6,r5
   24d60:	3800281e 	bne	r7,zero,24e04 <_free_r+0x100>
   24d64:	82bffe17 	ldw	r10,-8(r16)
   24d68:	42000117 	ldw	r8,4(r8)
   24d6c:	01c000f4 	movhi	r7,3
   24d70:	1a87c83a 	sub	r3,r3,r10
   24d74:	1a400217 	ldw	r9,8(r3)
   24d78:	39c26c04 	addi	r7,r7,2480
   24d7c:	1285883a 	add	r2,r2,r10
   24d80:	4200004c 	andi	r8,r8,1
   24d84:	49c04c26 	beq	r9,r7,24eb8 <_free_r+0x1b4>
   24d88:	1a800317 	ldw	r10,12(r3)
   24d8c:	4a800315 	stw	r10,12(r9)
   24d90:	52400215 	stw	r9,8(r10)
   24d94:	40007126 	beq	r8,zero,24f5c <_free_r+0x258>
   24d98:	11400054 	ori	r5,r2,1
   24d9c:	19400115 	stw	r5,4(r3)
   24da0:	30800015 	stw	r2,0(r6)
   24da4:	11408028 	cmpgeui	r5,r2,512
   24da8:	28002c1e 	bne	r5,zero,24e5c <_free_r+0x158>
   24dac:	100ad0fa 	srli	r5,r2,3
   24db0:	100cd17a 	srli	r6,r2,5
   24db4:	00800044 	movi	r2,1
   24db8:	29400044 	addi	r5,r5,1
   24dbc:	280a90fa 	slli	r5,r5,3
   24dc0:	21c00117 	ldw	r7,4(r4)
   24dc4:	1184983a 	sll	r2,r2,r6
   24dc8:	214b883a 	add	r5,r4,r5
   24dcc:	29800017 	ldw	r6,0(r5)
   24dd0:	11c4b03a 	or	r2,r2,r7
   24dd4:	29fffe04 	addi	r7,r5,-8
   24dd8:	19c00315 	stw	r7,12(r3)
   24ddc:	19800215 	stw	r6,8(r3)
   24de0:	20800115 	stw	r2,4(r4)
   24de4:	28c00015 	stw	r3,0(r5)
   24de8:	30c00315 	stw	r3,12(r6)
   24dec:	8809883a 	mov	r4,r17
   24df0:	dfc00217 	ldw	ra,8(sp)
   24df4:	dc400117 	ldw	r17,4(sp)
   24df8:	dc000017 	ldw	r16,0(sp)
   24dfc:	dec00304 	addi	sp,sp,12
   24e00:	002db901 	jmpi	2db90 <__malloc_unlock>
   24e04:	41c00117 	ldw	r7,4(r8)
   24e08:	39c0004c 	andi	r7,r7,1
   24e0c:	38000e1e 	bne	r7,zero,24e48 <_free_r+0x144>
   24e10:	01c000f4 	movhi	r7,3
   24e14:	1145883a 	add	r2,r2,r5
   24e18:	39c26c04 	addi	r7,r7,2480
   24e1c:	31400217 	ldw	r5,8(r6)
   24e20:	12400054 	ori	r9,r2,1
   24e24:	1891883a 	add	r8,r3,r2
   24e28:	29c05226 	beq	r5,r7,24f74 <_free_r+0x270>
   24e2c:	31800317 	ldw	r6,12(r6)
   24e30:	29800315 	stw	r6,12(r5)
   24e34:	31400215 	stw	r5,8(r6)
   24e38:	1a400115 	stw	r9,4(r3)
   24e3c:	40800015 	stw	r2,0(r8)
   24e40:	003fd806 	br	24da4 <_free_r+0xa0>
   24e44:	f800283a 	ret
   24e48:	11400054 	ori	r5,r2,1
   24e4c:	817fff15 	stw	r5,-4(r16)
   24e50:	30800015 	stw	r2,0(r6)
   24e54:	11408028 	cmpgeui	r5,r2,512
   24e58:	283fd426 	beq	r5,zero,24dac <_free_r+0xa8>
   24e5c:	100ad27a 	srli	r5,r2,9
   24e60:	29800168 	cmpgeui	r6,r5,5
   24e64:	3000341e 	bne	r6,zero,24f38 <_free_r+0x234>
   24e68:	100ad1ba 	srli	r5,r2,6
   24e6c:	29800e44 	addi	r6,r5,57
   24e70:	300c90fa 	slli	r6,r6,3
   24e74:	29c00e04 	addi	r7,r5,56
   24e78:	218d883a 	add	r6,r4,r6
   24e7c:	31400017 	ldw	r5,0(r6)
   24e80:	31bffe04 	addi	r6,r6,-8
   24e84:	31404226 	beq	r6,r5,24f90 <_free_r+0x28c>
   24e88:	01ffff04 	movi	r7,-4
   24e8c:	29000117 	ldw	r4,4(r5)
   24e90:	21c8703a 	and	r4,r4,r7
   24e94:	1100022e 	bgeu	r2,r4,24ea0 <_free_r+0x19c>
   24e98:	29400217 	ldw	r5,8(r5)
   24e9c:	317ffb1e 	bne	r6,r5,24e8c <_free_r+0x188>
   24ea0:	29800317 	ldw	r6,12(r5)
   24ea4:	19800315 	stw	r6,12(r3)
   24ea8:	19400215 	stw	r5,8(r3)
   24eac:	30c00215 	stw	r3,8(r6)
   24eb0:	28c00315 	stw	r3,12(r5)
   24eb4:	003fcd06 	br	24dec <_free_r+0xe8>
   24eb8:	40004d1e 	bne	r8,zero,24ff0 <_free_r+0x2ec>
   24ebc:	31000317 	ldw	r4,12(r6)
   24ec0:	31800217 	ldw	r6,8(r6)
   24ec4:	2885883a 	add	r2,r5,r2
   24ec8:	11400054 	ori	r5,r2,1
   24ecc:	31000315 	stw	r4,12(r6)
   24ed0:	21800215 	stw	r6,8(r4)
   24ed4:	19400115 	stw	r5,4(r3)
   24ed8:	1887883a 	add	r3,r3,r2
   24edc:	18800015 	stw	r2,0(r3)
   24ee0:	003fc206 	br	24dec <_free_r+0xe8>
   24ee4:	39c0004c 	andi	r7,r7,1
   24ee8:	1145883a 	add	r2,r2,r5
   24eec:	3800071e 	bne	r7,zero,24f0c <_free_r+0x208>
   24ef0:	81fffe17 	ldw	r7,-8(r16)
   24ef4:	19c7c83a 	sub	r3,r3,r7
   24ef8:	19400317 	ldw	r5,12(r3)
   24efc:	19800217 	ldw	r6,8(r3)
   24f00:	11c5883a 	add	r2,r2,r7
   24f04:	31400315 	stw	r5,12(r6)
   24f08:	29800215 	stw	r6,8(r5)
   24f0c:	014000f4 	movhi	r5,3
   24f10:	11800054 	ori	r6,r2,1
   24f14:	29484c17 	ldw	r5,8496(r5)
   24f18:	19800115 	stw	r6,4(r3)
   24f1c:	20c00215 	stw	r3,8(r4)
   24f20:	117fb236 	bltu	r2,r5,24dec <_free_r+0xe8>
   24f24:	008000f4 	movhi	r2,3
   24f28:	114f5117 	ldw	r5,15684(r2)
   24f2c:	8809883a 	mov	r4,r17
   24f30:	0024be80 	call	24be8 <_malloc_trim_r>
   24f34:	003fad06 	br	24dec <_free_r+0xe8>
   24f38:	29800568 	cmpgeui	r6,r5,21
   24f3c:	30000926 	beq	r6,zero,24f64 <_free_r+0x260>
   24f40:	29801568 	cmpgeui	r6,r5,85
   24f44:	3000191e 	bne	r6,zero,24fac <_free_r+0x2a8>
   24f48:	100ad33a 	srli	r5,r2,12
   24f4c:	29801bc4 	addi	r6,r5,111
   24f50:	300c90fa 	slli	r6,r6,3
   24f54:	29c01b84 	addi	r7,r5,110
   24f58:	003fc706 	br	24e78 <_free_r+0x174>
   24f5c:	1145883a 	add	r2,r2,r5
   24f60:	003fae06 	br	24e1c <_free_r+0x118>
   24f64:	29801704 	addi	r6,r5,92
   24f68:	300c90fa 	slli	r6,r6,3
   24f6c:	29c016c4 	addi	r7,r5,91
   24f70:	003fc106 	br	24e78 <_free_r+0x174>
   24f74:	20c00515 	stw	r3,20(r4)
   24f78:	20c00415 	stw	r3,16(r4)
   24f7c:	19c00315 	stw	r7,12(r3)
   24f80:	19c00215 	stw	r7,8(r3)
   24f84:	1a400115 	stw	r9,4(r3)
   24f88:	40800015 	stw	r2,0(r8)
   24f8c:	003f9706 	br	24dec <_free_r+0xe8>
   24f90:	380fd0ba 	srai	r7,r7,2
   24f94:	00800044 	movi	r2,1
   24f98:	22000117 	ldw	r8,4(r4)
   24f9c:	11ce983a 	sll	r7,r2,r7
   24fa0:	3a0eb03a 	or	r7,r7,r8
   24fa4:	21c00115 	stw	r7,4(r4)
   24fa8:	003fbe06 	br	24ea4 <_free_r+0x1a0>
   24fac:	29805568 	cmpgeui	r6,r5,341
   24fb0:	3000051e 	bne	r6,zero,24fc8 <_free_r+0x2c4>
   24fb4:	100ad3fa 	srli	r5,r2,15
   24fb8:	29801e04 	addi	r6,r5,120
   24fbc:	300c90fa 	slli	r6,r6,3
   24fc0:	29c01dc4 	addi	r7,r5,119
   24fc4:	003fac06 	br	24e78 <_free_r+0x174>
   24fc8:	29415568 	cmpgeui	r5,r5,1365
   24fcc:	2800051e 	bne	r5,zero,24fe4 <_free_r+0x2e0>
   24fd0:	100ad4ba 	srli	r5,r2,18
   24fd4:	29801f44 	addi	r6,r5,125
   24fd8:	300c90fa 	slli	r6,r6,3
   24fdc:	29c01f04 	addi	r7,r5,124
   24fe0:	003fa506 	br	24e78 <_free_r+0x174>
   24fe4:	0180fe04 	movi	r6,1016
   24fe8:	01c01f84 	movi	r7,126
   24fec:	003fa206 	br	24e78 <_free_r+0x174>
   24ff0:	11000054 	ori	r4,r2,1
   24ff4:	19000115 	stw	r4,4(r3)
   24ff8:	30800015 	stw	r2,0(r6)
   24ffc:	003f7b06 	br	24dec <_free_r+0xe8>

00025000 <__sfvwrite_r>:
   25000:	30800217 	ldw	r2,8(r6)
   25004:	10009a26 	beq	r2,zero,25270 <__sfvwrite_r+0x270>
   25008:	2a00030b 	ldhu	r8,12(r5)
   2500c:	defff404 	addi	sp,sp,-48
   25010:	dd400715 	stw	r21,28(sp)
   25014:	dd000615 	stw	r20,24(sp)
   25018:	dc000215 	stw	r16,8(sp)
   2501c:	dfc00b15 	stw	ra,44(sp)
   25020:	df000a15 	stw	fp,40(sp)
   25024:	ddc00915 	stw	r23,36(sp)
   25028:	dd800815 	stw	r22,32(sp)
   2502c:	dcc00515 	stw	r19,20(sp)
   25030:	dc800415 	stw	r18,16(sp)
   25034:	dc400315 	stw	r17,12(sp)
   25038:	4080020c 	andi	r2,r8,8
   2503c:	3029883a 	mov	r20,r6
   25040:	202b883a 	mov	r21,r4
   25044:	2821883a 	mov	r16,r5
   25048:	10002626 	beq	r2,zero,250e4 <__sfvwrite_r+0xe4>
   2504c:	28800417 	ldw	r2,16(r5)
   25050:	10002426 	beq	r2,zero,250e4 <__sfvwrite_r+0xe4>
   25054:	4080008c 	andi	r2,r8,2
   25058:	a4400017 	ldw	r17,0(r20)
   2505c:	10002926 	beq	r2,zero,25104 <__sfvwrite_r+0x104>
   25060:	05a00034 	movhi	r22,32768
   25064:	0027883a 	mov	r19,zero
   25068:	0025883a 	mov	r18,zero
   2506c:	b5bf0004 	addi	r22,r22,-1024
   25070:	980d883a 	mov	r6,r19
   25074:	a809883a 	mov	r4,r21
   25078:	90007026 	beq	r18,zero,2523c <__sfvwrite_r+0x23c>
   2507c:	900f883a 	mov	r7,r18
   25080:	b480012e 	bgeu	r22,r18,25088 <__sfvwrite_r+0x88>
   25084:	b00f883a 	mov	r7,r22
   25088:	80800917 	ldw	r2,36(r16)
   2508c:	81400717 	ldw	r5,28(r16)
   25090:	103ee83a 	callr	r2
   25094:	0080710e 	bge	zero,r2,2525c <__sfvwrite_r+0x25c>
   25098:	a0c00217 	ldw	r3,8(r20)
   2509c:	98a7883a 	add	r19,r19,r2
   250a0:	90a5c83a 	sub	r18,r18,r2
   250a4:	1885c83a 	sub	r2,r3,r2
   250a8:	a0800215 	stw	r2,8(r20)
   250ac:	103ff01e 	bne	r2,zero,25070 <__sfvwrite_r+0x70>
   250b0:	0005883a 	mov	r2,zero
   250b4:	dfc00b17 	ldw	ra,44(sp)
   250b8:	df000a17 	ldw	fp,40(sp)
   250bc:	ddc00917 	ldw	r23,36(sp)
   250c0:	dd800817 	ldw	r22,32(sp)
   250c4:	dd400717 	ldw	r21,28(sp)
   250c8:	dd000617 	ldw	r20,24(sp)
   250cc:	dcc00517 	ldw	r19,20(sp)
   250d0:	dc800417 	ldw	r18,16(sp)
   250d4:	dc400317 	ldw	r17,12(sp)
   250d8:	dc000217 	ldw	r16,8(sp)
   250dc:	dec00c04 	addi	sp,sp,48
   250e0:	f800283a 	ret
   250e4:	800b883a 	mov	r5,r16
   250e8:	a809883a 	mov	r4,r21
   250ec:	0022a980 	call	22a98 <__swsetup_r>
   250f0:	1000e21e 	bne	r2,zero,2547c <__sfvwrite_r+0x47c>
   250f4:	8200030b 	ldhu	r8,12(r16)
   250f8:	a4400017 	ldw	r17,0(r20)
   250fc:	4080008c 	andi	r2,r8,2
   25100:	103fd71e 	bne	r2,zero,25060 <__sfvwrite_r+0x60>
   25104:	4080004c 	andi	r2,r8,1
   25108:	10005b1e 	bne	r2,zero,25278 <__sfvwrite_r+0x278>
   2510c:	00a00034 	movhi	r2,32768
   25110:	10bfff84 	addi	r2,r2,-2
   25114:	00e00034 	movhi	r3,32768
   25118:	d8800015 	stw	r2,0(sp)
   2511c:	18bfffc4 	addi	r2,r3,-1
   25120:	0039883a 	mov	fp,zero
   25124:	0025883a 	mov	r18,zero
   25128:	d8800115 	stw	r2,4(sp)
   2512c:	90003f26 	beq	r18,zero,2522c <__sfvwrite_r+0x22c>
   25130:	4080800c 	andi	r2,r8,512
   25134:	81000017 	ldw	r4,0(r16)
   25138:	85c00217 	ldw	r23,8(r16)
   2513c:	10008726 	beq	r2,zero,2535c <__sfvwrite_r+0x35c>
   25140:	b82d883a 	mov	r22,r23
   25144:	95c0aa36 	bltu	r18,r23,253f0 <__sfvwrite_r+0x3f0>
   25148:	4081200c 	andi	r2,r8,1152
   2514c:	10002526 	beq	r2,zero,251e4 <__sfvwrite_r+0x1e4>
   25150:	80800517 	ldw	r2,20(r16)
   25154:	81400417 	ldw	r5,16(r16)
   25158:	108000e4 	muli	r2,r2,3
   2515c:	216dc83a 	sub	r22,r4,r5
   25160:	b1000044 	addi	r4,r22,1
   25164:	1026d7fa 	srli	r19,r2,31
   25168:	2489883a 	add	r4,r4,r18
   2516c:	9885883a 	add	r2,r19,r2
   25170:	1027d07a 	srai	r19,r2,1
   25174:	980d883a 	mov	r6,r19
   25178:	9900022e 	bgeu	r19,r4,25184 <__sfvwrite_r+0x184>
   2517c:	2027883a 	mov	r19,r4
   25180:	200d883a 	mov	r6,r4
   25184:	4201000c 	andi	r8,r8,1024
   25188:	4000ac26 	beq	r8,zero,2543c <__sfvwrite_r+0x43c>
   2518c:	300b883a 	mov	r5,r6
   25190:	a809883a 	mov	r4,r21
   25194:	002582c0 	call	2582c <_malloc_r>
   25198:	1000b426 	beq	r2,zero,2546c <__sfvwrite_r+0x46c>
   2519c:	81400417 	ldw	r5,16(r16)
   251a0:	b00d883a 	mov	r6,r22
   251a4:	1009883a 	mov	r4,r2
   251a8:	00260dc0 	call	260dc <memcpy>
   251ac:	100f883a 	mov	r7,r2
   251b0:	8080030b 	ldhu	r2,12(r16)
   251b4:	00fedfc4 	movi	r3,-1153
   251b8:	10c4703a 	and	r2,r2,r3
   251bc:	10802014 	ori	r2,r2,128
   251c0:	8080030d 	sth	r2,12(r16)
   251c4:	3d89883a 	add	r4,r7,r22
   251c8:	9d85c83a 	sub	r2,r19,r22
   251cc:	81c00415 	stw	r7,16(r16)
   251d0:	81000015 	stw	r4,0(r16)
   251d4:	84c00515 	stw	r19,20(r16)
   251d8:	902f883a 	mov	r23,r18
   251dc:	80800215 	stw	r2,8(r16)
   251e0:	902d883a 	mov	r22,r18
   251e4:	b00d883a 	mov	r6,r22
   251e8:	e00b883a 	mov	r5,fp
   251ec:	00261dc0 	call	261dc <memmove>
   251f0:	81000217 	ldw	r4,8(r16)
   251f4:	80800017 	ldw	r2,0(r16)
   251f8:	9027883a 	mov	r19,r18
   251fc:	25c9c83a 	sub	r4,r4,r23
   25200:	1585883a 	add	r2,r2,r22
   25204:	81000215 	stw	r4,8(r16)
   25208:	80800015 	stw	r2,0(r16)
   2520c:	0025883a 	mov	r18,zero
   25210:	a1800217 	ldw	r6,8(r20)
   25214:	e4f9883a 	add	fp,fp,r19
   25218:	34e7c83a 	sub	r19,r6,r19
   2521c:	a4c00215 	stw	r19,8(r20)
   25220:	983fa326 	beq	r19,zero,250b0 <__sfvwrite_r+0xb0>
   25224:	8200030b 	ldhu	r8,12(r16)
   25228:	903fc11e 	bne	r18,zero,25130 <__sfvwrite_r+0x130>
   2522c:	8f000017 	ldw	fp,0(r17)
   25230:	8c800117 	ldw	r18,4(r17)
   25234:	8c400204 	addi	r17,r17,8
   25238:	003fbc06 	br	2512c <__sfvwrite_r+0x12c>
   2523c:	8cc00017 	ldw	r19,0(r17)
   25240:	8c800117 	ldw	r18,4(r17)
   25244:	8c400204 	addi	r17,r17,8
   25248:	003f8906 	br	25070 <__sfvwrite_r+0x70>
   2524c:	800b883a 	mov	r5,r16
   25250:	a809883a 	mov	r4,r21
   25254:	00247680 	call	24768 <_fflush_r>
   25258:	10002226 	beq	r2,zero,252e4 <__sfvwrite_r+0x2e4>
   2525c:	8080030b 	ldhu	r2,12(r16)
   25260:	10801014 	ori	r2,r2,64
   25264:	8080030d 	sth	r2,12(r16)
   25268:	00bfffc4 	movi	r2,-1
   2526c:	003f9106 	br	250b4 <__sfvwrite_r+0xb4>
   25270:	0005883a 	mov	r2,zero
   25274:	f800283a 	ret
   25278:	002d883a 	mov	r22,zero
   2527c:	0039883a 	mov	fp,zero
   25280:	0005883a 	mov	r2,zero
   25284:	002f883a 	mov	r23,zero
   25288:	b0001d26 	beq	r22,zero,25300 <__sfvwrite_r+0x300>
   2528c:	10002026 	beq	r2,zero,25310 <__sfvwrite_r+0x310>
   25290:	e027883a 	mov	r19,fp
   25294:	b4c0012e 	bgeu	r22,r19,2529c <__sfvwrite_r+0x29c>
   25298:	b027883a 	mov	r19,r22
   2529c:	81000017 	ldw	r4,0(r16)
   252a0:	80800417 	ldw	r2,16(r16)
   252a4:	81c00517 	ldw	r7,20(r16)
   252a8:	1100032e 	bgeu	r2,r4,252b8 <__sfvwrite_r+0x2b8>
   252ac:	84800217 	ldw	r18,8(r16)
   252b0:	3ca5883a 	add	r18,r7,r18
   252b4:	94c01e16 	blt	r18,r19,25330 <__sfvwrite_r+0x330>
   252b8:	99c05016 	blt	r19,r7,253fc <__sfvwrite_r+0x3fc>
   252bc:	80800917 	ldw	r2,36(r16)
   252c0:	81400717 	ldw	r5,28(r16)
   252c4:	b80d883a 	mov	r6,r23
   252c8:	a809883a 	mov	r4,r21
   252cc:	103ee83a 	callr	r2
   252d0:	1025883a 	mov	r18,r2
   252d4:	00bfe10e 	bge	zero,r2,2525c <__sfvwrite_r+0x25c>
   252d8:	e4b9c83a 	sub	fp,fp,r18
   252dc:	e03fdb26 	beq	fp,zero,2524c <__sfvwrite_r+0x24c>
   252e0:	00800044 	movi	r2,1
   252e4:	a1800217 	ldw	r6,8(r20)
   252e8:	bcaf883a 	add	r23,r23,r18
   252ec:	b4adc83a 	sub	r22,r22,r18
   252f0:	34a5c83a 	sub	r18,r6,r18
   252f4:	a4800215 	stw	r18,8(r20)
   252f8:	903f6d26 	beq	r18,zero,250b0 <__sfvwrite_r+0xb0>
   252fc:	b03fe31e 	bne	r22,zero,2528c <__sfvwrite_r+0x28c>
   25300:	8d800117 	ldw	r22,4(r17)
   25304:	8dc00017 	ldw	r23,0(r17)
   25308:	8c400204 	addi	r17,r17,8
   2530c:	b03ffc26 	beq	r22,zero,25300 <__sfvwrite_r+0x300>
   25310:	b00d883a 	mov	r6,r22
   25314:	01400284 	movi	r5,10
   25318:	b809883a 	mov	r4,r23
   2531c:	002600c0 	call	2600c <memchr>
   25320:	10004326 	beq	r2,zero,25430 <__sfvwrite_r+0x430>
   25324:	10800044 	addi	r2,r2,1
   25328:	15f9c83a 	sub	fp,r2,r23
   2532c:	003fd806 	br	25290 <__sfvwrite_r+0x290>
   25330:	b80b883a 	mov	r5,r23
   25334:	900d883a 	mov	r6,r18
   25338:	00261dc0 	call	261dc <memmove>
   2533c:	80800017 	ldw	r2,0(r16)
   25340:	800b883a 	mov	r5,r16
   25344:	a809883a 	mov	r4,r21
   25348:	1485883a 	add	r2,r2,r18
   2534c:	80800015 	stw	r2,0(r16)
   25350:	00247680 	call	24768 <_fflush_r>
   25354:	103fe026 	beq	r2,zero,252d8 <__sfvwrite_r+0x2d8>
   25358:	003fc006 	br	2525c <__sfvwrite_r+0x25c>
   2535c:	80800417 	ldw	r2,16(r16)
   25360:	11001136 	bltu	r2,r4,253a8 <__sfvwrite_r+0x3a8>
   25364:	84c00517 	ldw	r19,20(r16)
   25368:	94c00f36 	bltu	r18,r19,253a8 <__sfvwrite_r+0x3a8>
   2536c:	d8800017 	ldw	r2,0(sp)
   25370:	14802d2e 	bgeu	r2,r18,25428 <__sfvwrite_r+0x428>
   25374:	d9000117 	ldw	r4,4(sp)
   25378:	980b883a 	mov	r5,r19
   2537c:	00206040 	call	20604 <__divsi3>
   25380:	14cf383a 	mul	r7,r2,r19
   25384:	82000917 	ldw	r8,36(r16)
   25388:	81400717 	ldw	r5,28(r16)
   2538c:	e00d883a 	mov	r6,fp
   25390:	a809883a 	mov	r4,r21
   25394:	403ee83a 	callr	r8
   25398:	1027883a 	mov	r19,r2
   2539c:	00bfaf0e 	bge	zero,r2,2525c <__sfvwrite_r+0x25c>
   253a0:	94e5c83a 	sub	r18,r18,r19
   253a4:	003f9a06 	br	25210 <__sfvwrite_r+0x210>
   253a8:	b827883a 	mov	r19,r23
   253ac:	95c0012e 	bgeu	r18,r23,253b4 <__sfvwrite_r+0x3b4>
   253b0:	9027883a 	mov	r19,r18
   253b4:	980d883a 	mov	r6,r19
   253b8:	e00b883a 	mov	r5,fp
   253bc:	00261dc0 	call	261dc <memmove>
   253c0:	80800217 	ldw	r2,8(r16)
   253c4:	81000017 	ldw	r4,0(r16)
   253c8:	14c5c83a 	sub	r2,r2,r19
   253cc:	24c9883a 	add	r4,r4,r19
   253d0:	80800215 	stw	r2,8(r16)
   253d4:	81000015 	stw	r4,0(r16)
   253d8:	103ff11e 	bne	r2,zero,253a0 <__sfvwrite_r+0x3a0>
   253dc:	800b883a 	mov	r5,r16
   253e0:	a809883a 	mov	r4,r21
   253e4:	00247680 	call	24768 <_fflush_r>
   253e8:	103fed26 	beq	r2,zero,253a0 <__sfvwrite_r+0x3a0>
   253ec:	003f9b06 	br	2525c <__sfvwrite_r+0x25c>
   253f0:	902f883a 	mov	r23,r18
   253f4:	902d883a 	mov	r22,r18
   253f8:	003f7a06 	br	251e4 <__sfvwrite_r+0x1e4>
   253fc:	980d883a 	mov	r6,r19
   25400:	b80b883a 	mov	r5,r23
   25404:	00261dc0 	call	261dc <memmove>
   25408:	80c00217 	ldw	r3,8(r16)
   2540c:	80800017 	ldw	r2,0(r16)
   25410:	9825883a 	mov	r18,r19
   25414:	1cc7c83a 	sub	r3,r3,r19
   25418:	14c5883a 	add	r2,r2,r19
   2541c:	80c00215 	stw	r3,8(r16)
   25420:	80800015 	stw	r2,0(r16)
   25424:	003fac06 	br	252d8 <__sfvwrite_r+0x2d8>
   25428:	9009883a 	mov	r4,r18
   2542c:	003fd206 	br	25378 <__sfvwrite_r+0x378>
   25430:	b4c00044 	addi	r19,r22,1
   25434:	9839883a 	mov	fp,r19
   25438:	003f9606 	br	25294 <__sfvwrite_r+0x294>
   2543c:	a809883a 	mov	r4,r21
   25440:	00277040 	call	27704 <_realloc_r>
   25444:	100f883a 	mov	r7,r2
   25448:	103f5e1e 	bne	r2,zero,251c4 <__sfvwrite_r+0x1c4>
   2544c:	81400417 	ldw	r5,16(r16)
   25450:	a809883a 	mov	r4,r21
   25454:	0024d040 	call	24d04 <_free_r>
   25458:	8080030b 	ldhu	r2,12(r16)
   2545c:	00c00304 	movi	r3,12
   25460:	a8c00015 	stw	r3,0(r21)
   25464:	10bfdfcc 	andi	r2,r2,65407
   25468:	003f7d06 	br	25260 <__sfvwrite_r+0x260>
   2546c:	00c00304 	movi	r3,12
   25470:	8080030b 	ldhu	r2,12(r16)
   25474:	a8c00015 	stw	r3,0(r21)
   25478:	003f7906 	br	25260 <__sfvwrite_r+0x260>
   2547c:	00bfffc4 	movi	r2,-1
   25480:	003f0c06 	br	250b4 <__sfvwrite_r+0xb4>

00025484 <_fwalk>:
   25484:	defffa04 	addi	sp,sp,-24
   25488:	dd000415 	stw	r20,16(sp)
   2548c:	dcc00315 	stw	r19,12(sp)
   25490:	dc800215 	stw	r18,8(sp)
   25494:	dfc00515 	stw	ra,20(sp)
   25498:	dc400115 	stw	r17,4(sp)
   2549c:	dc000015 	stw	r16,0(sp)
   254a0:	2827883a 	mov	r19,r5
   254a4:	2480b804 	addi	r18,r4,736
   254a8:	0029883a 	mov	r20,zero
   254ac:	94400117 	ldw	r17,4(r18)
   254b0:	94000217 	ldw	r16,8(r18)
   254b4:	8c7fffc4 	addi	r17,r17,-1
   254b8:	88000d16 	blt	r17,zero,254f0 <_fwalk+0x6c>
   254bc:	8080030b 	ldhu	r2,12(r16)
   254c0:	8c7fffc4 	addi	r17,r17,-1
   254c4:	108000b0 	cmpltui	r2,r2,2
   254c8:	1000061e 	bne	r2,zero,254e4 <_fwalk+0x60>
   254cc:	8080038f 	ldh	r2,14(r16)
   254d0:	8009883a 	mov	r4,r16
   254d4:	10bfffe0 	cmpeqi	r2,r2,-1
   254d8:	1000021e 	bne	r2,zero,254e4 <_fwalk+0x60>
   254dc:	983ee83a 	callr	r19
   254e0:	a0a8b03a 	or	r20,r20,r2
   254e4:	88bfffd8 	cmpnei	r2,r17,-1
   254e8:	84001a04 	addi	r16,r16,104
   254ec:	103ff31e 	bne	r2,zero,254bc <_fwalk+0x38>
   254f0:	94800017 	ldw	r18,0(r18)
   254f4:	903fed1e 	bne	r18,zero,254ac <_fwalk+0x28>
   254f8:	a005883a 	mov	r2,r20
   254fc:	dfc00517 	ldw	ra,20(sp)
   25500:	dd000417 	ldw	r20,16(sp)
   25504:	dcc00317 	ldw	r19,12(sp)
   25508:	dc800217 	ldw	r18,8(sp)
   2550c:	dc400117 	ldw	r17,4(sp)
   25510:	dc000017 	ldw	r16,0(sp)
   25514:	dec00604 	addi	sp,sp,24
   25518:	f800283a 	ret

0002551c <_fwalk_reent>:
   2551c:	defff904 	addi	sp,sp,-28
   25520:	dd400515 	stw	r21,20(sp)
   25524:	dd000415 	stw	r20,16(sp)
   25528:	dcc00315 	stw	r19,12(sp)
   2552c:	dc800215 	stw	r18,8(sp)
   25530:	dfc00615 	stw	ra,24(sp)
   25534:	dc400115 	stw	r17,4(sp)
   25538:	dc000015 	stw	r16,0(sp)
   2553c:	202b883a 	mov	r21,r4
   25540:	2827883a 	mov	r19,r5
   25544:	2480b804 	addi	r18,r4,736
   25548:	0029883a 	mov	r20,zero
   2554c:	94400117 	ldw	r17,4(r18)
   25550:	94000217 	ldw	r16,8(r18)
   25554:	8c7fffc4 	addi	r17,r17,-1
   25558:	88000e16 	blt	r17,zero,25594 <_fwalk_reent+0x78>
   2555c:	8080030b 	ldhu	r2,12(r16)
   25560:	8c7fffc4 	addi	r17,r17,-1
   25564:	108000b0 	cmpltui	r2,r2,2
   25568:	1000071e 	bne	r2,zero,25588 <_fwalk_reent+0x6c>
   2556c:	8080038f 	ldh	r2,14(r16)
   25570:	800b883a 	mov	r5,r16
   25574:	a809883a 	mov	r4,r21
   25578:	10bfffe0 	cmpeqi	r2,r2,-1
   2557c:	1000021e 	bne	r2,zero,25588 <_fwalk_reent+0x6c>
   25580:	983ee83a 	callr	r19
   25584:	a0a8b03a 	or	r20,r20,r2
   25588:	88bfffd8 	cmpnei	r2,r17,-1
   2558c:	84001a04 	addi	r16,r16,104
   25590:	103ff21e 	bne	r2,zero,2555c <_fwalk_reent+0x40>
   25594:	94800017 	ldw	r18,0(r18)
   25598:	903fec1e 	bne	r18,zero,2554c <_fwalk_reent+0x30>
   2559c:	a005883a 	mov	r2,r20
   255a0:	dfc00617 	ldw	ra,24(sp)
   255a4:	dd400517 	ldw	r21,20(sp)
   255a8:	dd000417 	ldw	r20,16(sp)
   255ac:	dcc00317 	ldw	r19,12(sp)
   255b0:	dc800217 	ldw	r18,8(sp)
   255b4:	dc400117 	ldw	r17,4(sp)
   255b8:	dc000017 	ldw	r16,0(sp)
   255bc:	dec00704 	addi	sp,sp,28
   255c0:	f800283a 	ret

000255c4 <__localeconv_l>:
   255c4:	20803c04 	addi	r2,r4,240
   255c8:	f800283a 	ret

000255cc <_localeconv_r>:
   255cc:	008000f4 	movhi	r2,3
   255d0:	1083a804 	addi	r2,r2,3744
   255d4:	f800283a 	ret

000255d8 <localeconv>:
   255d8:	008000f4 	movhi	r2,3
   255dc:	1083a804 	addi	r2,r2,3744
   255e0:	f800283a 	ret

000255e4 <__smakebuf_r>:
   255e4:	2880030b 	ldhu	r2,12(r5)
   255e8:	deffe804 	addi	sp,sp,-96
   255ec:	dc001215 	stw	r16,72(sp)
   255f0:	dfc01715 	stw	ra,92(sp)
   255f4:	dd001615 	stw	r20,88(sp)
   255f8:	dcc01515 	stw	r19,84(sp)
   255fc:	dc801415 	stw	r18,80(sp)
   25600:	dc401315 	stw	r17,76(sp)
   25604:	10c0008c 	andi	r3,r2,2
   25608:	2821883a 	mov	r16,r5
   2560c:	18000d26 	beq	r3,zero,25644 <__smakebuf_r+0x60>
   25610:	288010c4 	addi	r2,r5,67
   25614:	28800015 	stw	r2,0(r5)
   25618:	28800415 	stw	r2,16(r5)
   2561c:	00800044 	movi	r2,1
   25620:	28800515 	stw	r2,20(r5)
   25624:	dfc01717 	ldw	ra,92(sp)
   25628:	dd001617 	ldw	r20,88(sp)
   2562c:	dcc01517 	ldw	r19,84(sp)
   25630:	dc801417 	ldw	r18,80(sp)
   25634:	dc401317 	ldw	r17,76(sp)
   25638:	dc001217 	ldw	r16,72(sp)
   2563c:	dec01804 	addi	sp,sp,96
   25640:	f800283a 	ret
   25644:	2940038f 	ldh	r5,14(r5)
   25648:	2023883a 	mov	r17,r4
   2564c:	28002816 	blt	r5,zero,256f0 <__smakebuf_r+0x10c>
   25650:	d80d883a 	mov	r6,sp
   25654:	00299d40 	call	299d4 <_fstat_r>
   25658:	10002416 	blt	r2,zero,256ec <__smakebuf_r+0x108>
   2565c:	d8800117 	ldw	r2,4(sp)
   25660:	10bc000c 	andi	r2,r2,61440
   25664:	10880018 	cmpnei	r2,r2,8192
   25668:	1000461e 	bne	r2,zero,25784 <__smakebuf_r+0x1a0>
   2566c:	8140038f 	ldh	r5,14(r16)
   25670:	8809883a 	mov	r4,r17
   25674:	0029a340 	call	29a34 <_isatty_r>
   25678:	10003e26 	beq	r2,zero,25774 <__smakebuf_r+0x190>
   2567c:	8080030b 	ldhu	r2,12(r16)
   25680:	80c010c4 	addi	r3,r16,67
   25684:	80c00015 	stw	r3,0(r16)
   25688:	10800054 	ori	r2,r2,1
   2568c:	8080030d 	sth	r2,12(r16)
   25690:	00800044 	movi	r2,1
   25694:	80c00415 	stw	r3,16(r16)
   25698:	80800515 	stw	r2,20(r16)
   2569c:	04c00044 	movi	r19,1
   256a0:	05010004 	movi	r20,1024
   256a4:	04820004 	movi	r18,2048
   256a8:	a00b883a 	mov	r5,r20
   256ac:	8809883a 	mov	r4,r17
   256b0:	002582c0 	call	2582c <_malloc_r>
   256b4:	10001726 	beq	r2,zero,25714 <__smakebuf_r+0x130>
   256b8:	80c0030b 	ldhu	r3,12(r16)
   256bc:	010000b4 	movhi	r4,2
   256c0:	21121504 	addi	r4,r4,18516
   256c4:	89000f15 	stw	r4,60(r17)
   256c8:	18c02014 	ori	r3,r3,128
   256cc:	80c0030d 	sth	r3,12(r16)
   256d0:	80800015 	stw	r2,0(r16)
   256d4:	80800415 	stw	r2,16(r16)
   256d8:	85000515 	stw	r20,20(r16)
   256dc:	98001d1e 	bne	r19,zero,25754 <__smakebuf_r+0x170>
   256e0:	90c6b03a 	or	r3,r18,r3
   256e4:	80c0030d 	sth	r3,12(r16)
   256e8:	003fce06 	br	25624 <__smakebuf_r+0x40>
   256ec:	8080030b 	ldhu	r2,12(r16)
   256f0:	1080200c 	andi	r2,r2,128
   256f4:	0027883a 	mov	r19,zero
   256f8:	10001326 	beq	r2,zero,25748 <__smakebuf_r+0x164>
   256fc:	05001004 	movi	r20,64
   25700:	a00b883a 	mov	r5,r20
   25704:	8809883a 	mov	r4,r17
   25708:	0025883a 	mov	r18,zero
   2570c:	002582c0 	call	2582c <_malloc_r>
   25710:	103fe91e 	bne	r2,zero,256b8 <__smakebuf_r+0xd4>
   25714:	8080030b 	ldhu	r2,12(r16)
   25718:	10c0800c 	andi	r3,r2,512
   2571c:	183fc11e 	bne	r3,zero,25624 <__smakebuf_r+0x40>
   25720:	00ffff04 	movi	r3,-4
   25724:	10c4703a 	and	r2,r2,r3
   25728:	10800094 	ori	r2,r2,2
   2572c:	80c010c4 	addi	r3,r16,67
   25730:	8080030d 	sth	r2,12(r16)
   25734:	00800044 	movi	r2,1
   25738:	80c00015 	stw	r3,0(r16)
   2573c:	80c00415 	stw	r3,16(r16)
   25740:	80800515 	stw	r2,20(r16)
   25744:	003fb706 	br	25624 <__smakebuf_r+0x40>
   25748:	05010004 	movi	r20,1024
   2574c:	0025883a 	mov	r18,zero
   25750:	003fd506 	br	256a8 <__smakebuf_r+0xc4>
   25754:	8140038f 	ldh	r5,14(r16)
   25758:	8809883a 	mov	r4,r17
   2575c:	0029a340 	call	29a34 <_isatty_r>
   25760:	80c0030b 	ldhu	r3,12(r16)
   25764:	103fde26 	beq	r2,zero,256e0 <__smakebuf_r+0xfc>
   25768:	18ffff0c 	andi	r3,r3,65532
   2576c:	18c00054 	ori	r3,r3,1
   25770:	003fdb06 	br	256e0 <__smakebuf_r+0xfc>
   25774:	04c00044 	movi	r19,1
   25778:	05010004 	movi	r20,1024
   2577c:	04820004 	movi	r18,2048
   25780:	003fc906 	br	256a8 <__smakebuf_r+0xc4>
   25784:	0027883a 	mov	r19,zero
   25788:	05010004 	movi	r20,1024
   2578c:	04820004 	movi	r18,2048
   25790:	003fc506 	br	256a8 <__smakebuf_r+0xc4>

00025794 <__swhatbuf_r>:
   25794:	deffea04 	addi	sp,sp,-88
   25798:	dc001215 	stw	r16,72(sp)
   2579c:	2821883a 	mov	r16,r5
   257a0:	2940038f 	ldh	r5,14(r5)
   257a4:	dc801415 	stw	r18,80(sp)
   257a8:	dc401315 	stw	r17,76(sp)
   257ac:	dfc01515 	stw	ra,84(sp)
   257b0:	3023883a 	mov	r17,r6
   257b4:	3825883a 	mov	r18,r7
   257b8:	28001016 	blt	r5,zero,257fc <__swhatbuf_r+0x68>
   257bc:	d80d883a 	mov	r6,sp
   257c0:	00299d40 	call	299d4 <_fstat_r>
   257c4:	10000d16 	blt	r2,zero,257fc <__swhatbuf_r+0x68>
   257c8:	d8c00117 	ldw	r3,4(sp)
   257cc:	00820004 	movi	r2,2048
   257d0:	18fc000c 	andi	r3,r3,61440
   257d4:	18c80020 	cmpeqi	r3,r3,8192
   257d8:	90c00015 	stw	r3,0(r18)
   257dc:	00c10004 	movi	r3,1024
   257e0:	88c00015 	stw	r3,0(r17)
   257e4:	dfc01517 	ldw	ra,84(sp)
   257e8:	dc801417 	ldw	r18,80(sp)
   257ec:	dc401317 	ldw	r17,76(sp)
   257f0:	dc001217 	ldw	r16,72(sp)
   257f4:	dec01604 	addi	sp,sp,88
   257f8:	f800283a 	ret
   257fc:	8080030b 	ldhu	r2,12(r16)
   25800:	90000015 	stw	zero,0(r18)
   25804:	1080200c 	andi	r2,r2,128
   25808:	10000426 	beq	r2,zero,2581c <__swhatbuf_r+0x88>
   2580c:	00801004 	movi	r2,64
   25810:	88800015 	stw	r2,0(r17)
   25814:	0005883a 	mov	r2,zero
   25818:	003ff206 	br	257e4 <__swhatbuf_r+0x50>
   2581c:	00810004 	movi	r2,1024
   25820:	88800015 	stw	r2,0(r17)
   25824:	0005883a 	mov	r2,zero
   25828:	003fee06 	br	257e4 <__swhatbuf_r+0x50>

0002582c <_malloc_r>:
   2582c:	defff604 	addi	sp,sp,-40
   25830:	dc400115 	stw	r17,4(sp)
   25834:	2c4002c4 	addi	r17,r5,11
   25838:	dc800215 	stw	r18,8(sp)
   2583c:	dfc00915 	stw	ra,36(sp)
   25840:	df000815 	stw	fp,32(sp)
   25844:	ddc00715 	stw	r23,28(sp)
   25848:	dd800615 	stw	r22,24(sp)
   2584c:	dd400515 	stw	r21,20(sp)
   25850:	dd000415 	stw	r20,16(sp)
   25854:	dcc00315 	stw	r19,12(sp)
   25858:	dc000015 	stw	r16,0(sp)
   2585c:	888005e8 	cmpgeui	r2,r17,23
   25860:	2025883a 	mov	r18,r4
   25864:	10001b1e 	bne	r2,zero,258d4 <_malloc_r+0xa8>
   25868:	29400468 	cmpgeui	r5,r5,17
   2586c:	2800821e 	bne	r5,zero,25a78 <_malloc_r+0x24c>
   25870:	002db6c0 	call	2db6c <__malloc_lock>
   25874:	04400404 	movi	r17,16
   25878:	00800604 	movi	r2,24
   2587c:	01c00084 	movi	r7,2
   25880:	04c000f4 	movhi	r19,3
   25884:	9cc26a04 	addi	r19,r19,2472
   25888:	9885883a 	add	r2,r19,r2
   2588c:	14000117 	ldw	r16,4(r2)
   25890:	10fffe04 	addi	r3,r2,-8
   25894:	80c08b26 	beq	r16,r3,25ac4 <_malloc_r+0x298>
   25898:	80800117 	ldw	r2,4(r16)
   2589c:	81000317 	ldw	r4,12(r16)
   258a0:	00ffff04 	movi	r3,-4
   258a4:	10c4703a 	and	r2,r2,r3
   258a8:	81400217 	ldw	r5,8(r16)
   258ac:	8085883a 	add	r2,r16,r2
   258b0:	10c00117 	ldw	r3,4(r2)
   258b4:	29000315 	stw	r4,12(r5)
   258b8:	21400215 	stw	r5,8(r4)
   258bc:	18c00054 	ori	r3,r3,1
   258c0:	10c00115 	stw	r3,4(r2)
   258c4:	9009883a 	mov	r4,r18
   258c8:	002db900 	call	2db90 <__malloc_unlock>
   258cc:	80800204 	addi	r2,r16,8
   258d0:	00006c06 	br	25a84 <_malloc_r+0x258>
   258d4:	00bffe04 	movi	r2,-8
   258d8:	88a2703a 	and	r17,r17,r2
   258dc:	88006616 	blt	r17,zero,25a78 <_malloc_r+0x24c>
   258e0:	89406536 	bltu	r17,r5,25a78 <_malloc_r+0x24c>
   258e4:	002db6c0 	call	2db6c <__malloc_lock>
   258e8:	88807e28 	cmpgeui	r2,r17,504
   258ec:	10012226 	beq	r2,zero,25d78 <_malloc_r+0x54c>
   258f0:	8804d27a 	srli	r2,r17,9
   258f4:	10006f26 	beq	r2,zero,25ab4 <_malloc_r+0x288>
   258f8:	10c00168 	cmpgeui	r3,r2,5
   258fc:	1800fe1e 	bne	r3,zero,25cf8 <_malloc_r+0x4cc>
   25900:	8804d1ba 	srli	r2,r17,6
   25904:	11c00e44 	addi	r7,r2,57
   25908:	380890fa 	slli	r4,r7,3
   2590c:	12000e04 	addi	r8,r2,56
   25910:	04c000f4 	movhi	r19,3
   25914:	9cc26a04 	addi	r19,r19,2472
   25918:	9909883a 	add	r4,r19,r4
   2591c:	24000117 	ldw	r16,4(r4)
   25920:	213ffe04 	addi	r4,r4,-8
   25924:	24000b26 	beq	r4,r16,25954 <_malloc_r+0x128>
   25928:	01bfff04 	movi	r6,-4
   2592c:	00000306 	br	2593c <_malloc_r+0x110>
   25930:	1800d60e 	bge	r3,zero,25c8c <_malloc_r+0x460>
   25934:	84000317 	ldw	r16,12(r16)
   25938:	24000626 	beq	r4,r16,25954 <_malloc_r+0x128>
   2593c:	80800117 	ldw	r2,4(r16)
   25940:	1184703a 	and	r2,r2,r6
   25944:	1447c83a 	sub	r3,r2,r17
   25948:	19400408 	cmpgei	r5,r3,16
   2594c:	283ff826 	beq	r5,zero,25930 <_malloc_r+0x104>
   25950:	400f883a 	mov	r7,r8
   25954:	9c000417 	ldw	r16,16(r19)
   25958:	024000f4 	movhi	r9,3
   2595c:	4a426c04 	addi	r9,r9,2480
   25960:	82405f26 	beq	r16,r9,25ae0 <_malloc_r+0x2b4>
   25964:	80c00117 	ldw	r3,4(r16)
   25968:	00bfff04 	movi	r2,-4
   2596c:	1884703a 	and	r2,r3,r2
   25970:	1447c83a 	sub	r3,r2,r17
   25974:	19000410 	cmplti	r4,r3,16
   25978:	20010a26 	beq	r4,zero,25da4 <_malloc_r+0x578>
   2597c:	9a400515 	stw	r9,20(r19)
   25980:	9a400415 	stw	r9,16(r19)
   25984:	1800ff0e 	bge	r3,zero,25d84 <_malloc_r+0x558>
   25988:	10c08028 	cmpgeui	r3,r2,512
   2598c:	1800c11e 	bne	r3,zero,25c94 <_malloc_r+0x468>
   25990:	1006d0fa 	srli	r3,r2,3
   25994:	1008d17a 	srli	r4,r2,5
   25998:	00800044 	movi	r2,1
   2599c:	18c00044 	addi	r3,r3,1
   259a0:	180690fa 	slli	r3,r3,3
   259a4:	99400117 	ldw	r5,4(r19)
   259a8:	1104983a 	sll	r2,r2,r4
   259ac:	98c7883a 	add	r3,r19,r3
   259b0:	19000017 	ldw	r4,0(r3)
   259b4:	1144b03a 	or	r2,r2,r5
   259b8:	197ffe04 	addi	r5,r3,-8
   259bc:	81400315 	stw	r5,12(r16)
   259c0:	81000215 	stw	r4,8(r16)
   259c4:	98800115 	stw	r2,4(r19)
   259c8:	1c000015 	stw	r16,0(r3)
   259cc:	24000315 	stw	r16,12(r4)
   259d0:	3807d0ba 	srai	r3,r7,2
   259d4:	01000044 	movi	r4,1
   259d8:	20c8983a 	sll	r4,r4,r3
   259dc:	11004536 	bltu	r2,r4,25af4 <_malloc_r+0x2c8>
   259e0:	2086703a 	and	r3,r4,r2
   259e4:	18000a1e 	bne	r3,zero,25a10 <_malloc_r+0x1e4>
   259e8:	00ffff04 	movi	r3,-4
   259ec:	2109883a 	add	r4,r4,r4
   259f0:	38ce703a 	and	r7,r7,r3
   259f4:	2086703a 	and	r3,r4,r2
   259f8:	39c00104 	addi	r7,r7,4
   259fc:	1800041e 	bne	r3,zero,25a10 <_malloc_r+0x1e4>
   25a00:	2109883a 	add	r4,r4,r4
   25a04:	2086703a 	and	r3,r4,r2
   25a08:	39c00104 	addi	r7,r7,4
   25a0c:	183ffc26 	beq	r3,zero,25a00 <_malloc_r+0x1d4>
   25a10:	02bfff04 	movi	r10,-4
   25a14:	381690fa 	slli	r11,r7,3
   25a18:	3819883a 	mov	r12,r7
   25a1c:	9ad7883a 	add	r11,r19,r11
   25a20:	5811883a 	mov	r8,r11
   25a24:	40800317 	ldw	r2,12(r8)
   25a28:	4080bc26 	beq	r8,r2,25d1c <_malloc_r+0x4f0>
   25a2c:	10c00117 	ldw	r3,4(r2)
   25a30:	1021883a 	mov	r16,r2
   25a34:	10800317 	ldw	r2,12(r2)
   25a38:	1a86703a 	and	r3,r3,r10
   25a3c:	1c4bc83a 	sub	r5,r3,r17
   25a40:	29800410 	cmplti	r6,r5,16
   25a44:	3000ba26 	beq	r6,zero,25d30 <_malloc_r+0x504>
   25a48:	283ff716 	blt	r5,zero,25a28 <_malloc_r+0x1fc>
   25a4c:	80c7883a 	add	r3,r16,r3
   25a50:	19400117 	ldw	r5,4(r3)
   25a54:	81800217 	ldw	r6,8(r16)
   25a58:	9009883a 	mov	r4,r18
   25a5c:	29400054 	ori	r5,r5,1
   25a60:	19400115 	stw	r5,4(r3)
   25a64:	30800315 	stw	r2,12(r6)
   25a68:	11800215 	stw	r6,8(r2)
   25a6c:	002db900 	call	2db90 <__malloc_unlock>
   25a70:	80800204 	addi	r2,r16,8
   25a74:	00000306 	br	25a84 <_malloc_r+0x258>
   25a78:	00800304 	movi	r2,12
   25a7c:	90800015 	stw	r2,0(r18)
   25a80:	0005883a 	mov	r2,zero
   25a84:	dfc00917 	ldw	ra,36(sp)
   25a88:	df000817 	ldw	fp,32(sp)
   25a8c:	ddc00717 	ldw	r23,28(sp)
   25a90:	dd800617 	ldw	r22,24(sp)
   25a94:	dd400517 	ldw	r21,20(sp)
   25a98:	dd000417 	ldw	r20,16(sp)
   25a9c:	dcc00317 	ldw	r19,12(sp)
   25aa0:	dc800217 	ldw	r18,8(sp)
   25aa4:	dc400117 	ldw	r17,4(sp)
   25aa8:	dc000017 	ldw	r16,0(sp)
   25aac:	dec00a04 	addi	sp,sp,40
   25ab0:	f800283a 	ret
   25ab4:	01008004 	movi	r4,512
   25ab8:	01c01004 	movi	r7,64
   25abc:	02000fc4 	movi	r8,63
   25ac0:	003f9306 	br	25910 <_malloc_r+0xe4>
   25ac4:	14000317 	ldw	r16,12(r2)
   25ac8:	39c00084 	addi	r7,r7,2
   25acc:	143f721e 	bne	r2,r16,25898 <_malloc_r+0x6c>
   25ad0:	9c000417 	ldw	r16,16(r19)
   25ad4:	024000f4 	movhi	r9,3
   25ad8:	4a426c04 	addi	r9,r9,2480
   25adc:	827fa11e 	bne	r16,r9,25964 <_malloc_r+0x138>
   25ae0:	3807d0ba 	srai	r3,r7,2
   25ae4:	01000044 	movi	r4,1
   25ae8:	98800117 	ldw	r2,4(r19)
   25aec:	20c8983a 	sll	r4,r4,r3
   25af0:	113fbb2e 	bgeu	r2,r4,259e0 <_malloc_r+0x1b4>
   25af4:	9c000217 	ldw	r16,8(r19)
   25af8:	00bfff04 	movi	r2,-4
   25afc:	85400117 	ldw	r21,4(r16)
   25b00:	a8ac703a 	and	r22,r21,r2
   25b04:	b4400336 	bltu	r22,r17,25b14 <_malloc_r+0x2e8>
   25b08:	b445c83a 	sub	r2,r22,r17
   25b0c:	10c00408 	cmpgei	r3,r2,16
   25b10:	1800541e 	bne	r3,zero,25c64 <_malloc_r+0x438>
   25b14:	008000f4 	movhi	r2,3
   25b18:	10884b17 	ldw	r2,8492(r2)
   25b1c:	00c000f4 	movhi	r3,3
   25b20:	1d4f5117 	ldw	r21,15684(r3)
   25b24:	10bfffd8 	cmpnei	r2,r2,-1
   25b28:	85b9883a 	add	fp,r16,r22
   25b2c:	8d6b883a 	add	r21,r17,r21
   25b30:	1000d626 	beq	r2,zero,25e8c <_malloc_r+0x660>
   25b34:	ad4403c4 	addi	r21,r21,4111
   25b38:	00bc0004 	movi	r2,-4096
   25b3c:	a8aa703a 	and	r21,r21,r2
   25b40:	a80b883a 	mov	r5,r21
   25b44:	9009883a 	mov	r4,r18
   25b48:	0027c400 	call	27c40 <_sbrk_r>
   25b4c:	102f883a 	mov	r23,r2
   25b50:	10bfffd8 	cmpnei	r2,r2,-1
   25b54:	1000a826 	beq	r2,zero,25df8 <_malloc_r+0x5cc>
   25b58:	bf00a636 	bltu	r23,fp,25df4 <_malloc_r+0x5c8>
   25b5c:	008000f4 	movhi	r2,3
   25b60:	150f5c17 	ldw	r20,15728(r2)
   25b64:	ad29883a 	add	r20,r21,r20
   25b68:	150f5c15 	stw	r20,15728(r2)
   25b6c:	a007883a 	mov	r3,r20
   25b70:	e5c0ec26 	beq	fp,r23,25f24 <_malloc_r+0x6f8>
   25b74:	008000f4 	movhi	r2,3
   25b78:	10884b17 	ldw	r2,8492(r2)
   25b7c:	10bfffd8 	cmpnei	r2,r2,-1
   25b80:	1000ef26 	beq	r2,zero,25f40 <_malloc_r+0x714>
   25b84:	bf39c83a 	sub	fp,r23,fp
   25b88:	e0c7883a 	add	r3,fp,r3
   25b8c:	008000f4 	movhi	r2,3
   25b90:	10cf5c15 	stw	r3,15728(r2)
   25b94:	bf0001cc 	andi	fp,r23,7
   25b98:	e000c526 	beq	fp,zero,25eb0 <_malloc_r+0x684>
   25b9c:	bf2fc83a 	sub	r23,r23,fp
   25ba0:	bdc00204 	addi	r23,r23,8
   25ba4:	05040204 	movi	r20,4104
   25ba8:	a729c83a 	sub	r20,r20,fp
   25bac:	bd6b883a 	add	r21,r23,r21
   25bb0:	a569c83a 	sub	r20,r20,r21
   25bb4:	a503ffcc 	andi	r20,r20,4095
   25bb8:	a00b883a 	mov	r5,r20
   25bbc:	9009883a 	mov	r4,r18
   25bc0:	0027c400 	call	27c40 <_sbrk_r>
   25bc4:	10ffffe0 	cmpeqi	r3,r2,-1
   25bc8:	1800f31e 	bne	r3,zero,25f98 <_malloc_r+0x76c>
   25bcc:	15c5c83a 	sub	r2,r2,r23
   25bd0:	152b883a 	add	r21,r2,r20
   25bd4:	008000f4 	movhi	r2,3
   25bd8:	114f5c17 	ldw	r5,15728(r2)
   25bdc:	9dc00215 	stw	r23,8(r19)
   25be0:	ad400054 	ori	r21,r21,1
   25be4:	a169883a 	add	r20,r20,r5
   25be8:	150f5c15 	stw	r20,15728(r2)
   25bec:	bd400115 	stw	r21,4(r23)
   25bf0:	84c0d626 	beq	r16,r19,25f4c <_malloc_r+0x720>
   25bf4:	b0800428 	cmpgeui	r2,r22,16
   25bf8:	1000d626 	beq	r2,zero,25f54 <_malloc_r+0x728>
   25bfc:	80c00117 	ldw	r3,4(r16)
   25c00:	013ffe04 	movi	r4,-8
   25c04:	b0bffd04 	addi	r2,r22,-12
   25c08:	1104703a 	and	r2,r2,r4
   25c0c:	18c0004c 	andi	r3,r3,1
   25c10:	1886b03a 	or	r3,r3,r2
   25c14:	80c00115 	stw	r3,4(r16)
   25c18:	01000144 	movi	r4,5
   25c1c:	8087883a 	add	r3,r16,r2
   25c20:	19000115 	stw	r4,4(r3)
   25c24:	19000215 	stw	r4,8(r3)
   25c28:	10800428 	cmpgeui	r2,r2,16
   25c2c:	1000df1e 	bne	r2,zero,25fac <_malloc_r+0x780>
   25c30:	bd400117 	ldw	r21,4(r23)
   25c34:	b821883a 	mov	r16,r23
   25c38:	008000f4 	movhi	r2,3
   25c3c:	108f5017 	ldw	r2,15680(r2)
   25c40:	1500022e 	bgeu	r2,r20,25c4c <_malloc_r+0x420>
   25c44:	008000f4 	movhi	r2,3
   25c48:	150f5015 	stw	r20,15680(r2)
   25c4c:	008000f4 	movhi	r2,3
   25c50:	108f4f17 	ldw	r2,15676(r2)
   25c54:	15006a2e 	bgeu	r2,r20,25e00 <_malloc_r+0x5d4>
   25c58:	008000f4 	movhi	r2,3
   25c5c:	150f4f15 	stw	r20,15676(r2)
   25c60:	00006706 	br	25e00 <_malloc_r+0x5d4>
   25c64:	88c00054 	ori	r3,r17,1
   25c68:	80c00115 	stw	r3,4(r16)
   25c6c:	8463883a 	add	r17,r16,r17
   25c70:	10800054 	ori	r2,r2,1
   25c74:	9c400215 	stw	r17,8(r19)
   25c78:	88800115 	stw	r2,4(r17)
   25c7c:	9009883a 	mov	r4,r18
   25c80:	002db900 	call	2db90 <__malloc_unlock>
   25c84:	80800204 	addi	r2,r16,8
   25c88:	003f7e06 	br	25a84 <_malloc_r+0x258>
   25c8c:	81000317 	ldw	r4,12(r16)
   25c90:	003f0506 	br	258a8 <_malloc_r+0x7c>
   25c94:	1006d27a 	srli	r3,r2,9
   25c98:	19000168 	cmpgeui	r4,r3,5
   25c9c:	20005026 	beq	r4,zero,25de0 <_malloc_r+0x5b4>
   25ca0:	19000568 	cmpgeui	r4,r3,21
   25ca4:	20008c1e 	bne	r4,zero,25ed8 <_malloc_r+0x6ac>
   25ca8:	19401704 	addi	r5,r3,92
   25cac:	280a90fa 	slli	r5,r5,3
   25cb0:	190016c4 	addi	r4,r3,91
   25cb4:	994b883a 	add	r5,r19,r5
   25cb8:	28c00017 	ldw	r3,0(r5)
   25cbc:	297ffe04 	addi	r5,r5,-8
   25cc0:	28c07426 	beq	r5,r3,25e94 <_malloc_r+0x668>
   25cc4:	01bfff04 	movi	r6,-4
   25cc8:	19000117 	ldw	r4,4(r3)
   25ccc:	2188703a 	and	r4,r4,r6
   25cd0:	1100022e 	bgeu	r2,r4,25cdc <_malloc_r+0x4b0>
   25cd4:	18c00217 	ldw	r3,8(r3)
   25cd8:	28fffb1e 	bne	r5,r3,25cc8 <_malloc_r+0x49c>
   25cdc:	19400317 	ldw	r5,12(r3)
   25ce0:	98800117 	ldw	r2,4(r19)
   25ce4:	81400315 	stw	r5,12(r16)
   25ce8:	80c00215 	stw	r3,8(r16)
   25cec:	2c000215 	stw	r16,8(r5)
   25cf0:	1c000315 	stw	r16,12(r3)
   25cf4:	003f3606 	br	259d0 <_malloc_r+0x1a4>
   25cf8:	10c00568 	cmpgeui	r3,r2,21
   25cfc:	18004a26 	beq	r3,zero,25e28 <_malloc_r+0x5fc>
   25d00:	10c01568 	cmpgeui	r3,r2,85
   25d04:	18007b1e 	bne	r3,zero,25ef4 <_malloc_r+0x6c8>
   25d08:	8804d33a 	srli	r2,r17,12
   25d0c:	11c01bc4 	addi	r7,r2,111
   25d10:	380890fa 	slli	r4,r7,3
   25d14:	12001b84 	addi	r8,r2,110
   25d18:	003efd06 	br	25910 <_malloc_r+0xe4>
   25d1c:	63000044 	addi	r12,r12,1
   25d20:	608000cc 	andi	r2,r12,3
   25d24:	42000204 	addi	r8,r8,8
   25d28:	103f3e1e 	bne	r2,zero,25a24 <_malloc_r+0x1f8>
   25d2c:	00004506 	br	25e44 <_malloc_r+0x618>
   25d30:	81000217 	ldw	r4,8(r16)
   25d34:	89800054 	ori	r6,r17,1
   25d38:	81800115 	stw	r6,4(r16)
   25d3c:	20800315 	stw	r2,12(r4)
   25d40:	11000215 	stw	r4,8(r2)
   25d44:	8463883a 	add	r17,r16,r17
   25d48:	9c400515 	stw	r17,20(r19)
   25d4c:	9c400415 	stw	r17,16(r19)
   25d50:	28800054 	ori	r2,r5,1
   25d54:	88800115 	stw	r2,4(r17)
   25d58:	8a400315 	stw	r9,12(r17)
   25d5c:	8a400215 	stw	r9,8(r17)
   25d60:	80c7883a 	add	r3,r16,r3
   25d64:	19400015 	stw	r5,0(r3)
   25d68:	9009883a 	mov	r4,r18
   25d6c:	002db900 	call	2db90 <__malloc_unlock>
   25d70:	80800204 	addi	r2,r16,8
   25d74:	003f4306 	br	25a84 <_malloc_r+0x258>
   25d78:	880ed0fa 	srli	r7,r17,3
   25d7c:	88800204 	addi	r2,r17,8
   25d80:	003ebf06 	br	25880 <_malloc_r+0x54>
   25d84:	8085883a 	add	r2,r16,r2
   25d88:	10c00117 	ldw	r3,4(r2)
   25d8c:	9009883a 	mov	r4,r18
   25d90:	18c00054 	ori	r3,r3,1
   25d94:	10c00115 	stw	r3,4(r2)
   25d98:	002db900 	call	2db90 <__malloc_unlock>
   25d9c:	80800204 	addi	r2,r16,8
   25da0:	003f3806 	br	25a84 <_malloc_r+0x258>
   25da4:	89000054 	ori	r4,r17,1
   25da8:	81000115 	stw	r4,4(r16)
   25dac:	8463883a 	add	r17,r16,r17
   25db0:	9c400515 	stw	r17,20(r19)
   25db4:	9c400415 	stw	r17,16(r19)
   25db8:	19000054 	ori	r4,r3,1
   25dbc:	89000115 	stw	r4,4(r17)
   25dc0:	8085883a 	add	r2,r16,r2
   25dc4:	8a400315 	stw	r9,12(r17)
   25dc8:	8a400215 	stw	r9,8(r17)
   25dcc:	10c00015 	stw	r3,0(r2)
   25dd0:	9009883a 	mov	r4,r18
   25dd4:	002db900 	call	2db90 <__malloc_unlock>
   25dd8:	80800204 	addi	r2,r16,8
   25ddc:	003f2906 	br	25a84 <_malloc_r+0x258>
   25de0:	1006d1ba 	srli	r3,r2,6
   25de4:	19400e44 	addi	r5,r3,57
   25de8:	280a90fa 	slli	r5,r5,3
   25dec:	19000e04 	addi	r4,r3,56
   25df0:	003fb006 	br	25cb4 <_malloc_r+0x488>
   25df4:	84c04626 	beq	r16,r19,25f10 <_malloc_r+0x6e4>
   25df8:	9c000217 	ldw	r16,8(r19)
   25dfc:	85400117 	ldw	r21,4(r16)
   25e00:	00bfff04 	movi	r2,-4
   25e04:	a8aa703a 	and	r21,r21,r2
   25e08:	ac45c83a 	sub	r2,r21,r17
   25e0c:	ac400236 	bltu	r21,r17,25e18 <_malloc_r+0x5ec>
   25e10:	10c00408 	cmpgei	r3,r2,16
   25e14:	183f931e 	bne	r3,zero,25c64 <_malloc_r+0x438>
   25e18:	9009883a 	mov	r4,r18
   25e1c:	002db900 	call	2db90 <__malloc_unlock>
   25e20:	0005883a 	mov	r2,zero
   25e24:	003f1706 	br	25a84 <_malloc_r+0x258>
   25e28:	11c01704 	addi	r7,r2,92
   25e2c:	380890fa 	slli	r4,r7,3
   25e30:	120016c4 	addi	r8,r2,91
   25e34:	003eb606 	br	25910 <_malloc_r+0xe4>
   25e38:	58800217 	ldw	r2,8(r11)
   25e3c:	39ffffc4 	addi	r7,r7,-1
   25e40:	12c0701e 	bne	r2,r11,26004 <_malloc_r+0x7d8>
   25e44:	388000cc 	andi	r2,r7,3
   25e48:	5afffe04 	addi	r11,r11,-8
   25e4c:	103ffa1e 	bne	r2,zero,25e38 <_malloc_r+0x60c>
   25e50:	98c00117 	ldw	r3,4(r19)
   25e54:	0104303a 	nor	r2,zero,r4
   25e58:	10c4703a 	and	r2,r2,r3
   25e5c:	98800115 	stw	r2,4(r19)
   25e60:	2109883a 	add	r4,r4,r4
   25e64:	113f2336 	bltu	r2,r4,25af4 <_malloc_r+0x2c8>
   25e68:	203f2226 	beq	r4,zero,25af4 <_malloc_r+0x2c8>
   25e6c:	2086703a 	and	r3,r4,r2
   25e70:	1800041e 	bne	r3,zero,25e84 <_malloc_r+0x658>
   25e74:	2109883a 	add	r4,r4,r4
   25e78:	2086703a 	and	r3,r4,r2
   25e7c:	63000104 	addi	r12,r12,4
   25e80:	183ffc26 	beq	r3,zero,25e74 <_malloc_r+0x648>
   25e84:	600f883a 	mov	r7,r12
   25e88:	003ee206 	br	25a14 <_malloc_r+0x1e8>
   25e8c:	ad400404 	addi	r21,r21,16
   25e90:	003f2b06 	br	25b40 <_malloc_r+0x314>
   25e94:	2009d0ba 	srai	r4,r4,2
   25e98:	00800044 	movi	r2,1
   25e9c:	99800117 	ldw	r6,4(r19)
   25ea0:	1104983a 	sll	r2,r2,r4
   25ea4:	1184b03a 	or	r2,r2,r6
   25ea8:	98800115 	stw	r2,4(r19)
   25eac:	003f8d06 	br	25ce4 <_malloc_r+0x4b8>
   25eb0:	bd69883a 	add	r20,r23,r21
   25eb4:	0529c83a 	sub	r20,zero,r20
   25eb8:	a503ffcc 	andi	r20,r20,4095
   25ebc:	a00b883a 	mov	r5,r20
   25ec0:	9009883a 	mov	r4,r18
   25ec4:	0027c400 	call	27c40 <_sbrk_r>
   25ec8:	10ffffe0 	cmpeqi	r3,r2,-1
   25ecc:	183f3f26 	beq	r3,zero,25bcc <_malloc_r+0x3a0>
   25ed0:	0029883a 	mov	r20,zero
   25ed4:	003f3f06 	br	25bd4 <_malloc_r+0x3a8>
   25ed8:	19001568 	cmpgeui	r4,r3,85
   25edc:	2000201e 	bne	r4,zero,25f60 <_malloc_r+0x734>
   25ee0:	1006d33a 	srli	r3,r2,12
   25ee4:	19401bc4 	addi	r5,r3,111
   25ee8:	280a90fa 	slli	r5,r5,3
   25eec:	19001b84 	addi	r4,r3,110
   25ef0:	003f7006 	br	25cb4 <_malloc_r+0x488>
   25ef4:	10c05568 	cmpgeui	r3,r2,341
   25ef8:	1800201e 	bne	r3,zero,25f7c <_malloc_r+0x750>
   25efc:	8804d3fa 	srli	r2,r17,15
   25f00:	11c01e04 	addi	r7,r2,120
   25f04:	380890fa 	slli	r4,r7,3
   25f08:	12001dc4 	addi	r8,r2,119
   25f0c:	003e8006 	br	25910 <_malloc_r+0xe4>
   25f10:	008000f4 	movhi	r2,3
   25f14:	10cf5c17 	ldw	r3,15728(r2)
   25f18:	a8c7883a 	add	r3,r21,r3
   25f1c:	10cf5c15 	stw	r3,15728(r2)
   25f20:	003f1406 	br	25b74 <_malloc_r+0x348>
   25f24:	e083ffcc 	andi	r2,fp,4095
   25f28:	103f121e 	bne	r2,zero,25b74 <_malloc_r+0x348>
   25f2c:	9c000217 	ldw	r16,8(r19)
   25f30:	b56b883a 	add	r21,r22,r21
   25f34:	ad400054 	ori	r21,r21,1
   25f38:	85400115 	stw	r21,4(r16)
   25f3c:	003f3e06 	br	25c38 <_malloc_r+0x40c>
   25f40:	008000f4 	movhi	r2,3
   25f44:	15c84b15 	stw	r23,8492(r2)
   25f48:	003f1206 	br	25b94 <_malloc_r+0x368>
   25f4c:	b821883a 	mov	r16,r23
   25f50:	003f3906 	br	25c38 <_malloc_r+0x40c>
   25f54:	00800044 	movi	r2,1
   25f58:	b8800115 	stw	r2,4(r23)
   25f5c:	003fae06 	br	25e18 <_malloc_r+0x5ec>
   25f60:	19005568 	cmpgeui	r4,r3,341
   25f64:	2000191e 	bne	r4,zero,25fcc <_malloc_r+0x7a0>
   25f68:	1006d3fa 	srli	r3,r2,15
   25f6c:	19401e04 	addi	r5,r3,120
   25f70:	280a90fa 	slli	r5,r5,3
   25f74:	19001dc4 	addi	r4,r3,119
   25f78:	003f4e06 	br	25cb4 <_malloc_r+0x488>
   25f7c:	10815568 	cmpgeui	r2,r2,1365
   25f80:	1000191e 	bne	r2,zero,25fe8 <_malloc_r+0x7bc>
   25f84:	8804d4ba 	srli	r2,r17,18
   25f88:	11c01f44 	addi	r7,r2,125
   25f8c:	380890fa 	slli	r4,r7,3
   25f90:	12001f04 	addi	r8,r2,124
   25f94:	003e5e06 	br	25910 <_malloc_r+0xe4>
   25f98:	e73ffe04 	addi	fp,fp,-8
   25f9c:	af2b883a 	add	r21,r21,fp
   25fa0:	adebc83a 	sub	r21,r21,r23
   25fa4:	0029883a 	mov	r20,zero
   25fa8:	003f0a06 	br	25bd4 <_malloc_r+0x3a8>
   25fac:	81400204 	addi	r5,r16,8
   25fb0:	9009883a 	mov	r4,r18
   25fb4:	0024d040 	call	24d04 <_free_r>
   25fb8:	9c000217 	ldw	r16,8(r19)
   25fbc:	008000f4 	movhi	r2,3
   25fc0:	150f5c17 	ldw	r20,15728(r2)
   25fc4:	85400117 	ldw	r21,4(r16)
   25fc8:	003f1b06 	br	25c38 <_malloc_r+0x40c>
   25fcc:	18c15568 	cmpgeui	r3,r3,1365
   25fd0:	1800091e 	bne	r3,zero,25ff8 <_malloc_r+0x7cc>
   25fd4:	1006d4ba 	srli	r3,r2,18
   25fd8:	19401f44 	addi	r5,r3,125
   25fdc:	280a90fa 	slli	r5,r5,3
   25fe0:	19001f04 	addi	r4,r3,124
   25fe4:	003f3306 	br	25cb4 <_malloc_r+0x488>
   25fe8:	0100fe04 	movi	r4,1016
   25fec:	01c01fc4 	movi	r7,127
   25ff0:	02001f84 	movi	r8,126
   25ff4:	003e4606 	br	25910 <_malloc_r+0xe4>
   25ff8:	0140fe04 	movi	r5,1016
   25ffc:	01001f84 	movi	r4,126
   26000:	003f2c06 	br	25cb4 <_malloc_r+0x488>
   26004:	98800117 	ldw	r2,4(r19)
   26008:	003f9506 	br	25e60 <_malloc_r+0x634>

0002600c <memchr>:
   2600c:	208000cc 	andi	r2,r4,3
   26010:	280f883a 	mov	r7,r5
   26014:	10000e26 	beq	r2,zero,26050 <memchr+0x44>
   26018:	30bfffc4 	addi	r2,r6,-1
   2601c:	30001726 	beq	r6,zero,2607c <memchr+0x70>
   26020:	29803fcc 	andi	r6,r5,255
   26024:	00000606 	br	26040 <memchr+0x34>
   26028:	21000044 	addi	r4,r4,1
   2602c:	20c000cc 	andi	r3,r4,3
   26030:	18000826 	beq	r3,zero,26054 <memchr+0x48>
   26034:	10bfffc4 	addi	r2,r2,-1
   26038:	10ffffe0 	cmpeqi	r3,r2,-1
   2603c:	18000f1e 	bne	r3,zero,2607c <memchr+0x70>
   26040:	20c00003 	ldbu	r3,0(r4)
   26044:	19bff81e 	bne	r3,r6,26028 <memchr+0x1c>
   26048:	2005883a 	mov	r2,r4
   2604c:	f800283a 	ret
   26050:	3005883a 	mov	r2,r6
   26054:	10c00128 	cmpgeui	r3,r2,4
   26058:	18000a1e 	bne	r3,zero,26084 <memchr+0x78>
   2605c:	10001e26 	beq	r2,zero,260d8 <memchr+0xcc>
   26060:	2087883a 	add	r3,r4,r2
   26064:	39803fcc 	andi	r6,r7,255
   26068:	2005883a 	mov	r2,r4
   2606c:	11000003 	ldbu	r4,0(r2)
   26070:	21bff626 	beq	r4,r6,2604c <memchr+0x40>
   26074:	10800044 	addi	r2,r2,1
   26078:	18bffc1e 	bne	r3,r2,2606c <memchr+0x60>
   2607c:	0005883a 	mov	r2,zero
   26080:	f800283a 	ret
   26084:	29403fcc 	andi	r5,r5,255
   26088:	280c923a 	slli	r6,r5,8
   2608c:	027fbff4 	movhi	r9,65279
   26090:	02202074 	movhi	r8,32897
   26094:	314ab03a 	or	r5,r6,r5
   26098:	280c943a 	slli	r6,r5,16
   2609c:	4a7fbfc4 	addi	r9,r9,-257
   260a0:	42202004 	addi	r8,r8,-32640
   260a4:	314cb03a 	or	r6,r6,r5
   260a8:	20c00017 	ldw	r3,0(r4)
   260ac:	30c6f03a 	xor	r3,r6,r3
   260b0:	1a4b883a 	add	r5,r3,r9
   260b4:	00c6303a 	nor	r3,zero,r3
   260b8:	28c6703a 	and	r3,r5,r3
   260bc:	1a06703a 	and	r3,r3,r8
   260c0:	183fe71e 	bne	r3,zero,26060 <memchr+0x54>
   260c4:	10bfff04 	addi	r2,r2,-4
   260c8:	10c00128 	cmpgeui	r3,r2,4
   260cc:	21000104 	addi	r4,r4,4
   260d0:	183ff51e 	bne	r3,zero,260a8 <memchr+0x9c>
   260d4:	003fe106 	br	2605c <memchr+0x50>
   260d8:	f800283a 	ret

000260dc <memcpy>:
   260dc:	30c00430 	cmpltui	r3,r6,16
   260e0:	2005883a 	mov	r2,r4
   260e4:	18002d1e 	bne	r3,zero,2619c <memcpy+0xc0>
   260e8:	2906b03a 	or	r3,r5,r4
   260ec:	18c000cc 	andi	r3,r3,3
   260f0:	1800351e 	bne	r3,zero,261c8 <memcpy+0xec>
   260f4:	32fffc04 	addi	r11,r6,-16
   260f8:	5816d13a 	srli	r11,r11,4
   260fc:	280f883a 	mov	r7,r5
   26100:	2007883a 	mov	r3,r4
   26104:	5ac00044 	addi	r11,r11,1
   26108:	5816913a 	slli	r11,r11,4
   2610c:	22d5883a 	add	r10,r4,r11
   26110:	39000117 	ldw	r4,4(r7)
   26114:	3a400017 	ldw	r9,0(r7)
   26118:	3a000217 	ldw	r8,8(r7)
   2611c:	19000115 	stw	r4,4(r3)
   26120:	39000317 	ldw	r4,12(r7)
   26124:	1a400015 	stw	r9,0(r3)
   26128:	1a000215 	stw	r8,8(r3)
   2612c:	19000315 	stw	r4,12(r3)
   26130:	18c00404 	addi	r3,r3,16
   26134:	39c00404 	addi	r7,r7,16
   26138:	50fff51e 	bne	r10,r3,26110 <memcpy+0x34>
   2613c:	3100030c 	andi	r4,r6,12
   26140:	2acb883a 	add	r5,r5,r11
   26144:	320003cc 	andi	r8,r6,15
   26148:	20002226 	beq	r4,zero,261d4 <memcpy+0xf8>
   2614c:	280f883a 	mov	r7,r5
   26150:	1813883a 	mov	r9,r3
   26154:	39c00104 	addi	r7,r7,4
   26158:	3abfff17 	ldw	r10,-4(r7)
   2615c:	41c9c83a 	sub	r4,r8,r7
   26160:	2909883a 	add	r4,r5,r4
   26164:	4a800015 	stw	r10,0(r9)
   26168:	21000128 	cmpgeui	r4,r4,4
   2616c:	4a400104 	addi	r9,r9,4
   26170:	203ff81e 	bne	r4,zero,26154 <memcpy+0x78>
   26174:	413fff04 	addi	r4,r8,-4
   26178:	2008d0ba 	srli	r4,r4,2
   2617c:	318000cc 	andi	r6,r6,3
   26180:	31ffffc4 	addi	r7,r6,-1
   26184:	21000044 	addi	r4,r4,1
   26188:	200890ba 	slli	r4,r4,2
   2618c:	1907883a 	add	r3,r3,r4
   26190:	290b883a 	add	r5,r5,r4
   26194:	3000041e 	bne	r6,zero,261a8 <memcpy+0xcc>
   26198:	f800283a 	ret
   2619c:	2007883a 	mov	r3,r4
   261a0:	31ffffc4 	addi	r7,r6,-1
   261a4:	303ffc26 	beq	r6,zero,26198 <memcpy+0xbc>
   261a8:	39c00044 	addi	r7,r7,1
   261ac:	19cf883a 	add	r7,r3,r7
   261b0:	29800003 	ldbu	r6,0(r5)
   261b4:	18c00044 	addi	r3,r3,1
   261b8:	29400044 	addi	r5,r5,1
   261bc:	19bfffc5 	stb	r6,-1(r3)
   261c0:	38fffb1e 	bne	r7,r3,261b0 <memcpy+0xd4>
   261c4:	f800283a 	ret
   261c8:	31ffffc4 	addi	r7,r6,-1
   261cc:	2007883a 	mov	r3,r4
   261d0:	003ff506 	br	261a8 <memcpy+0xcc>
   261d4:	400d883a 	mov	r6,r8
   261d8:	003ff106 	br	261a0 <memcpy+0xc4>

000261dc <memmove>:
   261dc:	2005883a 	mov	r2,r4
   261e0:	29000a2e 	bgeu	r5,r4,2620c <memmove+0x30>
   261e4:	2989883a 	add	r4,r5,r6
   261e8:	1100082e 	bgeu	r2,r4,2620c <memmove+0x30>
   261ec:	1187883a 	add	r3,r2,r6
   261f0:	30003e26 	beq	r6,zero,262ec <memmove+0x110>
   261f4:	217fffc3 	ldbu	r5,-1(r4)
   261f8:	18ffffc4 	addi	r3,r3,-1
   261fc:	213fffc4 	addi	r4,r4,-1
   26200:	19400005 	stb	r5,0(r3)
   26204:	10fffb1e 	bne	r2,r3,261f4 <memmove+0x18>
   26208:	f800283a 	ret
   2620c:	30c00430 	cmpltui	r3,r6,16
   26210:	18000b26 	beq	r3,zero,26240 <memmove+0x64>
   26214:	1007883a 	mov	r3,r2
   26218:	31ffffc4 	addi	r7,r6,-1
   2621c:	30003726 	beq	r6,zero,262fc <memmove+0x120>
   26220:	39c00044 	addi	r7,r7,1
   26224:	29cf883a 	add	r7,r5,r7
   26228:	29800003 	ldbu	r6,0(r5)
   2622c:	29400044 	addi	r5,r5,1
   26230:	18c00044 	addi	r3,r3,1
   26234:	19bfffc5 	stb	r6,-1(r3)
   26238:	29fffb1e 	bne	r5,r7,26228 <memmove+0x4c>
   2623c:	f800283a 	ret
   26240:	2886b03a 	or	r3,r5,r2
   26244:	18c000cc 	andi	r3,r3,3
   26248:	1800291e 	bne	r3,zero,262f0 <memmove+0x114>
   2624c:	327ffc04 	addi	r9,r6,-16
   26250:	4812d13a 	srli	r9,r9,4
   26254:	280f883a 	mov	r7,r5
   26258:	1007883a 	mov	r3,r2
   2625c:	4a400044 	addi	r9,r9,1
   26260:	4812913a 	slli	r9,r9,4
   26264:	1251883a 	add	r8,r2,r9
   26268:	39000017 	ldw	r4,0(r7)
   2626c:	39c00404 	addi	r7,r7,16
   26270:	18c00404 	addi	r3,r3,16
   26274:	193ffc15 	stw	r4,-16(r3)
   26278:	393ffd17 	ldw	r4,-12(r7)
   2627c:	193ffd15 	stw	r4,-12(r3)
   26280:	393ffe17 	ldw	r4,-8(r7)
   26284:	193ffe15 	stw	r4,-8(r3)
   26288:	393fff17 	ldw	r4,-4(r7)
   2628c:	193fff15 	stw	r4,-4(r3)
   26290:	40fff51e 	bne	r8,r3,26268 <memmove+0x8c>
   26294:	3100030c 	andi	r4,r6,12
   26298:	2a4b883a 	add	r5,r5,r9
   2629c:	320003cc 	andi	r8,r6,15
   262a0:	20001726 	beq	r4,zero,26300 <memmove+0x124>
   262a4:	2813883a 	mov	r9,r5
   262a8:	180f883a 	mov	r7,r3
   262ac:	4a800017 	ldw	r10,0(r9)
   262b0:	39c00104 	addi	r7,r7,4
   262b4:	41c9c83a 	sub	r4,r8,r7
   262b8:	1909883a 	add	r4,r3,r4
   262bc:	21000128 	cmpgeui	r4,r4,4
   262c0:	3abfff15 	stw	r10,-4(r7)
   262c4:	4a400104 	addi	r9,r9,4
   262c8:	203ff81e 	bne	r4,zero,262ac <memmove+0xd0>
   262cc:	413fff04 	addi	r4,r8,-4
   262d0:	2008d0ba 	srli	r4,r4,2
   262d4:	318000cc 	andi	r6,r6,3
   262d8:	21000044 	addi	r4,r4,1
   262dc:	200890ba 	slli	r4,r4,2
   262e0:	1907883a 	add	r3,r3,r4
   262e4:	290b883a 	add	r5,r5,r4
   262e8:	003fcb06 	br	26218 <memmove+0x3c>
   262ec:	f800283a 	ret
   262f0:	31ffffc4 	addi	r7,r6,-1
   262f4:	1007883a 	mov	r3,r2
   262f8:	003fc906 	br	26220 <memmove+0x44>
   262fc:	f800283a 	ret
   26300:	400d883a 	mov	r6,r8
   26304:	003fc406 	br	26218 <memmove+0x3c>

00026308 <memset>:
   26308:	20c000cc 	andi	r3,r4,3
   2630c:	2005883a 	mov	r2,r4
   26310:	18003626 	beq	r3,zero,263ec <memset+0xe4>
   26314:	31ffffc4 	addi	r7,r6,-1
   26318:	30003326 	beq	r6,zero,263e8 <memset+0xe0>
   2631c:	2811883a 	mov	r8,r5
   26320:	2007883a 	mov	r3,r4
   26324:	00000306 	br	26334 <memset+0x2c>
   26328:	39ffffc4 	addi	r7,r7,-1
   2632c:	39bfffe0 	cmpeqi	r6,r7,-1
   26330:	30002d1e 	bne	r6,zero,263e8 <memset+0xe0>
   26334:	18c00044 	addi	r3,r3,1
   26338:	198000cc 	andi	r6,r3,3
   2633c:	1a3fffc5 	stb	r8,-1(r3)
   26340:	303ff91e 	bne	r6,zero,26328 <memset+0x20>
   26344:	39000130 	cmpltui	r4,r7,4
   26348:	2000221e 	bne	r4,zero,263d4 <memset+0xcc>
   2634c:	29003fcc 	andi	r4,r5,255
   26350:	200c923a 	slli	r6,r4,8
   26354:	3a000430 	cmpltui	r8,r7,16
   26358:	3108b03a 	or	r4,r6,r4
   2635c:	200c943a 	slli	r6,r4,16
   26360:	310cb03a 	or	r6,r6,r4
   26364:	40000e1e 	bne	r8,zero,263a0 <memset+0x98>
   26368:	393ffc04 	addi	r4,r7,-16
   2636c:	2008d13a 	srli	r4,r4,4
   26370:	21000044 	addi	r4,r4,1
   26374:	2008913a 	slli	r4,r4,4
   26378:	1909883a 	add	r4,r3,r4
   2637c:	19800015 	stw	r6,0(r3)
   26380:	19800115 	stw	r6,4(r3)
   26384:	19800215 	stw	r6,8(r3)
   26388:	19800315 	stw	r6,12(r3)
   2638c:	18c00404 	addi	r3,r3,16
   26390:	20fffa1e 	bne	r4,r3,2637c <memset+0x74>
   26394:	3900030c 	andi	r4,r7,12
   26398:	39c003cc 	andi	r7,r7,15
   2639c:	20000d26 	beq	r4,zero,263d4 <memset+0xcc>
   263a0:	1811883a 	mov	r8,r3
   263a4:	42000104 	addi	r8,r8,4
   263a8:	3a09c83a 	sub	r4,r7,r8
   263ac:	1909883a 	add	r4,r3,r4
   263b0:	21000128 	cmpgeui	r4,r4,4
   263b4:	41bfff15 	stw	r6,-4(r8)
   263b8:	203ffa1e 	bne	r4,zero,263a4 <memset+0x9c>
   263bc:	393fff04 	addi	r4,r7,-4
   263c0:	2008d0ba 	srli	r4,r4,2
   263c4:	39c000cc 	andi	r7,r7,3
   263c8:	21000044 	addi	r4,r4,1
   263cc:	200890ba 	slli	r4,r4,2
   263d0:	1907883a 	add	r3,r3,r4
   263d4:	38000426 	beq	r7,zero,263e8 <memset+0xe0>
   263d8:	19cf883a 	add	r7,r3,r7
   263dc:	18c00044 	addi	r3,r3,1
   263e0:	197fffc5 	stb	r5,-1(r3)
   263e4:	38fffd1e 	bne	r7,r3,263dc <memset+0xd4>
   263e8:	f800283a 	ret
   263ec:	2007883a 	mov	r3,r4
   263f0:	300f883a 	mov	r7,r6
   263f4:	003fd306 	br	26344 <memset+0x3c>

000263f8 <_Balloc>:
   263f8:	20801317 	ldw	r2,76(r4)
   263fc:	defffc04 	addi	sp,sp,-16
   26400:	dc400115 	stw	r17,4(sp)
   26404:	dc000015 	stw	r16,0(sp)
   26408:	dfc00315 	stw	ra,12(sp)
   2640c:	dc800215 	stw	r18,8(sp)
   26410:	2021883a 	mov	r16,r4
   26414:	2823883a 	mov	r17,r5
   26418:	10000e26 	beq	r2,zero,26454 <_Balloc+0x5c>
   2641c:	880690ba 	slli	r3,r17,2
   26420:	10c7883a 	add	r3,r2,r3
   26424:	18800017 	ldw	r2,0(r3)
   26428:	10001126 	beq	r2,zero,26470 <_Balloc+0x78>
   2642c:	11000017 	ldw	r4,0(r2)
   26430:	19000015 	stw	r4,0(r3)
   26434:	10000415 	stw	zero,16(r2)
   26438:	10000315 	stw	zero,12(r2)
   2643c:	dfc00317 	ldw	ra,12(sp)
   26440:	dc800217 	ldw	r18,8(sp)
   26444:	dc400117 	ldw	r17,4(sp)
   26448:	dc000017 	ldw	r16,0(sp)
   2644c:	dec00404 	addi	sp,sp,16
   26450:	f800283a 	ret
   26454:	01800844 	movi	r6,33
   26458:	01400104 	movi	r5,4
   2645c:	00294a40 	call	294a4 <_calloc_r>
   26460:	80801315 	stw	r2,76(r16)
   26464:	103fed1e 	bne	r2,zero,2641c <_Balloc+0x24>
   26468:	0005883a 	mov	r2,zero
   2646c:	003ff306 	br	2643c <_Balloc+0x44>
   26470:	04800044 	movi	r18,1
   26474:	9464983a 	sll	r18,r18,r17
   26478:	01400044 	movi	r5,1
   2647c:	8009883a 	mov	r4,r16
   26480:	91800144 	addi	r6,r18,5
   26484:	300c90ba 	slli	r6,r6,2
   26488:	00294a40 	call	294a4 <_calloc_r>
   2648c:	103ff626 	beq	r2,zero,26468 <_Balloc+0x70>
   26490:	14400115 	stw	r17,4(r2)
   26494:	14800215 	stw	r18,8(r2)
   26498:	003fe606 	br	26434 <_Balloc+0x3c>

0002649c <_Bfree>:
   2649c:	28000726 	beq	r5,zero,264bc <_Bfree+0x20>
   264a0:	28c00117 	ldw	r3,4(r5)
   264a4:	20801317 	ldw	r2,76(r4)
   264a8:	180690ba 	slli	r3,r3,2
   264ac:	10c5883a 	add	r2,r2,r3
   264b0:	10c00017 	ldw	r3,0(r2)
   264b4:	28c00015 	stw	r3,0(r5)
   264b8:	11400015 	stw	r5,0(r2)
   264bc:	f800283a 	ret

000264c0 <__multadd>:
   264c0:	defffa04 	addi	sp,sp,-24
   264c4:	dc400115 	stw	r17,4(sp)
   264c8:	2c400417 	ldw	r17,16(r5)
   264cc:	dcc00315 	stw	r19,12(sp)
   264d0:	dc800215 	stw	r18,8(sp)
   264d4:	dc000015 	stw	r16,0(sp)
   264d8:	dfc00515 	stw	ra,20(sp)
   264dc:	dd000415 	stw	r20,16(sp)
   264e0:	2825883a 	mov	r18,r5
   264e4:	2027883a 	mov	r19,r4
   264e8:	3821883a 	mov	r16,r7
   264ec:	2a400504 	addi	r9,r5,20
   264f0:	0015883a 	mov	r10,zero
   264f4:	48c00017 	ldw	r3,0(r9)
   264f8:	4a400104 	addi	r9,r9,4
   264fc:	52800044 	addi	r10,r10,1
   26500:	1a3fffcc 	andi	r8,r3,65535
   26504:	4191383a 	mul	r8,r8,r6
   26508:	180ed43a 	srli	r7,r3,16
   2650c:	4407883a 	add	r3,r8,r16
   26510:	1810d43a 	srli	r8,r3,16
   26514:	398f383a 	mul	r7,r7,r6
   26518:	18ffffcc 	andi	r3,r3,65535
   2651c:	3a0f883a 	add	r7,r7,r8
   26520:	3810943a 	slli	r8,r7,16
   26524:	3820d43a 	srli	r16,r7,16
   26528:	40c7883a 	add	r3,r8,r3
   2652c:	48ffff15 	stw	r3,-4(r9)
   26530:	547ff016 	blt	r10,r17,264f4 <__multadd+0x34>
   26534:	80000826 	beq	r16,zero,26558 <__multadd+0x98>
   26538:	90800217 	ldw	r2,8(r18)
   2653c:	88800f0e 	bge	r17,r2,2657c <__multadd+0xbc>
   26540:	88800144 	addi	r2,r17,5
   26544:	100490ba 	slli	r2,r2,2
   26548:	8c400044 	addi	r17,r17,1
   2654c:	9085883a 	add	r2,r18,r2
   26550:	14000015 	stw	r16,0(r2)
   26554:	94400415 	stw	r17,16(r18)
   26558:	9005883a 	mov	r2,r18
   2655c:	dfc00517 	ldw	ra,20(sp)
   26560:	dd000417 	ldw	r20,16(sp)
   26564:	dcc00317 	ldw	r19,12(sp)
   26568:	dc800217 	ldw	r18,8(sp)
   2656c:	dc400117 	ldw	r17,4(sp)
   26570:	dc000017 	ldw	r16,0(sp)
   26574:	dec00604 	addi	sp,sp,24
   26578:	f800283a 	ret
   2657c:	91400117 	ldw	r5,4(r18)
   26580:	9809883a 	mov	r4,r19
   26584:	29400044 	addi	r5,r5,1
   26588:	00263f80 	call	263f8 <_Balloc>
   2658c:	1029883a 	mov	r20,r2
   26590:	10001226 	beq	r2,zero,265dc <__multadd+0x11c>
   26594:	91800417 	ldw	r6,16(r18)
   26598:	91400304 	addi	r5,r18,12
   2659c:	11000304 	addi	r4,r2,12
   265a0:	31800084 	addi	r6,r6,2
   265a4:	300c90ba 	slli	r6,r6,2
   265a8:	00260dc0 	call	260dc <memcpy>
   265ac:	90000926 	beq	r18,zero,265d4 <__multadd+0x114>
   265b0:	90c00117 	ldw	r3,4(r18)
   265b4:	98801317 	ldw	r2,76(r19)
   265b8:	180690ba 	slli	r3,r3,2
   265bc:	10c5883a 	add	r2,r2,r3
   265c0:	10c00017 	ldw	r3,0(r2)
   265c4:	90c00015 	stw	r3,0(r18)
   265c8:	14800015 	stw	r18,0(r2)
   265cc:	a025883a 	mov	r18,r20
   265d0:	003fdb06 	br	26540 <__multadd+0x80>
   265d4:	a025883a 	mov	r18,r20
   265d8:	003fd906 	br	26540 <__multadd+0x80>
   265dc:	01c000f4 	movhi	r7,3
   265e0:	010000f4 	movhi	r4,3
   265e4:	39ffed04 	addi	r7,r7,-76
   265e8:	000d883a 	mov	r6,zero
   265ec:	01402d44 	movi	r5,181
   265f0:	21000104 	addi	r4,r4,4
   265f4:	002942c0 	call	2942c <__assert_func>

000265f8 <__s2b>:
   265f8:	defff904 	addi	sp,sp,-28
   265fc:	dc800215 	stw	r18,8(sp)
   26600:	dc000015 	stw	r16,0(sp)
   26604:	2025883a 	mov	r18,r4
   26608:	2821883a 	mov	r16,r5
   2660c:	39000204 	addi	r4,r7,8
   26610:	01400244 	movi	r5,9
   26614:	dcc00315 	stw	r19,12(sp)
   26618:	dc400115 	stw	r17,4(sp)
   2661c:	dfc00615 	stw	ra,24(sp)
   26620:	3823883a 	mov	r17,r7
   26624:	dd400515 	stw	r21,20(sp)
   26628:	dd000415 	stw	r20,16(sp)
   2662c:	3027883a 	mov	r19,r6
   26630:	00206040 	call	20604 <__divsi3>
   26634:	88c00290 	cmplti	r3,r17,10
   26638:	1800341e 	bne	r3,zero,2670c <__s2b+0x114>
   2663c:	00c00044 	movi	r3,1
   26640:	000b883a 	mov	r5,zero
   26644:	18c7883a 	add	r3,r3,r3
   26648:	29400044 	addi	r5,r5,1
   2664c:	18bffd16 	blt	r3,r2,26644 <__s2b+0x4c>
   26650:	9009883a 	mov	r4,r18
   26654:	00263f80 	call	263f8 <_Balloc>
   26658:	100b883a 	mov	r5,r2
   2665c:	10002d26 	beq	r2,zero,26714 <__s2b+0x11c>
   26660:	d8800717 	ldw	r2,28(sp)
   26664:	28800515 	stw	r2,20(r5)
   26668:	00800044 	movi	r2,1
   2666c:	28800415 	stw	r2,16(r5)
   26670:	98800290 	cmplti	r2,r19,10
   26674:	1000221e 	bne	r2,zero,26700 <__s2b+0x108>
   26678:	85400244 	addi	r21,r16,9
   2667c:	a829883a 	mov	r20,r21
   26680:	84e1883a 	add	r16,r16,r19
   26684:	a1c00007 	ldb	r7,0(r20)
   26688:	01800284 	movi	r6,10
   2668c:	9009883a 	mov	r4,r18
   26690:	39fff404 	addi	r7,r7,-48
   26694:	00264c00 	call	264c0 <__multadd>
   26698:	a5000044 	addi	r20,r20,1
   2669c:	100b883a 	mov	r5,r2
   266a0:	a43ff81e 	bne	r20,r16,26684 <__s2b+0x8c>
   266a4:	9c3ffe04 	addi	r16,r19,-8
   266a8:	ac21883a 	add	r16,r21,r16
   266ac:	9c400a0e 	bge	r19,r17,266d8 <__s2b+0xe0>
   266b0:	8ce3c83a 	sub	r17,r17,r19
   266b4:	8463883a 	add	r17,r16,r17
   266b8:	81c00007 	ldb	r7,0(r16)
   266bc:	01800284 	movi	r6,10
   266c0:	9009883a 	mov	r4,r18
   266c4:	39fff404 	addi	r7,r7,-48
   266c8:	00264c00 	call	264c0 <__multadd>
   266cc:	84000044 	addi	r16,r16,1
   266d0:	100b883a 	mov	r5,r2
   266d4:	8c3ff81e 	bne	r17,r16,266b8 <__s2b+0xc0>
   266d8:	2805883a 	mov	r2,r5
   266dc:	dfc00617 	ldw	ra,24(sp)
   266e0:	dd400517 	ldw	r21,20(sp)
   266e4:	dd000417 	ldw	r20,16(sp)
   266e8:	dcc00317 	ldw	r19,12(sp)
   266ec:	dc800217 	ldw	r18,8(sp)
   266f0:	dc400117 	ldw	r17,4(sp)
   266f4:	dc000017 	ldw	r16,0(sp)
   266f8:	dec00704 	addi	sp,sp,28
   266fc:	f800283a 	ret
   26700:	84000284 	addi	r16,r16,10
   26704:	04c00244 	movi	r19,9
   26708:	003fe806 	br	266ac <__s2b+0xb4>
   2670c:	000b883a 	mov	r5,zero
   26710:	003fcf06 	br	26650 <__s2b+0x58>
   26714:	01c000f4 	movhi	r7,3
   26718:	010000f4 	movhi	r4,3
   2671c:	39ffed04 	addi	r7,r7,-76
   26720:	000d883a 	mov	r6,zero
   26724:	01403384 	movi	r5,206
   26728:	21000104 	addi	r4,r4,4
   2672c:	002942c0 	call	2942c <__assert_func>

00026730 <__hi0bits>:
   26730:	20bfffec 	andhi	r2,r4,65535
   26734:	1000131e 	bne	r2,zero,26784 <__hi0bits+0x54>
   26738:	2008943a 	slli	r4,r4,16
   2673c:	00800404 	movi	r2,16
   26740:	20ffc02c 	andhi	r3,r4,65280
   26744:	1800021e 	bne	r3,zero,26750 <__hi0bits+0x20>
   26748:	2008923a 	slli	r4,r4,8
   2674c:	10800204 	addi	r2,r2,8
   26750:	20fc002c 	andhi	r3,r4,61440
   26754:	1800021e 	bne	r3,zero,26760 <__hi0bits+0x30>
   26758:	2008913a 	slli	r4,r4,4
   2675c:	10800104 	addi	r2,r2,4
   26760:	20f0002c 	andhi	r3,r4,49152
   26764:	1800021e 	bne	r3,zero,26770 <__hi0bits+0x40>
   26768:	200890ba 	slli	r4,r4,2
   2676c:	10800084 	addi	r2,r2,2
   26770:	20000316 	blt	r4,zero,26780 <__hi0bits+0x50>
   26774:	2110002c 	andhi	r4,r4,16384
   26778:	10800044 	addi	r2,r2,1
   2677c:	20000326 	beq	r4,zero,2678c <__hi0bits+0x5c>
   26780:	f800283a 	ret
   26784:	0005883a 	mov	r2,zero
   26788:	003fed06 	br	26740 <__hi0bits+0x10>
   2678c:	00800804 	movi	r2,32
   26790:	f800283a 	ret

00026794 <__lo0bits>:
   26794:	20c00017 	ldw	r3,0(r4)
   26798:	188001cc 	andi	r2,r3,7
   2679c:	10000826 	beq	r2,zero,267c0 <__lo0bits+0x2c>
   267a0:	1880004c 	andi	r2,r3,1
   267a4:	10001f1e 	bne	r2,zero,26824 <__lo0bits+0x90>
   267a8:	1880008c 	andi	r2,r3,2
   267ac:	10002126 	beq	r2,zero,26834 <__lo0bits+0xa0>
   267b0:	1806d07a 	srli	r3,r3,1
   267b4:	00800044 	movi	r2,1
   267b8:	20c00015 	stw	r3,0(r4)
   267bc:	f800283a 	ret
   267c0:	18bfffcc 	andi	r2,r3,65535
   267c4:	10001426 	beq	r2,zero,26818 <__lo0bits+0x84>
   267c8:	0005883a 	mov	r2,zero
   267cc:	19403fcc 	andi	r5,r3,255
   267d0:	2800021e 	bne	r5,zero,267dc <__lo0bits+0x48>
   267d4:	1806d23a 	srli	r3,r3,8
   267d8:	10800204 	addi	r2,r2,8
   267dc:	194003cc 	andi	r5,r3,15
   267e0:	2800021e 	bne	r5,zero,267ec <__lo0bits+0x58>
   267e4:	1806d13a 	srli	r3,r3,4
   267e8:	10800104 	addi	r2,r2,4
   267ec:	194000cc 	andi	r5,r3,3
   267f0:	2800021e 	bne	r5,zero,267fc <__lo0bits+0x68>
   267f4:	1806d0ba 	srli	r3,r3,2
   267f8:	10800084 	addi	r2,r2,2
   267fc:	1940004c 	andi	r5,r3,1
   26800:	2800031e 	bne	r5,zero,26810 <__lo0bits+0x7c>
   26804:	1806d07a 	srli	r3,r3,1
   26808:	10800044 	addi	r2,r2,1
   2680c:	18000726 	beq	r3,zero,2682c <__lo0bits+0x98>
   26810:	20c00015 	stw	r3,0(r4)
   26814:	f800283a 	ret
   26818:	1806d43a 	srli	r3,r3,16
   2681c:	00800404 	movi	r2,16
   26820:	003fea06 	br	267cc <__lo0bits+0x38>
   26824:	0005883a 	mov	r2,zero
   26828:	f800283a 	ret
   2682c:	00800804 	movi	r2,32
   26830:	f800283a 	ret
   26834:	1806d0ba 	srli	r3,r3,2
   26838:	00800084 	movi	r2,2
   2683c:	20c00015 	stw	r3,0(r4)
   26840:	f800283a 	ret

00026844 <__i2b>:
   26844:	20c01317 	ldw	r3,76(r4)
   26848:	defffd04 	addi	sp,sp,-12
   2684c:	dc400115 	stw	r17,4(sp)
   26850:	dc000015 	stw	r16,0(sp)
   26854:	dfc00215 	stw	ra,8(sp)
   26858:	2021883a 	mov	r16,r4
   2685c:	2823883a 	mov	r17,r5
   26860:	18000d26 	beq	r3,zero,26898 <__i2b+0x54>
   26864:	18800117 	ldw	r2,4(r3)
   26868:	10001826 	beq	r2,zero,268cc <__i2b+0x88>
   2686c:	11000017 	ldw	r4,0(r2)
   26870:	19000115 	stw	r4,4(r3)
   26874:	00c00044 	movi	r3,1
   26878:	10000315 	stw	zero,12(r2)
   2687c:	14400515 	stw	r17,20(r2)
   26880:	10c00415 	stw	r3,16(r2)
   26884:	dfc00217 	ldw	ra,8(sp)
   26888:	dc400117 	ldw	r17,4(sp)
   2688c:	dc000017 	ldw	r16,0(sp)
   26890:	dec00304 	addi	sp,sp,12
   26894:	f800283a 	ret
   26898:	01800844 	movi	r6,33
   2689c:	01400104 	movi	r5,4
   268a0:	00294a40 	call	294a4 <_calloc_r>
   268a4:	80801315 	stw	r2,76(r16)
   268a8:	1007883a 	mov	r3,r2
   268ac:	103fed1e 	bne	r2,zero,26864 <__i2b+0x20>
   268b0:	01c000f4 	movhi	r7,3
   268b4:	010000f4 	movhi	r4,3
   268b8:	39ffed04 	addi	r7,r7,-76
   268bc:	000d883a 	mov	r6,zero
   268c0:	01405004 	movi	r5,320
   268c4:	21000104 	addi	r4,r4,4
   268c8:	002942c0 	call	2942c <__assert_func>
   268cc:	01800704 	movi	r6,28
   268d0:	01400044 	movi	r5,1
   268d4:	8009883a 	mov	r4,r16
   268d8:	00294a40 	call	294a4 <_calloc_r>
   268dc:	103ff426 	beq	r2,zero,268b0 <__i2b+0x6c>
   268e0:	00c00044 	movi	r3,1
   268e4:	10c00115 	stw	r3,4(r2)
   268e8:	00c00084 	movi	r3,2
   268ec:	10c00215 	stw	r3,8(r2)
   268f0:	003fe006 	br	26874 <__i2b+0x30>

000268f4 <__multiply>:
   268f4:	defff804 	addi	sp,sp,-32
   268f8:	dd400515 	stw	r21,20(sp)
   268fc:	dd000415 	stw	r20,16(sp)
   26900:	35400417 	ldw	r21,16(r6)
   26904:	2d000417 	ldw	r20,16(r5)
   26908:	dd800615 	stw	r22,24(sp)
   2690c:	dcc00315 	stw	r19,12(sp)
   26910:	dfc00715 	stw	ra,28(sp)
   26914:	dc800215 	stw	r18,8(sp)
   26918:	dc400115 	stw	r17,4(sp)
   2691c:	dc000015 	stw	r16,0(sp)
   26920:	282d883a 	mov	r22,r5
   26924:	3027883a 	mov	r19,r6
   26928:	a5400516 	blt	r20,r21,26940 <__multiply+0x4c>
   2692c:	a807883a 	mov	r3,r21
   26930:	2827883a 	mov	r19,r5
   26934:	a02b883a 	mov	r21,r20
   26938:	302d883a 	mov	r22,r6
   2693c:	1829883a 	mov	r20,r3
   26940:	98800217 	ldw	r2,8(r19)
   26944:	ad23883a 	add	r17,r21,r20
   26948:	99400117 	ldw	r5,4(r19)
   2694c:	1440010e 	bge	r2,r17,26954 <__multiply+0x60>
   26950:	29400044 	addi	r5,r5,1
   26954:	00263f80 	call	263f8 <_Balloc>
   26958:	1025883a 	mov	r18,r2
   2695c:	10007326 	beq	r2,zero,26b2c <__multiply+0x238>
   26960:	882090ba 	slli	r16,r17,2
   26964:	11000504 	addi	r4,r2,20
   26968:	2421883a 	add	r16,r4,r16
   2696c:	2400082e 	bgeu	r4,r16,26990 <__multiply+0x9c>
   26970:	808dc83a 	sub	r6,r16,r2
   26974:	31bffac4 	addi	r6,r6,-21
   26978:	300cd0ba 	srli	r6,r6,2
   2697c:	000b883a 	mov	r5,zero
   26980:	31800044 	addi	r6,r6,1
   26984:	300c90ba 	slli	r6,r6,2
   26988:	00263080 	call	26308 <memset>
   2698c:	1009883a 	mov	r4,r2
   26990:	a01290ba 	slli	r9,r20,2
   26994:	a80e90ba 	slli	r7,r21,2
   26998:	b0800504 	addi	r2,r22,20
   2699c:	9a800504 	addi	r10,r19,20
   269a0:	1253883a 	add	r9,r2,r9
   269a4:	51cf883a 	add	r7,r10,r7
   269a8:	12404b2e 	bgeu	r2,r9,26ad8 <__multiply+0x1e4>
   269ac:	98c00544 	addi	r3,r19,21
   269b0:	38c05c36 	bltu	r7,r3,26b24 <__multiply+0x230>
   269b4:	3cd1c83a 	sub	r8,r7,r19
   269b8:	423ffac4 	addi	r8,r8,-21
   269bc:	4010d0ba 	srli	r8,r8,2
   269c0:	42000044 	addi	r8,r8,1
   269c4:	401090ba 	slli	r8,r8,2
   269c8:	00000506 	br	269e0 <__multiply+0xec>
   269cc:	6018d43a 	srli	r12,r12,16
   269d0:	6000231e 	bne	r12,zero,26a60 <__multiply+0x16c>
   269d4:	10800104 	addi	r2,r2,4
   269d8:	21000104 	addi	r4,r4,4
   269dc:	12403e2e 	bgeu	r2,r9,26ad8 <__multiply+0x1e4>
   269e0:	13000017 	ldw	r12,0(r2)
   269e4:	63bfffcc 	andi	r14,r12,65535
   269e8:	703ff826 	beq	r14,zero,269cc <__multiply+0xd8>
   269ec:	201b883a 	mov	r13,r4
   269f0:	5019883a 	mov	r12,r10
   269f4:	001f883a 	mov	r15,zero
   269f8:	61400017 	ldw	r5,0(r12)
   269fc:	6ac00017 	ldw	r11,0(r13)
   26a00:	6b400104 	addi	r13,r13,4
   26a04:	29bfffcc 	andi	r6,r5,65535
   26a08:	338d383a 	mul	r6,r6,r14
   26a0c:	2806d43a 	srli	r3,r5,16
   26a10:	597fffcc 	andi	r5,r11,65535
   26a14:	314d883a 	add	r6,r6,r5
   26a18:	33cd883a 	add	r6,r6,r15
   26a1c:	1b87383a 	mul	r3,r3,r14
   26a20:	5816d43a 	srli	r11,r11,16
   26a24:	300ad43a 	srli	r5,r6,16
   26a28:	31bfffcc 	andi	r6,r6,65535
   26a2c:	1ac7883a 	add	r3,r3,r11
   26a30:	1947883a 	add	r3,r3,r5
   26a34:	180a943a 	slli	r5,r3,16
   26a38:	63000104 	addi	r12,r12,4
   26a3c:	181ed43a 	srli	r15,r3,16
   26a40:	298cb03a 	or	r6,r5,r6
   26a44:	69bfff15 	stw	r6,-4(r13)
   26a48:	61ffeb36 	bltu	r12,r7,269f8 <__multiply+0x104>
   26a4c:	2207883a 	add	r3,r4,r8
   26a50:	1bc00015 	stw	r15,0(r3)
   26a54:	13000017 	ldw	r12,0(r2)
   26a58:	6018d43a 	srli	r12,r12,16
   26a5c:	603fdd26 	beq	r12,zero,269d4 <__multiply+0xe0>
   26a60:	20c00017 	ldw	r3,0(r4)
   26a64:	201b883a 	mov	r13,r4
   26a68:	5017883a 	mov	r11,r10
   26a6c:	181d883a 	mov	r14,r3
   26a70:	001f883a 	mov	r15,zero
   26a74:	5980000b 	ldhu	r6,0(r11)
   26a78:	703ed43a 	srli	ra,r14,16
   26a7c:	197fffcc 	andi	r5,r3,65535
   26a80:	3307383a 	mul	r3,r6,r12
   26a84:	5ac00104 	addi	r11,r11,4
   26a88:	6b800117 	ldw	r14,4(r13)
   26a8c:	1fc7883a 	add	r3,r3,ra
   26a90:	1bc7883a 	add	r3,r3,r15
   26a94:	181e943a 	slli	r15,r3,16
   26a98:	180cd43a 	srli	r6,r3,16
   26a9c:	77ffffcc 	andi	ra,r14,65535
   26aa0:	794ab03a 	or	r5,r15,r5
   26aa4:	69400015 	stw	r5,0(r13)
   26aa8:	58ffff8b 	ldhu	r3,-2(r11)
   26aac:	6b400104 	addi	r13,r13,4
   26ab0:	1b07383a 	mul	r3,r3,r12
   26ab4:	1fc7883a 	add	r3,r3,ra
   26ab8:	1987883a 	add	r3,r3,r6
   26abc:	181ed43a 	srli	r15,r3,16
   26ac0:	59ffec36 	bltu	r11,r7,26a74 <__multiply+0x180>
   26ac4:	220b883a 	add	r5,r4,r8
   26ac8:	28c00015 	stw	r3,0(r5)
   26acc:	10800104 	addi	r2,r2,4
   26ad0:	21000104 	addi	r4,r4,4
   26ad4:	127fc236 	bltu	r2,r9,269e0 <__multiply+0xec>
   26ad8:	04400316 	blt	zero,r17,26ae8 <__multiply+0x1f4>
   26adc:	00000506 	br	26af4 <__multiply+0x200>
   26ae0:	8c7fffc4 	addi	r17,r17,-1
   26ae4:	88000326 	beq	r17,zero,26af4 <__multiply+0x200>
   26ae8:	80bfff17 	ldw	r2,-4(r16)
   26aec:	843fff04 	addi	r16,r16,-4
   26af0:	103ffb26 	beq	r2,zero,26ae0 <__multiply+0x1ec>
   26af4:	9005883a 	mov	r2,r18
   26af8:	94400415 	stw	r17,16(r18)
   26afc:	dfc00717 	ldw	ra,28(sp)
   26b00:	dd800617 	ldw	r22,24(sp)
   26b04:	dd400517 	ldw	r21,20(sp)
   26b08:	dd000417 	ldw	r20,16(sp)
   26b0c:	dcc00317 	ldw	r19,12(sp)
   26b10:	dc800217 	ldw	r18,8(sp)
   26b14:	dc400117 	ldw	r17,4(sp)
   26b18:	dc000017 	ldw	r16,0(sp)
   26b1c:	dec00804 	addi	sp,sp,32
   26b20:	f800283a 	ret
   26b24:	02000104 	movi	r8,4
   26b28:	003fad06 	br	269e0 <__multiply+0xec>
   26b2c:	01c000f4 	movhi	r7,3
   26b30:	010000f4 	movhi	r4,3
   26b34:	39ffed04 	addi	r7,r7,-76
   26b38:	000d883a 	mov	r6,zero
   26b3c:	01405744 	movi	r5,349
   26b40:	21000104 	addi	r4,r4,4
   26b44:	002942c0 	call	2942c <__assert_func>

00026b48 <__pow5mult>:
   26b48:	defffb04 	addi	sp,sp,-20
   26b4c:	dcc00315 	stw	r19,12(sp)
   26b50:	dc000015 	stw	r16,0(sp)
   26b54:	dfc00415 	stw	ra,16(sp)
   26b58:	dc800215 	stw	r18,8(sp)
   26b5c:	dc400115 	stw	r17,4(sp)
   26b60:	308000cc 	andi	r2,r6,3
   26b64:	3021883a 	mov	r16,r6
   26b68:	2027883a 	mov	r19,r4
   26b6c:	10002d1e 	bne	r2,zero,26c24 <__pow5mult+0xdc>
   26b70:	2825883a 	mov	r18,r5
   26b74:	8021d0ba 	srai	r16,r16,2
   26b78:	80001926 	beq	r16,zero,26be0 <__pow5mult+0x98>
   26b7c:	9c401217 	ldw	r17,72(r19)
   26b80:	8800061e 	bne	r17,zero,26b9c <__pow5mult+0x54>
   26b84:	00002f06 	br	26c44 <__pow5mult+0xfc>
   26b88:	8021d07a 	srai	r16,r16,1
   26b8c:	80001426 	beq	r16,zero,26be0 <__pow5mult+0x98>
   26b90:	88800017 	ldw	r2,0(r17)
   26b94:	10001a26 	beq	r2,zero,26c00 <__pow5mult+0xb8>
   26b98:	1023883a 	mov	r17,r2
   26b9c:	8080004c 	andi	r2,r16,1
   26ba0:	103ff926 	beq	r2,zero,26b88 <__pow5mult+0x40>
   26ba4:	880d883a 	mov	r6,r17
   26ba8:	900b883a 	mov	r5,r18
   26bac:	9809883a 	mov	r4,r19
   26bb0:	00268f40 	call	268f4 <__multiply>
   26bb4:	90001926 	beq	r18,zero,26c1c <__pow5mult+0xd4>
   26bb8:	91000117 	ldw	r4,4(r18)
   26bbc:	98c01317 	ldw	r3,76(r19)
   26bc0:	8021d07a 	srai	r16,r16,1
   26bc4:	200890ba 	slli	r4,r4,2
   26bc8:	1907883a 	add	r3,r3,r4
   26bcc:	19000017 	ldw	r4,0(r3)
   26bd0:	91000015 	stw	r4,0(r18)
   26bd4:	1c800015 	stw	r18,0(r3)
   26bd8:	1025883a 	mov	r18,r2
   26bdc:	803fec1e 	bne	r16,zero,26b90 <__pow5mult+0x48>
   26be0:	9005883a 	mov	r2,r18
   26be4:	dfc00417 	ldw	ra,16(sp)
   26be8:	dcc00317 	ldw	r19,12(sp)
   26bec:	dc800217 	ldw	r18,8(sp)
   26bf0:	dc400117 	ldw	r17,4(sp)
   26bf4:	dc000017 	ldw	r16,0(sp)
   26bf8:	dec00504 	addi	sp,sp,20
   26bfc:	f800283a 	ret
   26c00:	880d883a 	mov	r6,r17
   26c04:	880b883a 	mov	r5,r17
   26c08:	9809883a 	mov	r4,r19
   26c0c:	00268f40 	call	268f4 <__multiply>
   26c10:	88800015 	stw	r2,0(r17)
   26c14:	10000015 	stw	zero,0(r2)
   26c18:	003fdf06 	br	26b98 <__pow5mult+0x50>
   26c1c:	1025883a 	mov	r18,r2
   26c20:	003fd906 	br	26b88 <__pow5mult+0x40>
   26c24:	100490ba 	slli	r2,r2,2
   26c28:	00c000f4 	movhi	r3,3
   26c2c:	000f883a 	mov	r7,zero
   26c30:	10c7883a 	add	r3,r2,r3
   26c34:	19800f17 	ldw	r6,60(r3)
   26c38:	00264c00 	call	264c0 <__multadd>
   26c3c:	1025883a 	mov	r18,r2
   26c40:	003fcc06 	br	26b74 <__pow5mult+0x2c>
   26c44:	01400044 	movi	r5,1
   26c48:	9809883a 	mov	r4,r19
   26c4c:	00263f80 	call	263f8 <_Balloc>
   26c50:	1023883a 	mov	r17,r2
   26c54:	10000726 	beq	r2,zero,26c74 <__pow5mult+0x12c>
   26c58:	00809c44 	movi	r2,625
   26c5c:	88800515 	stw	r2,20(r17)
   26c60:	00800044 	movi	r2,1
   26c64:	88800415 	stw	r2,16(r17)
   26c68:	9c401215 	stw	r17,72(r19)
   26c6c:	88000015 	stw	zero,0(r17)
   26c70:	003fca06 	br	26b9c <__pow5mult+0x54>
   26c74:	01c000f4 	movhi	r7,3
   26c78:	010000f4 	movhi	r4,3
   26c7c:	39ffed04 	addi	r7,r7,-76
   26c80:	000d883a 	mov	r6,zero
   26c84:	01405004 	movi	r5,320
   26c88:	21000104 	addi	r4,r4,4
   26c8c:	002942c0 	call	2942c <__assert_func>

00026c90 <__lshift>:
   26c90:	defff804 	addi	sp,sp,-32
   26c94:	dd800615 	stw	r22,24(sp)
   26c98:	dc000015 	stw	r16,0(sp)
   26c9c:	302dd17a 	srai	r22,r6,5
   26ca0:	2c000417 	ldw	r16,16(r5)
   26ca4:	28800217 	ldw	r2,8(r5)
   26ca8:	dd000415 	stw	r20,16(sp)
   26cac:	b421883a 	add	r16,r22,r16
   26cb0:	dcc00315 	stw	r19,12(sp)
   26cb4:	dc800215 	stw	r18,8(sp)
   26cb8:	dc400115 	stw	r17,4(sp)
   26cbc:	dfc00715 	stw	ra,28(sp)
   26cc0:	dd400515 	stw	r21,20(sp)
   26cc4:	85000044 	addi	r20,r16,1
   26cc8:	2827883a 	mov	r19,r5
   26ccc:	3025883a 	mov	r18,r6
   26cd0:	29400117 	ldw	r5,4(r5)
   26cd4:	2023883a 	mov	r17,r4
   26cd8:	1500030e 	bge	r2,r20,26ce8 <__lshift+0x58>
   26cdc:	1085883a 	add	r2,r2,r2
   26ce0:	29400044 	addi	r5,r5,1
   26ce4:	153ffd16 	blt	r2,r20,26cdc <__lshift+0x4c>
   26ce8:	8809883a 	mov	r4,r17
   26cec:	00263f80 	call	263f8 <_Balloc>
   26cf0:	102b883a 	mov	r21,r2
   26cf4:	10004126 	beq	r2,zero,26dfc <__lshift+0x16c>
   26cf8:	11000504 	addi	r4,r2,20
   26cfc:	0580050e 	bge	zero,r22,26d14 <__lshift+0x84>
   26d00:	b02c90ba 	slli	r22,r22,2
   26d04:	000b883a 	mov	r5,zero
   26d08:	b00d883a 	mov	r6,r22
   26d0c:	00263080 	call	26308 <memset>
   26d10:	1589883a 	add	r4,r2,r22
   26d14:	9a000417 	ldw	r8,16(r19)
   26d18:	98c00504 	addi	r3,r19,20
   26d1c:	948007cc 	andi	r18,r18,31
   26d20:	401090ba 	slli	r8,r8,2
   26d24:	1a11883a 	add	r8,r3,r8
   26d28:	90002c26 	beq	r18,zero,26ddc <__lshift+0x14c>
   26d2c:	01400804 	movi	r5,32
   26d30:	2c8bc83a 	sub	r5,r5,r18
   26d34:	2005883a 	mov	r2,r4
   26d38:	000f883a 	mov	r7,zero
   26d3c:	19800017 	ldw	r6,0(r3)
   26d40:	10800104 	addi	r2,r2,4
   26d44:	18c00104 	addi	r3,r3,4
   26d48:	348c983a 	sll	r6,r6,r18
   26d4c:	31ccb03a 	or	r6,r6,r7
   26d50:	11bfff15 	stw	r6,-4(r2)
   26d54:	19bfff17 	ldw	r6,-4(r3)
   26d58:	314ed83a 	srl	r7,r6,r5
   26d5c:	1a3ff736 	bltu	r3,r8,26d3c <__lshift+0xac>
   26d60:	98800544 	addi	r2,r19,21
   26d64:	40802336 	bltu	r8,r2,26df4 <__lshift+0x164>
   26d68:	44c7c83a 	sub	r3,r8,r19
   26d6c:	18fffac4 	addi	r3,r3,-21
   26d70:	1806d0ba 	srli	r3,r3,2
   26d74:	18c00044 	addi	r3,r3,1
   26d78:	180690ba 	slli	r3,r3,2
   26d7c:	20c9883a 	add	r4,r4,r3
   26d80:	21c00015 	stw	r7,0(r4)
   26d84:	38000126 	beq	r7,zero,26d8c <__lshift+0xfc>
   26d88:	a021883a 	mov	r16,r20
   26d8c:	ac000415 	stw	r16,16(r21)
   26d90:	98000726 	beq	r19,zero,26db0 <__lshift+0x120>
   26d94:	98c00117 	ldw	r3,4(r19)
   26d98:	88801317 	ldw	r2,76(r17)
   26d9c:	180690ba 	slli	r3,r3,2
   26da0:	10c5883a 	add	r2,r2,r3
   26da4:	10c00017 	ldw	r3,0(r2)
   26da8:	98c00015 	stw	r3,0(r19)
   26dac:	14c00015 	stw	r19,0(r2)
   26db0:	a805883a 	mov	r2,r21
   26db4:	dfc00717 	ldw	ra,28(sp)
   26db8:	dd800617 	ldw	r22,24(sp)
   26dbc:	dd400517 	ldw	r21,20(sp)
   26dc0:	dd000417 	ldw	r20,16(sp)
   26dc4:	dcc00317 	ldw	r19,12(sp)
   26dc8:	dc800217 	ldw	r18,8(sp)
   26dcc:	dc400117 	ldw	r17,4(sp)
   26dd0:	dc000017 	ldw	r16,0(sp)
   26dd4:	dec00804 	addi	sp,sp,32
   26dd8:	f800283a 	ret
   26ddc:	18800017 	ldw	r2,0(r3)
   26de0:	18c00104 	addi	r3,r3,4
   26de4:	21000104 	addi	r4,r4,4
   26de8:	20bfff15 	stw	r2,-4(r4)
   26dec:	1a3ffb36 	bltu	r3,r8,26ddc <__lshift+0x14c>
   26df0:	003fe606 	br	26d8c <__lshift+0xfc>
   26df4:	00c00104 	movi	r3,4
   26df8:	003fe006 	br	26d7c <__lshift+0xec>
   26dfc:	01c000f4 	movhi	r7,3
   26e00:	010000f4 	movhi	r4,3
   26e04:	39ffed04 	addi	r7,r7,-76
   26e08:	000d883a 	mov	r6,zero
   26e0c:	01407644 	movi	r5,473
   26e10:	21000104 	addi	r4,r4,4
   26e14:	002942c0 	call	2942c <__assert_func>

00026e18 <__mcmp>:
   26e18:	21800417 	ldw	r6,16(r4)
   26e1c:	28c00417 	ldw	r3,16(r5)
   26e20:	30c5c83a 	sub	r2,r6,r3
   26e24:	30c00e1e 	bne	r6,r3,26e60 <__mcmp+0x48>
   26e28:	180690ba 	slli	r3,r3,2
   26e2c:	21c00504 	addi	r7,r4,20
   26e30:	29400504 	addi	r5,r5,20
   26e34:	38c9883a 	add	r4,r7,r3
   26e38:	28c7883a 	add	r3,r5,r3
   26e3c:	00000106 	br	26e44 <__mcmp+0x2c>
   26e40:	3900082e 	bgeu	r7,r4,26e64 <__mcmp+0x4c>
   26e44:	21bfff17 	ldw	r6,-4(r4)
   26e48:	197fff17 	ldw	r5,-4(r3)
   26e4c:	213fff04 	addi	r4,r4,-4
   26e50:	18ffff04 	addi	r3,r3,-4
   26e54:	317ffa26 	beq	r6,r5,26e40 <__mcmp+0x28>
   26e58:	3140032e 	bgeu	r6,r5,26e68 <__mcmp+0x50>
   26e5c:	00bfffc4 	movi	r2,-1
   26e60:	f800283a 	ret
   26e64:	f800283a 	ret
   26e68:	00800044 	movi	r2,1
   26e6c:	f800283a 	ret

00026e70 <__mdiff>:
   26e70:	28800417 	ldw	r2,16(r5)
   26e74:	30c00417 	ldw	r3,16(r6)
   26e78:	defffc04 	addi	sp,sp,-16
   26e7c:	dc800215 	stw	r18,8(sp)
   26e80:	dc400115 	stw	r17,4(sp)
   26e84:	dc000015 	stw	r16,0(sp)
   26e88:	dfc00315 	stw	ra,12(sp)
   26e8c:	2823883a 	mov	r17,r5
   26e90:	3021883a 	mov	r16,r6
   26e94:	10e5c83a 	sub	r18,r2,r3
   26e98:	10c0641e 	bne	r2,r3,2702c <__mdiff+0x1bc>
   26e9c:	180c90ba 	slli	r6,r3,2
   26ea0:	29400504 	addi	r5,r5,20
   26ea4:	80c00504 	addi	r3,r16,20
   26ea8:	2985883a 	add	r2,r5,r6
   26eac:	1987883a 	add	r3,r3,r6
   26eb0:	00000106 	br	26eb8 <__mdiff+0x48>
   26eb4:	2880642e 	bgeu	r5,r2,27048 <__mdiff+0x1d8>
   26eb8:	11bfff17 	ldw	r6,-4(r2)
   26ebc:	19ffff17 	ldw	r7,-4(r3)
   26ec0:	10bfff04 	addi	r2,r2,-4
   26ec4:	18ffff04 	addi	r3,r3,-4
   26ec8:	31fffa26 	beq	r6,r7,26eb4 <__mdiff+0x44>
   26ecc:	31c05236 	bltu	r6,r7,27018 <__mdiff+0x1a8>
   26ed0:	89400117 	ldw	r5,4(r17)
   26ed4:	00263f80 	call	263f8 <_Balloc>
   26ed8:	10006226 	beq	r2,zero,27064 <__mdiff+0x1f4>
   26edc:	8a400417 	ldw	r9,16(r17)
   26ee0:	83000417 	ldw	r12,16(r16)
   26ee4:	8ac00504 	addi	r11,r17,20
   26ee8:	481090ba 	slli	r8,r9,2
   26eec:	601890ba 	slli	r12,r12,2
   26ef0:	81800504 	addi	r6,r16,20
   26ef4:	13400504 	addi	r13,r2,20
   26ef8:	14800315 	stw	r18,12(r2)
   26efc:	5a11883a 	add	r8,r11,r8
   26f00:	3319883a 	add	r12,r6,r12
   26f04:	681d883a 	mov	r14,r13
   26f08:	5815883a 	mov	r10,r11
   26f0c:	0007883a 	mov	r3,zero
   26f10:	51000017 	ldw	r4,0(r10)
   26f14:	31c00017 	ldw	r7,0(r6)
   26f18:	73800104 	addi	r14,r14,4
   26f1c:	217fffcc 	andi	r5,r4,65535
   26f20:	28cb883a 	add	r5,r5,r3
   26f24:	38ffffcc 	andi	r3,r7,65535
   26f28:	28cbc83a 	sub	r5,r5,r3
   26f2c:	380ed43a 	srli	r7,r7,16
   26f30:	2006d43a 	srli	r3,r4,16
   26f34:	2809d43a 	srai	r4,r5,16
   26f38:	297fffcc 	andi	r5,r5,65535
   26f3c:	19c7c83a 	sub	r3,r3,r7
   26f40:	1907883a 	add	r3,r3,r4
   26f44:	1808943a 	slli	r4,r3,16
   26f48:	31800104 	addi	r6,r6,4
   26f4c:	1807d43a 	srai	r3,r3,16
   26f50:	214ab03a 	or	r5,r4,r5
   26f54:	717fff15 	stw	r5,-4(r14)
   26f58:	52800104 	addi	r10,r10,4
   26f5c:	333fec36 	bltu	r6,r12,26f10 <__mdiff+0xa0>
   26f60:	640fc83a 	sub	r7,r12,r16
   26f64:	39fffac4 	addi	r7,r7,-21
   26f68:	84000544 	addi	r16,r16,21
   26f6c:	380ed0ba 	srli	r7,r7,2
   26f70:	64003336 	bltu	r12,r16,27040 <__mdiff+0x1d0>
   26f74:	380890ba 	slli	r4,r7,2
   26f78:	6909883a 	add	r4,r13,r4
   26f7c:	64002e36 	bltu	r12,r16,27038 <__mdiff+0x1c8>
   26f80:	39800044 	addi	r6,r7,1
   26f84:	300c90ba 	slli	r6,r6,2
   26f88:	5997883a 	add	r11,r11,r6
   26f8c:	699b883a 	add	r13,r13,r6
   26f90:	5a00152e 	bgeu	r11,r8,26fe8 <__mdiff+0x178>
   26f94:	680f883a 	mov	r7,r13
   26f98:	580d883a 	mov	r6,r11
   26f9c:	31000017 	ldw	r4,0(r6)
   26fa0:	39c00104 	addi	r7,r7,4
   26fa4:	31800104 	addi	r6,r6,4
   26fa8:	217fffcc 	andi	r5,r4,65535
   26fac:	28cb883a 	add	r5,r5,r3
   26fb0:	2815d43a 	srai	r10,r5,16
   26fb4:	2006d43a 	srli	r3,r4,16
   26fb8:	297fffcc 	andi	r5,r5,65535
   26fbc:	1a87883a 	add	r3,r3,r10
   26fc0:	1814943a 	slli	r10,r3,16
   26fc4:	1807d43a 	srai	r3,r3,16
   26fc8:	514ab03a 	or	r5,r10,r5
   26fcc:	397fff15 	stw	r5,-4(r7)
   26fd0:	323ff236 	bltu	r6,r8,26f9c <__mdiff+0x12c>
   26fd4:	413fffc4 	addi	r4,r8,-1
   26fd8:	22c9c83a 	sub	r4,r4,r11
   26fdc:	2008d0ba 	srli	r4,r4,2
   26fe0:	200890ba 	slli	r4,r4,2
   26fe4:	6909883a 	add	r4,r13,r4
   26fe8:	2800041e 	bne	r5,zero,26ffc <__mdiff+0x18c>
   26fec:	20ffff17 	ldw	r3,-4(r4)
   26ff0:	4a7fffc4 	addi	r9,r9,-1
   26ff4:	213fff04 	addi	r4,r4,-4
   26ff8:	183ffc26 	beq	r3,zero,26fec <__mdiff+0x17c>
   26ffc:	12400415 	stw	r9,16(r2)
   27000:	dfc00317 	ldw	ra,12(sp)
   27004:	dc800217 	ldw	r18,8(sp)
   27008:	dc400117 	ldw	r17,4(sp)
   2700c:	dc000017 	ldw	r16,0(sp)
   27010:	dec00404 	addi	sp,sp,16
   27014:	f800283a 	ret
   27018:	8805883a 	mov	r2,r17
   2701c:	04800044 	movi	r18,1
   27020:	8023883a 	mov	r17,r16
   27024:	1021883a 	mov	r16,r2
   27028:	003fa906 	br	26ed0 <__mdiff+0x60>
   2702c:	903ffa16 	blt	r18,zero,27018 <__mdiff+0x1a8>
   27030:	0025883a 	mov	r18,zero
   27034:	003fa606 	br	26ed0 <__mdiff+0x60>
   27038:	01800104 	movi	r6,4
   2703c:	003fd206 	br	26f88 <__mdiff+0x118>
   27040:	0009883a 	mov	r4,zero
   27044:	003fcc06 	br	26f78 <__mdiff+0x108>
   27048:	000b883a 	mov	r5,zero
   2704c:	00263f80 	call	263f8 <_Balloc>
   27050:	10000b26 	beq	r2,zero,27080 <__mdiff+0x210>
   27054:	00c00044 	movi	r3,1
   27058:	10c00415 	stw	r3,16(r2)
   2705c:	10000515 	stw	zero,20(r2)
   27060:	003fe706 	br	27000 <__mdiff+0x190>
   27064:	01c000f4 	movhi	r7,3
   27068:	010000f4 	movhi	r4,3
   2706c:	39ffed04 	addi	r7,r7,-76
   27070:	000d883a 	mov	r6,zero
   27074:	01409004 	movi	r5,576
   27078:	21000104 	addi	r4,r4,4
   2707c:	002942c0 	call	2942c <__assert_func>
   27080:	01c000f4 	movhi	r7,3
   27084:	010000f4 	movhi	r4,3
   27088:	39ffed04 	addi	r7,r7,-76
   2708c:	000d883a 	mov	r6,zero
   27090:	01408c84 	movi	r5,562
   27094:	21000104 	addi	r4,r4,4
   27098:	002942c0 	call	2942c <__assert_func>

0002709c <__ulp>:
   2709c:	28dffc2c 	andhi	r3,r5,32752
   270a0:	017f3034 	movhi	r5,64704
   270a4:	1947883a 	add	r3,r3,r5
   270a8:	00c0020e 	bge	zero,r3,270b4 <__ulp+0x18>
   270ac:	0005883a 	mov	r2,zero
   270b0:	f800283a 	ret
   270b4:	00c7c83a 	sub	r3,zero,r3
   270b8:	1807d53a 	srai	r3,r3,20
   270bc:	18800508 	cmpgei	r2,r3,20
   270c0:	1000041e 	bne	r2,zero,270d4 <__ulp+0x38>
   270c4:	00800234 	movhi	r2,8
   270c8:	10c7d83a 	sra	r3,r2,r3
   270cc:	0005883a 	mov	r2,zero
   270d0:	f800283a 	ret
   270d4:	193ffb04 	addi	r4,r3,-20
   270d8:	208007c8 	cmpgei	r2,r4,31
   270dc:	0007883a 	mov	r3,zero
   270e0:	1000031e 	bne	r2,zero,270f0 <__ulp+0x54>
   270e4:	00a00034 	movhi	r2,32768
   270e8:	1104d83a 	srl	r2,r2,r4
   270ec:	f800283a 	ret
   270f0:	00800044 	movi	r2,1
   270f4:	f800283a 	ret

000270f8 <__b2d>:
   270f8:	defffa04 	addi	sp,sp,-24
   270fc:	dc400115 	stw	r17,4(sp)
   27100:	24400417 	ldw	r17,16(r4)
   27104:	dc000015 	stw	r16,0(sp)
   27108:	24000504 	addi	r16,r4,20
   2710c:	882290ba 	slli	r17,r17,2
   27110:	dc800215 	stw	r18,8(sp)
   27114:	dd000415 	stw	r20,16(sp)
   27118:	8463883a 	add	r17,r16,r17
   2711c:	8cbfff17 	ldw	r18,-4(r17)
   27120:	dcc00315 	stw	r19,12(sp)
   27124:	dfc00515 	stw	ra,20(sp)
   27128:	9009883a 	mov	r4,r18
   2712c:	2827883a 	mov	r19,r5
   27130:	00267300 	call	26730 <__hi0bits>
   27134:	00c00804 	movi	r3,32
   27138:	1889c83a 	sub	r4,r3,r2
   2713c:	99000015 	stw	r4,0(r19)
   27140:	110002c8 	cmpgei	r4,r2,11
   27144:	8d3fff04 	addi	r20,r17,-4
   27148:	20002026 	beq	r4,zero,271cc <__b2d+0xd4>
   2714c:	10bffd44 	addi	r2,r2,-11
   27150:	85000e2e 	bgeu	r16,r20,2718c <__b2d+0x94>
   27154:	897ffe17 	ldw	r5,-8(r17)
   27158:	10001226 	beq	r2,zero,271a4 <__b2d+0xac>
   2715c:	1889c83a 	sub	r4,r3,r2
   27160:	90a4983a 	sll	r18,r18,r2
   27164:	2906d83a 	srl	r3,r5,r4
   27168:	89bffe04 	addi	r6,r17,-8
   2716c:	2884983a 	sll	r2,r5,r2
   27170:	90e4b03a 	or	r18,r18,r3
   27174:	90cffc34 	orhi	r3,r18,16368
   27178:	81800c2e 	bgeu	r16,r6,271ac <__b2d+0xb4>
   2717c:	897ffd17 	ldw	r5,-12(r17)
   27180:	2908d83a 	srl	r4,r5,r4
   27184:	1104b03a 	or	r2,r2,r4
   27188:	00000806 	br	271ac <__b2d+0xb4>
   2718c:	10000426 	beq	r2,zero,271a0 <__b2d+0xa8>
   27190:	90a4983a 	sll	r18,r18,r2
   27194:	0005883a 	mov	r2,zero
   27198:	90cffc34 	orhi	r3,r18,16368
   2719c:	00000306 	br	271ac <__b2d+0xb4>
   271a0:	000b883a 	mov	r5,zero
   271a4:	90cffc34 	orhi	r3,r18,16368
   271a8:	2805883a 	mov	r2,r5
   271ac:	dfc00517 	ldw	ra,20(sp)
   271b0:	dd000417 	ldw	r20,16(sp)
   271b4:	dcc00317 	ldw	r19,12(sp)
   271b8:	dc800217 	ldw	r18,8(sp)
   271bc:	dc400117 	ldw	r17,4(sp)
   271c0:	dc000017 	ldw	r16,0(sp)
   271c4:	dec00604 	addi	sp,sp,24
   271c8:	f800283a 	ret
   271cc:	014002c4 	movi	r5,11
   271d0:	2889c83a 	sub	r4,r5,r2
   271d4:	9106d83a 	srl	r3,r18,r4
   271d8:	18cffc34 	orhi	r3,r3,16368
   271dc:	85000536 	bltu	r16,r20,271f4 <__b2d+0xfc>
   271e0:	000b883a 	mov	r5,zero
   271e4:	10800544 	addi	r2,r2,21
   271e8:	9084983a 	sll	r2,r18,r2
   271ec:	1144b03a 	or	r2,r2,r5
   271f0:	003fee06 	br	271ac <__b2d+0xb4>
   271f4:	897ffe17 	ldw	r5,-8(r17)
   271f8:	290ad83a 	srl	r5,r5,r4
   271fc:	003ff906 	br	271e4 <__b2d+0xec>

00027200 <__d2b>:
   27200:	defff804 	addi	sp,sp,-32
   27204:	dd000615 	stw	r20,24(sp)
   27208:	2829883a 	mov	r20,r5
   2720c:	01400044 	movi	r5,1
   27210:	dcc00515 	stw	r19,20(sp)
   27214:	dc000215 	stw	r16,8(sp)
   27218:	dfc00715 	stw	ra,28(sp)
   2721c:	dc800415 	stw	r18,16(sp)
   27220:	dc400315 	stw	r17,12(sp)
   27224:	3021883a 	mov	r16,r6
   27228:	3827883a 	mov	r19,r7
   2722c:	00263f80 	call	263f8 <_Balloc>
   27230:	10004526 	beq	r2,zero,27348 <__d2b+0x148>
   27234:	8024d53a 	srli	r18,r16,20
   27238:	01800434 	movhi	r6,16
   2723c:	31bfffc4 	addi	r6,r6,-1
   27240:	9481ffcc 	andi	r18,r18,2047
   27244:	1023883a 	mov	r17,r2
   27248:	81a0703a 	and	r16,r16,r6
   2724c:	90000126 	beq	r18,zero,27254 <__d2b+0x54>
   27250:	84000434 	orhi	r16,r16,16
   27254:	dc000115 	stw	r16,4(sp)
   27258:	a0002226 	beq	r20,zero,272e4 <__d2b+0xe4>
   2725c:	d809883a 	mov	r4,sp
   27260:	dd000015 	stw	r20,0(sp)
   27264:	00267940 	call	26794 <__lo0bits>
   27268:	d8c00117 	ldw	r3,4(sp)
   2726c:	10003326 	beq	r2,zero,2733c <__d2b+0x13c>
   27270:	01000804 	movi	r4,32
   27274:	2089c83a 	sub	r4,r4,r2
   27278:	1908983a 	sll	r4,r3,r4
   2727c:	d9400017 	ldw	r5,0(sp)
   27280:	1886d83a 	srl	r3,r3,r2
   27284:	2148b03a 	or	r4,r4,r5
   27288:	89000515 	stw	r4,20(r17)
   2728c:	d8c00115 	stw	r3,4(sp)
   27290:	88c00615 	stw	r3,24(r17)
   27294:	1800271e 	bne	r3,zero,27334 <__d2b+0x134>
   27298:	04000044 	movi	r16,1
   2729c:	8c000415 	stw	r16,16(r17)
   272a0:	90001926 	beq	r18,zero,27308 <__d2b+0x108>
   272a4:	00c00d44 	movi	r3,53
   272a8:	94bef344 	addi	r18,r18,-1075
   272ac:	90a5883a 	add	r18,r18,r2
   272b0:	1885c83a 	sub	r2,r3,r2
   272b4:	d8c00817 	ldw	r3,32(sp)
   272b8:	9c800015 	stw	r18,0(r19)
   272bc:	18800015 	stw	r2,0(r3)
   272c0:	8805883a 	mov	r2,r17
   272c4:	dfc00717 	ldw	ra,28(sp)
   272c8:	dd000617 	ldw	r20,24(sp)
   272cc:	dcc00517 	ldw	r19,20(sp)
   272d0:	dc800417 	ldw	r18,16(sp)
   272d4:	dc400317 	ldw	r17,12(sp)
   272d8:	dc000217 	ldw	r16,8(sp)
   272dc:	dec00804 	addi	sp,sp,32
   272e0:	f800283a 	ret
   272e4:	d9000104 	addi	r4,sp,4
   272e8:	00267940 	call	26794 <__lo0bits>
   272ec:	00c00044 	movi	r3,1
   272f0:	88c00415 	stw	r3,16(r17)
   272f4:	d8c00117 	ldw	r3,4(sp)
   272f8:	10800804 	addi	r2,r2,32
   272fc:	04000044 	movi	r16,1
   27300:	88c00515 	stw	r3,20(r17)
   27304:	903fe71e 	bne	r18,zero,272a4 <__d2b+0xa4>
   27308:	800690ba 	slli	r3,r16,2
   2730c:	10bef384 	addi	r2,r2,-1074
   27310:	98800015 	stw	r2,0(r19)
   27314:	88c5883a 	add	r2,r17,r3
   27318:	11000417 	ldw	r4,16(r2)
   2731c:	8020917a 	slli	r16,r16,5
   27320:	00267300 	call	26730 <__hi0bits>
   27324:	80a1c83a 	sub	r16,r16,r2
   27328:	d8800817 	ldw	r2,32(sp)
   2732c:	14000015 	stw	r16,0(r2)
   27330:	003fe306 	br	272c0 <__d2b+0xc0>
   27334:	04000084 	movi	r16,2
   27338:	003fd806 	br	2729c <__d2b+0x9c>
   2733c:	d9000017 	ldw	r4,0(sp)
   27340:	89000515 	stw	r4,20(r17)
   27344:	003fd206 	br	27290 <__d2b+0x90>
   27348:	01c000f4 	movhi	r7,3
   2734c:	010000f4 	movhi	r4,3
   27350:	39ffed04 	addi	r7,r7,-76
   27354:	000d883a 	mov	r6,zero
   27358:	0140c284 	movi	r5,778
   2735c:	21000104 	addi	r4,r4,4
   27360:	002942c0 	call	2942c <__assert_func>

00027364 <__ratio>:
   27364:	defff904 	addi	sp,sp,-28
   27368:	dc400315 	stw	r17,12(sp)
   2736c:	2823883a 	mov	r17,r5
   27370:	d80b883a 	mov	r5,sp
   27374:	dfc00615 	stw	ra,24(sp)
   27378:	dcc00515 	stw	r19,20(sp)
   2737c:	dc800415 	stw	r18,16(sp)
   27380:	2027883a 	mov	r19,r4
   27384:	dc000215 	stw	r16,8(sp)
   27388:	00270f80 	call	270f8 <__b2d>
   2738c:	d9400104 	addi	r5,sp,4
   27390:	8809883a 	mov	r4,r17
   27394:	1025883a 	mov	r18,r2
   27398:	1821883a 	mov	r16,r3
   2739c:	00270f80 	call	270f8 <__b2d>
   273a0:	89000417 	ldw	r4,16(r17)
   273a4:	9a000417 	ldw	r8,16(r19)
   273a8:	d9400117 	ldw	r5,4(sp)
   273ac:	100d883a 	mov	r6,r2
   273b0:	4111c83a 	sub	r8,r8,r4
   273b4:	d9000017 	ldw	r4,0(sp)
   273b8:	4010917a 	slli	r8,r8,5
   273bc:	180f883a 	mov	r7,r3
   273c0:	2149c83a 	sub	r4,r4,r5
   273c4:	4111883a 	add	r8,r8,r4
   273c8:	02000c0e 	bge	zero,r8,273fc <__ratio+0x98>
   273cc:	4010953a 	slli	r8,r8,20
   273d0:	4421883a 	add	r16,r8,r16
   273d4:	9009883a 	mov	r4,r18
   273d8:	800b883a 	mov	r5,r16
   273dc:	002b7a00 	call	2b7a0 <__divdf3>
   273e0:	dfc00617 	ldw	ra,24(sp)
   273e4:	dcc00517 	ldw	r19,20(sp)
   273e8:	dc800417 	ldw	r18,16(sp)
   273ec:	dc400317 	ldw	r17,12(sp)
   273f0:	dc000217 	ldw	r16,8(sp)
   273f4:	dec00704 	addi	sp,sp,28
   273f8:	f800283a 	ret
   273fc:	00bffc34 	movhi	r2,65520
   27400:	4091383a 	mul	r8,r8,r2
   27404:	40cf883a 	add	r7,r8,r3
   27408:	003ff206 	br	273d4 <__ratio+0x70>

0002740c <_mprec_log10>:
   2740c:	defffe04 	addi	sp,sp,-8
   27410:	dc000015 	stw	r16,0(sp)
   27414:	dfc00115 	stw	ra,4(sp)
   27418:	20800608 	cmpgei	r2,r4,24
   2741c:	2021883a 	mov	r16,r4
   27420:	10000f26 	beq	r2,zero,27460 <_mprec_log10+0x54>
   27424:	0009883a 	mov	r4,zero
   27428:	014ffc34 	movhi	r5,16368
   2742c:	000d883a 	mov	r6,zero
   27430:	01d00934 	movhi	r7,16420
   27434:	002c2400 	call	2c240 <__muldf3>
   27438:	843fffc4 	addi	r16,r16,-1
   2743c:	1009883a 	mov	r4,r2
   27440:	180b883a 	mov	r5,r3
   27444:	803ff91e 	bne	r16,zero,2742c <_mprec_log10+0x20>
   27448:	2005883a 	mov	r2,r4
   2744c:	2807883a 	mov	r3,r5
   27450:	dfc00117 	ldw	ra,4(sp)
   27454:	dc000017 	ldw	r16,0(sp)
   27458:	dec00204 	addi	sp,sp,8
   2745c:	f800283a 	ret
   27460:	202090fa 	slli	r16,r4,3
   27464:	008000f4 	movhi	r2,3
   27468:	10802704 	addi	r2,r2,156
   2746c:	1421883a 	add	r16,r2,r16
   27470:	81000017 	ldw	r4,0(r16)
   27474:	81400117 	ldw	r5,4(r16)
   27478:	003ff306 	br	27448 <_mprec_log10+0x3c>

0002747c <__copybits>:
   2747c:	297fffc4 	addi	r5,r5,-1
   27480:	280fd17a 	srai	r7,r5,5
   27484:	31400417 	ldw	r5,16(r6)
   27488:	30800504 	addi	r2,r6,20
   2748c:	39c00044 	addi	r7,r7,1
   27490:	280a90ba 	slli	r5,r5,2
   27494:	380e90ba 	slli	r7,r7,2
   27498:	114b883a 	add	r5,r2,r5
   2749c:	21cf883a 	add	r7,r4,r7
   274a0:	11400c2e 	bgeu	r2,r5,274d4 <__copybits+0x58>
   274a4:	2007883a 	mov	r3,r4
   274a8:	12000017 	ldw	r8,0(r2)
   274ac:	10800104 	addi	r2,r2,4
   274b0:	18c00104 	addi	r3,r3,4
   274b4:	1a3fff15 	stw	r8,-4(r3)
   274b8:	117ffb36 	bltu	r2,r5,274a8 <__copybits+0x2c>
   274bc:	2985c83a 	sub	r2,r5,r6
   274c0:	10bffac4 	addi	r2,r2,-21
   274c4:	1004d0ba 	srli	r2,r2,2
   274c8:	10800044 	addi	r2,r2,1
   274cc:	100490ba 	slli	r2,r2,2
   274d0:	2089883a 	add	r4,r4,r2
   274d4:	21c0072e 	bgeu	r4,r7,274f4 <__copybits+0x78>
   274d8:	39bfffc4 	addi	r6,r7,-1
   274dc:	310dc83a 	sub	r6,r6,r4
   274e0:	300cd0ba 	srli	r6,r6,2
   274e4:	000b883a 	mov	r5,zero
   274e8:	31800044 	addi	r6,r6,1
   274ec:	300c90ba 	slli	r6,r6,2
   274f0:	00263081 	jmpi	26308 <memset>
   274f4:	f800283a 	ret

000274f8 <__any_on>:
   274f8:	20c00417 	ldw	r3,16(r4)
   274fc:	280dd17a 	srai	r6,r5,5
   27500:	21000504 	addi	r4,r4,20
   27504:	1980080e 	bge	r3,r6,27528 <__any_on+0x30>
   27508:	180490ba 	slli	r2,r3,2
   2750c:	2085883a 	add	r2,r4,r2
   27510:	20800f2e 	bgeu	r4,r2,27550 <__any_on+0x58>
   27514:	10ffff17 	ldw	r3,-4(r2)
   27518:	10bfff04 	addi	r2,r2,-4
   2751c:	183ffc26 	beq	r3,zero,27510 <__any_on+0x18>
   27520:	00800044 	movi	r2,1
   27524:	f800283a 	ret
   27528:	300490ba 	slli	r2,r6,2
   2752c:	2085883a 	add	r2,r4,r2
   27530:	30fff70e 	bge	r6,r3,27510 <__any_on+0x18>
   27534:	294007cc 	andi	r5,r5,31
   27538:	283ff526 	beq	r5,zero,27510 <__any_on+0x18>
   2753c:	11800017 	ldw	r6,0(r2)
   27540:	3146d83a 	srl	r3,r6,r5
   27544:	194a983a 	sll	r5,r3,r5
   27548:	317ff51e 	bne	r6,r5,27520 <__any_on+0x28>
   2754c:	003ff006 	br	27510 <__any_on+0x18>
   27550:	0005883a 	mov	r2,zero
   27554:	f800283a 	ret

00027558 <_putc_r>:
   27558:	defffc04 	addi	sp,sp,-16
   2755c:	dc400215 	stw	r17,8(sp)
   27560:	dfc00315 	stw	ra,12(sp)
   27564:	2023883a 	mov	r17,r4
   27568:	20000226 	beq	r4,zero,27574 <_putc_r+0x1c>
   2756c:	20800e17 	ldw	r2,56(r4)
   27570:	10000e26 	beq	r2,zero,275ac <_putc_r+0x54>
   27574:	30800217 	ldw	r2,8(r6)
   27578:	10bfffc4 	addi	r2,r2,-1
   2757c:	30800215 	stw	r2,8(r6)
   27580:	10001316 	blt	r2,zero,275d0 <_putc_r+0x78>
   27584:	30800017 	ldw	r2,0(r6)
   27588:	11400005 	stb	r5,0(r2)
   2758c:	30800017 	ldw	r2,0(r6)
   27590:	10c00044 	addi	r3,r2,1
   27594:	30c00015 	stw	r3,0(r6)
   27598:	10800003 	ldbu	r2,0(r2)
   2759c:	dfc00317 	ldw	ra,12(sp)
   275a0:	dc400217 	ldw	r17,8(sp)
   275a4:	dec00404 	addi	sp,sp,16
   275a8:	f800283a 	ret
   275ac:	d9800115 	stw	r6,4(sp)
   275b0:	d9400015 	stw	r5,0(sp)
   275b4:	0024ba00 	call	24ba0 <__sinit>
   275b8:	d9800117 	ldw	r6,4(sp)
   275bc:	d9400017 	ldw	r5,0(sp)
   275c0:	30800217 	ldw	r2,8(r6)
   275c4:	10bfffc4 	addi	r2,r2,-1
   275c8:	30800215 	stw	r2,8(r6)
   275cc:	103fed0e 	bge	r2,zero,27584 <_putc_r+0x2c>
   275d0:	30c00617 	ldw	r3,24(r6)
   275d4:	10c00e16 	blt	r2,r3,27610 <_putc_r+0xb8>
   275d8:	30800017 	ldw	r2,0(r6)
   275dc:	11400005 	stb	r5,0(r2)
   275e0:	30c00017 	ldw	r3,0(r6)
   275e4:	18800003 	ldbu	r2,0(r3)
   275e8:	108002a0 	cmpeqi	r2,r2,10
   275ec:	1000071e 	bne	r2,zero,2760c <_putc_r+0xb4>
   275f0:	18800044 	addi	r2,r3,1
   275f4:	30800015 	stw	r2,0(r6)
   275f8:	18800003 	ldbu	r2,0(r3)
   275fc:	dfc00317 	ldw	ra,12(sp)
   27600:	dc400217 	ldw	r17,8(sp)
   27604:	dec00404 	addi	sp,sp,16
   27608:	f800283a 	ret
   2760c:	01400284 	movi	r5,10
   27610:	8809883a 	mov	r4,r17
   27614:	dfc00317 	ldw	ra,12(sp)
   27618:	dc400217 	ldw	r17,8(sp)
   2761c:	dec00404 	addi	sp,sp,16
   27620:	00292101 	jmpi	29210 <__swbuf_r>

00027624 <putc>:
   27624:	defffc04 	addi	sp,sp,-16
   27628:	008000f4 	movhi	r2,3
   2762c:	dc800215 	stw	r18,8(sp)
   27630:	14884a17 	ldw	r18,8488(r2)
   27634:	dc400115 	stw	r17,4(sp)
   27638:	dfc00315 	stw	ra,12(sp)
   2763c:	2023883a 	mov	r17,r4
   27640:	90000226 	beq	r18,zero,2764c <putc+0x28>
   27644:	90800e17 	ldw	r2,56(r18)
   27648:	10000f26 	beq	r2,zero,27688 <putc+0x64>
   2764c:	28800217 	ldw	r2,8(r5)
   27650:	10bfffc4 	addi	r2,r2,-1
   27654:	28800215 	stw	r2,8(r5)
   27658:	10001316 	blt	r2,zero,276a8 <putc+0x84>
   2765c:	28800017 	ldw	r2,0(r5)
   27660:	14400005 	stb	r17,0(r2)
   27664:	28800017 	ldw	r2,0(r5)
   27668:	10c00044 	addi	r3,r2,1
   2766c:	28c00015 	stw	r3,0(r5)
   27670:	10800003 	ldbu	r2,0(r2)
   27674:	dfc00317 	ldw	ra,12(sp)
   27678:	dc800217 	ldw	r18,8(sp)
   2767c:	dc400117 	ldw	r17,4(sp)
   27680:	dec00404 	addi	sp,sp,16
   27684:	f800283a 	ret
   27688:	9009883a 	mov	r4,r18
   2768c:	d9400015 	stw	r5,0(sp)
   27690:	0024ba00 	call	24ba0 <__sinit>
   27694:	d9400017 	ldw	r5,0(sp)
   27698:	28800217 	ldw	r2,8(r5)
   2769c:	10bfffc4 	addi	r2,r2,-1
   276a0:	28800215 	stw	r2,8(r5)
   276a4:	103fed0e 	bge	r2,zero,2765c <putc+0x38>
   276a8:	28c00617 	ldw	r3,24(r5)
   276ac:	10c00a16 	blt	r2,r3,276d8 <putc+0xb4>
   276b0:	28800017 	ldw	r2,0(r5)
   276b4:	14400005 	stb	r17,0(r2)
   276b8:	28c00017 	ldw	r3,0(r5)
   276bc:	18800003 	ldbu	r2,0(r3)
   276c0:	108002a0 	cmpeqi	r2,r2,10
   276c4:	10000c1e 	bne	r2,zero,276f8 <putc+0xd4>
   276c8:	18800044 	addi	r2,r3,1
   276cc:	28800015 	stw	r2,0(r5)
   276d0:	18800003 	ldbu	r2,0(r3)
   276d4:	003fe706 	br	27674 <putc+0x50>
   276d8:	280d883a 	mov	r6,r5
   276dc:	880b883a 	mov	r5,r17
   276e0:	9009883a 	mov	r4,r18
   276e4:	dfc00317 	ldw	ra,12(sp)
   276e8:	dc800217 	ldw	r18,8(sp)
   276ec:	dc400117 	ldw	r17,4(sp)
   276f0:	dec00404 	addi	sp,sp,16
   276f4:	00292101 	jmpi	29210 <__swbuf_r>
   276f8:	280d883a 	mov	r6,r5
   276fc:	01400284 	movi	r5,10
   27700:	003ff706 	br	276e0 <putc+0xbc>

00027704 <_realloc_r>:
   27704:	defff604 	addi	sp,sp,-40
   27708:	dc800215 	stw	r18,8(sp)
   2770c:	dfc00915 	stw	ra,36(sp)
   27710:	df000815 	stw	fp,32(sp)
   27714:	ddc00715 	stw	r23,28(sp)
   27718:	dd800615 	stw	r22,24(sp)
   2771c:	dd400515 	stw	r21,20(sp)
   27720:	dd000415 	stw	r20,16(sp)
   27724:	dcc00315 	stw	r19,12(sp)
   27728:	dc400115 	stw	r17,4(sp)
   2772c:	dc000015 	stw	r16,0(sp)
   27730:	3025883a 	mov	r18,r6
   27734:	28008b26 	beq	r5,zero,27964 <_realloc_r+0x260>
   27738:	2821883a 	mov	r16,r5
   2773c:	2027883a 	mov	r19,r4
   27740:	944002c4 	addi	r17,r18,11
   27744:	002db6c0 	call	2db6c <__malloc_lock>
   27748:	888005f0 	cmpltui	r2,r17,23
   2774c:	1000521e 	bne	r2,zero,27898 <_realloc_r+0x194>
   27750:	017ffe04 	movi	r5,-8
   27754:	8962703a 	and	r17,r17,r5
   27758:	8807883a 	mov	r3,r17
   2775c:	88005116 	blt	r17,zero,278a4 <_realloc_r+0x1a0>
   27760:	8c805036 	bltu	r17,r18,278a4 <_realloc_r+0x1a0>
   27764:	80bfff17 	ldw	r2,-4(r16)
   27768:	017fff04 	movi	r5,-4
   2776c:	857ffe04 	addi	r21,r16,-8
   27770:	1168703a 	and	r20,r2,r5
   27774:	a0c0390e 	bge	r20,r3,2785c <_realloc_r+0x158>
   27778:	05c000f4 	movhi	r23,3
   2777c:	bdc26a04 	addi	r23,r23,2472
   27780:	ba000217 	ldw	r8,8(r23)
   27784:	ad0f883a 	add	r7,r21,r20
   27788:	39000117 	ldw	r4,4(r7)
   2778c:	41c08e26 	beq	r8,r7,279c8 <_realloc_r+0x2c4>
   27790:	01bfff84 	movi	r6,-2
   27794:	218c703a 	and	r6,r4,r6
   27798:	398d883a 	add	r6,r7,r6
   2779c:	31800117 	ldw	r6,4(r6)
   277a0:	3180004c 	andi	r6,r6,1
   277a4:	30004f1e 	bne	r6,zero,278e4 <_realloc_r+0x1e0>
   277a8:	2148703a 	and	r4,r4,r5
   277ac:	a10b883a 	add	r5,r20,r4
   277b0:	28c0bb0e 	bge	r5,r3,27aa0 <_realloc_r+0x39c>
   277b4:	1080004c 	andi	r2,r2,1
   277b8:	10004c1e 	bne	r2,zero,278ec <_realloc_r+0x1e8>
   277bc:	873ffe17 	ldw	fp,-8(r16)
   277c0:	00bfff04 	movi	r2,-4
   277c4:	af39c83a 	sub	fp,r21,fp
   277c8:	e1400117 	ldw	r5,4(fp)
   277cc:	288a703a 	and	r5,r5,r2
   277d0:	38000426 	beq	r7,zero,277e4 <_realloc_r+0xe0>
   277d4:	a16d883a 	add	r22,r20,r5
   277d8:	b12d883a 	add	r22,r22,r4
   277dc:	41c0ba26 	beq	r8,r7,27ac8 <_realloc_r+0x3c4>
   277e0:	b0c0930e 	bge	r22,r3,27a30 <_realloc_r+0x32c>
   277e4:	e0004126 	beq	fp,zero,278ec <_realloc_r+0x1e8>
   277e8:	a16d883a 	add	r22,r20,r5
   277ec:	b0c03f16 	blt	r22,r3,278ec <_realloc_r+0x1e8>
   277f0:	e0800317 	ldw	r2,12(fp)
   277f4:	e0c00217 	ldw	r3,8(fp)
   277f8:	a1bfff04 	addi	r6,r20,-4
   277fc:	31400968 	cmpgeui	r5,r6,37
   27800:	18800315 	stw	r2,12(r3)
   27804:	10c00215 	stw	r3,8(r2)
   27808:	e1000204 	addi	r4,fp,8
   2780c:	2800941e 	bne	r5,zero,27a60 <_realloc_r+0x35c>
   27810:	30800530 	cmpltui	r2,r6,20
   27814:	1000db1e 	bne	r2,zero,27b84 <_realloc_r+0x480>
   27818:	80c00017 	ldw	r3,0(r16)
   2781c:	30800728 	cmpgeui	r2,r6,28
   27820:	e0c00215 	stw	r3,8(fp)
   27824:	80c00117 	ldw	r3,4(r16)
   27828:	e0c00315 	stw	r3,12(fp)
   2782c:	1000d71e 	bne	r2,zero,27b8c <_realloc_r+0x488>
   27830:	84000204 	addi	r16,r16,8
   27834:	e0800404 	addi	r2,fp,16
   27838:	80c00017 	ldw	r3,0(r16)
   2783c:	b029883a 	mov	r20,r22
   27840:	e02b883a 	mov	r21,fp
   27844:	10c00015 	stw	r3,0(r2)
   27848:	80c00117 	ldw	r3,4(r16)
   2784c:	10c00115 	stw	r3,4(r2)
   27850:	80c00217 	ldw	r3,8(r16)
   27854:	2021883a 	mov	r16,r4
   27858:	10c00215 	stw	r3,8(r2)
   2785c:	a9800117 	ldw	r6,4(r21)
   27860:	a447c83a 	sub	r3,r20,r17
   27864:	19000430 	cmpltui	r4,r3,16
   27868:	3180004c 	andi	r6,r6,1
   2786c:	ad05883a 	add	r2,r21,r20
   27870:	20004926 	beq	r4,zero,27998 <_realloc_r+0x294>
   27874:	a18cb03a 	or	r6,r20,r6
   27878:	a9800115 	stw	r6,4(r21)
   2787c:	10c00117 	ldw	r3,4(r2)
   27880:	18c00054 	ori	r3,r3,1
   27884:	10c00115 	stw	r3,4(r2)
   27888:	9809883a 	mov	r4,r19
   2788c:	002db900 	call	2db90 <__malloc_unlock>
   27890:	8025883a 	mov	r18,r16
   27894:	00000606 	br	278b0 <_realloc_r+0x1ac>
   27898:	04400404 	movi	r17,16
   2789c:	00c00404 	movi	r3,16
   278a0:	8cbfb02e 	bgeu	r17,r18,27764 <_realloc_r+0x60>
   278a4:	00800304 	movi	r2,12
   278a8:	98800015 	stw	r2,0(r19)
   278ac:	0025883a 	mov	r18,zero
   278b0:	9005883a 	mov	r2,r18
   278b4:	dfc00917 	ldw	ra,36(sp)
   278b8:	df000817 	ldw	fp,32(sp)
   278bc:	ddc00717 	ldw	r23,28(sp)
   278c0:	dd800617 	ldw	r22,24(sp)
   278c4:	dd400517 	ldw	r21,20(sp)
   278c8:	dd000417 	ldw	r20,16(sp)
   278cc:	dcc00317 	ldw	r19,12(sp)
   278d0:	dc800217 	ldw	r18,8(sp)
   278d4:	dc400117 	ldw	r17,4(sp)
   278d8:	dc000017 	ldw	r16,0(sp)
   278dc:	dec00a04 	addi	sp,sp,40
   278e0:	f800283a 	ret
   278e4:	1080004c 	andi	r2,r2,1
   278e8:	10006826 	beq	r2,zero,27a8c <_realloc_r+0x388>
   278ec:	900b883a 	mov	r5,r18
   278f0:	9809883a 	mov	r4,r19
   278f4:	002582c0 	call	2582c <_malloc_r>
   278f8:	1025883a 	mov	r18,r2
   278fc:	10001626 	beq	r2,zero,27958 <_realloc_r+0x254>
   27900:	80bfff17 	ldw	r2,-4(r16)
   27904:	013fff84 	movi	r4,-2
   27908:	90fffe04 	addi	r3,r18,-8
   2790c:	1104703a 	and	r2,r2,r4
   27910:	a885883a 	add	r2,r21,r2
   27914:	10c05826 	beq	r2,r3,27a78 <_realloc_r+0x374>
   27918:	a1bfff04 	addi	r6,r20,-4
   2791c:	30800968 	cmpgeui	r2,r6,37
   27920:	1000651e 	bne	r2,zero,27ab8 <_realloc_r+0x3b4>
   27924:	30800530 	cmpltui	r2,r6,20
   27928:	10003826 	beq	r2,zero,27a0c <_realloc_r+0x308>
   2792c:	9005883a 	mov	r2,r18
   27930:	8007883a 	mov	r3,r16
   27934:	19000017 	ldw	r4,0(r3)
   27938:	11000015 	stw	r4,0(r2)
   2793c:	19000117 	ldw	r4,4(r3)
   27940:	11000115 	stw	r4,4(r2)
   27944:	18c00217 	ldw	r3,8(r3)
   27948:	10c00215 	stw	r3,8(r2)
   2794c:	800b883a 	mov	r5,r16
   27950:	9809883a 	mov	r4,r19
   27954:	0024d040 	call	24d04 <_free_r>
   27958:	9809883a 	mov	r4,r19
   2795c:	002db900 	call	2db90 <__malloc_unlock>
   27960:	003fd306 	br	278b0 <_realloc_r+0x1ac>
   27964:	300b883a 	mov	r5,r6
   27968:	dfc00917 	ldw	ra,36(sp)
   2796c:	df000817 	ldw	fp,32(sp)
   27970:	ddc00717 	ldw	r23,28(sp)
   27974:	dd800617 	ldw	r22,24(sp)
   27978:	dd400517 	ldw	r21,20(sp)
   2797c:	dd000417 	ldw	r20,16(sp)
   27980:	dcc00317 	ldw	r19,12(sp)
   27984:	dc800217 	ldw	r18,8(sp)
   27988:	dc400117 	ldw	r17,4(sp)
   2798c:	dc000017 	ldw	r16,0(sp)
   27990:	dec00a04 	addi	sp,sp,40
   27994:	002582c1 	jmpi	2582c <_malloc_r>
   27998:	344cb03a 	or	r6,r6,r17
   2799c:	a9800115 	stw	r6,4(r21)
   279a0:	ac4b883a 	add	r5,r21,r17
   279a4:	18c00054 	ori	r3,r3,1
   279a8:	28c00115 	stw	r3,4(r5)
   279ac:	10c00117 	ldw	r3,4(r2)
   279b0:	29400204 	addi	r5,r5,8
   279b4:	9809883a 	mov	r4,r19
   279b8:	18c00054 	ori	r3,r3,1
   279bc:	10c00115 	stw	r3,4(r2)
   279c0:	0024d040 	call	24d04 <_free_r>
   279c4:	003fb006 	br	27888 <_realloc_r+0x184>
   279c8:	2148703a 	and	r4,r4,r5
   279cc:	a10b883a 	add	r5,r20,r4
   279d0:	89800404 	addi	r6,r17,16
   279d4:	29bf7716 	blt	r5,r6,277b4 <_realloc_r+0xb0>
   279d8:	ac6b883a 	add	r21,r21,r17
   279dc:	2c45c83a 	sub	r2,r5,r17
   279e0:	bd400215 	stw	r21,8(r23)
   279e4:	10800054 	ori	r2,r2,1
   279e8:	a8800115 	stw	r2,4(r21)
   279ec:	80bfff17 	ldw	r2,-4(r16)
   279f0:	9809883a 	mov	r4,r19
   279f4:	8025883a 	mov	r18,r16
   279f8:	1080004c 	andi	r2,r2,1
   279fc:	1462b03a 	or	r17,r2,r17
   27a00:	847fff15 	stw	r17,-4(r16)
   27a04:	002db900 	call	2db90 <__malloc_unlock>
   27a08:	003fa906 	br	278b0 <_realloc_r+0x1ac>
   27a0c:	80c00017 	ldw	r3,0(r16)
   27a10:	30800728 	cmpgeui	r2,r6,28
   27a14:	90c00015 	stw	r3,0(r18)
   27a18:	80c00117 	ldw	r3,4(r16)
   27a1c:	90c00115 	stw	r3,4(r18)
   27a20:	10004f1e 	bne	r2,zero,27b60 <_realloc_r+0x45c>
   27a24:	80c00204 	addi	r3,r16,8
   27a28:	90800204 	addi	r2,r18,8
   27a2c:	003fc106 	br	27934 <_realloc_r+0x230>
   27a30:	38800317 	ldw	r2,12(r7)
   27a34:	38c00217 	ldw	r3,8(r7)
   27a38:	a1bfff04 	addi	r6,r20,-4
   27a3c:	31400968 	cmpgeui	r5,r6,37
   27a40:	18800315 	stw	r2,12(r3)
   27a44:	10c00215 	stw	r3,8(r2)
   27a48:	e0c00217 	ldw	r3,8(fp)
   27a4c:	e0800317 	ldw	r2,12(fp)
   27a50:	e1000204 	addi	r4,fp,8
   27a54:	18800315 	stw	r2,12(r3)
   27a58:	10c00215 	stw	r3,8(r2)
   27a5c:	283f6c26 	beq	r5,zero,27810 <_realloc_r+0x10c>
   27a60:	800b883a 	mov	r5,r16
   27a64:	00261dc0 	call	261dc <memmove>
   27a68:	1021883a 	mov	r16,r2
   27a6c:	b029883a 	mov	r20,r22
   27a70:	e02b883a 	mov	r21,fp
   27a74:	003f7906 	br	2785c <_realloc_r+0x158>
   27a78:	90bfff17 	ldw	r2,-4(r18)
   27a7c:	00ffff04 	movi	r3,-4
   27a80:	10c4703a 	and	r2,r2,r3
   27a84:	a0a9883a 	add	r20,r20,r2
   27a88:	003f7406 	br	2785c <_realloc_r+0x158>
   27a8c:	873ffe17 	ldw	fp,-8(r16)
   27a90:	af39c83a 	sub	fp,r21,fp
   27a94:	e0800117 	ldw	r2,4(fp)
   27a98:	114a703a 	and	r5,r2,r5
   27a9c:	003f5106 	br	277e4 <_realloc_r+0xe0>
   27aa0:	38800317 	ldw	r2,12(r7)
   27aa4:	38c00217 	ldw	r3,8(r7)
   27aa8:	2829883a 	mov	r20,r5
   27aac:	18800315 	stw	r2,12(r3)
   27ab0:	10c00215 	stw	r3,8(r2)
   27ab4:	003f6906 	br	2785c <_realloc_r+0x158>
   27ab8:	800b883a 	mov	r5,r16
   27abc:	9009883a 	mov	r4,r18
   27ac0:	00261dc0 	call	261dc <memmove>
   27ac4:	003fa106 	br	2794c <_realloc_r+0x248>
   27ac8:	88800404 	addi	r2,r17,16
   27acc:	b0bf4516 	blt	r22,r2,277e4 <_realloc_r+0xe0>
   27ad0:	e0800317 	ldw	r2,12(fp)
   27ad4:	e0c00217 	ldw	r3,8(fp)
   27ad8:	a1bfff04 	addi	r6,r20,-4
   27adc:	31000968 	cmpgeui	r4,r6,37
   27ae0:	18800315 	stw	r2,12(r3)
   27ae4:	10c00215 	stw	r3,8(r2)
   27ae8:	e4800204 	addi	r18,fp,8
   27aec:	2000391e 	bne	r4,zero,27bd4 <_realloc_r+0x4d0>
   27af0:	30800530 	cmpltui	r2,r6,20
   27af4:	1000351e 	bne	r2,zero,27bcc <_realloc_r+0x4c8>
   27af8:	80c00017 	ldw	r3,0(r16)
   27afc:	30800728 	cmpgeui	r2,r6,28
   27b00:	e0c00215 	stw	r3,8(fp)
   27b04:	80c00117 	ldw	r3,4(r16)
   27b08:	e0c00315 	stw	r3,12(fp)
   27b0c:	10003c1e 	bne	r2,zero,27c00 <_realloc_r+0x4fc>
   27b10:	84000204 	addi	r16,r16,8
   27b14:	e0800404 	addi	r2,fp,16
   27b18:	80c00017 	ldw	r3,0(r16)
   27b1c:	10c00015 	stw	r3,0(r2)
   27b20:	80c00117 	ldw	r3,4(r16)
   27b24:	10c00115 	stw	r3,4(r2)
   27b28:	80c00217 	ldw	r3,8(r16)
   27b2c:	10c00215 	stw	r3,8(r2)
   27b30:	e447883a 	add	r3,fp,r17
   27b34:	b445c83a 	sub	r2,r22,r17
   27b38:	b8c00215 	stw	r3,8(r23)
   27b3c:	10800054 	ori	r2,r2,1
   27b40:	18800115 	stw	r2,4(r3)
   27b44:	e0800117 	ldw	r2,4(fp)
   27b48:	9809883a 	mov	r4,r19
   27b4c:	1080004c 	andi	r2,r2,1
   27b50:	1462b03a 	or	r17,r2,r17
   27b54:	e4400115 	stw	r17,4(fp)
   27b58:	002db900 	call	2db90 <__malloc_unlock>
   27b5c:	003f5406 	br	278b0 <_realloc_r+0x1ac>
   27b60:	80800217 	ldw	r2,8(r16)
   27b64:	31800920 	cmpeqi	r6,r6,36
   27b68:	90800215 	stw	r2,8(r18)
   27b6c:	80800317 	ldw	r2,12(r16)
   27b70:	90800315 	stw	r2,12(r18)
   27b74:	30000e1e 	bne	r6,zero,27bb0 <_realloc_r+0x4ac>
   27b78:	80c00404 	addi	r3,r16,16
   27b7c:	90800404 	addi	r2,r18,16
   27b80:	003f6c06 	br	27934 <_realloc_r+0x230>
   27b84:	2005883a 	mov	r2,r4
   27b88:	003f2b06 	br	27838 <_realloc_r+0x134>
   27b8c:	80800217 	ldw	r2,8(r16)
   27b90:	31800920 	cmpeqi	r6,r6,36
   27b94:	e0800415 	stw	r2,16(fp)
   27b98:	80800317 	ldw	r2,12(r16)
   27b9c:	e0800515 	stw	r2,20(fp)
   27ba0:	3000101e 	bne	r6,zero,27be4 <_realloc_r+0x4e0>
   27ba4:	84000404 	addi	r16,r16,16
   27ba8:	e0800604 	addi	r2,fp,24
   27bac:	003f2206 	br	27838 <_realloc_r+0x134>
   27bb0:	81000417 	ldw	r4,16(r16)
   27bb4:	80c00604 	addi	r3,r16,24
   27bb8:	90800604 	addi	r2,r18,24
   27bbc:	91000415 	stw	r4,16(r18)
   27bc0:	81000517 	ldw	r4,20(r16)
   27bc4:	91000515 	stw	r4,20(r18)
   27bc8:	003f5a06 	br	27934 <_realloc_r+0x230>
   27bcc:	9005883a 	mov	r2,r18
   27bd0:	003fd106 	br	27b18 <_realloc_r+0x414>
   27bd4:	800b883a 	mov	r5,r16
   27bd8:	9009883a 	mov	r4,r18
   27bdc:	00261dc0 	call	261dc <memmove>
   27be0:	003fd306 	br	27b30 <_realloc_r+0x42c>
   27be4:	80c00417 	ldw	r3,16(r16)
   27be8:	84000604 	addi	r16,r16,24
   27bec:	e0800804 	addi	r2,fp,32
   27bf0:	e0c00615 	stw	r3,24(fp)
   27bf4:	80ffff17 	ldw	r3,-4(r16)
   27bf8:	e0c00715 	stw	r3,28(fp)
   27bfc:	003f0e06 	br	27838 <_realloc_r+0x134>
   27c00:	80800217 	ldw	r2,8(r16)
   27c04:	31800920 	cmpeqi	r6,r6,36
   27c08:	e0800415 	stw	r2,16(fp)
   27c0c:	80800317 	ldw	r2,12(r16)
   27c10:	e0800515 	stw	r2,20(fp)
   27c14:	3000031e 	bne	r6,zero,27c24 <_realloc_r+0x520>
   27c18:	84000404 	addi	r16,r16,16
   27c1c:	e0800604 	addi	r2,fp,24
   27c20:	003fbd06 	br	27b18 <_realloc_r+0x414>
   27c24:	80c00417 	ldw	r3,16(r16)
   27c28:	84000604 	addi	r16,r16,24
   27c2c:	e0800804 	addi	r2,fp,32
   27c30:	e0c00615 	stw	r3,24(fp)
   27c34:	80ffff17 	ldw	r3,-4(r16)
   27c38:	e0c00715 	stw	r3,28(fp)
   27c3c:	003fb606 	br	27b18 <_realloc_r+0x414>

00027c40 <_sbrk_r>:
   27c40:	defffe04 	addi	sp,sp,-8
   27c44:	dc000015 	stw	r16,0(sp)
   27c48:	008000f4 	movhi	r2,3
   27c4c:	2021883a 	mov	r16,r4
   27c50:	2809883a 	mov	r4,r5
   27c54:	dfc00115 	stw	ra,4(sp)
   27c58:	100f5215 	stw	zero,15688(r2)
   27c5c:	002dd440 	call	2dd44 <sbrk>
   27c60:	10ffffd8 	cmpnei	r3,r2,-1
   27c64:	18000426 	beq	r3,zero,27c78 <_sbrk_r+0x38>
   27c68:	dfc00117 	ldw	ra,4(sp)
   27c6c:	dc000017 	ldw	r16,0(sp)
   27c70:	dec00204 	addi	sp,sp,8
   27c74:	f800283a 	ret
   27c78:	00c000f4 	movhi	r3,3
   27c7c:	18cf5217 	ldw	r3,15688(r3)
   27c80:	183ff926 	beq	r3,zero,27c68 <_sbrk_r+0x28>
   27c84:	80c00015 	stw	r3,0(r16)
   27c88:	dfc00117 	ldw	ra,4(sp)
   27c8c:	dc000017 	ldw	r16,0(sp)
   27c90:	dec00204 	addi	sp,sp,8
   27c94:	f800283a 	ret

00027c98 <__sread>:
   27c98:	defffe04 	addi	sp,sp,-8
   27c9c:	dc000015 	stw	r16,0(sp)
   27ca0:	2821883a 	mov	r16,r5
   27ca4:	2940038f 	ldh	r5,14(r5)
   27ca8:	dfc00115 	stw	ra,4(sp)
   27cac:	0029c340 	call	29c34 <_read_r>
   27cb0:	10000716 	blt	r2,zero,27cd0 <__sread+0x38>
   27cb4:	80c01417 	ldw	r3,80(r16)
   27cb8:	1887883a 	add	r3,r3,r2
   27cbc:	80c01415 	stw	r3,80(r16)
   27cc0:	dfc00117 	ldw	ra,4(sp)
   27cc4:	dc000017 	ldw	r16,0(sp)
   27cc8:	dec00204 	addi	sp,sp,8
   27ccc:	f800283a 	ret
   27cd0:	80c0030b 	ldhu	r3,12(r16)
   27cd4:	18fbffcc 	andi	r3,r3,61439
   27cd8:	80c0030d 	sth	r3,12(r16)
   27cdc:	dfc00117 	ldw	ra,4(sp)
   27ce0:	dc000017 	ldw	r16,0(sp)
   27ce4:	dec00204 	addi	sp,sp,8
   27ce8:	f800283a 	ret

00027cec <__seofread>:
   27cec:	0005883a 	mov	r2,zero
   27cf0:	f800283a 	ret

00027cf4 <__swrite>:
   27cf4:	2880030b 	ldhu	r2,12(r5)
   27cf8:	defffb04 	addi	sp,sp,-20
   27cfc:	dcc00315 	stw	r19,12(sp)
   27d00:	dc800215 	stw	r18,8(sp)
   27d04:	dc400115 	stw	r17,4(sp)
   27d08:	dc000015 	stw	r16,0(sp)
   27d0c:	dfc00415 	stw	ra,16(sp)
   27d10:	10c0400c 	andi	r3,r2,256
   27d14:	2821883a 	mov	r16,r5
   27d18:	2023883a 	mov	r17,r4
   27d1c:	3025883a 	mov	r18,r6
   27d20:	3827883a 	mov	r19,r7
   27d24:	18000d1e 	bne	r3,zero,27d5c <__swrite+0x68>
   27d28:	8140038f 	ldh	r5,14(r16)
   27d2c:	10bbffcc 	andi	r2,r2,61439
   27d30:	980f883a 	mov	r7,r19
   27d34:	900d883a 	mov	r6,r18
   27d38:	8809883a 	mov	r4,r17
   27d3c:	8080030d 	sth	r2,12(r16)
   27d40:	dfc00417 	ldw	ra,16(sp)
   27d44:	dcc00317 	ldw	r19,12(sp)
   27d48:	dc800217 	ldw	r18,8(sp)
   27d4c:	dc400117 	ldw	r17,4(sp)
   27d50:	dc000017 	ldw	r16,0(sp)
   27d54:	dec00504 	addi	sp,sp,20
   27d58:	00293701 	jmpi	29370 <_write_r>
   27d5c:	2940038f 	ldh	r5,14(r5)
   27d60:	01c00084 	movi	r7,2
   27d64:	000d883a 	mov	r6,zero
   27d68:	0029b800 	call	29b80 <_lseek_r>
   27d6c:	8080030b 	ldhu	r2,12(r16)
   27d70:	003fed06 	br	27d28 <__swrite+0x34>

00027d74 <__sseek>:
   27d74:	defffe04 	addi	sp,sp,-8
   27d78:	dc000015 	stw	r16,0(sp)
   27d7c:	2821883a 	mov	r16,r5
   27d80:	2940038f 	ldh	r5,14(r5)
   27d84:	dfc00115 	stw	ra,4(sp)
   27d88:	0029b800 	call	29b80 <_lseek_r>
   27d8c:	10ffffd8 	cmpnei	r3,r2,-1
   27d90:	18000826 	beq	r3,zero,27db4 <__sseek+0x40>
   27d94:	80c0030b 	ldhu	r3,12(r16)
   27d98:	80801415 	stw	r2,80(r16)
   27d9c:	18c40014 	ori	r3,r3,4096
   27da0:	80c0030d 	sth	r3,12(r16)
   27da4:	dfc00117 	ldw	ra,4(sp)
   27da8:	dc000017 	ldw	r16,0(sp)
   27dac:	dec00204 	addi	sp,sp,8
   27db0:	f800283a 	ret
   27db4:	80c0030b 	ldhu	r3,12(r16)
   27db8:	18fbffcc 	andi	r3,r3,61439
   27dbc:	80c0030d 	sth	r3,12(r16)
   27dc0:	dfc00117 	ldw	ra,4(sp)
   27dc4:	dc000017 	ldw	r16,0(sp)
   27dc8:	dec00204 	addi	sp,sp,8
   27dcc:	f800283a 	ret

00027dd0 <__sclose>:
   27dd0:	2940038f 	ldh	r5,14(r5)
   27dd4:	00293d41 	jmpi	293d4 <_close_r>

00027dd8 <__sprint_r.part.0>:
   27dd8:	28801917 	ldw	r2,100(r5)
   27ddc:	defff604 	addi	sp,sp,-40
   27de0:	dcc00315 	stw	r19,12(sp)
   27de4:	dfc00915 	stw	ra,36(sp)
   27de8:	df000815 	stw	fp,32(sp)
   27dec:	ddc00715 	stw	r23,28(sp)
   27df0:	dd800615 	stw	r22,24(sp)
   27df4:	dd400515 	stw	r21,20(sp)
   27df8:	dd000415 	stw	r20,16(sp)
   27dfc:	dc800215 	stw	r18,8(sp)
   27e00:	dc400115 	stw	r17,4(sp)
   27e04:	dc000015 	stw	r16,0(sp)
   27e08:	1088000c 	andi	r2,r2,8192
   27e0c:	3027883a 	mov	r19,r6
   27e10:	10002c26 	beq	r2,zero,27ec4 <__sprint_r.part.0+0xec>
   27e14:	30800217 	ldw	r2,8(r6)
   27e18:	35000017 	ldw	r20,0(r6)
   27e1c:	2821883a 	mov	r16,r5
   27e20:	2023883a 	mov	r17,r4
   27e24:	05bfff04 	movi	r22,-4
   27e28:	10002426 	beq	r2,zero,27ebc <__sprint_r.part.0+0xe4>
   27e2c:	a5400117 	ldw	r21,4(r20)
   27e30:	a5c00017 	ldw	r23,0(r20)
   27e34:	a824d0ba 	srli	r18,r21,2
   27e38:	90001b26 	beq	r18,zero,27ea8 <__sprint_r.part.0+0xd0>
   27e3c:	0039883a 	mov	fp,zero
   27e40:	00000206 	br	27e4c <__sprint_r.part.0+0x74>
   27e44:	bdc00104 	addi	r23,r23,4
   27e48:	97001626 	beq	r18,fp,27ea4 <__sprint_r.part.0+0xcc>
   27e4c:	b9400017 	ldw	r5,0(r23)
   27e50:	800d883a 	mov	r6,r16
   27e54:	8809883a 	mov	r4,r17
   27e58:	00299380 	call	29938 <_fputwc_r>
   27e5c:	10bfffe0 	cmpeqi	r2,r2,-1
   27e60:	e7000044 	addi	fp,fp,1
   27e64:	103ff726 	beq	r2,zero,27e44 <__sprint_r.part.0+0x6c>
   27e68:	00bfffc4 	movi	r2,-1
   27e6c:	98000215 	stw	zero,8(r19)
   27e70:	98000115 	stw	zero,4(r19)
   27e74:	dfc00917 	ldw	ra,36(sp)
   27e78:	df000817 	ldw	fp,32(sp)
   27e7c:	ddc00717 	ldw	r23,28(sp)
   27e80:	dd800617 	ldw	r22,24(sp)
   27e84:	dd400517 	ldw	r21,20(sp)
   27e88:	dd000417 	ldw	r20,16(sp)
   27e8c:	dcc00317 	ldw	r19,12(sp)
   27e90:	dc800217 	ldw	r18,8(sp)
   27e94:	dc400117 	ldw	r17,4(sp)
   27e98:	dc000017 	ldw	r16,0(sp)
   27e9c:	dec00a04 	addi	sp,sp,40
   27ea0:	f800283a 	ret
   27ea4:	98800217 	ldw	r2,8(r19)
   27ea8:	adaa703a 	and	r21,r21,r22
   27eac:	1545c83a 	sub	r2,r2,r21
   27eb0:	98800215 	stw	r2,8(r19)
   27eb4:	a5000204 	addi	r20,r20,8
   27eb8:	103fdc1e 	bne	r2,zero,27e2c <__sprint_r.part.0+0x54>
   27ebc:	0005883a 	mov	r2,zero
   27ec0:	003fea06 	br	27e6c <__sprint_r.part.0+0x94>
   27ec4:	00250000 	call	25000 <__sfvwrite_r>
   27ec8:	003fe806 	br	27e6c <__sprint_r.part.0+0x94>

00027ecc <__sprint_r>:
   27ecc:	30c00217 	ldw	r3,8(r6)
   27ed0:	18000126 	beq	r3,zero,27ed8 <__sprint_r+0xc>
   27ed4:	0027dd81 	jmpi	27dd8 <__sprint_r.part.0>
   27ed8:	30000115 	stw	zero,4(r6)
   27edc:	0005883a 	mov	r2,zero
   27ee0:	f800283a 	ret

00027ee4 <___vfiprintf_internal_r>:
   27ee4:	deffcf04 	addi	sp,sp,-196
   27ee8:	dd802d15 	stw	r22,180(sp)
   27eec:	dd402c15 	stw	r21,176(sp)
   27ef0:	dd002b15 	stw	r20,172(sp)
   27ef4:	dfc03015 	stw	ra,192(sp)
   27ef8:	df002f15 	stw	fp,188(sp)
   27efc:	ddc02e15 	stw	r23,184(sp)
   27f00:	dcc02a15 	stw	r19,168(sp)
   27f04:	dc802915 	stw	r18,164(sp)
   27f08:	dc402815 	stw	r17,160(sp)
   27f0c:	dc002715 	stw	r16,156(sp)
   27f10:	d9c00415 	stw	r7,16(sp)
   27f14:	202d883a 	mov	r22,r4
   27f18:	282b883a 	mov	r21,r5
   27f1c:	3029883a 	mov	r20,r6
   27f20:	20000226 	beq	r4,zero,27f2c <___vfiprintf_internal_r+0x48>
   27f24:	20800e17 	ldw	r2,56(r4)
   27f28:	1001b826 	beq	r2,zero,2860c <___vfiprintf_internal_r+0x728>
   27f2c:	a880030b 	ldhu	r2,12(r21)
   27f30:	10c8000c 	andi	r3,r2,8192
   27f34:	1800061e 	bne	r3,zero,27f50 <___vfiprintf_internal_r+0x6c>
   27f38:	a8c01917 	ldw	r3,100(r21)
   27f3c:	0137ffc4 	movi	r4,-8193
   27f40:	10880014 	ori	r2,r2,8192
   27f44:	1906703a 	and	r3,r3,r4
   27f48:	a880030d 	sth	r2,12(r21)
   27f4c:	a8c01915 	stw	r3,100(r21)
   27f50:	10c0020c 	andi	r3,r2,8
   27f54:	18010326 	beq	r3,zero,28364 <___vfiprintf_internal_r+0x480>
   27f58:	a8c00417 	ldw	r3,16(r21)
   27f5c:	18010126 	beq	r3,zero,28364 <___vfiprintf_internal_r+0x480>
   27f60:	1080068c 	andi	r2,r2,26
   27f64:	10800298 	cmpnei	r2,r2,10
   27f68:	10010626 	beq	r2,zero,28384 <___vfiprintf_internal_r+0x4a0>
   27f6c:	dc801704 	addi	r18,sp,92
   27f70:	dc800a15 	stw	r18,40(sp)
   27f74:	d8000c15 	stw	zero,48(sp)
   27f78:	d8000b15 	stw	zero,44(sp)
   27f7c:	9021883a 	mov	r16,r18
   27f80:	d8000515 	stw	zero,20(sp)
   27f84:	d8000115 	stw	zero,4(sp)
   27f88:	a0800007 	ldb	r2,0(r20)
   27f8c:	1000e326 	beq	r2,zero,2831c <___vfiprintf_internal_r+0x438>
   27f90:	a023883a 	mov	r17,r20
   27f94:	00000306 	br	27fa4 <___vfiprintf_internal_r+0xc0>
   27f98:	88800047 	ldb	r2,1(r17)
   27f9c:	8c400044 	addi	r17,r17,1
   27fa0:	10012e26 	beq	r2,zero,2845c <___vfiprintf_internal_r+0x578>
   27fa4:	10800958 	cmpnei	r2,r2,37
   27fa8:	103ffb1e 	bne	r2,zero,27f98 <___vfiprintf_internal_r+0xb4>
   27fac:	8d27c83a 	sub	r19,r17,r20
   27fb0:	8d012c1e 	bne	r17,r20,28464 <___vfiprintf_internal_r+0x580>
   27fb4:	88800003 	ldbu	r2,0(r17)
   27fb8:	10803fcc 	andi	r2,r2,255
   27fbc:	1080201c 	xori	r2,r2,128
   27fc0:	10bfe004 	addi	r2,r2,-128
   27fc4:	1000d526 	beq	r2,zero,2831c <___vfiprintf_internal_r+0x438>
   27fc8:	88800047 	ldb	r2,1(r17)
   27fcc:	8d000044 	addi	r20,r17,1
   27fd0:	d8000945 	stb	zero,37(sp)
   27fd4:	000b883a 	mov	r5,zero
   27fd8:	000d883a 	mov	r6,zero
   27fdc:	023fffc4 	movi	r8,-1
   27fe0:	0023883a 	mov	r17,zero
   27fe4:	001b883a 	mov	r13,zero
   27fe8:	a5000044 	addi	r20,r20,1
   27fec:	10fff804 	addi	r3,r2,-32
   27ff0:	19001668 	cmpgeui	r4,r3,89
   27ff4:	20006a1e 	bne	r4,zero,281a0 <___vfiprintf_internal_r+0x2bc>
   27ff8:	180690ba 	slli	r3,r3,2
   27ffc:	010000f4 	movhi	r4,3
   28000:	1909883a 	add	r4,r3,r4
   28004:	20e00317 	ldw	r3,-32756(r4)
   28008:	1800683a 	jmp	r3
   2800c:	00028824 	muli	zero,zero,2592
   28010:	000281a0 	cmpeqi	zero,zero,2566
   28014:	000281a0 	cmpeqi	zero,zero,2566
   28018:	00028818 	cmpnei	zero,zero,2592
   2801c:	000281a0 	cmpeqi	zero,zero,2566
   28020:	000281a0 	cmpeqi	zero,zero,2566
   28024:	000281a0 	cmpeqi	zero,zero,2566
   28028:	000281a0 	cmpeqi	zero,zero,2566
   2802c:	000281a0 	cmpeqi	zero,zero,2566
   28030:	000281a0 	cmpeqi	zero,zero,2566
   28034:	00028688 	cmpgei	zero,zero,2586
   28038:	00028808 	cmpgei	zero,zero,2592
   2803c:	000281a0 	cmpeqi	zero,zero,2566
   28040:	000286a0 	cmpeqi	zero,zero,2586
   28044:	000286ac 	andhi	zero,zero,2586
   28048:	000281a0 	cmpeqi	zero,zero,2566
   2804c:	000287fc 	xorhi	zero,zero,2591
   28050:	00028170 	cmpltui	zero,zero,2565
   28054:	00028170 	cmpltui	zero,zero,2565
   28058:	00028170 	cmpltui	zero,zero,2565
   2805c:	00028170 	cmpltui	zero,zero,2565
   28060:	00028170 	cmpltui	zero,zero,2565
   28064:	00028170 	cmpltui	zero,zero,2565
   28068:	00028170 	cmpltui	zero,zero,2565
   2806c:	00028170 	cmpltui	zero,zero,2565
   28070:	00028170 	cmpltui	zero,zero,2565
   28074:	000281a0 	cmpeqi	zero,zero,2566
   28078:	000281a0 	cmpeqi	zero,zero,2566
   2807c:	000281a0 	cmpeqi	zero,zero,2566
   28080:	000281a0 	cmpeqi	zero,zero,2566
   28084:	000281a0 	cmpeqi	zero,zero,2566
   28088:	000281a0 	cmpeqi	zero,zero,2566
   2808c:	000281a0 	cmpeqi	zero,zero,2566
   28090:	000281a0 	cmpeqi	zero,zero,2566
   28094:	000281a0 	cmpeqi	zero,zero,2566
   28098:	000281a0 	cmpeqi	zero,zero,2566
   2809c:	000286f0 	cmpltui	zero,zero,2587
   280a0:	000281a0 	cmpeqi	zero,zero,2566
   280a4:	000281a0 	cmpeqi	zero,zero,2566
   280a8:	000281a0 	cmpeqi	zero,zero,2566
   280ac:	000281a0 	cmpeqi	zero,zero,2566
   280b0:	000281a0 	cmpeqi	zero,zero,2566
   280b4:	000281a0 	cmpeqi	zero,zero,2566
   280b8:	000281a0 	cmpeqi	zero,zero,2566
   280bc:	000281a0 	cmpeqi	zero,zero,2566
   280c0:	000281a0 	cmpeqi	zero,zero,2566
   280c4:	000281a0 	cmpeqi	zero,zero,2566
   280c8:	000283f4 	movhi	zero,2575
   280cc:	000281a0 	cmpeqi	zero,zero,2566
   280d0:	000281a0 	cmpeqi	zero,zero,2566
   280d4:	000281a0 	cmpeqi	zero,zero,2566
   280d8:	000281a0 	cmpeqi	zero,zero,2566
   280dc:	000281a0 	cmpeqi	zero,zero,2566
   280e0:	000283cc 	andi	zero,zero,2575
   280e4:	000281a0 	cmpeqi	zero,zero,2566
   280e8:	000281a0 	cmpeqi	zero,zero,2566
   280ec:	000288f4 	movhi	zero,2595
   280f0:	000281a0 	cmpeqi	zero,zero,2566
   280f4:	000281a0 	cmpeqi	zero,zero,2566
   280f8:	000281a0 	cmpeqi	zero,zero,2566
   280fc:	000281a0 	cmpeqi	zero,zero,2566
   28100:	000281a0 	cmpeqi	zero,zero,2566
   28104:	000281a0 	cmpeqi	zero,zero,2566
   28108:	000281a0 	cmpeqi	zero,zero,2566
   2810c:	000281a0 	cmpeqi	zero,zero,2566
   28110:	000281a0 	cmpeqi	zero,zero,2566
   28114:	000281a0 	cmpeqi	zero,zero,2566
   28118:	000288cc 	andi	zero,zero,2595
   2811c:	00028614 	movui	zero,2584
   28120:	000281a0 	cmpeqi	zero,zero,2566
   28124:	000281a0 	cmpeqi	zero,zero,2566
   28128:	000281a0 	cmpeqi	zero,zero,2566
   2812c:	0002886c 	andhi	zero,zero,2593
   28130:	00028614 	movui	zero,2584
   28134:	000281a0 	cmpeqi	zero,zero,2566
   28138:	000281a0 	cmpeqi	zero,zero,2566
   2813c:	000288b8 	rdprs	zero,zero,2594
   28140:	000281a0 	cmpeqi	zero,zero,2566
   28144:	00028878 	rdprs	zero,zero,2593
   28148:	000283f8 	rdprs	zero,zero,2575
   2814c:	000289e8 	cmpgeui	zero,zero,2599
   28150:	000289dc 	xori	zero,zero,2599
   28154:	000281a0 	cmpeqi	zero,zero,2566
   28158:	00028984 	movi	zero,2598
   2815c:	000281a0 	cmpeqi	zero,zero,2566
   28160:	000283d0 	cmplti	zero,zero,2575
   28164:	000281a0 	cmpeqi	zero,zero,2566
   28168:	000281a0 	cmpeqi	zero,zero,2566
   2816c:	0002893c 	xorhi	zero,zero,2596
   28170:	0023883a 	mov	r17,zero
   28174:	10fff404 	addi	r3,r2,-48
   28178:	a0800007 	ldb	r2,0(r20)
   2817c:	8c4002a4 	muli	r17,r17,10
   28180:	a5000044 	addi	r20,r20,1
   28184:	1c63883a 	add	r17,r3,r17
   28188:	10fff404 	addi	r3,r2,-48
   2818c:	190002b0 	cmpltui	r4,r3,10
   28190:	203ff91e 	bne	r4,zero,28178 <___vfiprintf_internal_r+0x294>
   28194:	10fff804 	addi	r3,r2,-32
   28198:	19001668 	cmpgeui	r4,r3,89
   2819c:	203f9626 	beq	r4,zero,27ff8 <___vfiprintf_internal_r+0x114>
   281a0:	29403fcc 	andi	r5,r5,255
   281a4:	2803b41e 	bne	r5,zero,29078 <___vfiprintf_internal_r+0x1194>
   281a8:	10005c26 	beq	r2,zero,2831c <___vfiprintf_internal_r+0x438>
   281ac:	d8800d05 	stb	r2,52(sp)
   281b0:	d8000945 	stb	zero,37(sp)
   281b4:	05c00044 	movi	r23,1
   281b8:	07000044 	movi	fp,1
   281bc:	dcc00d04 	addi	r19,sp,52
   281c0:	db400015 	stw	r13,0(sp)
   281c4:	0011883a 	mov	r8,zero
   281c8:	d8800017 	ldw	r2,0(sp)
   281cc:	1380008c 	andi	r14,r2,2
   281d0:	70000126 	beq	r14,zero,281d8 <___vfiprintf_internal_r+0x2f4>
   281d4:	bdc00084 	addi	r23,r23,2
   281d8:	d8800017 	ldw	r2,0(sp)
   281dc:	d9000b17 	ldw	r4,44(sp)
   281e0:	1340210c 	andi	r13,r2,132
   281e4:	21800044 	addi	r6,r4,1
   281e8:	d8800c17 	ldw	r2,48(sp)
   281ec:	300b883a 	mov	r5,r6
   281f0:	6800021e 	bne	r13,zero,281fc <___vfiprintf_internal_r+0x318>
   281f4:	8dc7c83a 	sub	r3,r17,r23
   281f8:	00c2e316 	blt	zero,r3,28d88 <___vfiprintf_internal_r+0xea4>
   281fc:	d8c00947 	ldb	r3,37(sp)
   28200:	18000c26 	beq	r3,zero,28234 <___vfiprintf_internal_r+0x350>
   28204:	d8c00944 	addi	r3,sp,37
   28208:	10800044 	addi	r2,r2,1
   2820c:	80c00015 	stw	r3,0(r16)
   28210:	00c00044 	movi	r3,1
   28214:	80c00115 	stw	r3,4(r16)
   28218:	d8800c15 	stw	r2,48(sp)
   2821c:	d9400b15 	stw	r5,44(sp)
   28220:	28c00208 	cmpgei	r3,r5,8
   28224:	18029e1e 	bne	r3,zero,28ca0 <___vfiprintf_internal_r+0xdbc>
   28228:	2809883a 	mov	r4,r5
   2822c:	84000204 	addi	r16,r16,8
   28230:	29400044 	addi	r5,r5,1
   28234:	70001726 	beq	r14,zero,28294 <___vfiprintf_internal_r+0x3b0>
   28238:	d8c00984 	addi	r3,sp,38
   2823c:	10800084 	addi	r2,r2,2
   28240:	80c00015 	stw	r3,0(r16)
   28244:	00c00084 	movi	r3,2
   28248:	80c00115 	stw	r3,4(r16)
   2824c:	d8800c15 	stw	r2,48(sp)
   28250:	d9400b15 	stw	r5,44(sp)
   28254:	28c00208 	cmpgei	r3,r5,8
   28258:	1802a826 	beq	r3,zero,28cfc <___vfiprintf_internal_r+0xe18>
   2825c:	10032326 	beq	r2,zero,28eec <___vfiprintf_internal_r+0x1008>
   28260:	d9800a04 	addi	r6,sp,40
   28264:	a80b883a 	mov	r5,r21
   28268:	b009883a 	mov	r4,r22
   2826c:	da000315 	stw	r8,12(sp)
   28270:	db400215 	stw	r13,8(sp)
   28274:	0027dd80 	call	27dd8 <__sprint_r.part.0>
   28278:	10002a1e 	bne	r2,zero,28324 <___vfiprintf_internal_r+0x440>
   2827c:	d9000b17 	ldw	r4,44(sp)
   28280:	d8800c17 	ldw	r2,48(sp)
   28284:	da000317 	ldw	r8,12(sp)
   28288:	db400217 	ldw	r13,8(sp)
   2828c:	9021883a 	mov	r16,r18
   28290:	21400044 	addi	r5,r4,1
   28294:	6b402018 	cmpnei	r13,r13,128
   28298:	6801ef26 	beq	r13,zero,28a58 <___vfiprintf_internal_r+0xb74>
   2829c:	4711c83a 	sub	r8,r8,fp
   282a0:	02022c16 	blt	zero,r8,28b54 <___vfiprintf_internal_r+0xc70>
   282a4:	e085883a 	add	r2,fp,r2
   282a8:	d9400b15 	stw	r5,44(sp)
   282ac:	84c00015 	stw	r19,0(r16)
   282b0:	87000115 	stw	fp,4(r16)
   282b4:	d8800c15 	stw	r2,48(sp)
   282b8:	29400208 	cmpgei	r5,r5,8
   282bc:	2801e026 	beq	r5,zero,28a40 <___vfiprintf_internal_r+0xb5c>
   282c0:	10009826 	beq	r2,zero,28524 <___vfiprintf_internal_r+0x640>
   282c4:	d9800a04 	addi	r6,sp,40
   282c8:	a80b883a 	mov	r5,r21
   282cc:	b009883a 	mov	r4,r22
   282d0:	0027dd80 	call	27dd8 <__sprint_r.part.0>
   282d4:	1000131e 	bne	r2,zero,28324 <___vfiprintf_internal_r+0x440>
   282d8:	d8800c17 	ldw	r2,48(sp)
   282dc:	9021883a 	mov	r16,r18
   282e0:	d8c00017 	ldw	r3,0(sp)
   282e4:	1cc0010c 	andi	r19,r3,4
   282e8:	98000226 	beq	r19,zero,282f4 <___vfiprintf_internal_r+0x410>
   282ec:	8de7c83a 	sub	r19,r17,r23
   282f0:	04c09316 	blt	zero,r19,28540 <___vfiprintf_internal_r+0x65c>
   282f4:	8dc0010e 	bge	r17,r23,282fc <___vfiprintf_internal_r+0x418>
   282f8:	b823883a 	mov	r17,r23
   282fc:	d8c00117 	ldw	r3,4(sp)
   28300:	1c47883a 	add	r3,r3,r17
   28304:	d8c00115 	stw	r3,4(sp)
   28308:	10025b1e 	bne	r2,zero,28c78 <___vfiprintf_internal_r+0xd94>
   2830c:	a0800007 	ldb	r2,0(r20)
   28310:	d8000b15 	stw	zero,44(sp)
   28314:	9021883a 	mov	r16,r18
   28318:	103f1d1e 	bne	r2,zero,27f90 <___vfiprintf_internal_r+0xac>
   2831c:	d8800c17 	ldw	r2,48(sp)
   28320:	1003571e 	bne	r2,zero,29080 <___vfiprintf_internal_r+0x119c>
   28324:	a880030b 	ldhu	r2,12(r21)
   28328:	1080100c 	andi	r2,r2,64
   2832c:	1003721e 	bne	r2,zero,290f8 <___vfiprintf_internal_r+0x1214>
   28330:	d8800117 	ldw	r2,4(sp)
   28334:	dfc03017 	ldw	ra,192(sp)
   28338:	df002f17 	ldw	fp,188(sp)
   2833c:	ddc02e17 	ldw	r23,184(sp)
   28340:	dd802d17 	ldw	r22,180(sp)
   28344:	dd402c17 	ldw	r21,176(sp)
   28348:	dd002b17 	ldw	r20,172(sp)
   2834c:	dcc02a17 	ldw	r19,168(sp)
   28350:	dc802917 	ldw	r18,164(sp)
   28354:	dc402817 	ldw	r17,160(sp)
   28358:	dc002717 	ldw	r16,156(sp)
   2835c:	dec03104 	addi	sp,sp,196
   28360:	f800283a 	ret
   28364:	a80b883a 	mov	r5,r21
   28368:	b009883a 	mov	r4,r22
   2836c:	0022a980 	call	22a98 <__swsetup_r>
   28370:	1003611e 	bne	r2,zero,290f8 <___vfiprintf_internal_r+0x1214>
   28374:	a880030b 	ldhu	r2,12(r21)
   28378:	1080068c 	andi	r2,r2,26
   2837c:	10800298 	cmpnei	r2,r2,10
   28380:	103efa1e 	bne	r2,zero,27f6c <___vfiprintf_internal_r+0x88>
   28384:	a880038f 	ldh	r2,14(r21)
   28388:	103ef816 	blt	r2,zero,27f6c <___vfiprintf_internal_r+0x88>
   2838c:	d9c00417 	ldw	r7,16(sp)
   28390:	a00d883a 	mov	r6,r20
   28394:	a80b883a 	mov	r5,r21
   28398:	b009883a 	mov	r4,r22
   2839c:	dfc03017 	ldw	ra,192(sp)
   283a0:	df002f17 	ldw	fp,188(sp)
   283a4:	ddc02e17 	ldw	r23,184(sp)
   283a8:	dd802d17 	ldw	r22,180(sp)
   283ac:	dd402c17 	ldw	r21,176(sp)
   283b0:	dd002b17 	ldw	r20,172(sp)
   283b4:	dcc02a17 	ldw	r19,168(sp)
   283b8:	dc802917 	ldw	r18,164(sp)
   283bc:	dc402817 	ldw	r17,160(sp)
   283c0:	dc002717 	ldw	r16,156(sp)
   283c4:	dec03104 	addi	sp,sp,196
   283c8:	00291501 	jmpi	29150 <__sbprintf>
   283cc:	6b400414 	ori	r13,r13,16
   283d0:	6880080c 	andi	r2,r13,32
   283d4:	10004726 	beq	r2,zero,284f4 <___vfiprintf_internal_r+0x610>
   283d8:	d8c00417 	ldw	r3,16(sp)
   283dc:	00800044 	movi	r2,1
   283e0:	1dc00017 	ldw	r23,0(r3)
   283e4:	1f000117 	ldw	fp,4(r3)
   283e8:	18c00204 	addi	r3,r3,8
   283ec:	d8c00415 	stw	r3,16(sp)
   283f0:	00000906 	br	28418 <___vfiprintf_internal_r+0x534>
   283f4:	6b400414 	ori	r13,r13,16
   283f8:	6880080c 	andi	r2,r13,32
   283fc:	10003126 	beq	r2,zero,284c4 <___vfiprintf_internal_r+0x5e0>
   28400:	d8c00417 	ldw	r3,16(sp)
   28404:	0005883a 	mov	r2,zero
   28408:	1dc00017 	ldw	r23,0(r3)
   2840c:	1f000117 	ldw	fp,4(r3)
   28410:	18c00204 	addi	r3,r3,8
   28414:	d8c00415 	stw	r3,16(sp)
   28418:	d8000945 	stb	zero,37(sp)
   2841c:	40ffffe0 	cmpeqi	r3,r8,-1
   28420:	001d883a 	mov	r14,zero
   28424:	1800cf1e 	bne	r3,zero,28764 <___vfiprintf_internal_r+0x880>
   28428:	04ffdfc4 	movi	r19,-129
   2842c:	6cc8703a 	and	r4,r13,r19
   28430:	bf06b03a 	or	r3,r23,fp
   28434:	d9000015 	stw	r4,0(sp)
   28438:	1802341e 	bne	r3,zero,28d0c <___vfiprintf_internal_r+0xe28>
   2843c:	4001f91e 	bne	r8,zero,28c24 <___vfiprintf_internal_r+0xd40>
   28440:	1002a11e 	bne	r2,zero,28ec8 <___vfiprintf_internal_r+0xfe4>
   28444:	6f00004c 	andi	fp,r13,1
   28448:	e002c526 	beq	fp,zero,28f60 <___vfiprintf_internal_r+0x107c>
   2844c:	00800c04 	movi	r2,48
   28450:	d88016c5 	stb	r2,91(sp)
   28454:	dcc016c4 	addi	r19,sp,91
   28458:	0000df06 	br	287d8 <___vfiprintf_internal_r+0x8f4>
   2845c:	8d27c83a 	sub	r19,r17,r20
   28460:	8d3fae26 	beq	r17,r20,2831c <___vfiprintf_internal_r+0x438>
   28464:	d8c00c17 	ldw	r3,48(sp)
   28468:	d8800b17 	ldw	r2,44(sp)
   2846c:	85000015 	stw	r20,0(r16)
   28470:	98c7883a 	add	r3,r19,r3
   28474:	10800044 	addi	r2,r2,1
   28478:	d8800b15 	stw	r2,44(sp)
   2847c:	84c00115 	stw	r19,4(r16)
   28480:	d8c00c15 	stw	r3,48(sp)
   28484:	10800208 	cmpgei	r2,r2,8
   28488:	1000061e 	bne	r2,zero,284a4 <___vfiprintf_internal_r+0x5c0>
   2848c:	84000204 	addi	r16,r16,8
   28490:	d8c00117 	ldw	r3,4(sp)
   28494:	88800003 	ldbu	r2,0(r17)
   28498:	1cc7883a 	add	r3,r3,r19
   2849c:	d8c00115 	stw	r3,4(sp)
   284a0:	003ec506 	br	27fb8 <___vfiprintf_internal_r+0xd4>
   284a4:	18028426 	beq	r3,zero,28eb8 <___vfiprintf_internal_r+0xfd4>
   284a8:	d9800a04 	addi	r6,sp,40
   284ac:	a80b883a 	mov	r5,r21
   284b0:	b009883a 	mov	r4,r22
   284b4:	0027dd80 	call	27dd8 <__sprint_r.part.0>
   284b8:	103f9a1e 	bne	r2,zero,28324 <___vfiprintf_internal_r+0x440>
   284bc:	9021883a 	mov	r16,r18
   284c0:	003ff306 	br	28490 <___vfiprintf_internal_r+0x5ac>
   284c4:	d8c00417 	ldw	r3,16(sp)
   284c8:	6880040c 	andi	r2,r13,16
   284cc:	1dc00017 	ldw	r23,0(r3)
   284d0:	18c00104 	addi	r3,r3,4
   284d4:	d8c00415 	stw	r3,16(sp)
   284d8:	1000031e 	bne	r2,zero,284e8 <___vfiprintf_internal_r+0x604>
   284dc:	6880100c 	andi	r2,r13,64
   284e0:	10000126 	beq	r2,zero,284e8 <___vfiprintf_internal_r+0x604>
   284e4:	bdffffcc 	andi	r23,r23,65535
   284e8:	0039883a 	mov	fp,zero
   284ec:	0005883a 	mov	r2,zero
   284f0:	003fc906 	br	28418 <___vfiprintf_internal_r+0x534>
   284f4:	d8c00417 	ldw	r3,16(sp)
   284f8:	6880040c 	andi	r2,r13,16
   284fc:	1dc00017 	ldw	r23,0(r3)
   28500:	18c00104 	addi	r3,r3,4
   28504:	d8c00415 	stw	r3,16(sp)
   28508:	1000031e 	bne	r2,zero,28518 <___vfiprintf_internal_r+0x634>
   2850c:	6880100c 	andi	r2,r13,64
   28510:	10000126 	beq	r2,zero,28518 <___vfiprintf_internal_r+0x634>
   28514:	bdffffcc 	andi	r23,r23,65535
   28518:	0039883a 	mov	fp,zero
   2851c:	00800044 	movi	r2,1
   28520:	003fbd06 	br	28418 <___vfiprintf_internal_r+0x534>
   28524:	d8c00017 	ldw	r3,0(sp)
   28528:	d8000b15 	stw	zero,44(sp)
   2852c:	1cc0010c 	andi	r19,r3,4
   28530:	98025026 	beq	r19,zero,28e74 <___vfiprintf_internal_r+0xf90>
   28534:	8de7c83a 	sub	r19,r17,r23
   28538:	04c24e0e 	bge	zero,r19,28e74 <___vfiprintf_internal_r+0xf90>
   2853c:	9021883a 	mov	r16,r18
   28540:	98c00450 	cmplti	r3,r19,17
   28544:	d9000b17 	ldw	r4,44(sp)
   28548:	01c000f4 	movhi	r7,3
   2854c:	1802e41e 	bne	r3,zero,290e0 <___vfiprintf_internal_r+0x11fc>
   28550:	39c05d04 	addi	r7,r7,372
   28554:	07000404 	movi	fp,16
   28558:	00000606 	br	28574 <___vfiprintf_internal_r+0x690>
   2855c:	21400084 	addi	r5,r4,2
   28560:	84000204 	addi	r16,r16,8
   28564:	1809883a 	mov	r4,r3
   28568:	9cfffc04 	addi	r19,r19,-16
   2856c:	98c00448 	cmpgei	r3,r19,17
   28570:	18001726 	beq	r3,zero,285d0 <___vfiprintf_internal_r+0x6ec>
   28574:	20c00044 	addi	r3,r4,1
   28578:	10800404 	addi	r2,r2,16
   2857c:	81c00015 	stw	r7,0(r16)
   28580:	87000115 	stw	fp,4(r16)
   28584:	d8800c15 	stw	r2,48(sp)
   28588:	d8c00b15 	stw	r3,44(sp)
   2858c:	19400208 	cmpgei	r5,r3,8
   28590:	283ff226 	beq	r5,zero,2855c <___vfiprintf_internal_r+0x678>
   28594:	d9800a04 	addi	r6,sp,40
   28598:	a80b883a 	mov	r5,r21
   2859c:	b009883a 	mov	r4,r22
   285a0:	10012926 	beq	r2,zero,28a48 <___vfiprintf_internal_r+0xb64>
   285a4:	d9c00015 	stw	r7,0(sp)
   285a8:	0027dd80 	call	27dd8 <__sprint_r.part.0>
   285ac:	103f5d1e 	bne	r2,zero,28324 <___vfiprintf_internal_r+0x440>
   285b0:	d9000b17 	ldw	r4,44(sp)
   285b4:	9cfffc04 	addi	r19,r19,-16
   285b8:	98c00448 	cmpgei	r3,r19,17
   285bc:	d8800c17 	ldw	r2,48(sp)
   285c0:	d9c00017 	ldw	r7,0(sp)
   285c4:	9021883a 	mov	r16,r18
   285c8:	21400044 	addi	r5,r4,1
   285cc:	183fe91e 	bne	r3,zero,28574 <___vfiprintf_internal_r+0x690>
   285d0:	14c5883a 	add	r2,r2,r19
   285d4:	d9400b15 	stw	r5,44(sp)
   285d8:	81c00015 	stw	r7,0(r16)
   285dc:	84c00115 	stw	r19,4(r16)
   285e0:	d8800c15 	stw	r2,48(sp)
   285e4:	29400210 	cmplti	r5,r5,8
   285e8:	283f421e 	bne	r5,zero,282f4 <___vfiprintf_internal_r+0x410>
   285ec:	10022126 	beq	r2,zero,28e74 <___vfiprintf_internal_r+0xf90>
   285f0:	d9800a04 	addi	r6,sp,40
   285f4:	a80b883a 	mov	r5,r21
   285f8:	b009883a 	mov	r4,r22
   285fc:	0027dd80 	call	27dd8 <__sprint_r.part.0>
   28600:	103f481e 	bne	r2,zero,28324 <___vfiprintf_internal_r+0x440>
   28604:	d8800c17 	ldw	r2,48(sp)
   28608:	003f3a06 	br	282f4 <___vfiprintf_internal_r+0x410>
   2860c:	0024ba00 	call	24ba0 <__sinit>
   28610:	003e4606 	br	27f2c <___vfiprintf_internal_r+0x48>
   28614:	29403fcc 	andi	r5,r5,255
   28618:	2802af1e 	bne	r5,zero,290d8 <___vfiprintf_internal_r+0x11f4>
   2861c:	6880080c 	andi	r2,r13,32
   28620:	10003826 	beq	r2,zero,28704 <___vfiprintf_internal_r+0x820>
   28624:	d8c00417 	ldw	r3,16(sp)
   28628:	18800117 	ldw	r2,4(r3)
   2862c:	1dc00017 	ldw	r23,0(r3)
   28630:	18c00204 	addi	r3,r3,8
   28634:	d8c00415 	stw	r3,16(sp)
   28638:	1039883a 	mov	fp,r2
   2863c:	10003f16 	blt	r2,zero,2873c <___vfiprintf_internal_r+0x858>
   28640:	40bfffd8 	cmpnei	r2,r8,-1
   28644:	db800943 	ldbu	r14,37(sp)
   28648:	10000626 	beq	r2,zero,28664 <___vfiprintf_internal_r+0x780>
   2864c:	04ffdfc4 	movi	r19,-129
   28650:	6cc6703a 	and	r3,r13,r19
   28654:	bf04b03a 	or	r2,r23,fp
   28658:	d8c00015 	stw	r3,0(sp)
   2865c:	10021926 	beq	r2,zero,28ec4 <___vfiprintf_internal_r+0xfe0>
   28660:	db400017 	ldw	r13,0(sp)
   28664:	e001ab1e 	bne	fp,zero,28d14 <___vfiprintf_internal_r+0xe30>
   28668:	b88002a8 	cmpgeui	r2,r23,10
   2866c:	1001a91e 	bne	r2,zero,28d14 <___vfiprintf_internal_r+0xe30>
   28670:	bdc00c04 	addi	r23,r23,48
   28674:	ddc016c5 	stb	r23,91(sp)
   28678:	db400015 	stw	r13,0(sp)
   2867c:	07000044 	movi	fp,1
   28680:	dcc016c4 	addi	r19,sp,91
   28684:	00005406 	br	287d8 <___vfiprintf_internal_r+0x8f4>
   28688:	d8800417 	ldw	r2,16(sp)
   2868c:	14400017 	ldw	r17,0(r2)
   28690:	10c00104 	addi	r3,r2,4
   28694:	88022f0e 	bge	r17,zero,28f54 <___vfiprintf_internal_r+0x1070>
   28698:	0463c83a 	sub	r17,zero,r17
   2869c:	d8c00415 	stw	r3,16(sp)
   286a0:	a0800007 	ldb	r2,0(r20)
   286a4:	6b400114 	ori	r13,r13,4
   286a8:	003e4f06 	br	27fe8 <___vfiprintf_internal_r+0x104>
   286ac:	a0800007 	ldb	r2,0(r20)
   286b0:	a1000044 	addi	r4,r20,1
   286b4:	10c00aa0 	cmpeqi	r3,r2,42
   286b8:	1802921e 	bne	r3,zero,29104 <___vfiprintf_internal_r+0x1220>
   286bc:	10fff404 	addi	r3,r2,-48
   286c0:	19c002b0 	cmpltui	r7,r3,10
   286c4:	2029883a 	mov	r20,r4
   286c8:	0011883a 	mov	r8,zero
   286cc:	383e4726 	beq	r7,zero,27fec <___vfiprintf_internal_r+0x108>
   286d0:	a0800007 	ldb	r2,0(r20)
   286d4:	420002a4 	muli	r8,r8,10
   286d8:	a5000044 	addi	r20,r20,1
   286dc:	40d1883a 	add	r8,r8,r3
   286e0:	10fff404 	addi	r3,r2,-48
   286e4:	190002b0 	cmpltui	r4,r3,10
   286e8:	203ff91e 	bne	r4,zero,286d0 <___vfiprintf_internal_r+0x7ec>
   286ec:	003e3f06 	br	27fec <___vfiprintf_internal_r+0x108>
   286f0:	29403fcc 	andi	r5,r5,255
   286f4:	28026d1e 	bne	r5,zero,290ac <___vfiprintf_internal_r+0x11c8>
   286f8:	6b400414 	ori	r13,r13,16
   286fc:	6880080c 	andi	r2,r13,32
   28700:	103fc81e 	bne	r2,zero,28624 <___vfiprintf_internal_r+0x740>
   28704:	d8c00417 	ldw	r3,16(sp)
   28708:	6880040c 	andi	r2,r13,16
   2870c:	1dc00017 	ldw	r23,0(r3)
   28710:	18c00104 	addi	r3,r3,4
   28714:	d8c00415 	stw	r3,16(sp)
   28718:	1001f11e 	bne	r2,zero,28ee0 <___vfiprintf_internal_r+0xffc>
   2871c:	6880100c 	andi	r2,r13,64
   28720:	1001ef26 	beq	r2,zero,28ee0 <___vfiprintf_internal_r+0xffc>
   28724:	bdffffcc 	andi	r23,r23,65535
   28728:	bde0001c 	xori	r23,r23,32768
   2872c:	bde00004 	addi	r23,r23,-32768
   28730:	b839d7fa 	srai	fp,r23,31
   28734:	e005883a 	mov	r2,fp
   28738:	103fc10e 	bge	r2,zero,28640 <___vfiprintf_internal_r+0x75c>
   2873c:	b804c03a 	cmpne	r2,r23,zero
   28740:	0739c83a 	sub	fp,zero,fp
   28744:	e0b9c83a 	sub	fp,fp,r2
   28748:	00800b44 	movi	r2,45
   2874c:	d8800945 	stb	r2,37(sp)
   28750:	40ffffe0 	cmpeqi	r3,r8,-1
   28754:	05efc83a 	sub	r23,zero,r23
   28758:	03800b44 	movi	r14,45
   2875c:	00800044 	movi	r2,1
   28760:	183f3126 	beq	r3,zero,28428 <___vfiprintf_internal_r+0x544>
   28764:	10c00060 	cmpeqi	r3,r2,1
   28768:	183fbe1e 	bne	r3,zero,28664 <___vfiprintf_internal_r+0x780>
   2876c:	108000a0 	cmpeqi	r2,r2,2
   28770:	1001311e 	bne	r2,zero,28c38 <___vfiprintf_internal_r+0xd54>
   28774:	9027883a 	mov	r19,r18
   28778:	e008977a 	slli	r4,fp,29
   2877c:	b806d0fa 	srli	r3,r23,3
   28780:	e038d0fa 	srli	fp,fp,3
   28784:	b88001cc 	andi	r2,r23,7
   28788:	10800c04 	addi	r2,r2,48
   2878c:	20eeb03a 	or	r23,r4,r3
   28790:	98bfffc5 	stb	r2,-1(r19)
   28794:	bf06b03a 	or	r3,r23,fp
   28798:	980b883a 	mov	r5,r19
   2879c:	9cffffc4 	addi	r19,r19,-1
   287a0:	183ff51e 	bne	r3,zero,28778 <___vfiprintf_internal_r+0x894>
   287a4:	68c0004c 	andi	r3,r13,1
   287a8:	18013026 	beq	r3,zero,28c6c <___vfiprintf_internal_r+0xd88>
   287ac:	10803fcc 	andi	r2,r2,255
   287b0:	1080201c 	xori	r2,r2,128
   287b4:	10bfe004 	addi	r2,r2,-128
   287b8:	10800c18 	cmpnei	r2,r2,48
   287bc:	10012b26 	beq	r2,zero,28c6c <___vfiprintf_internal_r+0xd88>
   287c0:	297fff84 	addi	r5,r5,-2
   287c4:	00800c04 	movi	r2,48
   287c8:	98bfffc5 	stb	r2,-1(r19)
   287cc:	9179c83a 	sub	fp,r18,r5
   287d0:	db400015 	stw	r13,0(sp)
   287d4:	2827883a 	mov	r19,r5
   287d8:	e02f883a 	mov	r23,fp
   287dc:	e200010e 	bge	fp,r8,287e4 <___vfiprintf_internal_r+0x900>
   287e0:	402f883a 	mov	r23,r8
   287e4:	73803fcc 	andi	r14,r14,255
   287e8:	7380201c 	xori	r14,r14,128
   287ec:	73bfe004 	addi	r14,r14,-128
   287f0:	703e7526 	beq	r14,zero,281c8 <___vfiprintf_internal_r+0x2e4>
   287f4:	bdc00044 	addi	r23,r23,1
   287f8:	003e7306 	br	281c8 <___vfiprintf_internal_r+0x2e4>
   287fc:	a0800007 	ldb	r2,0(r20)
   28800:	6b402014 	ori	r13,r13,128
   28804:	003df806 	br	27fe8 <___vfiprintf_internal_r+0x104>
   28808:	a0800007 	ldb	r2,0(r20)
   2880c:	01400044 	movi	r5,1
   28810:	01800ac4 	movi	r6,43
   28814:	003df406 	br	27fe8 <___vfiprintf_internal_r+0x104>
   28818:	a0800007 	ldb	r2,0(r20)
   2881c:	6b400054 	ori	r13,r13,1
   28820:	003df106 	br	27fe8 <___vfiprintf_internal_r+0x104>
   28824:	30c03fcc 	andi	r3,r6,255
   28828:	18c0201c 	xori	r3,r3,128
   2882c:	18ffe004 	addi	r3,r3,-128
   28830:	a0800003 	ldbu	r2,0(r20)
   28834:	1800091e 	bne	r3,zero,2885c <___vfiprintf_internal_r+0x978>
   28838:	10803fcc 	andi	r2,r2,255
   2883c:	1080201c 	xori	r2,r2,128
   28840:	01400044 	movi	r5,1
   28844:	01800804 	movi	r6,32
   28848:	10bfe004 	addi	r2,r2,-128
   2884c:	003de606 	br	27fe8 <___vfiprintf_internal_r+0x104>
   28850:	a0800043 	ldbu	r2,1(r20)
   28854:	6b400814 	ori	r13,r13,32
   28858:	a5000044 	addi	r20,r20,1
   2885c:	10803fcc 	andi	r2,r2,255
   28860:	1080201c 	xori	r2,r2,128
   28864:	10bfe004 	addi	r2,r2,-128
   28868:	003ddf06 	br	27fe8 <___vfiprintf_internal_r+0x104>
   2886c:	a0800007 	ldb	r2,0(r20)
   28870:	6b401014 	ori	r13,r13,64
   28874:	003ddc06 	br	27fe8 <___vfiprintf_internal_r+0x104>
   28878:	29403fcc 	andi	r5,r5,255
   2887c:	28020f1e 	bne	r5,zero,290bc <___vfiprintf_internal_r+0x11d8>
   28880:	d9000417 	ldw	r4,16(sp)
   28884:	6880080c 	andi	r2,r13,32
   28888:	20c00104 	addi	r3,r4,4
   2888c:	1001c01e 	bne	r2,zero,28f90 <___vfiprintf_internal_r+0x10ac>
   28890:	6880040c 	andi	r2,r13,16
   28894:	1001df1e 	bne	r2,zero,29014 <___vfiprintf_internal_r+0x1130>
   28898:	6b40100c 	andi	r13,r13,64
   2889c:	6801dd26 	beq	r13,zero,29014 <___vfiprintf_internal_r+0x1130>
   288a0:	d8800417 	ldw	r2,16(sp)
   288a4:	d8c00415 	stw	r3,16(sp)
   288a8:	d8c00117 	ldw	r3,4(sp)
   288ac:	10800017 	ldw	r2,0(r2)
   288b0:	10c0000d 	sth	r3,0(r2)
   288b4:	003db406 	br	27f88 <___vfiprintf_internal_r+0xa4>
   288b8:	a0800007 	ldb	r2,0(r20)
   288bc:	10c01b18 	cmpnei	r3,r2,108
   288c0:	183fe326 	beq	r3,zero,28850 <___vfiprintf_internal_r+0x96c>
   288c4:	6b400414 	ori	r13,r13,16
   288c8:	003dc706 	br	27fe8 <___vfiprintf_internal_r+0x104>
   288cc:	d8c00417 	ldw	r3,16(sp)
   288d0:	d8000945 	stb	zero,37(sp)
   288d4:	05c00044 	movi	r23,1
   288d8:	18800017 	ldw	r2,0(r3)
   288dc:	18c00104 	addi	r3,r3,4
   288e0:	d8c00415 	stw	r3,16(sp)
   288e4:	d8800d05 	stb	r2,52(sp)
   288e8:	07000044 	movi	fp,1
   288ec:	dcc00d04 	addi	r19,sp,52
   288f0:	003e3306 	br	281c0 <___vfiprintf_internal_r+0x2dc>
   288f4:	29403fcc 	andi	r5,r5,255
   288f8:	2801ee1e 	bne	r5,zero,290b4 <___vfiprintf_internal_r+0x11d0>
   288fc:	00c000f4 	movhi	r3,3
   28900:	18ffd904 	addi	r3,r3,-156
   28904:	d8c00515 	stw	r3,20(sp)
   28908:	68c0080c 	andi	r3,r13,32
   2890c:	18001226 	beq	r3,zero,28958 <___vfiprintf_internal_r+0xa74>
   28910:	d8c00417 	ldw	r3,16(sp)
   28914:	1dc00017 	ldw	r23,0(r3)
   28918:	1f000117 	ldw	fp,4(r3)
   2891c:	18c00204 	addi	r3,r3,8
   28920:	d8c00415 	stw	r3,16(sp)
   28924:	68c0004c 	andi	r3,r13,1
   28928:	18000226 	beq	r3,zero,28934 <___vfiprintf_internal_r+0xa50>
   2892c:	bf06b03a 	or	r3,r23,fp
   28930:	1801911e 	bne	r3,zero,28f78 <___vfiprintf_internal_r+0x1094>
   28934:	00800084 	movi	r2,2
   28938:	003eb706 	br	28418 <___vfiprintf_internal_r+0x534>
   2893c:	29403fcc 	andi	r5,r5,255
   28940:	2801e01e 	bne	r5,zero,290c4 <___vfiprintf_internal_r+0x11e0>
   28944:	00c000f4 	movhi	r3,3
   28948:	18ffd404 	addi	r3,r3,-176
   2894c:	d8c00515 	stw	r3,20(sp)
   28950:	68c0080c 	andi	r3,r13,32
   28954:	183fee1e 	bne	r3,zero,28910 <___vfiprintf_internal_r+0xa2c>
   28958:	d9000417 	ldw	r4,16(sp)
   2895c:	68c0040c 	andi	r3,r13,16
   28960:	25c00017 	ldw	r23,0(r4)
   28964:	21000104 	addi	r4,r4,4
   28968:	d9000415 	stw	r4,16(sp)
   2896c:	18015a1e 	bne	r3,zero,28ed8 <___vfiprintf_internal_r+0xff4>
   28970:	68c0100c 	andi	r3,r13,64
   28974:	18015826 	beq	r3,zero,28ed8 <___vfiprintf_internal_r+0xff4>
   28978:	bdffffcc 	andi	r23,r23,65535
   2897c:	0039883a 	mov	fp,zero
   28980:	003fe806 	br	28924 <___vfiprintf_internal_r+0xa40>
   28984:	d8800417 	ldw	r2,16(sp)
   28988:	d8000945 	stb	zero,37(sp)
   2898c:	14c00017 	ldw	r19,0(r2)
   28990:	10c00104 	addi	r3,r2,4
   28994:	9801a526 	beq	r19,zero,2902c <___vfiprintf_internal_r+0x1148>
   28998:	40bfffe0 	cmpeqi	r2,r8,-1
   2899c:	10018a1e 	bne	r2,zero,28fc8 <___vfiprintf_internal_r+0x10e4>
   289a0:	400d883a 	mov	r6,r8
   289a4:	000b883a 	mov	r5,zero
   289a8:	9809883a 	mov	r4,r19
   289ac:	d8c00315 	stw	r3,12(sp)
   289b0:	db400215 	stw	r13,8(sp)
   289b4:	da000015 	stw	r8,0(sp)
   289b8:	002600c0 	call	2600c <memchr>
   289bc:	da000017 	ldw	r8,0(sp)
   289c0:	db400217 	ldw	r13,8(sp)
   289c4:	d8c00317 	ldw	r3,12(sp)
   289c8:	1001b426 	beq	r2,zero,2909c <___vfiprintf_internal_r+0x11b8>
   289cc:	14f9c83a 	sub	fp,r2,r19
   289d0:	e02f883a 	mov	r23,fp
   289d4:	d8c00415 	stw	r3,16(sp)
   289d8:	003df906 	br	281c0 <___vfiprintf_internal_r+0x2dc>
   289dc:	a0800007 	ldb	r2,0(r20)
   289e0:	6b400814 	ori	r13,r13,32
   289e4:	003d8006 	br	27fe8 <___vfiprintf_internal_r+0x104>
   289e8:	d8c00417 	ldw	r3,16(sp)
   289ec:	00800c04 	movi	r2,48
   289f0:	d8800985 	stb	r2,38(sp)
   289f4:	00801e04 	movi	r2,120
   289f8:	010000f4 	movhi	r4,3
   289fc:	d88009c5 	stb	r2,39(sp)
   28a00:	18800104 	addi	r2,r3,4
   28a04:	d8800415 	stw	r2,16(sp)
   28a08:	20bfd404 	addi	r2,r4,-176
   28a0c:	d8800515 	stw	r2,20(sp)
   28a10:	1dc00017 	ldw	r23,0(r3)
   28a14:	0039883a 	mov	fp,zero
   28a18:	6b400094 	ori	r13,r13,2
   28a1c:	00800084 	movi	r2,2
   28a20:	003e7d06 	br	28418 <___vfiprintf_internal_r+0x534>
   28a24:	00c00044 	movi	r3,1
   28a28:	e005883a 	mov	r2,fp
   28a2c:	dcc01715 	stw	r19,92(sp)
   28a30:	df001815 	stw	fp,96(sp)
   28a34:	df000c15 	stw	fp,48(sp)
   28a38:	d8c00b15 	stw	r3,44(sp)
   28a3c:	9021883a 	mov	r16,r18
   28a40:	84000204 	addi	r16,r16,8
   28a44:	003e2606 	br	282e0 <___vfiprintf_internal_r+0x3fc>
   28a48:	01400044 	movi	r5,1
   28a4c:	0009883a 	mov	r4,zero
   28a50:	9021883a 	mov	r16,r18
   28a54:	003ec406 	br	28568 <___vfiprintf_internal_r+0x684>
   28a58:	8dc7c83a 	sub	r3,r17,r23
   28a5c:	00fe0f0e 	bge	zero,r3,2829c <___vfiprintf_internal_r+0x3b8>
   28a60:	19800450 	cmplti	r6,r3,17
   28a64:	01c000f4 	movhi	r7,3
   28a68:	3001a01e 	bne	r6,zero,290ec <___vfiprintf_internal_r+0x1208>
   28a6c:	39c05904 	addi	r7,r7,356
   28a70:	03400404 	movi	r13,16
   28a74:	00000606 	br	28a90 <___vfiprintf_internal_r+0xbac>
   28a78:	21800084 	addi	r6,r4,2
   28a7c:	84000204 	addi	r16,r16,8
   28a80:	2809883a 	mov	r4,r5
   28a84:	18fffc04 	addi	r3,r3,-16
   28a88:	19400448 	cmpgei	r5,r3,17
   28a8c:	28001c26 	beq	r5,zero,28b00 <___vfiprintf_internal_r+0xc1c>
   28a90:	21400044 	addi	r5,r4,1
   28a94:	10800404 	addi	r2,r2,16
   28a98:	81c00015 	stw	r7,0(r16)
   28a9c:	83400115 	stw	r13,4(r16)
   28aa0:	d8800c15 	stw	r2,48(sp)
   28aa4:	d9400b15 	stw	r5,44(sp)
   28aa8:	29800208 	cmpgei	r6,r5,8
   28aac:	303ff226 	beq	r6,zero,28a78 <___vfiprintf_internal_r+0xb94>
   28ab0:	d9800a04 	addi	r6,sp,40
   28ab4:	a80b883a 	mov	r5,r21
   28ab8:	b009883a 	mov	r4,r22
   28abc:	10007426 	beq	r2,zero,28c90 <___vfiprintf_internal_r+0xdac>
   28ac0:	d9c00615 	stw	r7,24(sp)
   28ac4:	d8c00315 	stw	r3,12(sp)
   28ac8:	da000215 	stw	r8,8(sp)
   28acc:	0027dd80 	call	27dd8 <__sprint_r.part.0>
   28ad0:	103e141e 	bne	r2,zero,28324 <___vfiprintf_internal_r+0x440>
   28ad4:	d8c00317 	ldw	r3,12(sp)
   28ad8:	d9000b17 	ldw	r4,44(sp)
   28adc:	d8800c17 	ldw	r2,48(sp)
   28ae0:	18fffc04 	addi	r3,r3,-16
   28ae4:	19400448 	cmpgei	r5,r3,17
   28ae8:	d9c00617 	ldw	r7,24(sp)
   28aec:	da000217 	ldw	r8,8(sp)
   28af0:	9021883a 	mov	r16,r18
   28af4:	21800044 	addi	r6,r4,1
   28af8:	03400404 	movi	r13,16
   28afc:	283fe41e 	bne	r5,zero,28a90 <___vfiprintf_internal_r+0xbac>
   28b00:	10c5883a 	add	r2,r2,r3
   28b04:	80c00115 	stw	r3,4(r16)
   28b08:	81c00015 	stw	r7,0(r16)
   28b0c:	d8800c15 	stw	r2,48(sp)
   28b10:	d9800b15 	stw	r6,44(sp)
   28b14:	30c00208 	cmpgei	r3,r6,8
   28b18:	18011326 	beq	r3,zero,28f68 <___vfiprintf_internal_r+0x1084>
   28b1c:	10014b26 	beq	r2,zero,2904c <___vfiprintf_internal_r+0x1168>
   28b20:	d9800a04 	addi	r6,sp,40
   28b24:	a80b883a 	mov	r5,r21
   28b28:	b009883a 	mov	r4,r22
   28b2c:	da000215 	stw	r8,8(sp)
   28b30:	0027dd80 	call	27dd8 <__sprint_r.part.0>
   28b34:	103dfb1e 	bne	r2,zero,28324 <___vfiprintf_internal_r+0x440>
   28b38:	da000217 	ldw	r8,8(sp)
   28b3c:	d9000b17 	ldw	r4,44(sp)
   28b40:	d8800c17 	ldw	r2,48(sp)
   28b44:	4711c83a 	sub	r8,r8,fp
   28b48:	9021883a 	mov	r16,r18
   28b4c:	21400044 	addi	r5,r4,1
   28b50:	023dd40e 	bge	zero,r8,282a4 <___vfiprintf_internal_r+0x3c0>
   28b54:	01c000f4 	movhi	r7,3
   28b58:	40c00450 	cmplti	r3,r8,17
   28b5c:	39c05904 	addi	r7,r7,356
   28b60:	03400404 	movi	r13,16
   28b64:	18000726 	beq	r3,zero,28b84 <___vfiprintf_internal_r+0xca0>
   28b68:	00002006 	br	28bec <___vfiprintf_internal_r+0xd08>
   28b6c:	21400084 	addi	r5,r4,2
   28b70:	84000204 	addi	r16,r16,8
   28b74:	1809883a 	mov	r4,r3
   28b78:	423ffc04 	addi	r8,r8,-16
   28b7c:	40c00448 	cmpgei	r3,r8,17
   28b80:	18001a26 	beq	r3,zero,28bec <___vfiprintf_internal_r+0xd08>
   28b84:	20c00044 	addi	r3,r4,1
   28b88:	10800404 	addi	r2,r2,16
   28b8c:	81c00015 	stw	r7,0(r16)
   28b90:	83400115 	stw	r13,4(r16)
   28b94:	d8800c15 	stw	r2,48(sp)
   28b98:	d8c00b15 	stw	r3,44(sp)
   28b9c:	19400208 	cmpgei	r5,r3,8
   28ba0:	283ff226 	beq	r5,zero,28b6c <___vfiprintf_internal_r+0xc88>
   28ba4:	d9800a04 	addi	r6,sp,40
   28ba8:	a80b883a 	mov	r5,r21
   28bac:	b009883a 	mov	r4,r22
   28bb0:	10001826 	beq	r2,zero,28c14 <___vfiprintf_internal_r+0xd30>
   28bb4:	d9c00315 	stw	r7,12(sp)
   28bb8:	da000215 	stw	r8,8(sp)
   28bbc:	0027dd80 	call	27dd8 <__sprint_r.part.0>
   28bc0:	103dd81e 	bne	r2,zero,28324 <___vfiprintf_internal_r+0x440>
   28bc4:	da000217 	ldw	r8,8(sp)
   28bc8:	d9000b17 	ldw	r4,44(sp)
   28bcc:	d8800c17 	ldw	r2,48(sp)
   28bd0:	423ffc04 	addi	r8,r8,-16
   28bd4:	40c00448 	cmpgei	r3,r8,17
   28bd8:	d9c00317 	ldw	r7,12(sp)
   28bdc:	9021883a 	mov	r16,r18
   28be0:	21400044 	addi	r5,r4,1
   28be4:	03400404 	movi	r13,16
   28be8:	183fe61e 	bne	r3,zero,28b84 <___vfiprintf_internal_r+0xca0>
   28bec:	1205883a 	add	r2,r2,r8
   28bf0:	81c00015 	stw	r7,0(r16)
   28bf4:	82000115 	stw	r8,4(r16)
   28bf8:	d8800c15 	stw	r2,48(sp)
   28bfc:	d9400b15 	stw	r5,44(sp)
   28c00:	28c00208 	cmpgei	r3,r5,8
   28c04:	1800a11e 	bne	r3,zero,28e8c <___vfiprintf_internal_r+0xfa8>
   28c08:	84000204 	addi	r16,r16,8
   28c0c:	29400044 	addi	r5,r5,1
   28c10:	003da406 	br	282a4 <___vfiprintf_internal_r+0x3c0>
   28c14:	01400044 	movi	r5,1
   28c18:	0009883a 	mov	r4,zero
   28c1c:	9021883a 	mov	r16,r18
   28c20:	003fd506 	br	28b78 <___vfiprintf_internal_r+0xc94>
   28c24:	10c00060 	cmpeqi	r3,r2,1
   28c28:	18011a1e 	bne	r3,zero,29094 <___vfiprintf_internal_r+0x11b0>
   28c2c:	108000a0 	cmpeqi	r2,r2,2
   28c30:	db400017 	ldw	r13,0(sp)
   28c34:	103ecf26 	beq	r2,zero,28774 <___vfiprintf_internal_r+0x890>
   28c38:	9027883a 	mov	r19,r18
   28c3c:	d9000517 	ldw	r4,20(sp)
   28c40:	b88003cc 	andi	r2,r23,15
   28c44:	e006973a 	slli	r3,fp,28
   28c48:	b82ed13a 	srli	r23,r23,4
   28c4c:	2085883a 	add	r2,r4,r2
   28c50:	10800003 	ldbu	r2,0(r2)
   28c54:	e038d13a 	srli	fp,fp,4
   28c58:	1deeb03a 	or	r23,r3,r23
   28c5c:	98bfffc5 	stb	r2,-1(r19)
   28c60:	bf04b03a 	or	r2,r23,fp
   28c64:	9cffffc4 	addi	r19,r19,-1
   28c68:	103ff41e 	bne	r2,zero,28c3c <___vfiprintf_internal_r+0xd58>
   28c6c:	94f9c83a 	sub	fp,r18,r19
   28c70:	db400015 	stw	r13,0(sp)
   28c74:	003ed806 	br	287d8 <___vfiprintf_internal_r+0x8f4>
   28c78:	d9800a04 	addi	r6,sp,40
   28c7c:	a80b883a 	mov	r5,r21
   28c80:	b009883a 	mov	r4,r22
   28c84:	0027dd80 	call	27dd8 <__sprint_r.part.0>
   28c88:	103da026 	beq	r2,zero,2830c <___vfiprintf_internal_r+0x428>
   28c8c:	003da506 	br	28324 <___vfiprintf_internal_r+0x440>
   28c90:	01800044 	movi	r6,1
   28c94:	0009883a 	mov	r4,zero
   28c98:	9021883a 	mov	r16,r18
   28c9c:	003f7906 	br	28a84 <___vfiprintf_internal_r+0xba0>
   28ca0:	10009626 	beq	r2,zero,28efc <___vfiprintf_internal_r+0x1018>
   28ca4:	d9800a04 	addi	r6,sp,40
   28ca8:	a80b883a 	mov	r5,r21
   28cac:	b009883a 	mov	r4,r22
   28cb0:	da000615 	stw	r8,24(sp)
   28cb4:	db400315 	stw	r13,12(sp)
   28cb8:	db800215 	stw	r14,8(sp)
   28cbc:	0027dd80 	call	27dd8 <__sprint_r.part.0>
   28cc0:	103d981e 	bne	r2,zero,28324 <___vfiprintf_internal_r+0x440>
   28cc4:	d9000b17 	ldw	r4,44(sp)
   28cc8:	d8800c17 	ldw	r2,48(sp)
   28ccc:	da000617 	ldw	r8,24(sp)
   28cd0:	db400317 	ldw	r13,12(sp)
   28cd4:	db800217 	ldw	r14,8(sp)
   28cd8:	9021883a 	mov	r16,r18
   28cdc:	21400044 	addi	r5,r4,1
   28ce0:	003d5406 	br	28234 <___vfiprintf_internal_r+0x350>
   28ce4:	d8800984 	addi	r2,sp,38
   28ce8:	d8801715 	stw	r2,92(sp)
   28cec:	00800084 	movi	r2,2
   28cf0:	d8801815 	stw	r2,96(sp)
   28cf4:	01400044 	movi	r5,1
   28cf8:	9021883a 	mov	r16,r18
   28cfc:	2809883a 	mov	r4,r5
   28d00:	84000204 	addi	r16,r16,8
   28d04:	21400044 	addi	r5,r4,1
   28d08:	003d6206 	br	28294 <___vfiprintf_internal_r+0x3b0>
   28d0c:	db400017 	ldw	r13,0(sp)
   28d10:	003e9406 	br	28764 <___vfiprintf_internal_r+0x880>
   28d14:	9027883a 	mov	r19,r18
   28d18:	b809883a 	mov	r4,r23
   28d1c:	e00b883a 	mov	r5,fp
   28d20:	01800284 	movi	r6,10
   28d24:	000f883a 	mov	r7,zero
   28d28:	db800315 	stw	r14,12(sp)
   28d2c:	da000215 	stw	r8,8(sp)
   28d30:	db400015 	stw	r13,0(sp)
   28d34:	002a97c0 	call	2a97c <__umoddi3>
   28d38:	10800c04 	addi	r2,r2,48
   28d3c:	b809883a 	mov	r4,r23
   28d40:	e00b883a 	mov	r5,fp
   28d44:	98bfffc5 	stb	r2,-1(r19)
   28d48:	01800284 	movi	r6,10
   28d4c:	000f883a 	mov	r7,zero
   28d50:	002a3ec0 	call	2a3ec <__udivdi3>
   28d54:	e009883a 	mov	r4,fp
   28d58:	b80b883a 	mov	r5,r23
   28d5c:	db400017 	ldw	r13,0(sp)
   28d60:	da000217 	ldw	r8,8(sp)
   28d64:	db800317 	ldw	r14,12(sp)
   28d68:	9cffffc4 	addi	r19,r19,-1
   28d6c:	102f883a 	mov	r23,r2
   28d70:	1839883a 	mov	fp,r3
   28d74:	203fe81e 	bne	r4,zero,28d18 <___vfiprintf_internal_r+0xe34>
   28d78:	294002a8 	cmpgeui	r5,r5,10
   28d7c:	283fe61e 	bne	r5,zero,28d18 <___vfiprintf_internal_r+0xe34>
   28d80:	94f9c83a 	sub	fp,r18,r19
   28d84:	003e9406 	br	287d8 <___vfiprintf_internal_r+0x8f4>
   28d88:	19400450 	cmplti	r5,r3,17
   28d8c:	01c000f4 	movhi	r7,3
   28d90:	2800ce1e 	bne	r5,zero,290cc <___vfiprintf_internal_r+0x11e8>
   28d94:	39c05d04 	addi	r7,r7,372
   28d98:	03c00404 	movi	r15,16
   28d9c:	00000706 	br	28dbc <___vfiprintf_internal_r+0xed8>
   28da0:	27c00084 	addi	ra,r4,2
   28da4:	84000204 	addi	r16,r16,8
   28da8:	3009883a 	mov	r4,r6
   28dac:	18fffc04 	addi	r3,r3,-16
   28db0:	19400448 	cmpgei	r5,r3,17
   28db4:	28002026 	beq	r5,zero,28e38 <___vfiprintf_internal_r+0xf54>
   28db8:	21800044 	addi	r6,r4,1
   28dbc:	10800404 	addi	r2,r2,16
   28dc0:	81c00015 	stw	r7,0(r16)
   28dc4:	83c00115 	stw	r15,4(r16)
   28dc8:	d8800c15 	stw	r2,48(sp)
   28dcc:	d9800b15 	stw	r6,44(sp)
   28dd0:	31400208 	cmpgei	r5,r6,8
   28dd4:	283ff226 	beq	r5,zero,28da0 <___vfiprintf_internal_r+0xebc>
   28dd8:	d9800a04 	addi	r6,sp,40
   28ddc:	a80b883a 	mov	r5,r21
   28de0:	b009883a 	mov	r4,r22
   28de4:	10001f26 	beq	r2,zero,28e64 <___vfiprintf_internal_r+0xf80>
   28de8:	d9c00815 	stw	r7,32(sp)
   28dec:	d8c00715 	stw	r3,28(sp)
   28df0:	da000615 	stw	r8,24(sp)
   28df4:	db400315 	stw	r13,12(sp)
   28df8:	db800215 	stw	r14,8(sp)
   28dfc:	0027dd80 	call	27dd8 <__sprint_r.part.0>
   28e00:	103d481e 	bne	r2,zero,28324 <___vfiprintf_internal_r+0x440>
   28e04:	d8c00717 	ldw	r3,28(sp)
   28e08:	d9000b17 	ldw	r4,44(sp)
   28e0c:	d8800c17 	ldw	r2,48(sp)
   28e10:	18fffc04 	addi	r3,r3,-16
   28e14:	19400448 	cmpgei	r5,r3,17
   28e18:	d9c00817 	ldw	r7,32(sp)
   28e1c:	da000617 	ldw	r8,24(sp)
   28e20:	db400317 	ldw	r13,12(sp)
   28e24:	db800217 	ldw	r14,8(sp)
   28e28:	9021883a 	mov	r16,r18
   28e2c:	27c00044 	addi	ra,r4,1
   28e30:	03c00404 	movi	r15,16
   28e34:	283fe01e 	bne	r5,zero,28db8 <___vfiprintf_internal_r+0xed4>
   28e38:	10c5883a 	add	r2,r2,r3
   28e3c:	80c00115 	stw	r3,4(r16)
   28e40:	81c00015 	stw	r7,0(r16)
   28e44:	d8800c15 	stw	r2,48(sp)
   28e48:	dfc00b15 	stw	ra,44(sp)
   28e4c:	f8c00208 	cmpgei	r3,ra,8
   28e50:	18002f1e 	bne	r3,zero,28f10 <___vfiprintf_internal_r+0x102c>
   28e54:	84000204 	addi	r16,r16,8
   28e58:	f9400044 	addi	r5,ra,1
   28e5c:	f809883a 	mov	r4,ra
   28e60:	003ce606 	br	281fc <___vfiprintf_internal_r+0x318>
   28e64:	0009883a 	mov	r4,zero
   28e68:	07c00044 	movi	ra,1
   28e6c:	9021883a 	mov	r16,r18
   28e70:	003fce06 	br	28dac <___vfiprintf_internal_r+0xec8>
   28e74:	8dc0010e 	bge	r17,r23,28e7c <___vfiprintf_internal_r+0xf98>
   28e78:	b823883a 	mov	r17,r23
   28e7c:	d8800117 	ldw	r2,4(sp)
   28e80:	1445883a 	add	r2,r2,r17
   28e84:	d8800115 	stw	r2,4(sp)
   28e88:	003d2006 	br	2830c <___vfiprintf_internal_r+0x428>
   28e8c:	103ee526 	beq	r2,zero,28a24 <___vfiprintf_internal_r+0xb40>
   28e90:	d9800a04 	addi	r6,sp,40
   28e94:	a80b883a 	mov	r5,r21
   28e98:	b009883a 	mov	r4,r22
   28e9c:	0027dd80 	call	27dd8 <__sprint_r.part.0>
   28ea0:	103d201e 	bne	r2,zero,28324 <___vfiprintf_internal_r+0x440>
   28ea4:	d9400b17 	ldw	r5,44(sp)
   28ea8:	d8800c17 	ldw	r2,48(sp)
   28eac:	9021883a 	mov	r16,r18
   28eb0:	29400044 	addi	r5,r5,1
   28eb4:	003cfb06 	br	282a4 <___vfiprintf_internal_r+0x3c0>
   28eb8:	d8000b15 	stw	zero,44(sp)
   28ebc:	9021883a 	mov	r16,r18
   28ec0:	003d7306 	br	28490 <___vfiprintf_internal_r+0x5ac>
   28ec4:	4000731e 	bne	r8,zero,29094 <___vfiprintf_internal_r+0x11b0>
   28ec8:	0011883a 	mov	r8,zero
   28ecc:	0039883a 	mov	fp,zero
   28ed0:	9027883a 	mov	r19,r18
   28ed4:	003e4006 	br	287d8 <___vfiprintf_internal_r+0x8f4>
   28ed8:	0039883a 	mov	fp,zero
   28edc:	003e9106 	br	28924 <___vfiprintf_internal_r+0xa40>
   28ee0:	b839d7fa 	srai	fp,r23,31
   28ee4:	e005883a 	mov	r2,fp
   28ee8:	003dd406 	br	2863c <___vfiprintf_internal_r+0x758>
   28eec:	01400044 	movi	r5,1
   28ef0:	0009883a 	mov	r4,zero
   28ef4:	9021883a 	mov	r16,r18
   28ef8:	003ce606 	br	28294 <___vfiprintf_internal_r+0x3b0>
   28efc:	70002b1e 	bne	r14,zero,28fac <___vfiprintf_internal_r+0x10c8>
   28f00:	0009883a 	mov	r4,zero
   28f04:	01400044 	movi	r5,1
   28f08:	9021883a 	mov	r16,r18
   28f0c:	003ce106 	br	28294 <___vfiprintf_internal_r+0x3b0>
   28f10:	10003726 	beq	r2,zero,28ff0 <___vfiprintf_internal_r+0x110c>
   28f14:	d9800a04 	addi	r6,sp,40
   28f18:	a80b883a 	mov	r5,r21
   28f1c:	b009883a 	mov	r4,r22
   28f20:	da000615 	stw	r8,24(sp)
   28f24:	db400315 	stw	r13,12(sp)
   28f28:	db800215 	stw	r14,8(sp)
   28f2c:	0027dd80 	call	27dd8 <__sprint_r.part.0>
   28f30:	103cfc1e 	bne	r2,zero,28324 <___vfiprintf_internal_r+0x440>
   28f34:	d9000b17 	ldw	r4,44(sp)
   28f38:	d8800c17 	ldw	r2,48(sp)
   28f3c:	da000617 	ldw	r8,24(sp)
   28f40:	db400317 	ldw	r13,12(sp)
   28f44:	db800217 	ldw	r14,8(sp)
   28f48:	9021883a 	mov	r16,r18
   28f4c:	21400044 	addi	r5,r4,1
   28f50:	003caa06 	br	281fc <___vfiprintf_internal_r+0x318>
   28f54:	a0800007 	ldb	r2,0(r20)
   28f58:	d8c00415 	stw	r3,16(sp)
   28f5c:	003c2206 	br	27fe8 <___vfiprintf_internal_r+0x104>
   28f60:	9027883a 	mov	r19,r18
   28f64:	003e1c06 	br	287d8 <___vfiprintf_internal_r+0x8f4>
   28f68:	84000204 	addi	r16,r16,8
   28f6c:	31400044 	addi	r5,r6,1
   28f70:	3009883a 	mov	r4,r6
   28f74:	003cc906 	br	2829c <___vfiprintf_internal_r+0x3b8>
   28f78:	00c00c04 	movi	r3,48
   28f7c:	d88009c5 	stb	r2,39(sp)
   28f80:	d8c00985 	stb	r3,38(sp)
   28f84:	6b400094 	ori	r13,r13,2
   28f88:	00800084 	movi	r2,2
   28f8c:	003d2206 	br	28418 <___vfiprintf_internal_r+0x534>
   28f90:	d9400117 	ldw	r5,4(sp)
   28f94:	20800017 	ldw	r2,0(r4)
   28f98:	d8c00415 	stw	r3,16(sp)
   28f9c:	2809d7fa 	srai	r4,r5,31
   28fa0:	11400015 	stw	r5,0(r2)
   28fa4:	11000115 	stw	r4,4(r2)
   28fa8:	003bf706 	br	27f88 <___vfiprintf_internal_r+0xa4>
   28fac:	d8800984 	addi	r2,sp,38
   28fb0:	d8801715 	stw	r2,92(sp)
   28fb4:	00800084 	movi	r2,2
   28fb8:	d8801815 	stw	r2,96(sp)
   28fbc:	01000044 	movi	r4,1
   28fc0:	9021883a 	mov	r16,r18
   28fc4:	003f4e06 	br	28d00 <___vfiprintf_internal_r+0xe1c>
   28fc8:	9809883a 	mov	r4,r19
   28fcc:	d8c00215 	stw	r3,8(sp)
   28fd0:	db400015 	stw	r13,0(sp)
   28fd4:	002091c0 	call	2091c <strlen>
   28fd8:	d8c00217 	ldw	r3,8(sp)
   28fdc:	db400017 	ldw	r13,0(sp)
   28fe0:	1039883a 	mov	fp,r2
   28fe4:	102f883a 	mov	r23,r2
   28fe8:	d8c00415 	stw	r3,16(sp)
   28fec:	003c7406 	br	281c0 <___vfiprintf_internal_r+0x2dc>
   28ff0:	d8c00947 	ldb	r3,37(sp)
   28ff4:	18001b26 	beq	r3,zero,29064 <___vfiprintf_internal_r+0x1180>
   28ff8:	d8800944 	addi	r2,sp,37
   28ffc:	d8801715 	stw	r2,92(sp)
   29000:	00800044 	movi	r2,1
   29004:	d8801815 	stw	r2,96(sp)
   29008:	01400044 	movi	r5,1
   2900c:	9021883a 	mov	r16,r18
   29010:	003c8506 	br	28228 <___vfiprintf_internal_r+0x344>
   29014:	d8800417 	ldw	r2,16(sp)
   29018:	10800017 	ldw	r2,0(r2)
   2901c:	d8c00415 	stw	r3,16(sp)
   29020:	d8c00117 	ldw	r3,4(sp)
   29024:	10c00015 	stw	r3,0(r2)
   29028:	003bd706 	br	27f88 <___vfiprintf_internal_r+0xa4>
   2902c:	408001f0 	cmpltui	r2,r8,7
   29030:	4039883a 	mov	fp,r8
   29034:	10000926 	beq	r2,zero,2905c <___vfiprintf_internal_r+0x1178>
   29038:	04c000f4 	movhi	r19,3
   2903c:	e02f883a 	mov	r23,fp
   29040:	d8c00415 	stw	r3,16(sp)
   29044:	9cffde04 	addi	r19,r19,-136
   29048:	003c5d06 	br	281c0 <___vfiprintf_internal_r+0x2dc>
   2904c:	01400044 	movi	r5,1
   29050:	0009883a 	mov	r4,zero
   29054:	9021883a 	mov	r16,r18
   29058:	003c9006 	br	2829c <___vfiprintf_internal_r+0x3b8>
   2905c:	07000184 	movi	fp,6
   29060:	003ff506 	br	29038 <___vfiprintf_internal_r+0x1154>
   29064:	703f1f1e 	bne	r14,zero,28ce4 <___vfiprintf_internal_r+0xe00>
   29068:	0009883a 	mov	r4,zero
   2906c:	01400044 	movi	r5,1
   29070:	9021883a 	mov	r16,r18
   29074:	003c8906 	br	2829c <___vfiprintf_internal_r+0x3b8>
   29078:	d9800945 	stb	r6,37(sp)
   2907c:	003c4a06 	br	281a8 <___vfiprintf_internal_r+0x2c4>
   29080:	d9800a04 	addi	r6,sp,40
   29084:	a80b883a 	mov	r5,r21
   29088:	b009883a 	mov	r4,r22
   2908c:	0027dd80 	call	27dd8 <__sprint_r.part.0>
   29090:	003ca406 	br	28324 <___vfiprintf_internal_r+0x440>
   29094:	db400017 	ldw	r13,0(sp)
   29098:	003d7506 	br	28670 <___vfiprintf_internal_r+0x78c>
   2909c:	402f883a 	mov	r23,r8
   290a0:	d8c00415 	stw	r3,16(sp)
   290a4:	4039883a 	mov	fp,r8
   290a8:	003c4506 	br	281c0 <___vfiprintf_internal_r+0x2dc>
   290ac:	d9800945 	stb	r6,37(sp)
   290b0:	003d9106 	br	286f8 <___vfiprintf_internal_r+0x814>
   290b4:	d9800945 	stb	r6,37(sp)
   290b8:	003e1006 	br	288fc <___vfiprintf_internal_r+0xa18>
   290bc:	d9800945 	stb	r6,37(sp)
   290c0:	003def06 	br	28880 <___vfiprintf_internal_r+0x99c>
   290c4:	d9800945 	stb	r6,37(sp)
   290c8:	003e1e06 	br	28944 <___vfiprintf_internal_r+0xa60>
   290cc:	303f883a 	mov	ra,r6
   290d0:	39c05d04 	addi	r7,r7,372
   290d4:	003f5806 	br	28e38 <___vfiprintf_internal_r+0xf54>
   290d8:	d9800945 	stb	r6,37(sp)
   290dc:	003d4f06 	br	2861c <___vfiprintf_internal_r+0x738>
   290e0:	21400044 	addi	r5,r4,1
   290e4:	39c05d04 	addi	r7,r7,372
   290e8:	003d3906 	br	285d0 <___vfiprintf_internal_r+0x6ec>
   290ec:	280d883a 	mov	r6,r5
   290f0:	39c05904 	addi	r7,r7,356
   290f4:	003e8206 	br	28b00 <___vfiprintf_internal_r+0xc1c>
   290f8:	00bfffc4 	movi	r2,-1
   290fc:	d8800115 	stw	r2,4(sp)
   29100:	003c8b06 	br	28330 <___vfiprintf_internal_r+0x44c>
   29104:	d8800417 	ldw	r2,16(sp)
   29108:	12000017 	ldw	r8,0(r2)
   2910c:	10c00104 	addi	r3,r2,4
   29110:	4000010e 	bge	r8,zero,29118 <___vfiprintf_internal_r+0x1234>
   29114:	023fffc4 	movi	r8,-1
   29118:	a0800043 	ldbu	r2,1(r20)
   2911c:	d8c00415 	stw	r3,16(sp)
   29120:	2029883a 	mov	r20,r4
   29124:	10803fcc 	andi	r2,r2,255
   29128:	1080201c 	xori	r2,r2,128
   2912c:	10bfe004 	addi	r2,r2,-128
   29130:	003bad06 	br	27fe8 <___vfiprintf_internal_r+0x104>

00029134 <__vfiprintf_internal>:
   29134:	00c000f4 	movhi	r3,3
   29138:	2005883a 	mov	r2,r4
   2913c:	19084a17 	ldw	r4,8488(r3)
   29140:	300f883a 	mov	r7,r6
   29144:	280d883a 	mov	r6,r5
   29148:	100b883a 	mov	r5,r2
   2914c:	0027ee41 	jmpi	27ee4 <___vfiprintf_internal_r>

00029150 <__sbprintf>:
   29150:	2880030b 	ldhu	r2,12(r5)
   29154:	2b001917 	ldw	r12,100(r5)
   29158:	2ac0038b 	ldhu	r11,14(r5)
   2915c:	2a800717 	ldw	r10,28(r5)
   29160:	2a400917 	ldw	r9,36(r5)
   29164:	defee204 	addi	sp,sp,-1144
   29168:	da001a04 	addi	r8,sp,104
   2916c:	00c10004 	movi	r3,1024
   29170:	dc011a15 	stw	r16,1128(sp)
   29174:	10bfff4c 	andi	r2,r2,65533
   29178:	2821883a 	mov	r16,r5
   2917c:	d80b883a 	mov	r5,sp
   29180:	dc811c15 	stw	r18,1136(sp)
   29184:	dc411b15 	stw	r17,1132(sp)
   29188:	dfc11d15 	stw	ra,1140(sp)
   2918c:	2025883a 	mov	r18,r4
   29190:	d880030d 	sth	r2,12(sp)
   29194:	db001915 	stw	r12,100(sp)
   29198:	dac0038d 	sth	r11,14(sp)
   2919c:	da800715 	stw	r10,28(sp)
   291a0:	da400915 	stw	r9,36(sp)
   291a4:	da000015 	stw	r8,0(sp)
   291a8:	da000415 	stw	r8,16(sp)
   291ac:	d8c00215 	stw	r3,8(sp)
   291b0:	d8c00515 	stw	r3,20(sp)
   291b4:	d8000615 	stw	zero,24(sp)
   291b8:	0027ee40 	call	27ee4 <___vfiprintf_internal_r>
   291bc:	1023883a 	mov	r17,r2
   291c0:	10000d0e 	bge	r2,zero,291f8 <__sbprintf+0xa8>
   291c4:	d880030b 	ldhu	r2,12(sp)
   291c8:	1080100c 	andi	r2,r2,64
   291cc:	10000326 	beq	r2,zero,291dc <__sbprintf+0x8c>
   291d0:	8080030b 	ldhu	r2,12(r16)
   291d4:	10801014 	ori	r2,r2,64
   291d8:	8080030d 	sth	r2,12(r16)
   291dc:	8805883a 	mov	r2,r17
   291e0:	dfc11d17 	ldw	ra,1140(sp)
   291e4:	dc811c17 	ldw	r18,1136(sp)
   291e8:	dc411b17 	ldw	r17,1132(sp)
   291ec:	dc011a17 	ldw	r16,1128(sp)
   291f0:	dec11e04 	addi	sp,sp,1144
   291f4:	f800283a 	ret
   291f8:	d80b883a 	mov	r5,sp
   291fc:	9009883a 	mov	r4,r18
   29200:	00247680 	call	24768 <_fflush_r>
   29204:	103fef26 	beq	r2,zero,291c4 <__sbprintf+0x74>
   29208:	047fffc4 	movi	r17,-1
   2920c:	003fed06 	br	291c4 <__sbprintf+0x74>

00029210 <__swbuf_r>:
   29210:	defffb04 	addi	sp,sp,-20
   29214:	dcc00315 	stw	r19,12(sp)
   29218:	dc400115 	stw	r17,4(sp)
   2921c:	dc000015 	stw	r16,0(sp)
   29220:	dfc00415 	stw	ra,16(sp)
   29224:	dc800215 	stw	r18,8(sp)
   29228:	2027883a 	mov	r19,r4
   2922c:	2823883a 	mov	r17,r5
   29230:	3021883a 	mov	r16,r6
   29234:	20000226 	beq	r4,zero,29240 <__swbuf_r+0x30>
   29238:	20800e17 	ldw	r2,56(r4)
   2923c:	10003e26 	beq	r2,zero,29338 <__swbuf_r+0x128>
   29240:	80800617 	ldw	r2,24(r16)
   29244:	80c0030b 	ldhu	r3,12(r16)
   29248:	80800215 	stw	r2,8(r16)
   2924c:	1880020c 	andi	r2,r3,8
   29250:	10001f26 	beq	r2,zero,292d0 <__swbuf_r+0xc0>
   29254:	80800417 	ldw	r2,16(r16)
   29258:	10001d26 	beq	r2,zero,292d0 <__swbuf_r+0xc0>
   2925c:	1948000c 	andi	r5,r3,8192
   29260:	8c803fcc 	andi	r18,r17,255
   29264:	28002326 	beq	r5,zero,292f4 <__swbuf_r+0xe4>
   29268:	80c00017 	ldw	r3,0(r16)
   2926c:	81000517 	ldw	r4,20(r16)
   29270:	1885c83a 	sub	r2,r3,r2
   29274:	1100290e 	bge	r2,r4,2931c <__swbuf_r+0x10c>
   29278:	10800044 	addi	r2,r2,1
   2927c:	81400217 	ldw	r5,8(r16)
   29280:	19000044 	addi	r4,r3,1
   29284:	81000015 	stw	r4,0(r16)
   29288:	297fffc4 	addi	r5,r5,-1
   2928c:	81400215 	stw	r5,8(r16)
   29290:	1c400005 	stb	r17,0(r3)
   29294:	80c00517 	ldw	r3,20(r16)
   29298:	18802926 	beq	r3,r2,29340 <__swbuf_r+0x130>
   2929c:	8080030b 	ldhu	r2,12(r16)
   292a0:	1080004c 	andi	r2,r2,1
   292a4:	10000226 	beq	r2,zero,292b0 <__swbuf_r+0xa0>
   292a8:	90800298 	cmpnei	r2,r18,10
   292ac:	10002426 	beq	r2,zero,29340 <__swbuf_r+0x130>
   292b0:	9005883a 	mov	r2,r18
   292b4:	dfc00417 	ldw	ra,16(sp)
   292b8:	dcc00317 	ldw	r19,12(sp)
   292bc:	dc800217 	ldw	r18,8(sp)
   292c0:	dc400117 	ldw	r17,4(sp)
   292c4:	dc000017 	ldw	r16,0(sp)
   292c8:	dec00504 	addi	sp,sp,20
   292cc:	f800283a 	ret
   292d0:	800b883a 	mov	r5,r16
   292d4:	9809883a 	mov	r4,r19
   292d8:	0022a980 	call	22a98 <__swsetup_r>
   292dc:	10001c1e 	bne	r2,zero,29350 <__swbuf_r+0x140>
   292e0:	80c0030b 	ldhu	r3,12(r16)
   292e4:	80800417 	ldw	r2,16(r16)
   292e8:	8c803fcc 	andi	r18,r17,255
   292ec:	1948000c 	andi	r5,r3,8192
   292f0:	283fdd1e 	bne	r5,zero,29268 <__swbuf_r+0x58>
   292f4:	81001917 	ldw	r4,100(r16)
   292f8:	18c80014 	ori	r3,r3,8192
   292fc:	0177ffc4 	movi	r5,-8193
   29300:	2148703a 	and	r4,r4,r5
   29304:	80c0030d 	sth	r3,12(r16)
   29308:	80c00017 	ldw	r3,0(r16)
   2930c:	81001915 	stw	r4,100(r16)
   29310:	81000517 	ldw	r4,20(r16)
   29314:	1885c83a 	sub	r2,r3,r2
   29318:	113fd716 	blt	r2,r4,29278 <__swbuf_r+0x68>
   2931c:	800b883a 	mov	r5,r16
   29320:	9809883a 	mov	r4,r19
   29324:	00247680 	call	24768 <_fflush_r>
   29328:	1000091e 	bne	r2,zero,29350 <__swbuf_r+0x140>
   2932c:	80c00017 	ldw	r3,0(r16)
   29330:	00800044 	movi	r2,1
   29334:	003fd106 	br	2927c <__swbuf_r+0x6c>
   29338:	0024ba00 	call	24ba0 <__sinit>
   2933c:	003fc006 	br	29240 <__swbuf_r+0x30>
   29340:	800b883a 	mov	r5,r16
   29344:	9809883a 	mov	r4,r19
   29348:	00247680 	call	24768 <_fflush_r>
   2934c:	103fd826 	beq	r2,zero,292b0 <__swbuf_r+0xa0>
   29350:	04bfffc4 	movi	r18,-1
   29354:	003fd606 	br	292b0 <__swbuf_r+0xa0>

00029358 <__swbuf>:
   29358:	00c000f4 	movhi	r3,3
   2935c:	2005883a 	mov	r2,r4
   29360:	19084a17 	ldw	r4,8488(r3)
   29364:	280d883a 	mov	r6,r5
   29368:	100b883a 	mov	r5,r2
   2936c:	00292101 	jmpi	29210 <__swbuf_r>

00029370 <_write_r>:
   29370:	2807883a 	mov	r3,r5
   29374:	defffe04 	addi	sp,sp,-8
   29378:	dc000015 	stw	r16,0(sp)
   2937c:	300b883a 	mov	r5,r6
   29380:	008000f4 	movhi	r2,3
   29384:	380d883a 	mov	r6,r7
   29388:	2021883a 	mov	r16,r4
   2938c:	1809883a 	mov	r4,r3
   29390:	dfc00115 	stw	ra,4(sp)
   29394:	100f5215 	stw	zero,15688(r2)
   29398:	002de680 	call	2de68 <write>
   2939c:	10ffffd8 	cmpnei	r3,r2,-1
   293a0:	18000426 	beq	r3,zero,293b4 <_write_r+0x44>
   293a4:	dfc00117 	ldw	ra,4(sp)
   293a8:	dc000017 	ldw	r16,0(sp)
   293ac:	dec00204 	addi	sp,sp,8
   293b0:	f800283a 	ret
   293b4:	00c000f4 	movhi	r3,3
   293b8:	18cf5217 	ldw	r3,15688(r3)
   293bc:	183ff926 	beq	r3,zero,293a4 <_write_r+0x34>
   293c0:	80c00015 	stw	r3,0(r16)
   293c4:	dfc00117 	ldw	ra,4(sp)
   293c8:	dc000017 	ldw	r16,0(sp)
   293cc:	dec00204 	addi	sp,sp,8
   293d0:	f800283a 	ret

000293d4 <_close_r>:
   293d4:	defffe04 	addi	sp,sp,-8
   293d8:	dc000015 	stw	r16,0(sp)
   293dc:	008000f4 	movhi	r2,3
   293e0:	2021883a 	mov	r16,r4
   293e4:	2809883a 	mov	r4,r5
   293e8:	dfc00115 	stw	ra,4(sp)
   293ec:	100f5215 	stw	zero,15688(r2)
   293f0:	002d46c0 	call	2d46c <close>
   293f4:	10ffffd8 	cmpnei	r3,r2,-1
   293f8:	18000426 	beq	r3,zero,2940c <_close_r+0x38>
   293fc:	dfc00117 	ldw	ra,4(sp)
   29400:	dc000017 	ldw	r16,0(sp)
   29404:	dec00204 	addi	sp,sp,8
   29408:	f800283a 	ret
   2940c:	00c000f4 	movhi	r3,3
   29410:	18cf5217 	ldw	r3,15688(r3)
   29414:	183ff926 	beq	r3,zero,293fc <_close_r+0x28>
   29418:	80c00015 	stw	r3,0(r16)
   2941c:	dfc00117 	ldw	ra,4(sp)
   29420:	dc000017 	ldw	r16,0(sp)
   29424:	dec00204 	addi	sp,sp,8
   29428:	f800283a 	ret

0002942c <__assert_func>:
   2942c:	008000f4 	movhi	r2,3
   29430:	12084a17 	ldw	r8,8488(r2)
   29434:	defffc04 	addi	sp,sp,-16
   29438:	3807883a 	mov	r3,r7
   2943c:	3005883a 	mov	r2,r6
   29440:	dfc00315 	stw	ra,12(sp)
   29444:	42400317 	ldw	r9,12(r8)
   29448:	200f883a 	mov	r7,r4
   2944c:	2811883a 	mov	r8,r5
   29450:	180d883a 	mov	r6,r3
   29454:	10000a26 	beq	r2,zero,29480 <__assert_func+0x54>
   29458:	00c000f4 	movhi	r3,3
   2945c:	18c06104 	addi	r3,r3,388
   29460:	014000f4 	movhi	r5,3
   29464:	29406504 	addi	r5,r5,404
   29468:	4809883a 	mov	r4,r9
   2946c:	d8c00115 	stw	r3,4(sp)
   29470:	da000015 	stw	r8,0(sp)
   29474:	d8800215 	stw	r2,8(sp)
   29478:	002979c0 	call	2979c <fiprintf>
   2947c:	0029e840 	call	29e84 <abort>
   29480:	00c000f4 	movhi	r3,3
   29484:	18c06404 	addi	r3,r3,400
   29488:	1805883a 	mov	r2,r3
   2948c:	003ff406 	br	29460 <__assert_func+0x34>

00029490 <__assert>:
   29490:	deffff04 	addi	sp,sp,-4
   29494:	300f883a 	mov	r7,r6
   29498:	000d883a 	mov	r6,zero
   2949c:	dfc00015 	stw	ra,0(sp)
   294a0:	002942c0 	call	2942c <__assert_func>

000294a4 <_calloc_r>:
   294a4:	2804d43a 	srli	r2,r5,16
   294a8:	deffff04 	addi	sp,sp,-4
   294ac:	dfc00015 	stw	ra,0(sp)
   294b0:	3006d43a 	srli	r3,r6,16
   294b4:	10002a1e 	bne	r2,zero,29560 <_calloc_r+0xbc>
   294b8:	18003a1e 	bne	r3,zero,295a4 <_calloc_r+0x100>
   294bc:	297fffcc 	andi	r5,r5,65535
   294c0:	31bfffcc 	andi	r6,r6,65535
   294c4:	298b383a 	mul	r5,r5,r6
   294c8:	002582c0 	call	2582c <_malloc_r>
   294cc:	1009883a 	mov	r4,r2
   294d0:	10001626 	beq	r2,zero,2952c <_calloc_r+0x88>
   294d4:	11bfff17 	ldw	r6,-4(r2)
   294d8:	00bfff04 	movi	r2,-4
   294dc:	308c703a 	and	r6,r6,r2
   294e0:	31bfff04 	addi	r6,r6,-4
   294e4:	30800968 	cmpgeui	r2,r6,37
   294e8:	1000141e 	bne	r2,zero,2953c <_calloc_r+0x98>
   294ec:	30800530 	cmpltui	r2,r6,20
   294f0:	10000a1e 	bne	r2,zero,2951c <_calloc_r+0x78>
   294f4:	20000015 	stw	zero,0(r4)
   294f8:	20000115 	stw	zero,4(r4)
   294fc:	30800728 	cmpgeui	r2,r6,28
   29500:	10001526 	beq	r2,zero,29558 <_calloc_r+0xb4>
   29504:	20000215 	stw	zero,8(r4)
   29508:	20000315 	stw	zero,12(r4)
   2950c:	31800920 	cmpeqi	r6,r6,36
   29510:	30002b1e 	bne	r6,zero,295c0 <_calloc_r+0x11c>
   29514:	20800404 	addi	r2,r4,16
   29518:	00000106 	br	29520 <_calloc_r+0x7c>
   2951c:	2005883a 	mov	r2,r4
   29520:	10000015 	stw	zero,0(r2)
   29524:	10000115 	stw	zero,4(r2)
   29528:	10000215 	stw	zero,8(r2)
   2952c:	2005883a 	mov	r2,r4
   29530:	dfc00017 	ldw	ra,0(sp)
   29534:	dec00104 	addi	sp,sp,4
   29538:	f800283a 	ret
   2953c:	000b883a 	mov	r5,zero
   29540:	00263080 	call	26308 <memset>
   29544:	1009883a 	mov	r4,r2
   29548:	2005883a 	mov	r2,r4
   2954c:	dfc00017 	ldw	ra,0(sp)
   29550:	dec00104 	addi	sp,sp,4
   29554:	f800283a 	ret
   29558:	20800204 	addi	r2,r4,8
   2955c:	003ff006 	br	29520 <_calloc_r+0x7c>
   29560:	1800121e 	bne	r3,zero,295ac <_calloc_r+0x108>
   29564:	1007883a 	mov	r3,r2
   29568:	3005883a 	mov	r2,r6
   2956c:	297fffcc 	andi	r5,r5,65535
   29570:	31bfffcc 	andi	r6,r6,65535
   29574:	298b383a 	mul	r5,r5,r6
   29578:	18ffffcc 	andi	r3,r3,65535
   2957c:	10bfffcc 	andi	r2,r2,65535
   29580:	10c5383a 	mul	r2,r2,r3
   29584:	2806d43a 	srli	r3,r5,16
   29588:	10c5883a 	add	r2,r2,r3
   2958c:	1006d43a 	srli	r3,r2,16
   29590:	1800061e 	bne	r3,zero,295ac <_calloc_r+0x108>
   29594:	1004943a 	slli	r2,r2,16
   29598:	297fffcc 	andi	r5,r5,65535
   2959c:	114ab03a 	or	r5,r2,r5
   295a0:	003fc906 	br	294c8 <_calloc_r+0x24>
   295a4:	2805883a 	mov	r2,r5
   295a8:	003ff006 	br	2956c <_calloc_r+0xc8>
   295ac:	00295d00 	call	295d0 <__errno>
   295b0:	00c00304 	movi	r3,12
   295b4:	10c00015 	stw	r3,0(r2)
   295b8:	0009883a 	mov	r4,zero
   295bc:	003fdb06 	br	2952c <_calloc_r+0x88>
   295c0:	20000415 	stw	zero,16(r4)
   295c4:	20800604 	addi	r2,r4,24
   295c8:	20000515 	stw	zero,20(r4)
   295cc:	003fd406 	br	29520 <_calloc_r+0x7c>

000295d0 <__errno>:
   295d0:	008000f4 	movhi	r2,3
   295d4:	10884a17 	ldw	r2,8488(r2)
   295d8:	f800283a 	ret

000295dc <_fclose_r.part.0>:
   295dc:	defffc04 	addi	sp,sp,-16
   295e0:	dc800215 	stw	r18,8(sp)
   295e4:	dc400115 	stw	r17,4(sp)
   295e8:	dc000015 	stw	r16,0(sp)
   295ec:	dfc00315 	stw	ra,12(sp)
   295f0:	2821883a 	mov	r16,r5
   295f4:	2023883a 	mov	r17,r4
   295f8:	00245400 	call	24540 <__sflush_r>
   295fc:	80c00b17 	ldw	r3,44(r16)
   29600:	1025883a 	mov	r18,r2
   29604:	18000426 	beq	r3,zero,29618 <_fclose_r.part.0+0x3c>
   29608:	81400717 	ldw	r5,28(r16)
   2960c:	8809883a 	mov	r4,r17
   29610:	183ee83a 	callr	r3
   29614:	10001916 	blt	r2,zero,2967c <_fclose_r.part.0+0xa0>
   29618:	8080030b 	ldhu	r2,12(r16)
   2961c:	1080200c 	andi	r2,r2,128
   29620:	10001a1e 	bne	r2,zero,2968c <_fclose_r.part.0+0xb0>
   29624:	81400c17 	ldw	r5,48(r16)
   29628:	28000526 	beq	r5,zero,29640 <_fclose_r.part.0+0x64>
   2962c:	80801004 	addi	r2,r16,64
   29630:	28800226 	beq	r5,r2,2963c <_fclose_r.part.0+0x60>
   29634:	8809883a 	mov	r4,r17
   29638:	0024d040 	call	24d04 <_free_r>
   2963c:	80000c15 	stw	zero,48(r16)
   29640:	81401117 	ldw	r5,68(r16)
   29644:	28000326 	beq	r5,zero,29654 <_fclose_r.part.0+0x78>
   29648:	8809883a 	mov	r4,r17
   2964c:	0024d040 	call	24d04 <_free_r>
   29650:	80001115 	stw	zero,68(r16)
   29654:	0024bb00 	call	24bb0 <__sfp_lock_acquire>
   29658:	8000030d 	sth	zero,12(r16)
   2965c:	0024bb40 	call	24bb4 <__sfp_lock_release>
   29660:	9005883a 	mov	r2,r18
   29664:	dfc00317 	ldw	ra,12(sp)
   29668:	dc800217 	ldw	r18,8(sp)
   2966c:	dc400117 	ldw	r17,4(sp)
   29670:	dc000017 	ldw	r16,0(sp)
   29674:	dec00404 	addi	sp,sp,16
   29678:	f800283a 	ret
   2967c:	8080030b 	ldhu	r2,12(r16)
   29680:	04bfffc4 	movi	r18,-1
   29684:	1080200c 	andi	r2,r2,128
   29688:	103fe626 	beq	r2,zero,29624 <_fclose_r.part.0+0x48>
   2968c:	81400417 	ldw	r5,16(r16)
   29690:	8809883a 	mov	r4,r17
   29694:	0024d040 	call	24d04 <_free_r>
   29698:	003fe206 	br	29624 <_fclose_r.part.0+0x48>

0002969c <_fclose_r>:
   2969c:	28001926 	beq	r5,zero,29704 <_fclose_r+0x68>
   296a0:	defffd04 	addi	sp,sp,-12
   296a4:	dc000115 	stw	r16,4(sp)
   296a8:	dfc00215 	stw	ra,8(sp)
   296ac:	2021883a 	mov	r16,r4
   296b0:	20000226 	beq	r4,zero,296bc <_fclose_r+0x20>
   296b4:	20800e17 	ldw	r2,56(r4)
   296b8:	10000c26 	beq	r2,zero,296ec <_fclose_r+0x50>
   296bc:	2880030f 	ldh	r2,12(r5)
   296c0:	1000051e 	bne	r2,zero,296d8 <_fclose_r+0x3c>
   296c4:	0005883a 	mov	r2,zero
   296c8:	dfc00217 	ldw	ra,8(sp)
   296cc:	dc000117 	ldw	r16,4(sp)
   296d0:	dec00304 	addi	sp,sp,12
   296d4:	f800283a 	ret
   296d8:	8009883a 	mov	r4,r16
   296dc:	dfc00217 	ldw	ra,8(sp)
   296e0:	dc000117 	ldw	r16,4(sp)
   296e4:	dec00304 	addi	sp,sp,12
   296e8:	00295dc1 	jmpi	295dc <_fclose_r.part.0>
   296ec:	d9400015 	stw	r5,0(sp)
   296f0:	0024ba00 	call	24ba0 <__sinit>
   296f4:	d9400017 	ldw	r5,0(sp)
   296f8:	2880030f 	ldh	r2,12(r5)
   296fc:	103ff126 	beq	r2,zero,296c4 <_fclose_r+0x28>
   29700:	003ff506 	br	296d8 <_fclose_r+0x3c>
   29704:	0005883a 	mov	r2,zero
   29708:	f800283a 	ret

0002970c <fclose>:
   2970c:	20000826 	beq	r4,zero,29730 <fclose+0x24>
   29710:	008000f4 	movhi	r2,3
   29714:	200b883a 	mov	r5,r4
   29718:	11084a17 	ldw	r4,8488(r2)
   2971c:	20000226 	beq	r4,zero,29728 <fclose+0x1c>
   29720:	20800e17 	ldw	r2,56(r4)
   29724:	10000526 	beq	r2,zero,2973c <fclose+0x30>
   29728:	2880030f 	ldh	r2,12(r5)
   2972c:	1000021e 	bne	r2,zero,29738 <fclose+0x2c>
   29730:	0005883a 	mov	r2,zero
   29734:	f800283a 	ret
   29738:	00295dc1 	jmpi	295dc <_fclose_r.part.0>
   2973c:	defffd04 	addi	sp,sp,-12
   29740:	d9400115 	stw	r5,4(sp)
   29744:	d9000015 	stw	r4,0(sp)
   29748:	dfc00215 	stw	ra,8(sp)
   2974c:	0024ba00 	call	24ba0 <__sinit>
   29750:	d9400117 	ldw	r5,4(sp)
   29754:	d9000017 	ldw	r4,0(sp)
   29758:	2880030f 	ldh	r2,12(r5)
   2975c:	10000326 	beq	r2,zero,2976c <fclose+0x60>
   29760:	dfc00217 	ldw	ra,8(sp)
   29764:	dec00304 	addi	sp,sp,12
   29768:	00295dc1 	jmpi	295dc <_fclose_r.part.0>
   2976c:	0005883a 	mov	r2,zero
   29770:	dfc00217 	ldw	ra,8(sp)
   29774:	dec00304 	addi	sp,sp,12
   29778:	f800283a 	ret

0002977c <_fiprintf_r>:
   2977c:	defffe04 	addi	sp,sp,-8
   29780:	dfc00015 	stw	ra,0(sp)
   29784:	d9c00115 	stw	r7,4(sp)
   29788:	d9c00104 	addi	r7,sp,4
   2978c:	0029d500 	call	29d50 <_vfiprintf_r>
   29790:	dfc00017 	ldw	ra,0(sp)
   29794:	dec00204 	addi	sp,sp,8
   29798:	f800283a 	ret

0002979c <fiprintf>:
   2979c:	defffd04 	addi	sp,sp,-12
   297a0:	2005883a 	mov	r2,r4
   297a4:	dfc00015 	stw	ra,0(sp)
   297a8:	d9800115 	stw	r6,4(sp)
   297ac:	d9c00215 	stw	r7,8(sp)
   297b0:	00c000f4 	movhi	r3,3
   297b4:	19084a17 	ldw	r4,8488(r3)
   297b8:	280d883a 	mov	r6,r5
   297bc:	d9c00104 	addi	r7,sp,4
   297c0:	100b883a 	mov	r5,r2
   297c4:	0029d500 	call	29d50 <_vfiprintf_r>
   297c8:	dfc00017 	ldw	ra,0(sp)
   297cc:	dec00304 	addi	sp,sp,12
   297d0:	f800283a 	ret

000297d4 <__fputwc>:
   297d4:	defff904 	addi	sp,sp,-28
   297d8:	dcc00415 	stw	r19,16(sp)
   297dc:	dc800315 	stw	r18,12(sp)
   297e0:	dc000115 	stw	r16,4(sp)
   297e4:	dfc00615 	stw	ra,24(sp)
   297e8:	dd000515 	stw	r20,20(sp)
   297ec:	dc400215 	stw	r17,8(sp)
   297f0:	2025883a 	mov	r18,r4
   297f4:	2827883a 	mov	r19,r5
   297f8:	3021883a 	mov	r16,r6
   297fc:	0029b000 	call	29b00 <__locale_mb_cur_max>
   29800:	10800058 	cmpnei	r2,r2,1
   29804:	1000071e 	bne	r2,zero,29824 <__fputwc+0x50>
   29808:	98bfffc4 	addi	r2,r19,-1
   2980c:	10803fe8 	cmpgeui	r2,r2,255
   29810:	1000041e 	bne	r2,zero,29824 <__fputwc+0x50>
   29814:	980b883a 	mov	r5,r19
   29818:	dcc000c5 	stb	r19,3(sp)
   2981c:	05000044 	movi	r20,1
   29820:	00000a06 	br	2984c <__fputwc+0x78>
   29824:	81c01704 	addi	r7,r16,92
   29828:	980d883a 	mov	r6,r19
   2982c:	d94000c4 	addi	r5,sp,3
   29830:	9009883a 	mov	r4,r18
   29834:	0029d540 	call	29d54 <_wcrtomb_r>
   29838:	1029883a 	mov	r20,r2
   2983c:	10bfffd8 	cmpnei	r2,r2,-1
   29840:	10003926 	beq	r2,zero,29928 <__fputwc+0x154>
   29844:	a0001f26 	beq	r20,zero,298c4 <__fputwc+0xf0>
   29848:	d94000c3 	ldbu	r5,3(sp)
   2984c:	0023883a 	mov	r17,zero
   29850:	00000a06 	br	2987c <__fputwc+0xa8>
   29854:	80800017 	ldw	r2,0(r16)
   29858:	11400005 	stb	r5,0(r2)
   2985c:	80c00017 	ldw	r3,0(r16)
   29860:	18c00044 	addi	r3,r3,1
   29864:	80c00015 	stw	r3,0(r16)
   29868:	8c400044 	addi	r17,r17,1
   2986c:	d88000c4 	addi	r2,sp,3
   29870:	1447883a 	add	r3,r2,r17
   29874:	8d00132e 	bgeu	r17,r20,298c4 <__fputwc+0xf0>
   29878:	19400003 	ldbu	r5,0(r3)
   2987c:	80c00217 	ldw	r3,8(r16)
   29880:	18ffffc4 	addi	r3,r3,-1
   29884:	80c00215 	stw	r3,8(r16)
   29888:	183ff20e 	bge	r3,zero,29854 <__fputwc+0x80>
   2988c:	80800617 	ldw	r2,24(r16)
   29890:	18801616 	blt	r3,r2,298ec <__fputwc+0x118>
   29894:	80800017 	ldw	r2,0(r16)
   29898:	11400005 	stb	r5,0(r2)
   2989c:	80800017 	ldw	r2,0(r16)
   298a0:	10c00003 	ldbu	r3,0(r2)
   298a4:	10800044 	addi	r2,r2,1
   298a8:	18c002a0 	cmpeqi	r3,r3,10
   298ac:	1800171e 	bne	r3,zero,2990c <__fputwc+0x138>
   298b0:	80800015 	stw	r2,0(r16)
   298b4:	8c400044 	addi	r17,r17,1
   298b8:	d88000c4 	addi	r2,sp,3
   298bc:	1447883a 	add	r3,r2,r17
   298c0:	8d3fed36 	bltu	r17,r20,29878 <__fputwc+0xa4>
   298c4:	9829883a 	mov	r20,r19
   298c8:	a005883a 	mov	r2,r20
   298cc:	dfc00617 	ldw	ra,24(sp)
   298d0:	dd000517 	ldw	r20,20(sp)
   298d4:	dcc00417 	ldw	r19,16(sp)
   298d8:	dc800317 	ldw	r18,12(sp)
   298dc:	dc400217 	ldw	r17,8(sp)
   298e0:	dc000117 	ldw	r16,4(sp)
   298e4:	dec00704 	addi	sp,sp,28
   298e8:	f800283a 	ret
   298ec:	29403fcc 	andi	r5,r5,255
   298f0:	800d883a 	mov	r6,r16
   298f4:	9009883a 	mov	r4,r18
   298f8:	00292100 	call	29210 <__swbuf_r>
   298fc:	10bfffe0 	cmpeqi	r2,r2,-1
   29900:	103fd926 	beq	r2,zero,29868 <__fputwc+0x94>
   29904:	053fffc4 	movi	r20,-1
   29908:	003fef06 	br	298c8 <__fputwc+0xf4>
   2990c:	800d883a 	mov	r6,r16
   29910:	01400284 	movi	r5,10
   29914:	9009883a 	mov	r4,r18
   29918:	00292100 	call	29210 <__swbuf_r>
   2991c:	10bfffe0 	cmpeqi	r2,r2,-1
   29920:	103fd126 	beq	r2,zero,29868 <__fputwc+0x94>
   29924:	003ff706 	br	29904 <__fputwc+0x130>
   29928:	8080030b 	ldhu	r2,12(r16)
   2992c:	10801014 	ori	r2,r2,64
   29930:	8080030d 	sth	r2,12(r16)
   29934:	003fe406 	br	298c8 <__fputwc+0xf4>

00029938 <_fputwc_r>:
   29938:	3080030b 	ldhu	r2,12(r6)
   2993c:	10c8000c 	andi	r3,r2,8192
   29940:	1800051e 	bne	r3,zero,29958 <_fputwc_r+0x20>
   29944:	30c01917 	ldw	r3,100(r6)
   29948:	10880014 	ori	r2,r2,8192
   2994c:	3080030d 	sth	r2,12(r6)
   29950:	18880014 	ori	r2,r3,8192
   29954:	30801915 	stw	r2,100(r6)
   29958:	00297d41 	jmpi	297d4 <__fputwc>

0002995c <fputwc>:
   2995c:	defffc04 	addi	sp,sp,-16
   29960:	008000f4 	movhi	r2,3
   29964:	dc000215 	stw	r16,8(sp)
   29968:	14084a17 	ldw	r16,8488(r2)
   2996c:	dfc00315 	stw	ra,12(sp)
   29970:	280d883a 	mov	r6,r5
   29974:	200b883a 	mov	r5,r4
   29978:	80000226 	beq	r16,zero,29984 <fputwc+0x28>
   2997c:	80800e17 	ldw	r2,56(r16)
   29980:	10000d26 	beq	r2,zero,299b8 <fputwc+0x5c>
   29984:	3080030b 	ldhu	r2,12(r6)
   29988:	10c8000c 	andi	r3,r2,8192
   2998c:	1800051e 	bne	r3,zero,299a4 <fputwc+0x48>
   29990:	30c01917 	ldw	r3,100(r6)
   29994:	10880014 	ori	r2,r2,8192
   29998:	3080030d 	sth	r2,12(r6)
   2999c:	18880014 	ori	r2,r3,8192
   299a0:	30801915 	stw	r2,100(r6)
   299a4:	8009883a 	mov	r4,r16
   299a8:	dfc00317 	ldw	ra,12(sp)
   299ac:	dc000217 	ldw	r16,8(sp)
   299b0:	dec00404 	addi	sp,sp,16
   299b4:	00297d41 	jmpi	297d4 <__fputwc>
   299b8:	d9000015 	stw	r4,0(sp)
   299bc:	8009883a 	mov	r4,r16
   299c0:	d9800115 	stw	r6,4(sp)
   299c4:	0024ba00 	call	24ba0 <__sinit>
   299c8:	d9800117 	ldw	r6,4(sp)
   299cc:	d9400017 	ldw	r5,0(sp)
   299d0:	003fec06 	br	29984 <fputwc+0x28>

000299d4 <_fstat_r>:
   299d4:	2807883a 	mov	r3,r5
   299d8:	defffe04 	addi	sp,sp,-8
   299dc:	dc000015 	stw	r16,0(sp)
   299e0:	008000f4 	movhi	r2,3
   299e4:	300b883a 	mov	r5,r6
   299e8:	2021883a 	mov	r16,r4
   299ec:	1809883a 	mov	r4,r3
   299f0:	dfc00115 	stw	ra,4(sp)
   299f4:	100f5215 	stw	zero,15688(r2)
   299f8:	002d5dc0 	call	2d5dc <fstat>
   299fc:	10ffffd8 	cmpnei	r3,r2,-1
   29a00:	18000426 	beq	r3,zero,29a14 <_fstat_r+0x40>
   29a04:	dfc00117 	ldw	ra,4(sp)
   29a08:	dc000017 	ldw	r16,0(sp)
   29a0c:	dec00204 	addi	sp,sp,8
   29a10:	f800283a 	ret
   29a14:	00c000f4 	movhi	r3,3
   29a18:	18cf5217 	ldw	r3,15688(r3)
   29a1c:	183ff926 	beq	r3,zero,29a04 <_fstat_r+0x30>
   29a20:	80c00015 	stw	r3,0(r16)
   29a24:	dfc00117 	ldw	ra,4(sp)
   29a28:	dc000017 	ldw	r16,0(sp)
   29a2c:	dec00204 	addi	sp,sp,8
   29a30:	f800283a 	ret

00029a34 <_isatty_r>:
   29a34:	defffe04 	addi	sp,sp,-8
   29a38:	dc000015 	stw	r16,0(sp)
   29a3c:	008000f4 	movhi	r2,3
   29a40:	2021883a 	mov	r16,r4
   29a44:	2809883a 	mov	r4,r5
   29a48:	dfc00115 	stw	ra,4(sp)
   29a4c:	100f5215 	stw	zero,15688(r2)
   29a50:	002d6e80 	call	2d6e8 <isatty>
   29a54:	10ffffd8 	cmpnei	r3,r2,-1
   29a58:	18000426 	beq	r3,zero,29a6c <_isatty_r+0x38>
   29a5c:	dfc00117 	ldw	ra,4(sp)
   29a60:	dc000017 	ldw	r16,0(sp)
   29a64:	dec00204 	addi	sp,sp,8
   29a68:	f800283a 	ret
   29a6c:	00c000f4 	movhi	r3,3
   29a70:	18cf5217 	ldw	r3,15688(r3)
   29a74:	183ff926 	beq	r3,zero,29a5c <_isatty_r+0x28>
   29a78:	80c00015 	stw	r3,0(r16)
   29a7c:	dfc00117 	ldw	ra,4(sp)
   29a80:	dc000017 	ldw	r16,0(sp)
   29a84:	dec00204 	addi	sp,sp,8
   29a88:	f800283a 	ret

00029a8c <_setlocale_r>:
   29a8c:	30001626 	beq	r6,zero,29ae8 <_setlocale_r+0x5c>
   29a90:	014000f4 	movhi	r5,3
   29a94:	defffe04 	addi	sp,sp,-8
   29a98:	29407204 	addi	r5,r5,456
   29a9c:	3009883a 	mov	r4,r6
   29aa0:	dc000015 	stw	r16,0(sp)
   29aa4:	dfc00115 	stw	ra,4(sp)
   29aa8:	3021883a 	mov	r16,r6
   29aac:	0029c980 	call	29c98 <strcmp>
   29ab0:	1000061e 	bne	r2,zero,29acc <_setlocale_r+0x40>
   29ab4:	008000f4 	movhi	r2,3
   29ab8:	10807104 	addi	r2,r2,452
   29abc:	dfc00117 	ldw	ra,4(sp)
   29ac0:	dc000017 	ldw	r16,0(sp)
   29ac4:	dec00204 	addi	sp,sp,8
   29ac8:	f800283a 	ret
   29acc:	80800003 	ldbu	r2,0(r16)
   29ad0:	10bfef44 	addi	r2,r2,-67
   29ad4:	10000726 	beq	r2,zero,29af4 <_setlocale_r+0x68>
   29ad8:	80800003 	ldbu	r2,0(r16)
   29adc:	103ff526 	beq	r2,zero,29ab4 <_setlocale_r+0x28>
   29ae0:	0005883a 	mov	r2,zero
   29ae4:	003ff506 	br	29abc <_setlocale_r+0x30>
   29ae8:	008000f4 	movhi	r2,3
   29aec:	10807104 	addi	r2,r2,452
   29af0:	f800283a 	ret
   29af4:	80800043 	ldbu	r2,1(r16)
   29af8:	103fee26 	beq	r2,zero,29ab4 <_setlocale_r+0x28>
   29afc:	003ff606 	br	29ad8 <_setlocale_r+0x4c>

00029b00 <__locale_mb_cur_max>:
   29b00:	008000f4 	movhi	r2,3
   29b04:	1083b607 	ldb	r2,3800(r2)
   29b08:	f800283a 	ret

00029b0c <setlocale>:
   29b0c:	28001626 	beq	r5,zero,29b68 <setlocale+0x5c>
   29b10:	defffe04 	addi	sp,sp,-8
   29b14:	dc000015 	stw	r16,0(sp)
   29b18:	2821883a 	mov	r16,r5
   29b1c:	014000f4 	movhi	r5,3
   29b20:	29407204 	addi	r5,r5,456
   29b24:	8009883a 	mov	r4,r16
   29b28:	dfc00115 	stw	ra,4(sp)
   29b2c:	0029c980 	call	29c98 <strcmp>
   29b30:	1000061e 	bne	r2,zero,29b4c <setlocale+0x40>
   29b34:	008000f4 	movhi	r2,3
   29b38:	10807104 	addi	r2,r2,452
   29b3c:	dfc00117 	ldw	ra,4(sp)
   29b40:	dc000017 	ldw	r16,0(sp)
   29b44:	dec00204 	addi	sp,sp,8
   29b48:	f800283a 	ret
   29b4c:	80800003 	ldbu	r2,0(r16)
   29b50:	10bfef44 	addi	r2,r2,-67
   29b54:	10000726 	beq	r2,zero,29b74 <setlocale+0x68>
   29b58:	80800003 	ldbu	r2,0(r16)
   29b5c:	103ff526 	beq	r2,zero,29b34 <setlocale+0x28>
   29b60:	0005883a 	mov	r2,zero
   29b64:	003ff506 	br	29b3c <setlocale+0x30>
   29b68:	008000f4 	movhi	r2,3
   29b6c:	10807104 	addi	r2,r2,452
   29b70:	f800283a 	ret
   29b74:	80800043 	ldbu	r2,1(r16)
   29b78:	103fee26 	beq	r2,zero,29b34 <setlocale+0x28>
   29b7c:	003ff606 	br	29b58 <setlocale+0x4c>

00029b80 <_lseek_r>:
   29b80:	2807883a 	mov	r3,r5
   29b84:	defffe04 	addi	sp,sp,-8
   29b88:	dc000015 	stw	r16,0(sp)
   29b8c:	300b883a 	mov	r5,r6
   29b90:	008000f4 	movhi	r2,3
   29b94:	380d883a 	mov	r6,r7
   29b98:	2021883a 	mov	r16,r4
   29b9c:	1809883a 	mov	r4,r3
   29ba0:	dfc00115 	stw	ra,4(sp)
   29ba4:	100f5215 	stw	zero,15688(r2)
   29ba8:	002da1c0 	call	2da1c <lseek>
   29bac:	10ffffd8 	cmpnei	r3,r2,-1
   29bb0:	18000426 	beq	r3,zero,29bc4 <_lseek_r+0x44>
   29bb4:	dfc00117 	ldw	ra,4(sp)
   29bb8:	dc000017 	ldw	r16,0(sp)
   29bbc:	dec00204 	addi	sp,sp,8
   29bc0:	f800283a 	ret
   29bc4:	00c000f4 	movhi	r3,3
   29bc8:	18cf5217 	ldw	r3,15688(r3)
   29bcc:	183ff926 	beq	r3,zero,29bb4 <_lseek_r+0x34>
   29bd0:	80c00015 	stw	r3,0(r16)
   29bd4:	dfc00117 	ldw	ra,4(sp)
   29bd8:	dc000017 	ldw	r16,0(sp)
   29bdc:	dec00204 	addi	sp,sp,8
   29be0:	f800283a 	ret

00029be4 <_mbtowc_r>:
   29be4:	008000f4 	movhi	r2,3
   29be8:	1083a517 	ldw	r2,3732(r2)
   29bec:	1000683a 	jmp	r2

00029bf0 <__ascii_mbtowc>:
   29bf0:	deffff04 	addi	sp,sp,-4
   29bf4:	28000826 	beq	r5,zero,29c18 <__ascii_mbtowc+0x28>
   29bf8:	30000926 	beq	r6,zero,29c20 <__ascii_mbtowc+0x30>
   29bfc:	38000b26 	beq	r7,zero,29c2c <__ascii_mbtowc+0x3c>
   29c00:	30800003 	ldbu	r2,0(r6)
   29c04:	28800015 	stw	r2,0(r5)
   29c08:	30800003 	ldbu	r2,0(r6)
   29c0c:	1004c03a 	cmpne	r2,r2,zero
   29c10:	dec00104 	addi	sp,sp,4
   29c14:	f800283a 	ret
   29c18:	d80b883a 	mov	r5,sp
   29c1c:	303ff71e 	bne	r6,zero,29bfc <__ascii_mbtowc+0xc>
   29c20:	0005883a 	mov	r2,zero
   29c24:	dec00104 	addi	sp,sp,4
   29c28:	f800283a 	ret
   29c2c:	00bfff84 	movi	r2,-2
   29c30:	003ff706 	br	29c10 <__ascii_mbtowc+0x20>

00029c34 <_read_r>:
   29c34:	2807883a 	mov	r3,r5
   29c38:	defffe04 	addi	sp,sp,-8
   29c3c:	dc000015 	stw	r16,0(sp)
   29c40:	300b883a 	mov	r5,r6
   29c44:	008000f4 	movhi	r2,3
   29c48:	380d883a 	mov	r6,r7
   29c4c:	2021883a 	mov	r16,r4
   29c50:	1809883a 	mov	r4,r3
   29c54:	dfc00115 	stw	ra,4(sp)
   29c58:	100f5215 	stw	zero,15688(r2)
   29c5c:	002dbf00 	call	2dbf0 <read>
   29c60:	10ffffd8 	cmpnei	r3,r2,-1
   29c64:	18000426 	beq	r3,zero,29c78 <_read_r+0x44>
   29c68:	dfc00117 	ldw	ra,4(sp)
   29c6c:	dc000017 	ldw	r16,0(sp)
   29c70:	dec00204 	addi	sp,sp,8
   29c74:	f800283a 	ret
   29c78:	00c000f4 	movhi	r3,3
   29c7c:	18cf5217 	ldw	r3,15688(r3)
   29c80:	183ff926 	beq	r3,zero,29c68 <_read_r+0x34>
   29c84:	80c00015 	stw	r3,0(r16)
   29c88:	dfc00117 	ldw	ra,4(sp)
   29c8c:	dc000017 	ldw	r16,0(sp)
   29c90:	dec00204 	addi	sp,sp,8
   29c94:	f800283a 	ret

00029c98 <strcmp>:
   29c98:	2144b03a 	or	r2,r4,r5
   29c9c:	108000cc 	andi	r2,r2,3
   29ca0:	1000141e 	bne	r2,zero,29cf4 <strcmp+0x5c>
   29ca4:	20800017 	ldw	r2,0(r4)
   29ca8:	28c00017 	ldw	r3,0(r5)
   29cac:	10c0111e 	bne	r2,r3,29cf4 <strcmp+0x5c>
   29cb0:	01ffbff4 	movhi	r7,65279
   29cb4:	01a02074 	movhi	r6,32897
   29cb8:	39ffbfc4 	addi	r7,r7,-257
   29cbc:	31a02004 	addi	r6,r6,-32640
   29cc0:	00000306 	br	29cd0 <strcmp+0x38>
   29cc4:	20800017 	ldw	r2,0(r4)
   29cc8:	28c00017 	ldw	r3,0(r5)
   29ccc:	10c0091e 	bne	r2,r3,29cf4 <strcmp+0x5c>
   29cd0:	11c7883a 	add	r3,r2,r7
   29cd4:	0084303a 	nor	r2,zero,r2
   29cd8:	1884703a 	and	r2,r3,r2
   29cdc:	1184703a 	and	r2,r2,r6
   29ce0:	21000104 	addi	r4,r4,4
   29ce4:	29400104 	addi	r5,r5,4
   29ce8:	103ff626 	beq	r2,zero,29cc4 <strcmp+0x2c>
   29cec:	0005883a 	mov	r2,zero
   29cf0:	f800283a 	ret
   29cf4:	20c00003 	ldbu	r3,0(r4)
   29cf8:	18803fcc 	andi	r2,r3,255
   29cfc:	1080201c 	xori	r2,r2,128
   29d00:	10bfe004 	addi	r2,r2,-128
   29d04:	1000071e 	bne	r2,zero,29d24 <strcmp+0x8c>
   29d08:	00000a06 	br	29d34 <strcmp+0x9c>
   29d0c:	20c00003 	ldbu	r3,0(r4)
   29d10:	29400044 	addi	r5,r5,1
   29d14:	18803fcc 	andi	r2,r3,255
   29d18:	1080201c 	xori	r2,r2,128
   29d1c:	10bfe004 	addi	r2,r2,-128
   29d20:	10000726 	beq	r2,zero,29d40 <strcmp+0xa8>
   29d24:	29800007 	ldb	r6,0(r5)
   29d28:	21000044 	addi	r4,r4,1
   29d2c:	30bff726 	beq	r6,r2,29d0c <strcmp+0x74>
   29d30:	18803fcc 	andi	r2,r3,255
   29d34:	28c00003 	ldbu	r3,0(r5)
   29d38:	10c5c83a 	sub	r2,r2,r3
   29d3c:	f800283a 	ret
   29d40:	28c00003 	ldbu	r3,0(r5)
   29d44:	0005883a 	mov	r2,zero
   29d48:	10c5c83a 	sub	r2,r2,r3
   29d4c:	f800283a 	ret

00029d50 <_vfiprintf_r>:
   29d50:	0027ee41 	jmpi	27ee4 <___vfiprintf_internal_r>

00029d54 <_wcrtomb_r>:
   29d54:	defffa04 	addi	sp,sp,-24
   29d58:	dc400415 	stw	r17,16(sp)
   29d5c:	dc000315 	stw	r16,12(sp)
   29d60:	008000f4 	movhi	r2,3
   29d64:	dfc00515 	stw	ra,20(sp)
   29d68:	1083a417 	ldw	r2,3728(r2)
   29d6c:	2023883a 	mov	r17,r4
   29d70:	3821883a 	mov	r16,r7
   29d74:	28000826 	beq	r5,zero,29d98 <_wcrtomb_r+0x44>
   29d78:	103ee83a 	callr	r2
   29d7c:	10ffffd8 	cmpnei	r3,r2,-1
   29d80:	18000a26 	beq	r3,zero,29dac <_wcrtomb_r+0x58>
   29d84:	dfc00517 	ldw	ra,20(sp)
   29d88:	dc400417 	ldw	r17,16(sp)
   29d8c:	dc000317 	ldw	r16,12(sp)
   29d90:	dec00604 	addi	sp,sp,24
   29d94:	f800283a 	ret
   29d98:	000d883a 	mov	r6,zero
   29d9c:	d9400084 	addi	r5,sp,2
   29da0:	103ee83a 	callr	r2
   29da4:	10ffffd8 	cmpnei	r3,r2,-1
   29da8:	183ff61e 	bne	r3,zero,29d84 <_wcrtomb_r+0x30>
   29dac:	00802284 	movi	r2,138
   29db0:	80000015 	stw	zero,0(r16)
   29db4:	88800015 	stw	r2,0(r17)
   29db8:	00bfffc4 	movi	r2,-1
   29dbc:	003ff106 	br	29d84 <_wcrtomb_r+0x30>

00029dc0 <wcrtomb>:
   29dc0:	defffa04 	addi	sp,sp,-24
   29dc4:	00c000f4 	movhi	r3,3
   29dc8:	dc400415 	stw	r17,16(sp)
   29dcc:	dc000315 	stw	r16,12(sp)
   29dd0:	1c484a17 	ldw	r17,8488(r3)
   29dd4:	dfc00515 	stw	ra,20(sp)
   29dd8:	00c000f4 	movhi	r3,3
   29ddc:	18c3a417 	ldw	r3,3728(r3)
   29de0:	3021883a 	mov	r16,r6
   29de4:	20000c26 	beq	r4,zero,29e18 <wcrtomb+0x58>
   29de8:	280d883a 	mov	r6,r5
   29dec:	800f883a 	mov	r7,r16
   29df0:	200b883a 	mov	r5,r4
   29df4:	8809883a 	mov	r4,r17
   29df8:	183ee83a 	callr	r3
   29dfc:	10ffffd8 	cmpnei	r3,r2,-1
   29e00:	18000c26 	beq	r3,zero,29e34 <wcrtomb+0x74>
   29e04:	dfc00517 	ldw	ra,20(sp)
   29e08:	dc400417 	ldw	r17,16(sp)
   29e0c:	dc000317 	ldw	r16,12(sp)
   29e10:	dec00604 	addi	sp,sp,24
   29e14:	f800283a 	ret
   29e18:	300f883a 	mov	r7,r6
   29e1c:	d9400084 	addi	r5,sp,2
   29e20:	000d883a 	mov	r6,zero
   29e24:	8809883a 	mov	r4,r17
   29e28:	183ee83a 	callr	r3
   29e2c:	10ffffd8 	cmpnei	r3,r2,-1
   29e30:	183ff41e 	bne	r3,zero,29e04 <wcrtomb+0x44>
   29e34:	00802284 	movi	r2,138
   29e38:	80000015 	stw	zero,0(r16)
   29e3c:	88800015 	stw	r2,0(r17)
   29e40:	00bfffc4 	movi	r2,-1
   29e44:	003fef06 	br	29e04 <wcrtomb+0x44>

00029e48 <_wctomb_r>:
   29e48:	008000f4 	movhi	r2,3
   29e4c:	1083a417 	ldw	r2,3728(r2)
   29e50:	1000683a 	jmp	r2

00029e54 <__ascii_wctomb>:
   29e54:	28000926 	beq	r5,zero,29e7c <__ascii_wctomb+0x28>
   29e58:	30804030 	cmpltui	r2,r6,256
   29e5c:	10000326 	beq	r2,zero,29e6c <__ascii_wctomb+0x18>
   29e60:	29800005 	stb	r6,0(r5)
   29e64:	00800044 	movi	r2,1
   29e68:	f800283a 	ret
   29e6c:	00802284 	movi	r2,138
   29e70:	20800015 	stw	r2,0(r4)
   29e74:	00bfffc4 	movi	r2,-1
   29e78:	f800283a 	ret
   29e7c:	0005883a 	mov	r2,zero
   29e80:	f800283a 	ret

00029e84 <abort>:
   29e84:	deffff04 	addi	sp,sp,-4
   29e88:	01000184 	movi	r4,6
   29e8c:	dfc00015 	stw	ra,0(sp)
   29e90:	002a1100 	call	2a110 <raise>
   29e94:	01000044 	movi	r4,1
   29e98:	002d5680 	call	2d568 <_exit>

00029e9c <_init_signal_r>:
   29e9c:	2080b717 	ldw	r2,732(r4)
   29ea0:	10000226 	beq	r2,zero,29eac <_init_signal_r+0x10>
   29ea4:	0005883a 	mov	r2,zero
   29ea8:	f800283a 	ret
   29eac:	defffe04 	addi	sp,sp,-8
   29eb0:	01402004 	movi	r5,128
   29eb4:	dc000015 	stw	r16,0(sp)
   29eb8:	dfc00115 	stw	ra,4(sp)
   29ebc:	2021883a 	mov	r16,r4
   29ec0:	002582c0 	call	2582c <_malloc_r>
   29ec4:	8080b715 	stw	r2,732(r16)
   29ec8:	1009883a 	mov	r4,r2
   29ecc:	10000826 	beq	r2,zero,29ef0 <_init_signal_r+0x54>
   29ed0:	01802004 	movi	r6,128
   29ed4:	000b883a 	mov	r5,zero
   29ed8:	00263080 	call	26308 <memset>
   29edc:	0005883a 	mov	r2,zero
   29ee0:	dfc00117 	ldw	ra,4(sp)
   29ee4:	dc000017 	ldw	r16,0(sp)
   29ee8:	dec00204 	addi	sp,sp,8
   29eec:	f800283a 	ret
   29ef0:	00bfffc4 	movi	r2,-1
   29ef4:	003ffa06 	br	29ee0 <_init_signal_r+0x44>

00029ef8 <_signal_r>:
   29ef8:	defffc04 	addi	sp,sp,-16
   29efc:	dc400115 	stw	r17,4(sp)
   29f00:	dfc00315 	stw	ra,12(sp)
   29f04:	dc800215 	stw	r18,8(sp)
   29f08:	dc000015 	stw	r16,0(sp)
   29f0c:	28800830 	cmpltui	r2,r5,32
   29f10:	2023883a 	mov	r17,r4
   29f14:	10000e26 	beq	r2,zero,29f50 <_signal_r+0x58>
   29f18:	20c0b717 	ldw	r3,732(r4)
   29f1c:	2821883a 	mov	r16,r5
   29f20:	3025883a 	mov	r18,r6
   29f24:	18000e26 	beq	r3,zero,29f60 <_signal_r+0x68>
   29f28:	802090ba 	slli	r16,r16,2
   29f2c:	1c21883a 	add	r16,r3,r16
   29f30:	80800017 	ldw	r2,0(r16)
   29f34:	84800015 	stw	r18,0(r16)
   29f38:	dfc00317 	ldw	ra,12(sp)
   29f3c:	dc800217 	ldw	r18,8(sp)
   29f40:	dc400117 	ldw	r17,4(sp)
   29f44:	dc000017 	ldw	r16,0(sp)
   29f48:	dec00404 	addi	sp,sp,16
   29f4c:	f800283a 	ret
   29f50:	00800584 	movi	r2,22
   29f54:	20800015 	stw	r2,0(r4)
   29f58:	00bfffc4 	movi	r2,-1
   29f5c:	003ff606 	br	29f38 <_signal_r+0x40>
   29f60:	01402004 	movi	r5,128
   29f64:	002582c0 	call	2582c <_malloc_r>
   29f68:	8880b715 	stw	r2,732(r17)
   29f6c:	10000626 	beq	r2,zero,29f88 <_signal_r+0x90>
   29f70:	01802004 	movi	r6,128
   29f74:	000b883a 	mov	r5,zero
   29f78:	1009883a 	mov	r4,r2
   29f7c:	00263080 	call	26308 <memset>
   29f80:	1007883a 	mov	r3,r2
   29f84:	003fe806 	br	29f28 <_signal_r+0x30>
   29f88:	00bfffc4 	movi	r2,-1
   29f8c:	003fea06 	br	29f38 <_signal_r+0x40>

00029f90 <_raise_r>:
   29f90:	28800830 	cmpltui	r2,r5,32
   29f94:	10002b26 	beq	r2,zero,2a044 <_raise_r+0xb4>
   29f98:	2080b717 	ldw	r2,732(r4)
   29f9c:	defffd04 	addi	sp,sp,-12
   29fa0:	dc000115 	stw	r16,4(sp)
   29fa4:	dfc00215 	stw	ra,8(sp)
   29fa8:	2821883a 	mov	r16,r5
   29fac:	10001026 	beq	r2,zero,29ff0 <_raise_r+0x60>
   29fb0:	280690ba 	slli	r3,r5,2
   29fb4:	10c5883a 	add	r2,r2,r3
   29fb8:	10c00017 	ldw	r3,0(r2)
   29fbc:	18000c26 	beq	r3,zero,29ff0 <_raise_r+0x60>
   29fc0:	19400060 	cmpeqi	r5,r3,1
   29fc4:	28001a1e 	bne	r5,zero,2a030 <_raise_r+0xa0>
   29fc8:	197fffd8 	cmpnei	r5,r3,-1
   29fcc:	28001126 	beq	r5,zero,2a014 <_raise_r+0x84>
   29fd0:	10000015 	stw	zero,0(r2)
   29fd4:	8009883a 	mov	r4,r16
   29fd8:	183ee83a 	callr	r3
   29fdc:	0005883a 	mov	r2,zero
   29fe0:	dfc00217 	ldw	ra,8(sp)
   29fe4:	dc000117 	ldw	r16,4(sp)
   29fe8:	dec00304 	addi	sp,sp,12
   29fec:	f800283a 	ret
   29ff0:	d9000015 	stw	r4,0(sp)
   29ff4:	002a3e80 	call	2a3e8 <_getpid_r>
   29ff8:	d9000017 	ldw	r4,0(sp)
   29ffc:	800d883a 	mov	r6,r16
   2a000:	100b883a 	mov	r5,r2
   2a004:	dfc00217 	ldw	ra,8(sp)
   2a008:	dc000117 	ldw	r16,4(sp)
   2a00c:	dec00304 	addi	sp,sp,12
   2a010:	002a3881 	jmpi	2a388 <_kill_r>
   2a014:	00800584 	movi	r2,22
   2a018:	20800015 	stw	r2,0(r4)
   2a01c:	00800044 	movi	r2,1
   2a020:	dfc00217 	ldw	ra,8(sp)
   2a024:	dc000117 	ldw	r16,4(sp)
   2a028:	dec00304 	addi	sp,sp,12
   2a02c:	f800283a 	ret
   2a030:	0005883a 	mov	r2,zero
   2a034:	dfc00217 	ldw	ra,8(sp)
   2a038:	dc000117 	ldw	r16,4(sp)
   2a03c:	dec00304 	addi	sp,sp,12
   2a040:	f800283a 	ret
   2a044:	00800584 	movi	r2,22
   2a048:	20800015 	stw	r2,0(r4)
   2a04c:	00bfffc4 	movi	r2,-1
   2a050:	f800283a 	ret

0002a054 <__sigtramp_r>:
   2a054:	28800830 	cmpltui	r2,r5,32
   2a058:	10002b26 	beq	r2,zero,2a108 <__sigtramp_r+0xb4>
   2a05c:	20c0b717 	ldw	r3,732(r4)
   2a060:	defffd04 	addi	sp,sp,-12
   2a064:	dc400115 	stw	r17,4(sp)
   2a068:	dc000015 	stw	r16,0(sp)
   2a06c:	dfc00215 	stw	ra,8(sp)
   2a070:	2821883a 	mov	r16,r5
   2a074:	2023883a 	mov	r17,r4
   2a078:	18001326 	beq	r3,zero,2a0c8 <__sigtramp_r+0x74>
   2a07c:	800490ba 	slli	r2,r16,2
   2a080:	1887883a 	add	r3,r3,r2
   2a084:	18800017 	ldw	r2,0(r3)
   2a088:	10000d26 	beq	r2,zero,2a0c0 <__sigtramp_r+0x6c>
   2a08c:	113fffe0 	cmpeqi	r4,r2,-1
   2a090:	2000191e 	bne	r4,zero,2a0f8 <__sigtramp_r+0xa4>
   2a094:	11000060 	cmpeqi	r4,r2,1
   2a098:	2000151e 	bne	r4,zero,2a0f0 <__sigtramp_r+0x9c>
   2a09c:	18000015 	stw	zero,0(r3)
   2a0a0:	8009883a 	mov	r4,r16
   2a0a4:	103ee83a 	callr	r2
   2a0a8:	0005883a 	mov	r2,zero
   2a0ac:	dfc00217 	ldw	ra,8(sp)
   2a0b0:	dc400117 	ldw	r17,4(sp)
   2a0b4:	dc000017 	ldw	r16,0(sp)
   2a0b8:	dec00304 	addi	sp,sp,12
   2a0bc:	f800283a 	ret
   2a0c0:	00800044 	movi	r2,1
   2a0c4:	003ff906 	br	2a0ac <__sigtramp_r+0x58>
   2a0c8:	01402004 	movi	r5,128
   2a0cc:	002582c0 	call	2582c <_malloc_r>
   2a0d0:	8880b715 	stw	r2,732(r17)
   2a0d4:	10000a26 	beq	r2,zero,2a100 <__sigtramp_r+0xac>
   2a0d8:	01802004 	movi	r6,128
   2a0dc:	000b883a 	mov	r5,zero
   2a0e0:	1009883a 	mov	r4,r2
   2a0e4:	00263080 	call	26308 <memset>
   2a0e8:	1007883a 	mov	r3,r2
   2a0ec:	003fe306 	br	2a07c <__sigtramp_r+0x28>
   2a0f0:	008000c4 	movi	r2,3
   2a0f4:	003fed06 	br	2a0ac <__sigtramp_r+0x58>
   2a0f8:	00800084 	movi	r2,2
   2a0fc:	003feb06 	br	2a0ac <__sigtramp_r+0x58>
   2a100:	00bfffc4 	movi	r2,-1
   2a104:	003fe906 	br	2a0ac <__sigtramp_r+0x58>
   2a108:	00bfffc4 	movi	r2,-1
   2a10c:	f800283a 	ret

0002a110 <raise>:
   2a110:	defffd04 	addi	sp,sp,-12
   2a114:	dc400115 	stw	r17,4(sp)
   2a118:	00c000f4 	movhi	r3,3
   2a11c:	dfc00215 	stw	ra,8(sp)
   2a120:	dc000015 	stw	r16,0(sp)
   2a124:	20800830 	cmpltui	r2,r4,32
   2a128:	1c484a17 	ldw	r17,8488(r3)
   2a12c:	10002326 	beq	r2,zero,2a1bc <raise+0xac>
   2a130:	8880b717 	ldw	r2,732(r17)
   2a134:	2021883a 	mov	r16,r4
   2a138:	10001026 	beq	r2,zero,2a17c <raise+0x6c>
   2a13c:	200690ba 	slli	r3,r4,2
   2a140:	10c5883a 	add	r2,r2,r3
   2a144:	10c00017 	ldw	r3,0(r2)
   2a148:	18000c26 	beq	r3,zero,2a17c <raise+0x6c>
   2a14c:	19400060 	cmpeqi	r5,r3,1
   2a150:	2800181e 	bne	r5,zero,2a1b4 <raise+0xa4>
   2a154:	197fffd8 	cmpnei	r5,r3,-1
   2a158:	28001226 	beq	r5,zero,2a1a4 <raise+0x94>
   2a15c:	10000015 	stw	zero,0(r2)
   2a160:	183ee83a 	callr	r3
   2a164:	0005883a 	mov	r2,zero
   2a168:	dfc00217 	ldw	ra,8(sp)
   2a16c:	dc400117 	ldw	r17,4(sp)
   2a170:	dc000017 	ldw	r16,0(sp)
   2a174:	dec00304 	addi	sp,sp,12
   2a178:	f800283a 	ret
   2a17c:	8809883a 	mov	r4,r17
   2a180:	002a3e80 	call	2a3e8 <_getpid_r>
   2a184:	800d883a 	mov	r6,r16
   2a188:	100b883a 	mov	r5,r2
   2a18c:	8809883a 	mov	r4,r17
   2a190:	dfc00217 	ldw	ra,8(sp)
   2a194:	dc400117 	ldw	r17,4(sp)
   2a198:	dc000017 	ldw	r16,0(sp)
   2a19c:	dec00304 	addi	sp,sp,12
   2a1a0:	002a3881 	jmpi	2a388 <_kill_r>
   2a1a4:	00800584 	movi	r2,22
   2a1a8:	88800015 	stw	r2,0(r17)
   2a1ac:	00800044 	movi	r2,1
   2a1b0:	003fed06 	br	2a168 <raise+0x58>
   2a1b4:	0005883a 	mov	r2,zero
   2a1b8:	003feb06 	br	2a168 <raise+0x58>
   2a1bc:	00800584 	movi	r2,22
   2a1c0:	88800015 	stw	r2,0(r17)
   2a1c4:	00bfffc4 	movi	r2,-1
   2a1c8:	003fe706 	br	2a168 <raise+0x58>

0002a1cc <signal>:
   2a1cc:	defffc04 	addi	sp,sp,-16
   2a1d0:	dc800215 	stw	r18,8(sp)
   2a1d4:	00c000f4 	movhi	r3,3
   2a1d8:	dfc00315 	stw	ra,12(sp)
   2a1dc:	dc400115 	stw	r17,4(sp)
   2a1e0:	dc000015 	stw	r16,0(sp)
   2a1e4:	20800830 	cmpltui	r2,r4,32
   2a1e8:	1c884a17 	ldw	r18,8488(r3)
   2a1ec:	10000e26 	beq	r2,zero,2a228 <signal+0x5c>
   2a1f0:	2021883a 	mov	r16,r4
   2a1f4:	9100b717 	ldw	r4,732(r18)
   2a1f8:	2823883a 	mov	r17,r5
   2a1fc:	20000e26 	beq	r4,zero,2a238 <signal+0x6c>
   2a200:	802090ba 	slli	r16,r16,2
   2a204:	2421883a 	add	r16,r4,r16
   2a208:	80800017 	ldw	r2,0(r16)
   2a20c:	84400015 	stw	r17,0(r16)
   2a210:	dfc00317 	ldw	ra,12(sp)
   2a214:	dc800217 	ldw	r18,8(sp)
   2a218:	dc400117 	ldw	r17,4(sp)
   2a21c:	dc000017 	ldw	r16,0(sp)
   2a220:	dec00404 	addi	sp,sp,16
   2a224:	f800283a 	ret
   2a228:	00800584 	movi	r2,22
   2a22c:	90800015 	stw	r2,0(r18)
   2a230:	00bfffc4 	movi	r2,-1
   2a234:	003ff606 	br	2a210 <signal+0x44>
   2a238:	9009883a 	mov	r4,r18
   2a23c:	01402004 	movi	r5,128
   2a240:	002582c0 	call	2582c <_malloc_r>
   2a244:	9080b715 	stw	r2,732(r18)
   2a248:	1009883a 	mov	r4,r2
   2a24c:	10000526 	beq	r2,zero,2a264 <signal+0x98>
   2a250:	01802004 	movi	r6,128
   2a254:	000b883a 	mov	r5,zero
   2a258:	00263080 	call	26308 <memset>
   2a25c:	1009883a 	mov	r4,r2
   2a260:	003fe706 	br	2a200 <signal+0x34>
   2a264:	00bfffc4 	movi	r2,-1
   2a268:	003fe906 	br	2a210 <signal+0x44>

0002a26c <_init_signal>:
   2a26c:	defffe04 	addi	sp,sp,-8
   2a270:	008000f4 	movhi	r2,3
   2a274:	dc000015 	stw	r16,0(sp)
   2a278:	14084a17 	ldw	r16,8488(r2)
   2a27c:	dfc00115 	stw	ra,4(sp)
   2a280:	8080b717 	ldw	r2,732(r16)
   2a284:	10000526 	beq	r2,zero,2a29c <_init_signal+0x30>
   2a288:	0005883a 	mov	r2,zero
   2a28c:	dfc00117 	ldw	ra,4(sp)
   2a290:	dc000017 	ldw	r16,0(sp)
   2a294:	dec00204 	addi	sp,sp,8
   2a298:	f800283a 	ret
   2a29c:	8009883a 	mov	r4,r16
   2a2a0:	01402004 	movi	r5,128
   2a2a4:	002582c0 	call	2582c <_malloc_r>
   2a2a8:	8080b715 	stw	r2,732(r16)
   2a2ac:	1009883a 	mov	r4,r2
   2a2b0:	10000426 	beq	r2,zero,2a2c4 <_init_signal+0x58>
   2a2b4:	01802004 	movi	r6,128
   2a2b8:	000b883a 	mov	r5,zero
   2a2bc:	00263080 	call	26308 <memset>
   2a2c0:	003ff106 	br	2a288 <_init_signal+0x1c>
   2a2c4:	00bfffc4 	movi	r2,-1
   2a2c8:	003ff006 	br	2a28c <_init_signal+0x20>

0002a2cc <__sigtramp>:
   2a2cc:	defffd04 	addi	sp,sp,-12
   2a2d0:	dc400115 	stw	r17,4(sp)
   2a2d4:	00c000f4 	movhi	r3,3
   2a2d8:	dfc00215 	stw	ra,8(sp)
   2a2dc:	dc000015 	stw	r16,0(sp)
   2a2e0:	20800830 	cmpltui	r2,r4,32
   2a2e4:	1c484a17 	ldw	r17,8488(r3)
   2a2e8:	10002526 	beq	r2,zero,2a380 <__sigtramp+0xb4>
   2a2ec:	88c0b717 	ldw	r3,732(r17)
   2a2f0:	2021883a 	mov	r16,r4
   2a2f4:	18001326 	beq	r3,zero,2a344 <__sigtramp+0x78>
   2a2f8:	800890ba 	slli	r4,r16,2
   2a2fc:	1907883a 	add	r3,r3,r4
   2a300:	18800017 	ldw	r2,0(r3)
   2a304:	10000d26 	beq	r2,zero,2a33c <__sigtramp+0x70>
   2a308:	113fffe0 	cmpeqi	r4,r2,-1
   2a30c:	20001a1e 	bne	r4,zero,2a378 <__sigtramp+0xac>
   2a310:	11000060 	cmpeqi	r4,r2,1
   2a314:	2000161e 	bne	r4,zero,2a370 <__sigtramp+0xa4>
   2a318:	18000015 	stw	zero,0(r3)
   2a31c:	8009883a 	mov	r4,r16
   2a320:	103ee83a 	callr	r2
   2a324:	0005883a 	mov	r2,zero
   2a328:	dfc00217 	ldw	ra,8(sp)
   2a32c:	dc400117 	ldw	r17,4(sp)
   2a330:	dc000017 	ldw	r16,0(sp)
   2a334:	dec00304 	addi	sp,sp,12
   2a338:	f800283a 	ret
   2a33c:	00800044 	movi	r2,1
   2a340:	003ff906 	br	2a328 <__sigtramp+0x5c>
   2a344:	01402004 	movi	r5,128
   2a348:	8809883a 	mov	r4,r17
   2a34c:	002582c0 	call	2582c <_malloc_r>
   2a350:	8880b715 	stw	r2,732(r17)
   2a354:	10000a26 	beq	r2,zero,2a380 <__sigtramp+0xb4>
   2a358:	01802004 	movi	r6,128
   2a35c:	000b883a 	mov	r5,zero
   2a360:	1009883a 	mov	r4,r2
   2a364:	00263080 	call	26308 <memset>
   2a368:	1007883a 	mov	r3,r2
   2a36c:	003fe206 	br	2a2f8 <__sigtramp+0x2c>
   2a370:	008000c4 	movi	r2,3
   2a374:	003fec06 	br	2a328 <__sigtramp+0x5c>
   2a378:	00800084 	movi	r2,2
   2a37c:	003fea06 	br	2a328 <__sigtramp+0x5c>
   2a380:	00bfffc4 	movi	r2,-1
   2a384:	003fe806 	br	2a328 <__sigtramp+0x5c>

0002a388 <_kill_r>:
   2a388:	2807883a 	mov	r3,r5
   2a38c:	defffe04 	addi	sp,sp,-8
   2a390:	dc000015 	stw	r16,0(sp)
   2a394:	008000f4 	movhi	r2,3
   2a398:	300b883a 	mov	r5,r6
   2a39c:	2021883a 	mov	r16,r4
   2a3a0:	1809883a 	mov	r4,r3
   2a3a4:	dfc00115 	stw	ra,4(sp)
   2a3a8:	100f5215 	stw	zero,15688(r2)
   2a3ac:	002d7c80 	call	2d7c8 <kill>
   2a3b0:	10ffffd8 	cmpnei	r3,r2,-1
   2a3b4:	18000426 	beq	r3,zero,2a3c8 <_kill_r+0x40>
   2a3b8:	dfc00117 	ldw	ra,4(sp)
   2a3bc:	dc000017 	ldw	r16,0(sp)
   2a3c0:	dec00204 	addi	sp,sp,8
   2a3c4:	f800283a 	ret
   2a3c8:	00c000f4 	movhi	r3,3
   2a3cc:	18cf5217 	ldw	r3,15688(r3)
   2a3d0:	183ff926 	beq	r3,zero,2a3b8 <_kill_r+0x30>
   2a3d4:	80c00015 	stw	r3,0(r16)
   2a3d8:	dfc00117 	ldw	ra,4(sp)
   2a3dc:	dc000017 	ldw	r16,0(sp)
   2a3e0:	dec00204 	addi	sp,sp,8
   2a3e4:	f800283a 	ret

0002a3e8 <_getpid_r>:
   2a3e8:	002d68c1 	jmpi	2d68c <getpid>

0002a3ec <__udivdi3>:
   2a3ec:	defff504 	addi	sp,sp,-44
   2a3f0:	dcc00415 	stw	r19,16(sp)
   2a3f4:	dc000115 	stw	r16,4(sp)
   2a3f8:	dfc00a15 	stw	ra,40(sp)
   2a3fc:	df000915 	stw	fp,36(sp)
   2a400:	ddc00815 	stw	r23,32(sp)
   2a404:	dd800715 	stw	r22,28(sp)
   2a408:	dd400615 	stw	r21,24(sp)
   2a40c:	dd000515 	stw	r20,20(sp)
   2a410:	dc800315 	stw	r18,12(sp)
   2a414:	dc400215 	stw	r17,8(sp)
   2a418:	2027883a 	mov	r19,r4
   2a41c:	2821883a 	mov	r16,r5
   2a420:	3800411e 	bne	r7,zero,2a528 <__udivdi3+0x13c>
   2a424:	3829883a 	mov	r20,r7
   2a428:	3023883a 	mov	r17,r6
   2a42c:	2025883a 	mov	r18,r4
   2a430:	29805d2e 	bgeu	r5,r6,2a5a8 <__udivdi3+0x1bc>
   2a434:	00bfffd4 	movui	r2,65535
   2a438:	282b883a 	mov	r21,r5
   2a43c:	1180a02e 	bgeu	r2,r6,2a6c0 <__udivdi3+0x2d4>
   2a440:	00804034 	movhi	r2,256
   2a444:	30813636 	bltu	r6,r2,2a920 <__udivdi3+0x534>
   2a448:	3006d63a 	srli	r3,r6,24
   2a44c:	05000604 	movi	r20,24
   2a450:	008000f4 	movhi	r2,3
   2a454:	1885883a 	add	r2,r3,r2
   2a458:	10811603 	ldbu	r2,1112(r2)
   2a45c:	00c00804 	movi	r3,32
   2a460:	1505883a 	add	r2,r2,r20
   2a464:	1889c83a 	sub	r4,r3,r2
   2a468:	18800526 	beq	r3,r2,2a480 <__udivdi3+0x94>
   2a46c:	8120983a 	sll	r16,r16,r4
   2a470:	9884d83a 	srl	r2,r19,r2
   2a474:	3122983a 	sll	r17,r6,r4
   2a478:	9924983a 	sll	r18,r19,r4
   2a47c:	142ab03a 	or	r21,r2,r16
   2a480:	882cd43a 	srli	r22,r17,16
   2a484:	a809883a 	mov	r4,r21
   2a488:	8d3fffcc 	andi	r20,r17,65535
   2a48c:	b00b883a 	mov	r5,r22
   2a490:	002075c0 	call	2075c <__umodsi3>
   2a494:	a809883a 	mov	r4,r21
   2a498:	b00b883a 	mov	r5,r22
   2a49c:	1027883a 	mov	r19,r2
   2a4a0:	00206f80 	call	206f8 <__udivsi3>
   2a4a4:	9826943a 	slli	r19,r19,16
   2a4a8:	9008d43a 	srli	r4,r18,16
   2a4ac:	1021883a 	mov	r16,r2
   2a4b0:	a085383a 	mul	r2,r20,r2
   2a4b4:	9908b03a 	or	r4,r19,r4
   2a4b8:	2080052e 	bgeu	r4,r2,2a4d0 <__udivdi3+0xe4>
   2a4bc:	2449883a 	add	r4,r4,r17
   2a4c0:	80ffffc4 	addi	r3,r16,-1
   2a4c4:	24400136 	bltu	r4,r17,2a4cc <__udivdi3+0xe0>
   2a4c8:	20812636 	bltu	r4,r2,2a964 <__udivdi3+0x578>
   2a4cc:	1821883a 	mov	r16,r3
   2a4d0:	20a7c83a 	sub	r19,r4,r2
   2a4d4:	9809883a 	mov	r4,r19
   2a4d8:	b00b883a 	mov	r5,r22
   2a4dc:	002075c0 	call	2075c <__umodsi3>
   2a4e0:	9809883a 	mov	r4,r19
   2a4e4:	b00b883a 	mov	r5,r22
   2a4e8:	1027883a 	mov	r19,r2
   2a4ec:	9826943a 	slli	r19,r19,16
   2a4f0:	00206f80 	call	206f8 <__udivsi3>
   2a4f4:	a0a9383a 	mul	r20,r20,r2
   2a4f8:	94bfffcc 	andi	r18,r18,65535
   2a4fc:	9ca4b03a 	or	r18,r19,r18
   2a500:	9500052e 	bgeu	r18,r20,2a518 <__udivdi3+0x12c>
   2a504:	8ca5883a 	add	r18,r17,r18
   2a508:	10ffffc4 	addi	r3,r2,-1
   2a50c:	94400136 	bltu	r18,r17,2a514 <__udivdi3+0x128>
   2a510:	95011236 	bltu	r18,r20,2a95c <__udivdi3+0x570>
   2a514:	1805883a 	mov	r2,r3
   2a518:	8020943a 	slli	r16,r16,16
   2a51c:	0007883a 	mov	r3,zero
   2a520:	8084b03a 	or	r2,r16,r2
   2a524:	00000306 	br	2a534 <__udivdi3+0x148>
   2a528:	29c00e2e 	bgeu	r5,r7,2a564 <__udivdi3+0x178>
   2a52c:	0007883a 	mov	r3,zero
   2a530:	0005883a 	mov	r2,zero
   2a534:	dfc00a17 	ldw	ra,40(sp)
   2a538:	df000917 	ldw	fp,36(sp)
   2a53c:	ddc00817 	ldw	r23,32(sp)
   2a540:	dd800717 	ldw	r22,28(sp)
   2a544:	dd400617 	ldw	r21,24(sp)
   2a548:	dd000517 	ldw	r20,20(sp)
   2a54c:	dcc00417 	ldw	r19,16(sp)
   2a550:	dc800317 	ldw	r18,12(sp)
   2a554:	dc400217 	ldw	r17,8(sp)
   2a558:	dc000117 	ldw	r16,4(sp)
   2a55c:	dec00b04 	addi	sp,sp,44
   2a560:	f800283a 	ret
   2a564:	00bfffd4 	movui	r2,65535
   2a568:	11c05a2e 	bgeu	r2,r7,2a6d4 <__udivdi3+0x2e8>
   2a56c:	00804034 	movhi	r2,256
   2a570:	3880dd36 	bltu	r7,r2,2a8e8 <__udivdi3+0x4fc>
   2a574:	3804d63a 	srli	r2,r7,24
   2a578:	01000604 	movi	r4,24
   2a57c:	00c000f4 	movhi	r3,3
   2a580:	10c7883a 	add	r3,r2,r3
   2a584:	18811603 	ldbu	r2,1112(r3)
   2a588:	00c00804 	movi	r3,32
   2a58c:	1105883a 	add	r2,r2,r4
   2a590:	18abc83a 	sub	r21,r3,r2
   2a594:	1880861e 	bne	r3,r2,2a7b0 <__udivdi3+0x3c4>
   2a598:	3c00d836 	bltu	r7,r16,2a8fc <__udivdi3+0x510>
   2a59c:	9985403a 	cmpgeu	r2,r19,r6
   2a5a0:	0007883a 	mov	r3,zero
   2a5a4:	003fe306 	br	2a534 <__udivdi3+0x148>
   2a5a8:	3000041e 	bne	r6,zero,2a5bc <__udivdi3+0x1d0>
   2a5ac:	000b883a 	mov	r5,zero
   2a5b0:	01000044 	movi	r4,1
   2a5b4:	00206f80 	call	206f8 <__udivsi3>
   2a5b8:	1023883a 	mov	r17,r2
   2a5bc:	00bfffd4 	movui	r2,65535
   2a5c0:	14403a2e 	bgeu	r2,r17,2a6ac <__udivdi3+0x2c0>
   2a5c4:	00804034 	movhi	r2,256
   2a5c8:	8880d236 	bltu	r17,r2,2a914 <__udivdi3+0x528>
   2a5cc:	8806d63a 	srli	r3,r17,24
   2a5d0:	05000604 	movi	r20,24
   2a5d4:	008000f4 	movhi	r2,3
   2a5d8:	1885883a 	add	r2,r3,r2
   2a5dc:	10811603 	ldbu	r2,1112(r2)
   2a5e0:	00c00804 	movi	r3,32
   2a5e4:	1505883a 	add	r2,r2,r20
   2a5e8:	188dc83a 	sub	r6,r3,r2
   2a5ec:	18803e1e 	bne	r3,r2,2a6e8 <__udivdi3+0x2fc>
   2a5f0:	882ad43a 	srli	r21,r17,16
   2a5f4:	8461c83a 	sub	r16,r16,r17
   2a5f8:	8cffffcc 	andi	r19,r17,65535
   2a5fc:	00c00044 	movi	r3,1
   2a600:	8009883a 	mov	r4,r16
   2a604:	a80b883a 	mov	r5,r21
   2a608:	d8c00015 	stw	r3,0(sp)
   2a60c:	002075c0 	call	2075c <__umodsi3>
   2a610:	8009883a 	mov	r4,r16
   2a614:	a80b883a 	mov	r5,r21
   2a618:	1021883a 	mov	r16,r2
   2a61c:	00206f80 	call	206f8 <__udivsi3>
   2a620:	8020943a 	slli	r16,r16,16
   2a624:	9008d43a 	srli	r4,r18,16
   2a628:	1029883a 	mov	r20,r2
   2a62c:	14c5383a 	mul	r2,r2,r19
   2a630:	8108b03a 	or	r4,r16,r4
   2a634:	d8c00017 	ldw	r3,0(sp)
   2a638:	2080052e 	bgeu	r4,r2,2a650 <__udivdi3+0x264>
   2a63c:	2449883a 	add	r4,r4,r17
   2a640:	a17fffc4 	addi	r5,r20,-1
   2a644:	24400136 	bltu	r4,r17,2a64c <__udivdi3+0x260>
   2a648:	2080c936 	bltu	r4,r2,2a970 <__udivdi3+0x584>
   2a64c:	2829883a 	mov	r20,r5
   2a650:	20a1c83a 	sub	r16,r4,r2
   2a654:	8009883a 	mov	r4,r16
   2a658:	a80b883a 	mov	r5,r21
   2a65c:	d8c00015 	stw	r3,0(sp)
   2a660:	002075c0 	call	2075c <__umodsi3>
   2a664:	8009883a 	mov	r4,r16
   2a668:	a80b883a 	mov	r5,r21
   2a66c:	1021883a 	mov	r16,r2
   2a670:	8020943a 	slli	r16,r16,16
   2a674:	00206f80 	call	206f8 <__udivsi3>
   2a678:	14e7383a 	mul	r19,r2,r19
   2a67c:	94bfffcc 	andi	r18,r18,65535
   2a680:	84a4b03a 	or	r18,r16,r18
   2a684:	d8c00017 	ldw	r3,0(sp)
   2a688:	94c0052e 	bgeu	r18,r19,2a6a0 <__udivdi3+0x2b4>
   2a68c:	8ca5883a 	add	r18,r17,r18
   2a690:	113fffc4 	addi	r4,r2,-1
   2a694:	94400136 	bltu	r18,r17,2a69c <__udivdi3+0x2b0>
   2a698:	94c0ae36 	bltu	r18,r19,2a954 <__udivdi3+0x568>
   2a69c:	2005883a 	mov	r2,r4
   2a6a0:	a00c943a 	slli	r6,r20,16
   2a6a4:	3084b03a 	or	r2,r6,r2
   2a6a8:	003fa206 	br	2a534 <__udivdi3+0x148>
   2a6ac:	88804030 	cmpltui	r2,r17,256
   2a6b0:	10009e1e 	bne	r2,zero,2a92c <__udivdi3+0x540>
   2a6b4:	8806d23a 	srli	r3,r17,8
   2a6b8:	05000204 	movi	r20,8
   2a6bc:	003fc506 	br	2a5d4 <__udivdi3+0x1e8>
   2a6c0:	30804030 	cmpltui	r2,r6,256
   2a6c4:	10008b1e 	bne	r2,zero,2a8f4 <__udivdi3+0x508>
   2a6c8:	3006d23a 	srli	r3,r6,8
   2a6cc:	05000204 	movi	r20,8
   2a6d0:	003f5f06 	br	2a450 <__udivdi3+0x64>
   2a6d4:	38804030 	cmpltui	r2,r7,256
   2a6d8:	10008b1e 	bne	r2,zero,2a908 <__udivdi3+0x51c>
   2a6dc:	3804d23a 	srli	r2,r7,8
   2a6e0:	01000204 	movi	r4,8
   2a6e4:	003fa506 	br	2a57c <__udivdi3+0x190>
   2a6e8:	89a2983a 	sll	r17,r17,r6
   2a6ec:	80acd83a 	srl	r22,r16,r2
   2a6f0:	81a0983a 	sll	r16,r16,r6
   2a6f4:	882ad43a 	srli	r21,r17,16
   2a6f8:	9884d83a 	srl	r2,r19,r2
   2a6fc:	b009883a 	mov	r4,r22
   2a700:	a80b883a 	mov	r5,r21
   2a704:	99a4983a 	sll	r18,r19,r6
   2a708:	1428b03a 	or	r20,r2,r16
   2a70c:	002075c0 	call	2075c <__umodsi3>
   2a710:	b009883a 	mov	r4,r22
   2a714:	a80b883a 	mov	r5,r21
   2a718:	1021883a 	mov	r16,r2
   2a71c:	00206f80 	call	206f8 <__udivsi3>
   2a720:	8008943a 	slli	r4,r16,16
   2a724:	a00ad43a 	srli	r5,r20,16
   2a728:	8cffffcc 	andi	r19,r17,65535
   2a72c:	98a1383a 	mul	r16,r19,r2
   2a730:	2148b03a 	or	r4,r4,r5
   2a734:	102d883a 	mov	r22,r2
   2a738:	2400062e 	bgeu	r4,r16,2a754 <__udivdi3+0x368>
   2a73c:	2449883a 	add	r4,r4,r17
   2a740:	10bfffc4 	addi	r2,r2,-1
   2a744:	24408136 	bltu	r4,r17,2a94c <__udivdi3+0x560>
   2a748:	2400802e 	bgeu	r4,r16,2a94c <__udivdi3+0x560>
   2a74c:	b5bfff84 	addi	r22,r22,-2
   2a750:	2449883a 	add	r4,r4,r17
   2a754:	2421c83a 	sub	r16,r4,r16
   2a758:	8009883a 	mov	r4,r16
   2a75c:	a80b883a 	mov	r5,r21
   2a760:	002075c0 	call	2075c <__umodsi3>
   2a764:	8009883a 	mov	r4,r16
   2a768:	a80b883a 	mov	r5,r21
   2a76c:	1021883a 	mov	r16,r2
   2a770:	8020943a 	slli	r16,r16,16
   2a774:	00206f80 	call	206f8 <__udivsi3>
   2a778:	9889383a 	mul	r4,r19,r2
   2a77c:	a53fffcc 	andi	r20,r20,65535
   2a780:	8520b03a 	or	r16,r16,r20
   2a784:	8100062e 	bgeu	r16,r4,2a7a0 <__udivdi3+0x3b4>
   2a788:	8461883a 	add	r16,r16,r17
   2a78c:	10ffffc4 	addi	r3,r2,-1
   2a790:	84406a36 	bltu	r16,r17,2a93c <__udivdi3+0x550>
   2a794:	8100692e 	bgeu	r16,r4,2a93c <__udivdi3+0x550>
   2a798:	10bfff84 	addi	r2,r2,-2
   2a79c:	8461883a 	add	r16,r16,r17
   2a7a0:	b006943a 	slli	r3,r22,16
   2a7a4:	8121c83a 	sub	r16,r16,r4
   2a7a8:	1886b03a 	or	r3,r3,r2
   2a7ac:	003f9406 	br	2a600 <__udivdi3+0x214>
   2a7b0:	30acd83a 	srl	r22,r6,r2
   2a7b4:	3d4e983a 	sll	r7,r7,r21
   2a7b8:	80a4d83a 	srl	r18,r16,r2
   2a7bc:	8546983a 	sll	r3,r16,r21
   2a7c0:	b1ecb03a 	or	r22,r22,r7
   2a7c4:	b038d43a 	srli	fp,r22,16
   2a7c8:	9884d83a 	srl	r2,r19,r2
   2a7cc:	9009883a 	mov	r4,r18
   2a7d0:	e00b883a 	mov	r5,fp
   2a7d4:	10e2b03a 	or	r17,r2,r3
   2a7d8:	3568983a 	sll	r20,r6,r21
   2a7dc:	002075c0 	call	2075c <__umodsi3>
   2a7e0:	9009883a 	mov	r4,r18
   2a7e4:	e00b883a 	mov	r5,fp
   2a7e8:	1025883a 	mov	r18,r2
   2a7ec:	00206f80 	call	206f8 <__udivsi3>
   2a7f0:	9008943a 	slli	r4,r18,16
   2a7f4:	8806d43a 	srli	r3,r17,16
   2a7f8:	b5ffffcc 	andi	r23,r22,65535
   2a7fc:	b8a5383a 	mul	r18,r23,r2
   2a800:	20c8b03a 	or	r4,r4,r3
   2a804:	1021883a 	mov	r16,r2
   2a808:	2480062e 	bgeu	r4,r18,2a824 <__udivdi3+0x438>
   2a80c:	2589883a 	add	r4,r4,r22
   2a810:	10bfffc4 	addi	r2,r2,-1
   2a814:	25804b36 	bltu	r4,r22,2a944 <__udivdi3+0x558>
   2a818:	24804a2e 	bgeu	r4,r18,2a944 <__udivdi3+0x558>
   2a81c:	843fff84 	addi	r16,r16,-2
   2a820:	2589883a 	add	r4,r4,r22
   2a824:	24a5c83a 	sub	r18,r4,r18
   2a828:	9009883a 	mov	r4,r18
   2a82c:	e00b883a 	mov	r5,fp
   2a830:	002075c0 	call	2075c <__umodsi3>
   2a834:	9009883a 	mov	r4,r18
   2a838:	e00b883a 	mov	r5,fp
   2a83c:	1025883a 	mov	r18,r2
   2a840:	9024943a 	slli	r18,r18,16
   2a844:	00206f80 	call	206f8 <__udivsi3>
   2a848:	b8af383a 	mul	r23,r23,r2
   2a84c:	8c7fffcc 	andi	r17,r17,65535
   2a850:	9462b03a 	or	r17,r18,r17
   2a854:	8dc0062e 	bgeu	r17,r23,2a870 <__udivdi3+0x484>
   2a858:	8da3883a 	add	r17,r17,r22
   2a85c:	10ffffc4 	addi	r3,r2,-1
   2a860:	8d803436 	bltu	r17,r22,2a934 <__udivdi3+0x548>
   2a864:	8dc0332e 	bgeu	r17,r23,2a934 <__udivdi3+0x548>
   2a868:	10bfff84 	addi	r2,r2,-2
   2a86c:	8da3883a 	add	r17,r17,r22
   2a870:	8020943a 	slli	r16,r16,16
   2a874:	10ffffcc 	andi	r3,r2,65535
   2a878:	a00ed43a 	srli	r7,r20,16
   2a87c:	8084b03a 	or	r2,r16,r2
   2a880:	1008d43a 	srli	r4,r2,16
   2a884:	a1bfffcc 	andi	r6,r20,65535
   2a888:	1991383a 	mul	r8,r3,r6
   2a88c:	218d383a 	mul	r6,r4,r6
   2a890:	19c7383a 	mul	r3,r3,r7
   2a894:	400ad43a 	srli	r5,r8,16
   2a898:	21c9383a 	mul	r4,r4,r7
   2a89c:	1987883a 	add	r3,r3,r6
   2a8a0:	28c7883a 	add	r3,r5,r3
   2a8a4:	8de3c83a 	sub	r17,r17,r23
   2a8a8:	1980022e 	bgeu	r3,r6,2a8b4 <__udivdi3+0x4c8>
   2a8ac:	01400074 	movhi	r5,1
   2a8b0:	2149883a 	add	r4,r4,r5
   2a8b4:	180ad43a 	srli	r5,r3,16
   2a8b8:	2909883a 	add	r4,r5,r4
   2a8bc:	89000836 	bltu	r17,r4,2a8e0 <__udivdi3+0x4f4>
   2a8c0:	89000226 	beq	r17,r4,2a8cc <__udivdi3+0x4e0>
   2a8c4:	0007883a 	mov	r3,zero
   2a8c8:	003f1a06 	br	2a534 <__udivdi3+0x148>
   2a8cc:	1806943a 	slli	r3,r3,16
   2a8d0:	9d4c983a 	sll	r6,r19,r21
   2a8d4:	423fffcc 	andi	r8,r8,65535
   2a8d8:	1a07883a 	add	r3,r3,r8
   2a8dc:	30fff92e 	bgeu	r6,r3,2a8c4 <__udivdi3+0x4d8>
   2a8e0:	10bfffc4 	addi	r2,r2,-1
   2a8e4:	003ff706 	br	2a8c4 <__udivdi3+0x4d8>
   2a8e8:	3804d43a 	srli	r2,r7,16
   2a8ec:	01000404 	movi	r4,16
   2a8f0:	003f2206 	br	2a57c <__udivdi3+0x190>
   2a8f4:	3007883a 	mov	r3,r6
   2a8f8:	003ed506 	br	2a450 <__udivdi3+0x64>
   2a8fc:	0007883a 	mov	r3,zero
   2a900:	00800044 	movi	r2,1
   2a904:	003f0b06 	br	2a534 <__udivdi3+0x148>
   2a908:	3805883a 	mov	r2,r7
   2a90c:	0009883a 	mov	r4,zero
   2a910:	003f1a06 	br	2a57c <__udivdi3+0x190>
   2a914:	8806d43a 	srli	r3,r17,16
   2a918:	05000404 	movi	r20,16
   2a91c:	003f2d06 	br	2a5d4 <__udivdi3+0x1e8>
   2a920:	3006d43a 	srli	r3,r6,16
   2a924:	05000404 	movi	r20,16
   2a928:	003ec906 	br	2a450 <__udivdi3+0x64>
   2a92c:	8807883a 	mov	r3,r17
   2a930:	003f2806 	br	2a5d4 <__udivdi3+0x1e8>
   2a934:	1805883a 	mov	r2,r3
   2a938:	003fcd06 	br	2a870 <__udivdi3+0x484>
   2a93c:	1805883a 	mov	r2,r3
   2a940:	003f9706 	br	2a7a0 <__udivdi3+0x3b4>
   2a944:	1021883a 	mov	r16,r2
   2a948:	003fb606 	br	2a824 <__udivdi3+0x438>
   2a94c:	102d883a 	mov	r22,r2
   2a950:	003f8006 	br	2a754 <__udivdi3+0x368>
   2a954:	10bfff84 	addi	r2,r2,-2
   2a958:	003f5106 	br	2a6a0 <__udivdi3+0x2b4>
   2a95c:	10bfff84 	addi	r2,r2,-2
   2a960:	003eed06 	br	2a518 <__udivdi3+0x12c>
   2a964:	843fff84 	addi	r16,r16,-2
   2a968:	2449883a 	add	r4,r4,r17
   2a96c:	003ed806 	br	2a4d0 <__udivdi3+0xe4>
   2a970:	a53fff84 	addi	r20,r20,-2
   2a974:	2449883a 	add	r4,r4,r17
   2a978:	003f3506 	br	2a650 <__udivdi3+0x264>

0002a97c <__umoddi3>:
   2a97c:	defff504 	addi	sp,sp,-44
   2a980:	dc400215 	stw	r17,8(sp)
   2a984:	dc000115 	stw	r16,4(sp)
   2a988:	dfc00a15 	stw	ra,40(sp)
   2a98c:	df000915 	stw	fp,36(sp)
   2a990:	ddc00815 	stw	r23,32(sp)
   2a994:	dd800715 	stw	r22,28(sp)
   2a998:	dd400615 	stw	r21,24(sp)
   2a99c:	dd000515 	stw	r20,20(sp)
   2a9a0:	dcc00415 	stw	r19,16(sp)
   2a9a4:	dc800315 	stw	r18,12(sp)
   2a9a8:	2823883a 	mov	r17,r5
   2a9ac:	2021883a 	mov	r16,r4
   2a9b0:	3800371e 	bne	r7,zero,2aa90 <__umoddi3+0x114>
   2a9b4:	3825883a 	mov	r18,r7
   2a9b8:	3029883a 	mov	r20,r6
   2a9bc:	2027883a 	mov	r19,r4
   2a9c0:	2980572e 	bgeu	r5,r6,2ab20 <__umoddi3+0x1a4>
   2a9c4:	00bfffd4 	movui	r2,65535
   2a9c8:	282b883a 	mov	r21,r5
   2a9cc:	1180922e 	bgeu	r2,r6,2ac18 <__umoddi3+0x29c>
   2a9d0:	00804034 	movhi	r2,256
   2a9d4:	30812036 	bltu	r6,r2,2ae58 <__umoddi3+0x4dc>
   2a9d8:	3006d63a 	srli	r3,r6,24
   2a9dc:	04800604 	movi	r18,24
   2a9e0:	008000f4 	movhi	r2,3
   2a9e4:	1885883a 	add	r2,r3,r2
   2a9e8:	10811603 	ldbu	r2,1112(r2)
   2a9ec:	00c00804 	movi	r3,32
   2a9f0:	1485883a 	add	r2,r2,r18
   2a9f4:	18a5c83a 	sub	r18,r3,r2
   2a9f8:	18800526 	beq	r3,r2,2aa10 <__umoddi3+0x94>
   2a9fc:	8ca2983a 	sll	r17,r17,r18
   2aa00:	8084d83a 	srl	r2,r16,r2
   2aa04:	34a8983a 	sll	r20,r6,r18
   2aa08:	84a6983a 	sll	r19,r16,r18
   2aa0c:	146ab03a 	or	r21,r2,r17
   2aa10:	a02cd43a 	srli	r22,r20,16
   2aa14:	a809883a 	mov	r4,r21
   2aa18:	a43fffcc 	andi	r16,r20,65535
   2aa1c:	b00b883a 	mov	r5,r22
   2aa20:	002075c0 	call	2075c <__umodsi3>
   2aa24:	a809883a 	mov	r4,r21
   2aa28:	b00b883a 	mov	r5,r22
   2aa2c:	1023883a 	mov	r17,r2
   2aa30:	00206f80 	call	206f8 <__udivsi3>
   2aa34:	8822943a 	slli	r17,r17,16
   2aa38:	9808d43a 	srli	r4,r19,16
   2aa3c:	80ab383a 	mul	r21,r16,r2
   2aa40:	8908b03a 	or	r4,r17,r4
   2aa44:	2540042e 	bgeu	r4,r21,2aa58 <__umoddi3+0xdc>
   2aa48:	2509883a 	add	r4,r4,r20
   2aa4c:	25000236 	bltu	r4,r20,2aa58 <__umoddi3+0xdc>
   2aa50:	2540012e 	bgeu	r4,r21,2aa58 <__umoddi3+0xdc>
   2aa54:	2509883a 	add	r4,r4,r20
   2aa58:	256bc83a 	sub	r21,r4,r21
   2aa5c:	b00b883a 	mov	r5,r22
   2aa60:	a809883a 	mov	r4,r21
   2aa64:	002075c0 	call	2075c <__umodsi3>
   2aa68:	1023883a 	mov	r17,r2
   2aa6c:	b00b883a 	mov	r5,r22
   2aa70:	a809883a 	mov	r4,r21
   2aa74:	00206f80 	call	206f8 <__udivsi3>
   2aa78:	8822943a 	slli	r17,r17,16
   2aa7c:	8085383a 	mul	r2,r16,r2
   2aa80:	98ffffcc 	andi	r3,r19,65535
   2aa84:	88c6b03a 	or	r3,r17,r3
   2aa88:	18805a2e 	bgeu	r3,r2,2abf4 <__umoddi3+0x278>
   2aa8c:	00005506 	br	2abe4 <__umoddi3+0x268>
   2aa90:	2005883a 	mov	r2,r4
   2aa94:	29c00d2e 	bgeu	r5,r7,2aacc <__umoddi3+0x150>
   2aa98:	2807883a 	mov	r3,r5
   2aa9c:	dfc00a17 	ldw	ra,40(sp)
   2aaa0:	df000917 	ldw	fp,36(sp)
   2aaa4:	ddc00817 	ldw	r23,32(sp)
   2aaa8:	dd800717 	ldw	r22,28(sp)
   2aaac:	dd400617 	ldw	r21,24(sp)
   2aab0:	dd000517 	ldw	r20,20(sp)
   2aab4:	dcc00417 	ldw	r19,16(sp)
   2aab8:	dc800317 	ldw	r18,12(sp)
   2aabc:	dc400217 	ldw	r17,8(sp)
   2aac0:	dc000117 	ldw	r16,4(sp)
   2aac4:	dec00b04 	addi	sp,sp,44
   2aac8:	f800283a 	ret
   2aacc:	013fffd4 	movui	r4,65535
   2aad0:	2807883a 	mov	r3,r5
   2aad4:	21c0552e 	bgeu	r4,r7,2ac2c <__umoddi3+0x2b0>
   2aad8:	01004034 	movhi	r4,256
   2aadc:	3900e336 	bltu	r7,r4,2ae6c <__umoddi3+0x4f0>
   2aae0:	3808d63a 	srli	r4,r7,24
   2aae4:	02000604 	movi	r8,24
   2aae8:	014000f4 	movhi	r5,3
   2aaec:	214b883a 	add	r5,r4,r5
   2aaf0:	2d411603 	ldbu	r21,1112(r5)
   2aaf4:	01000804 	movi	r4,32
   2aaf8:	aa2b883a 	add	r21,r21,r8
   2aafc:	2569c83a 	sub	r20,r4,r21
   2ab00:	25404f1e 	bne	r4,r21,2ac40 <__umoddi3+0x2c4>
   2ab04:	3c400136 	bltu	r7,r17,2ab0c <__umoddi3+0x190>
   2ab08:	81bfe436 	bltu	r16,r6,2aa9c <__umoddi3+0x120>
   2ab0c:	8185c83a 	sub	r2,r16,r6
   2ab10:	89cfc83a 	sub	r7,r17,r7
   2ab14:	8087803a 	cmpltu	r3,r16,r2
   2ab18:	38c7c83a 	sub	r3,r7,r3
   2ab1c:	003fdf06 	br	2aa9c <__umoddi3+0x120>
   2ab20:	3000041e 	bne	r6,zero,2ab34 <__umoddi3+0x1b8>
   2ab24:	000b883a 	mov	r5,zero
   2ab28:	01000044 	movi	r4,1
   2ab2c:	00206f80 	call	206f8 <__udivsi3>
   2ab30:	1029883a 	mov	r20,r2
   2ab34:	00bfffd4 	movui	r2,65535
   2ab38:	1500322e 	bgeu	r2,r20,2ac04 <__umoddi3+0x288>
   2ab3c:	00804034 	movhi	r2,256
   2ab40:	a080cd36 	bltu	r20,r2,2ae78 <__umoddi3+0x4fc>
   2ab44:	a006d63a 	srli	r3,r20,24
   2ab48:	04800604 	movi	r18,24
   2ab4c:	008000f4 	movhi	r2,3
   2ab50:	1885883a 	add	r2,r3,r2
   2ab54:	15811603 	ldbu	r22,1112(r2)
   2ab58:	00800804 	movi	r2,32
   2ab5c:	b4ad883a 	add	r22,r22,r18
   2ab60:	15a5c83a 	sub	r18,r2,r22
   2ab64:	15808a1e 	bne	r2,r22,2ad90 <__umoddi3+0x414>
   2ab68:	a02ed43a 	srli	r23,r20,16
   2ab6c:	8d23c83a 	sub	r17,r17,r20
   2ab70:	a57fffcc 	andi	r21,r20,65535
   2ab74:	b80b883a 	mov	r5,r23
   2ab78:	8809883a 	mov	r4,r17
   2ab7c:	002075c0 	call	2075c <__umodsi3>
   2ab80:	8809883a 	mov	r4,r17
   2ab84:	b80b883a 	mov	r5,r23
   2ab88:	102d883a 	mov	r22,r2
   2ab8c:	00206f80 	call	206f8 <__udivsi3>
   2ab90:	b02c943a 	slli	r22,r22,16
   2ab94:	9808d43a 	srli	r4,r19,16
   2ab98:	1561383a 	mul	r16,r2,r21
   2ab9c:	b108b03a 	or	r4,r22,r4
   2aba0:	2400032e 	bgeu	r4,r16,2abb0 <__umoddi3+0x234>
   2aba4:	2509883a 	add	r4,r4,r20
   2aba8:	25000136 	bltu	r4,r20,2abb0 <__umoddi3+0x234>
   2abac:	2400be36 	bltu	r4,r16,2aea8 <__umoddi3+0x52c>
   2abb0:	2421c83a 	sub	r16,r4,r16
   2abb4:	b80b883a 	mov	r5,r23
   2abb8:	8009883a 	mov	r4,r16
   2abbc:	002075c0 	call	2075c <__umodsi3>
   2abc0:	1023883a 	mov	r17,r2
   2abc4:	b80b883a 	mov	r5,r23
   2abc8:	8009883a 	mov	r4,r16
   2abcc:	00206f80 	call	206f8 <__udivsi3>
   2abd0:	8822943a 	slli	r17,r17,16
   2abd4:	1545383a 	mul	r2,r2,r21
   2abd8:	98ffffcc 	andi	r3,r19,65535
   2abdc:	88c6b03a 	or	r3,r17,r3
   2abe0:	1880042e 	bgeu	r3,r2,2abf4 <__umoddi3+0x278>
   2abe4:	1d07883a 	add	r3,r3,r20
   2abe8:	1d000236 	bltu	r3,r20,2abf4 <__umoddi3+0x278>
   2abec:	1880012e 	bgeu	r3,r2,2abf4 <__umoddi3+0x278>
   2abf0:	1d07883a 	add	r3,r3,r20
   2abf4:	1885c83a 	sub	r2,r3,r2
   2abf8:	1484d83a 	srl	r2,r2,r18
   2abfc:	0007883a 	mov	r3,zero
   2ac00:	003fa606 	br	2aa9c <__umoddi3+0x120>
   2ac04:	a0804030 	cmpltui	r2,r20,256
   2ac08:	10009e1e 	bne	r2,zero,2ae84 <__umoddi3+0x508>
   2ac0c:	a006d23a 	srli	r3,r20,8
   2ac10:	04800204 	movi	r18,8
   2ac14:	003fcd06 	br	2ab4c <__umoddi3+0x1d0>
   2ac18:	30804030 	cmpltui	r2,r6,256
   2ac1c:	1000911e 	bne	r2,zero,2ae64 <__umoddi3+0x4e8>
   2ac20:	3006d23a 	srli	r3,r6,8
   2ac24:	04800204 	movi	r18,8
   2ac28:	003f6d06 	br	2a9e0 <__umoddi3+0x64>
   2ac2c:	39004030 	cmpltui	r4,r7,256
   2ac30:	2000961e 	bne	r4,zero,2ae8c <__umoddi3+0x510>
   2ac34:	3808d23a 	srli	r4,r7,8
   2ac38:	02000204 	movi	r8,8
   2ac3c:	003faa06 	br	2aae8 <__umoddi3+0x16c>
   2ac40:	3d0e983a 	sll	r7,r7,r20
   2ac44:	3544d83a 	srl	r2,r6,r21
   2ac48:	8d64d83a 	srl	r18,r17,r21
   2ac4c:	8d22983a 	sll	r17,r17,r20
   2ac50:	11eeb03a 	or	r23,r2,r7
   2ac54:	b838d43a 	srli	fp,r23,16
   2ac58:	8544d83a 	srl	r2,r16,r21
   2ac5c:	9009883a 	mov	r4,r18
   2ac60:	e00b883a 	mov	r5,fp
   2ac64:	3526983a 	sll	r19,r6,r20
   2ac68:	1462b03a 	or	r17,r2,r17
   2ac6c:	002075c0 	call	2075c <__umodsi3>
   2ac70:	9009883a 	mov	r4,r18
   2ac74:	e00b883a 	mov	r5,fp
   2ac78:	1025883a 	mov	r18,r2
   2ac7c:	00206f80 	call	206f8 <__udivsi3>
   2ac80:	9008943a 	slli	r4,r18,16
   2ac84:	8806d43a 	srli	r3,r17,16
   2ac88:	b9ffffcc 	andi	r7,r23,65535
   2ac8c:	38a5383a 	mul	r18,r7,r2
   2ac90:	20c8b03a 	or	r4,r4,r3
   2ac94:	8520983a 	sll	r16,r16,r20
   2ac98:	102d883a 	mov	r22,r2
   2ac9c:	2480062e 	bgeu	r4,r18,2acb8 <__umoddi3+0x33c>
   2aca0:	25c9883a 	add	r4,r4,r23
   2aca4:	10bfffc4 	addi	r2,r2,-1
   2aca8:	25c07d36 	bltu	r4,r23,2aea0 <__umoddi3+0x524>
   2acac:	24807c2e 	bgeu	r4,r18,2aea0 <__umoddi3+0x524>
   2acb0:	b5bfff84 	addi	r22,r22,-2
   2acb4:	25c9883a 	add	r4,r4,r23
   2acb8:	24a5c83a 	sub	r18,r4,r18
   2acbc:	9009883a 	mov	r4,r18
   2acc0:	e00b883a 	mov	r5,fp
   2acc4:	d9c00015 	stw	r7,0(sp)
   2acc8:	002075c0 	call	2075c <__umodsi3>
   2accc:	9009883a 	mov	r4,r18
   2acd0:	e00b883a 	mov	r5,fp
   2acd4:	1025883a 	mov	r18,r2
   2acd8:	00206f80 	call	206f8 <__udivsi3>
   2acdc:	d9c00017 	ldw	r7,0(sp)
   2ace0:	9024943a 	slli	r18,r18,16
   2ace4:	8c7fffcc 	andi	r17,r17,65535
   2ace8:	388f383a 	mul	r7,r7,r2
   2acec:	9448b03a 	or	r4,r18,r17
   2acf0:	21c0062e 	bgeu	r4,r7,2ad0c <__umoddi3+0x390>
   2acf4:	25c9883a 	add	r4,r4,r23
   2acf8:	10ffffc4 	addi	r3,r2,-1
   2acfc:	25c06636 	bltu	r4,r23,2ae98 <__umoddi3+0x51c>
   2ad00:	21c0652e 	bgeu	r4,r7,2ae98 <__umoddi3+0x51c>
   2ad04:	10bfff84 	addi	r2,r2,-2
   2ad08:	25c9883a 	add	r4,r4,r23
   2ad0c:	b00a943a 	slli	r5,r22,16
   2ad10:	11bfffcc 	andi	r6,r2,65535
   2ad14:	9806d43a 	srli	r3,r19,16
   2ad18:	2884b03a 	or	r2,r5,r2
   2ad1c:	102cd43a 	srli	r22,r2,16
   2ad20:	997fffcc 	andi	r5,r19,65535
   2ad24:	3151383a 	mul	r8,r6,r5
   2ad28:	b14b383a 	mul	r5,r22,r5
   2ad2c:	30cd383a 	mul	r6,r6,r3
   2ad30:	4004d43a 	srli	r2,r8,16
   2ad34:	b0ed383a 	mul	r22,r22,r3
   2ad38:	314d883a 	add	r6,r6,r5
   2ad3c:	1185883a 	add	r2,r2,r6
   2ad40:	21c9c83a 	sub	r4,r4,r7
   2ad44:	1140022e 	bgeu	r2,r5,2ad50 <__umoddi3+0x3d4>
   2ad48:	00c00074 	movhi	r3,1
   2ad4c:	b0ed883a 	add	r22,r22,r3
   2ad50:	1006d43a 	srli	r3,r2,16
   2ad54:	1004943a 	slli	r2,r2,16
   2ad58:	423fffcc 	andi	r8,r8,65535
   2ad5c:	1dad883a 	add	r22,r3,r22
   2ad60:	1205883a 	add	r2,r2,r8
   2ad64:	25803636 	bltu	r4,r22,2ae40 <__umoddi3+0x4c4>
   2ad68:	25803426 	beq	r4,r22,2ae3c <__umoddi3+0x4c0>
   2ad6c:	8085c83a 	sub	r2,r16,r2
   2ad70:	8087803a 	cmpltu	r3,r16,r2
   2ad74:	2589c83a 	sub	r4,r4,r22
   2ad78:	20c7c83a 	sub	r3,r4,r3
   2ad7c:	1d60983a 	sll	r16,r3,r21
   2ad80:	1504d83a 	srl	r2,r2,r20
   2ad84:	1d06d83a 	srl	r3,r3,r20
   2ad88:	8084b03a 	or	r2,r16,r2
   2ad8c:	003f4306 	br	2aa9c <__umoddi3+0x120>
   2ad90:	a4a8983a 	sll	r20,r20,r18
   2ad94:	8daad83a 	srl	r21,r17,r22
   2ad98:	8ca2983a 	sll	r17,r17,r18
   2ad9c:	a02ed43a 	srli	r23,r20,16
   2ada0:	a809883a 	mov	r4,r21
   2ada4:	85acd83a 	srl	r22,r16,r22
   2ada8:	b80b883a 	mov	r5,r23
   2adac:	002075c0 	call	2075c <__umodsi3>
   2adb0:	a809883a 	mov	r4,r21
   2adb4:	b80b883a 	mov	r5,r23
   2adb8:	b46cb03a 	or	r22,r22,r17
   2adbc:	1027883a 	mov	r19,r2
   2adc0:	00206f80 	call	206f8 <__udivsi3>
   2adc4:	9826943a 	slli	r19,r19,16
   2adc8:	b008d43a 	srli	r4,r22,16
   2adcc:	a57fffcc 	andi	r21,r20,65535
   2add0:	a8a3383a 	mul	r17,r21,r2
   2add4:	9908b03a 	or	r4,r19,r4
   2add8:	84a6983a 	sll	r19,r16,r18
   2addc:	2440042e 	bgeu	r4,r17,2adf0 <__umoddi3+0x474>
   2ade0:	2509883a 	add	r4,r4,r20
   2ade4:	25000236 	bltu	r4,r20,2adf0 <__umoddi3+0x474>
   2ade8:	2440012e 	bgeu	r4,r17,2adf0 <__umoddi3+0x474>
   2adec:	2509883a 	add	r4,r4,r20
   2adf0:	2463c83a 	sub	r17,r4,r17
   2adf4:	8809883a 	mov	r4,r17
   2adf8:	b80b883a 	mov	r5,r23
   2adfc:	002075c0 	call	2075c <__umodsi3>
   2ae00:	1021883a 	mov	r16,r2
   2ae04:	8809883a 	mov	r4,r17
   2ae08:	b80b883a 	mov	r5,r23
   2ae0c:	8020943a 	slli	r16,r16,16
   2ae10:	00206f80 	call	206f8 <__udivsi3>
   2ae14:	a885383a 	mul	r2,r21,r2
   2ae18:	b47fffcc 	andi	r17,r22,65535
   2ae1c:	8462b03a 	or	r17,r16,r17
   2ae20:	8880042e 	bgeu	r17,r2,2ae34 <__umoddi3+0x4b8>
   2ae24:	8d23883a 	add	r17,r17,r20
   2ae28:	8d000236 	bltu	r17,r20,2ae34 <__umoddi3+0x4b8>
   2ae2c:	8880012e 	bgeu	r17,r2,2ae34 <__umoddi3+0x4b8>
   2ae30:	8d23883a 	add	r17,r17,r20
   2ae34:	88a3c83a 	sub	r17,r17,r2
   2ae38:	003f4e06 	br	2ab74 <__umoddi3+0x1f8>
   2ae3c:	80bfcb2e 	bgeu	r16,r2,2ad6c <__umoddi3+0x3f0>
   2ae40:	14e7c83a 	sub	r19,r2,r19
   2ae44:	14c5803a 	cmpltu	r2,r2,r19
   2ae48:	15c5883a 	add	r2,r2,r23
   2ae4c:	b0adc83a 	sub	r22,r22,r2
   2ae50:	9805883a 	mov	r2,r19
   2ae54:	003fc506 	br	2ad6c <__umoddi3+0x3f0>
   2ae58:	3006d43a 	srli	r3,r6,16
   2ae5c:	04800404 	movi	r18,16
   2ae60:	003edf06 	br	2a9e0 <__umoddi3+0x64>
   2ae64:	3007883a 	mov	r3,r6
   2ae68:	003edd06 	br	2a9e0 <__umoddi3+0x64>
   2ae6c:	3808d43a 	srli	r4,r7,16
   2ae70:	02000404 	movi	r8,16
   2ae74:	003f1c06 	br	2aae8 <__umoddi3+0x16c>
   2ae78:	a006d43a 	srli	r3,r20,16
   2ae7c:	04800404 	movi	r18,16
   2ae80:	003f3206 	br	2ab4c <__umoddi3+0x1d0>
   2ae84:	a007883a 	mov	r3,r20
   2ae88:	003f3006 	br	2ab4c <__umoddi3+0x1d0>
   2ae8c:	3809883a 	mov	r4,r7
   2ae90:	0011883a 	mov	r8,zero
   2ae94:	003f1406 	br	2aae8 <__umoddi3+0x16c>
   2ae98:	1805883a 	mov	r2,r3
   2ae9c:	003f9b06 	br	2ad0c <__umoddi3+0x390>
   2aea0:	102d883a 	mov	r22,r2
   2aea4:	003f8406 	br	2acb8 <__umoddi3+0x33c>
   2aea8:	2509883a 	add	r4,r4,r20
   2aeac:	003f4006 	br	2abb0 <__umoddi3+0x234>

0002aeb0 <__adddf3>:
   2aeb0:	02000434 	movhi	r8,16
   2aeb4:	423fffc4 	addi	r8,r8,-1
   2aeb8:	2806d53a 	srli	r3,r5,20
   2aebc:	3804d53a 	srli	r2,r7,20
   2aec0:	2a14703a 	and	r10,r5,r8
   2aec4:	3a12703a 	and	r9,r7,r8
   2aec8:	280ad7fa 	srli	r5,r5,31
   2aecc:	501490fa 	slli	r10,r10,3
   2aed0:	2018d77a 	srli	r12,r4,29
   2aed4:	481290fa 	slli	r9,r9,3
   2aed8:	3016d77a 	srli	r11,r6,29
   2aedc:	380ed7fa 	srli	r7,r7,31
   2aee0:	defffb04 	addi	sp,sp,-20
   2aee4:	dc800215 	stw	r18,8(sp)
   2aee8:	dc000015 	stw	r16,0(sp)
   2aeec:	1c81ffcc 	andi	r18,r3,2047
   2aef0:	1081ffcc 	andi	r2,r2,2047
   2aef4:	dfc00415 	stw	ra,16(sp)
   2aef8:	dcc00315 	stw	r19,12(sp)
   2aefc:	dc400115 	stw	r17,4(sp)
   2af00:	201c90fa 	slli	r14,r4,3
   2af04:	301a90fa 	slli	r13,r6,3
   2af08:	2821883a 	mov	r16,r5
   2af0c:	6294b03a 	or	r10,r12,r10
   2af10:	5a52b03a 	or	r9,r11,r9
   2af14:	9087c83a 	sub	r3,r18,r2
   2af18:	29c06126 	beq	r5,r7,2b0a0 <__adddf3+0x1f0>
   2af1c:	00c0550e 	bge	zero,r3,2b074 <__adddf3+0x1c4>
   2af20:	10007326 	beq	r2,zero,2b0f0 <__adddf3+0x240>
   2af24:	9081ffd8 	cmpnei	r2,r18,2047
   2af28:	1000b826 	beq	r2,zero,2b20c <__adddf3+0x35c>
   2af2c:	4a402034 	orhi	r9,r9,128
   2af30:	18800e48 	cmpgei	r2,r3,57
   2af34:	1000ee1e 	bne	r2,zero,2b2f0 <__adddf3+0x440>
   2af38:	18800808 	cmpgei	r2,r3,32
   2af3c:	10012d1e 	bne	r2,zero,2b3f4 <__adddf3+0x544>
   2af40:	00800804 	movi	r2,32
   2af44:	10c5c83a 	sub	r2,r2,r3
   2af48:	68c8d83a 	srl	r4,r13,r3
   2af4c:	48a2983a 	sll	r17,r9,r2
   2af50:	689a983a 	sll	r13,r13,r2
   2af54:	48c6d83a 	srl	r3,r9,r3
   2af58:	8922b03a 	or	r17,r17,r4
   2af5c:	681ac03a 	cmpne	r13,r13,zero
   2af60:	8b62b03a 	or	r17,r17,r13
   2af64:	50d5c83a 	sub	r10,r10,r3
   2af68:	7463c83a 	sub	r17,r14,r17
   2af6c:	7451803a 	cmpltu	r8,r14,r17
   2af70:	5211c83a 	sub	r8,r10,r8
   2af74:	4080202c 	andhi	r2,r8,128
   2af78:	10008826 	beq	r2,zero,2b19c <__adddf3+0x2ec>
   2af7c:	02402034 	movhi	r9,128
   2af80:	4a7fffc4 	addi	r9,r9,-1
   2af84:	4266703a 	and	r19,r8,r9
   2af88:	9800ae26 	beq	r19,zero,2b244 <__adddf3+0x394>
   2af8c:	9809883a 	mov	r4,r19
   2af90:	002d3dc0 	call	2d3dc <__clzsi2>
   2af94:	10fffe04 	addi	r3,r2,-8
   2af98:	02000804 	movi	r8,32
   2af9c:	40d1c83a 	sub	r8,r8,r3
   2afa0:	8a10d83a 	srl	r8,r17,r8
   2afa4:	98d2983a 	sll	r9,r19,r3
   2afa8:	88e2983a 	sll	r17,r17,r3
   2afac:	4250b03a 	or	r8,r8,r9
   2afb0:	1c80ad16 	blt	r3,r18,2b268 <__adddf3+0x3b8>
   2afb4:	1c87c83a 	sub	r3,r3,r18
   2afb8:	19000044 	addi	r4,r3,1
   2afbc:	20800808 	cmpgei	r2,r4,32
   2afc0:	10006a1e 	bne	r2,zero,2b16c <__adddf3+0x2bc>
   2afc4:	00800804 	movi	r2,32
   2afc8:	1105c83a 	sub	r2,r2,r4
   2afcc:	8906d83a 	srl	r3,r17,r4
   2afd0:	88a2983a 	sll	r17,r17,r2
   2afd4:	4084983a 	sll	r2,r8,r2
   2afd8:	4110d83a 	srl	r8,r8,r4
   2afdc:	8822c03a 	cmpne	r17,r17,zero
   2afe0:	10c4b03a 	or	r2,r2,r3
   2afe4:	1462b03a 	or	r17,r2,r17
   2afe8:	0025883a 	mov	r18,zero
   2afec:	888001cc 	andi	r2,r17,7
   2aff0:	10000726 	beq	r2,zero,2b010 <__adddf3+0x160>
   2aff4:	888003cc 	andi	r2,r17,15
   2aff8:	10800120 	cmpeqi	r2,r2,4
   2affc:	1000041e 	bne	r2,zero,2b010 <__adddf3+0x160>
   2b000:	88c00104 	addi	r3,r17,4
   2b004:	1c63803a 	cmpltu	r17,r3,r17
   2b008:	4451883a 	add	r8,r8,r17
   2b00c:	1823883a 	mov	r17,r3
   2b010:	4080202c 	andhi	r2,r8,128
   2b014:	10006326 	beq	r2,zero,2b1a4 <__adddf3+0x2f4>
   2b018:	90c00044 	addi	r3,r18,1
   2b01c:	1881ffe0 	cmpeqi	r2,r3,2047
   2b020:	18c1ffcc 	andi	r3,r3,2047
   2b024:	1000751e 	bne	r2,zero,2b1fc <__adddf3+0x34c>
   2b028:	00bfe034 	movhi	r2,65408
   2b02c:	10bfffc4 	addi	r2,r2,-1
   2b030:	4090703a 	and	r8,r8,r2
   2b034:	4004977a 	slli	r2,r8,29
   2b038:	4010927a 	slli	r8,r8,9
   2b03c:	8822d0fa 	srli	r17,r17,3
   2b040:	4010d33a 	srli	r8,r8,12
   2b044:	1444b03a 	or	r2,r2,r17
   2b048:	1806953a 	slli	r3,r3,20
   2b04c:	802097fa 	slli	r16,r16,31
   2b050:	1a06b03a 	or	r3,r3,r8
   2b054:	1c06b03a 	or	r3,r3,r16
   2b058:	dfc00417 	ldw	ra,16(sp)
   2b05c:	dcc00317 	ldw	r19,12(sp)
   2b060:	dc800217 	ldw	r18,8(sp)
   2b064:	dc400117 	ldw	r17,4(sp)
   2b068:	dc000017 	ldw	r16,0(sp)
   2b06c:	dec00504 	addi	sp,sp,20
   2b070:	f800283a 	ret
   2b074:	18002626 	beq	r3,zero,2b110 <__adddf3+0x260>
   2b078:	1487c83a 	sub	r3,r2,r18
   2b07c:	9000b51e 	bne	r18,zero,2b354 <__adddf3+0x4a4>
   2b080:	5388b03a 	or	r4,r10,r14
   2b084:	20010f26 	beq	r4,zero,2b4c4 <__adddf3+0x614>
   2b088:	193fffc4 	addi	r4,r3,-1
   2b08c:	20016126 	beq	r4,zero,2b614 <__adddf3+0x764>
   2b090:	18c1ffd8 	cmpnei	r3,r3,2047
   2b094:	18012e26 	beq	r3,zero,2b550 <__adddf3+0x6a0>
   2b098:	2007883a 	mov	r3,r4
   2b09c:	0000b006 	br	2b360 <__adddf3+0x4b0>
   2b0a0:	00c0760e 	bge	zero,r3,2b27c <__adddf3+0x3cc>
   2b0a4:	10002926 	beq	r2,zero,2b14c <__adddf3+0x29c>
   2b0a8:	9081ffd8 	cmpnei	r2,r18,2047
   2b0ac:	10012126 	beq	r2,zero,2b534 <__adddf3+0x684>
   2b0b0:	4a402034 	orhi	r9,r9,128
   2b0b4:	18800e48 	cmpgei	r2,r3,57
   2b0b8:	1000461e 	bne	r2,zero,2b1d4 <__adddf3+0x324>
   2b0bc:	18800808 	cmpgei	r2,r3,32
   2b0c0:	1000e326 	beq	r2,zero,2b450 <__adddf3+0x5a0>
   2b0c4:	1c7ff804 	addi	r17,r3,-32
   2b0c8:	19000820 	cmpeqi	r4,r3,32
   2b0cc:	4c44d83a 	srl	r2,r9,r17
   2b0d0:	2000041e 	bne	r4,zero,2b0e4 <__adddf3+0x234>
   2b0d4:	01001004 	movi	r4,64
   2b0d8:	20c7c83a 	sub	r3,r4,r3
   2b0dc:	48d2983a 	sll	r9,r9,r3
   2b0e0:	6a5ab03a 	or	r13,r13,r9
   2b0e4:	6822c03a 	cmpne	r17,r13,zero
   2b0e8:	88a2b03a 	or	r17,r17,r2
   2b0ec:	00003b06 	br	2b1dc <__adddf3+0x32c>
   2b0f0:	4b44b03a 	or	r2,r9,r13
   2b0f4:	10008126 	beq	r2,zero,2b2fc <__adddf3+0x44c>
   2b0f8:	18bfffc4 	addi	r2,r3,-1
   2b0fc:	10010726 	beq	r2,zero,2b51c <__adddf3+0x66c>
   2b100:	18c1ffd8 	cmpnei	r3,r3,2047
   2b104:	18004126 	beq	r3,zero,2b20c <__adddf3+0x35c>
   2b108:	1007883a 	mov	r3,r2
   2b10c:	003f8806 	br	2af30 <__adddf3+0x80>
   2b110:	90800044 	addi	r2,r18,1
   2b114:	1081ff8c 	andi	r2,r2,2046
   2b118:	1000a01e 	bne	r2,zero,2b39c <__adddf3+0x4ec>
   2b11c:	538ab03a 	or	r5,r10,r14
   2b120:	4b44b03a 	or	r2,r9,r13
   2b124:	9000ef1e 	bne	r18,zero,2b4e4 <__adddf3+0x634>
   2b128:	28014126 	beq	r5,zero,2b630 <__adddf3+0x780>
   2b12c:	1001491e 	bne	r2,zero,2b654 <__adddf3+0x7a4>
   2b130:	500a977a 	slli	r5,r10,29
   2b134:	00880034 	movhi	r2,8192
   2b138:	10bfffc4 	addi	r2,r2,-1
   2b13c:	2084703a 	and	r2,r4,r2
   2b140:	5014d0fa 	srli	r10,r10,3
   2b144:	1144b03a 	or	r2,r2,r5
   2b148:	00001d06 	br	2b1c0 <__adddf3+0x310>
   2b14c:	4b44b03a 	or	r2,r9,r13
   2b150:	10006a26 	beq	r2,zero,2b2fc <__adddf3+0x44c>
   2b154:	18bfffc4 	addi	r2,r3,-1
   2b158:	1000e826 	beq	r2,zero,2b4fc <__adddf3+0x64c>
   2b15c:	18c1ffd8 	cmpnei	r3,r3,2047
   2b160:	1800f426 	beq	r3,zero,2b534 <__adddf3+0x684>
   2b164:	1007883a 	mov	r3,r2
   2b168:	003fd206 	br	2b0b4 <__adddf3+0x204>
   2b16c:	18fff844 	addi	r3,r3,-31
   2b170:	20800820 	cmpeqi	r2,r4,32
   2b174:	40c6d83a 	srl	r3,r8,r3
   2b178:	1000041e 	bne	r2,zero,2b18c <__adddf3+0x2dc>
   2b17c:	00801004 	movi	r2,64
   2b180:	1109c83a 	sub	r4,r2,r4
   2b184:	4110983a 	sll	r8,r8,r4
   2b188:	8a22b03a 	or	r17,r17,r8
   2b18c:	8822c03a 	cmpne	r17,r17,zero
   2b190:	88e2b03a 	or	r17,r17,r3
   2b194:	0011883a 	mov	r8,zero
   2b198:	0025883a 	mov	r18,zero
   2b19c:	888001cc 	andi	r2,r17,7
   2b1a0:	103f941e 	bne	r2,zero,2aff4 <__adddf3+0x144>
   2b1a4:	8822d0fa 	srli	r17,r17,3
   2b1a8:	4004977a 	slli	r2,r8,29
   2b1ac:	4014d0fa 	srli	r10,r8,3
   2b1b0:	9007883a 	mov	r3,r18
   2b1b4:	8884b03a 	or	r2,r17,r2
   2b1b8:	1901ffe0 	cmpeqi	r4,r3,2047
   2b1bc:	2000191e 	bne	r4,zero,2b224 <__adddf3+0x374>
   2b1c0:	02000434 	movhi	r8,16
   2b1c4:	423fffc4 	addi	r8,r8,-1
   2b1c8:	5210703a 	and	r8,r10,r8
   2b1cc:	18c1ffcc 	andi	r3,r3,2047
   2b1d0:	003f9d06 	br	2b048 <__adddf3+0x198>
   2b1d4:	4b62b03a 	or	r17,r9,r13
   2b1d8:	8822c03a 	cmpne	r17,r17,zero
   2b1dc:	8ba3883a 	add	r17,r17,r14
   2b1e0:	8b91803a 	cmpltu	r8,r17,r14
   2b1e4:	4291883a 	add	r8,r8,r10
   2b1e8:	4080202c 	andhi	r2,r8,128
   2b1ec:	103feb26 	beq	r2,zero,2b19c <__adddf3+0x2ec>
   2b1f0:	94800044 	addi	r18,r18,1
   2b1f4:	9081ffe0 	cmpeqi	r2,r18,2047
   2b1f8:	10007426 	beq	r2,zero,2b3cc <__adddf3+0x51c>
   2b1fc:	00c1ffc4 	movi	r3,2047
   2b200:	0011883a 	mov	r8,zero
   2b204:	0005883a 	mov	r2,zero
   2b208:	003f8f06 	br	2b048 <__adddf3+0x198>
   2b20c:	500a977a 	slli	r5,r10,29
   2b210:	00c80034 	movhi	r3,8192
   2b214:	18ffffc4 	addi	r3,r3,-1
   2b218:	5014d0fa 	srli	r10,r10,3
   2b21c:	20c4703a 	and	r2,r4,r3
   2b220:	1144b03a 	or	r2,r2,r5
   2b224:	1286b03a 	or	r3,r2,r10
   2b228:	18015926 	beq	r3,zero,2b790 <__adddf3+0x8e0>
   2b22c:	00c00434 	movhi	r3,16
   2b230:	18ffffc4 	addi	r3,r3,-1
   2b234:	52000234 	orhi	r8,r10,8
   2b238:	40d0703a 	and	r8,r8,r3
   2b23c:	00c1ffc4 	movi	r3,2047
   2b240:	003f8106 	br	2b048 <__adddf3+0x198>
   2b244:	8809883a 	mov	r4,r17
   2b248:	002d3dc0 	call	2d3dc <__clzsi2>
   2b24c:	10c00604 	addi	r3,r2,24
   2b250:	19000808 	cmpgei	r4,r3,32
   2b254:	203f5026 	beq	r4,zero,2af98 <__adddf3+0xe8>
   2b258:	123ffe04 	addi	r8,r2,-8
   2b25c:	8a10983a 	sll	r8,r17,r8
   2b260:	0023883a 	mov	r17,zero
   2b264:	1cbf530e 	bge	r3,r18,2afb4 <__adddf3+0x104>
   2b268:	00bfe034 	movhi	r2,65408
   2b26c:	10bfffc4 	addi	r2,r2,-1
   2b270:	90e5c83a 	sub	r18,r18,r3
   2b274:	4090703a 	and	r8,r8,r2
   2b278:	003f5c06 	br	2afec <__adddf3+0x13c>
   2b27c:	18002626 	beq	r3,zero,2b318 <__adddf3+0x468>
   2b280:	1487c83a 	sub	r3,r2,r18
   2b284:	90006e1e 	bne	r18,zero,2b440 <__adddf3+0x590>
   2b288:	5388b03a 	or	r4,r10,r14
   2b28c:	2000fd26 	beq	r4,zero,2b684 <__adddf3+0x7d4>
   2b290:	193fffc4 	addi	r4,r3,-1
   2b294:	20013626 	beq	r4,zero,2b770 <__adddf3+0x8c0>
   2b298:	18c1ffd8 	cmpnei	r3,r3,2047
   2b29c:	1800b426 	beq	r3,zero,2b570 <__adddf3+0x6c0>
   2b2a0:	2007883a 	mov	r3,r4
   2b2a4:	19000e48 	cmpgei	r4,r3,57
   2b2a8:	2000b81e 	bne	r4,zero,2b58c <__adddf3+0x6dc>
   2b2ac:	19000808 	cmpgei	r4,r3,32
   2b2b0:	2001241e 	bne	r4,zero,2b744 <__adddf3+0x894>
   2b2b4:	01000804 	movi	r4,32
   2b2b8:	20c9c83a 	sub	r4,r4,r3
   2b2bc:	5122983a 	sll	r17,r10,r4
   2b2c0:	70cad83a 	srl	r5,r14,r3
   2b2c4:	7108983a 	sll	r4,r14,r4
   2b2c8:	50d4d83a 	srl	r10,r10,r3
   2b2cc:	8962b03a 	or	r17,r17,r5
   2b2d0:	2008c03a 	cmpne	r4,r4,zero
   2b2d4:	8922b03a 	or	r17,r17,r4
   2b2d8:	4a93883a 	add	r9,r9,r10
   2b2dc:	8b63883a 	add	r17,r17,r13
   2b2e0:	8b51803a 	cmpltu	r8,r17,r13
   2b2e4:	4251883a 	add	r8,r8,r9
   2b2e8:	1025883a 	mov	r18,r2
   2b2ec:	003fbe06 	br	2b1e8 <__adddf3+0x338>
   2b2f0:	4b62b03a 	or	r17,r9,r13
   2b2f4:	8822c03a 	cmpne	r17,r17,zero
   2b2f8:	003f1b06 	br	2af68 <__adddf3+0xb8>
   2b2fc:	500c977a 	slli	r6,r10,29
   2b300:	01480034 	movhi	r5,8192
   2b304:	297fffc4 	addi	r5,r5,-1
   2b308:	2144703a 	and	r2,r4,r5
   2b30c:	5014d0fa 	srli	r10,r10,3
   2b310:	3084b03a 	or	r2,r6,r2
   2b314:	003fa806 	br	2b1b8 <__adddf3+0x308>
   2b318:	90800044 	addi	r2,r18,1
   2b31c:	1141ff8c 	andi	r5,r2,2046
   2b320:	2800561e 	bne	r5,zero,2b47c <__adddf3+0x5cc>
   2b324:	5384b03a 	or	r2,r10,r14
   2b328:	9000a61e 	bne	r18,zero,2b5c4 <__adddf3+0x714>
   2b32c:	1000ee26 	beq	r2,zero,2b6e8 <__adddf3+0x838>
   2b330:	4b44b03a 	or	r2,r9,r13
   2b334:	1000f31e 	bne	r2,zero,2b704 <__adddf3+0x854>
   2b338:	5004977a 	slli	r2,r10,29
   2b33c:	01480034 	movhi	r5,8192
   2b340:	297fffc4 	addi	r5,r5,-1
   2b344:	2148703a 	and	r4,r4,r5
   2b348:	5014d0fa 	srli	r10,r10,3
   2b34c:	1104b03a 	or	r2,r2,r4
   2b350:	003f9b06 	br	2b1c0 <__adddf3+0x310>
   2b354:	1101ffd8 	cmpnei	r4,r2,2047
   2b358:	20007d26 	beq	r4,zero,2b550 <__adddf3+0x6a0>
   2b35c:	52802034 	orhi	r10,r10,128
   2b360:	19000e48 	cmpgei	r4,r3,57
   2b364:	20002e1e 	bne	r4,zero,2b420 <__adddf3+0x570>
   2b368:	19000808 	cmpgei	r4,r3,32
   2b36c:	20008a1e 	bne	r4,zero,2b598 <__adddf3+0x6e8>
   2b370:	01000804 	movi	r4,32
   2b374:	20c9c83a 	sub	r4,r4,r3
   2b378:	5122983a 	sll	r17,r10,r4
   2b37c:	70cad83a 	srl	r5,r14,r3
   2b380:	711c983a 	sll	r14,r14,r4
   2b384:	50d4d83a 	srl	r10,r10,r3
   2b388:	8962b03a 	or	r17,r17,r5
   2b38c:	701cc03a 	cmpne	r14,r14,zero
   2b390:	8ba2b03a 	or	r17,r17,r14
   2b394:	4a93c83a 	sub	r9,r9,r10
   2b398:	00002306 	br	2b428 <__adddf3+0x578>
   2b39c:	7363c83a 	sub	r17,r14,r13
   2b3a0:	5267c83a 	sub	r19,r10,r9
   2b3a4:	7451803a 	cmpltu	r8,r14,r17
   2b3a8:	9a27c83a 	sub	r19,r19,r8
   2b3ac:	9880202c 	andhi	r2,r19,128
   2b3b0:	10003e1e 	bne	r2,zero,2b4ac <__adddf3+0x5fc>
   2b3b4:	8cc4b03a 	or	r2,r17,r19
   2b3b8:	103ef31e 	bne	r2,zero,2af88 <__adddf3+0xd8>
   2b3bc:	0015883a 	mov	r10,zero
   2b3c0:	0021883a 	mov	r16,zero
   2b3c4:	003f7e06 	br	2b1c0 <__adddf3+0x310>
   2b3c8:	04800084 	movi	r18,2
   2b3cc:	00bfe034 	movhi	r2,65408
   2b3d0:	10bfffc4 	addi	r2,r2,-1
   2b3d4:	8806d07a 	srli	r3,r17,1
   2b3d8:	4090703a 	and	r8,r8,r2
   2b3dc:	400497fa 	slli	r2,r8,31
   2b3e0:	8c40004c 	andi	r17,r17,1
   2b3e4:	1c62b03a 	or	r17,r3,r17
   2b3e8:	4010d07a 	srli	r8,r8,1
   2b3ec:	1462b03a 	or	r17,r2,r17
   2b3f0:	003efe06 	br	2afec <__adddf3+0x13c>
   2b3f4:	1c7ff804 	addi	r17,r3,-32
   2b3f8:	19000820 	cmpeqi	r4,r3,32
   2b3fc:	4c44d83a 	srl	r2,r9,r17
   2b400:	2000041e 	bne	r4,zero,2b414 <__adddf3+0x564>
   2b404:	01001004 	movi	r4,64
   2b408:	20c7c83a 	sub	r3,r4,r3
   2b40c:	48d2983a 	sll	r9,r9,r3
   2b410:	6a5ab03a 	or	r13,r13,r9
   2b414:	6822c03a 	cmpne	r17,r13,zero
   2b418:	88a2b03a 	or	r17,r17,r2
   2b41c:	003ed206 	br	2af68 <__adddf3+0xb8>
   2b420:	5394b03a 	or	r10,r10,r14
   2b424:	5022c03a 	cmpne	r17,r10,zero
   2b428:	6c63c83a 	sub	r17,r13,r17
   2b42c:	6c51803a 	cmpltu	r8,r13,r17
   2b430:	4a11c83a 	sub	r8,r9,r8
   2b434:	3821883a 	mov	r16,r7
   2b438:	1025883a 	mov	r18,r2
   2b43c:	003ecd06 	br	2af74 <__adddf3+0xc4>
   2b440:	1101ffd8 	cmpnei	r4,r2,2047
   2b444:	20004a26 	beq	r4,zero,2b570 <__adddf3+0x6c0>
   2b448:	52802034 	orhi	r10,r10,128
   2b44c:	003f9506 	br	2b2a4 <__adddf3+0x3f4>
   2b450:	00800804 	movi	r2,32
   2b454:	10c5c83a 	sub	r2,r2,r3
   2b458:	68c8d83a 	srl	r4,r13,r3
   2b45c:	48a2983a 	sll	r17,r9,r2
   2b460:	689a983a 	sll	r13,r13,r2
   2b464:	48c6d83a 	srl	r3,r9,r3
   2b468:	8922b03a 	or	r17,r17,r4
   2b46c:	681ac03a 	cmpne	r13,r13,zero
   2b470:	8b62b03a 	or	r17,r17,r13
   2b474:	50d5883a 	add	r10,r10,r3
   2b478:	003f5806 	br	2b1dc <__adddf3+0x32c>
   2b47c:	10c1ffe0 	cmpeqi	r3,r2,2047
   2b480:	183f5e1e 	bne	r3,zero,2b1fc <__adddf3+0x34c>
   2b484:	7351883a 	add	r8,r14,r13
   2b488:	4387803a 	cmpltu	r3,r8,r14
   2b48c:	5255883a 	add	r10,r10,r9
   2b490:	50c7883a 	add	r3,r10,r3
   2b494:	401ad07a 	srli	r13,r8,1
   2b498:	182297fa 	slli	r17,r3,31
   2b49c:	1810d07a 	srli	r8,r3,1
   2b4a0:	1025883a 	mov	r18,r2
   2b4a4:	8b62b03a 	or	r17,r17,r13
   2b4a8:	003f3c06 	br	2b19c <__adddf3+0x2ec>
   2b4ac:	6ba3c83a 	sub	r17,r13,r14
   2b4b0:	4a93c83a 	sub	r9,r9,r10
   2b4b4:	6c51803a 	cmpltu	r8,r13,r17
   2b4b8:	4a27c83a 	sub	r19,r9,r8
   2b4bc:	3821883a 	mov	r16,r7
   2b4c0:	003eb106 	br	2af88 <__adddf3+0xd8>
   2b4c4:	480a977a 	slli	r5,r9,29
   2b4c8:	01080034 	movhi	r4,8192
   2b4cc:	213fffc4 	addi	r4,r4,-1
   2b4d0:	3104703a 	and	r2,r6,r4
   2b4d4:	4814d0fa 	srli	r10,r9,3
   2b4d8:	1144b03a 	or	r2,r2,r5
   2b4dc:	3821883a 	mov	r16,r7
   2b4e0:	003f3506 	br	2b1b8 <__adddf3+0x308>
   2b4e4:	28006e1e 	bne	r5,zero,2b6a0 <__adddf3+0x7f0>
   2b4e8:	1000191e 	bne	r2,zero,2b550 <__adddf3+0x6a0>
   2b4ec:	0021883a 	mov	r16,zero
   2b4f0:	4015883a 	mov	r10,r8
   2b4f4:	00bfffc4 	movi	r2,-1
   2b4f8:	003f4c06 	br	2b22c <__adddf3+0x37c>
   2b4fc:	7363883a 	add	r17,r14,r13
   2b500:	5255883a 	add	r10,r10,r9
   2b504:	8b91803a 	cmpltu	r8,r17,r14
   2b508:	5211883a 	add	r8,r10,r8
   2b50c:	4080202c 	andhi	r2,r8,128
   2b510:	103fad1e 	bne	r2,zero,2b3c8 <__adddf3+0x518>
   2b514:	04800044 	movi	r18,1
   2b518:	003f2006 	br	2b19c <__adddf3+0x2ec>
   2b51c:	7363c83a 	sub	r17,r14,r13
   2b520:	5255c83a 	sub	r10,r10,r9
   2b524:	7451803a 	cmpltu	r8,r14,r17
   2b528:	5211c83a 	sub	r8,r10,r8
   2b52c:	04800044 	movi	r18,1
   2b530:	003e9006 	br	2af74 <__adddf3+0xc4>
   2b534:	5004977a 	slli	r2,r10,29
   2b538:	00c80034 	movhi	r3,8192
   2b53c:	18ffffc4 	addi	r3,r3,-1
   2b540:	20c8703a 	and	r4,r4,r3
   2b544:	5014d0fa 	srli	r10,r10,3
   2b548:	1104b03a 	or	r2,r2,r4
   2b54c:	003f3506 	br	2b224 <__adddf3+0x374>
   2b550:	4806977a 	slli	r3,r9,29
   2b554:	00880034 	movhi	r2,8192
   2b558:	10bfffc4 	addi	r2,r2,-1
   2b55c:	3084703a 	and	r2,r6,r2
   2b560:	4814d0fa 	srli	r10,r9,3
   2b564:	10c4b03a 	or	r2,r2,r3
   2b568:	3821883a 	mov	r16,r7
   2b56c:	003f2d06 	br	2b224 <__adddf3+0x374>
   2b570:	4804977a 	slli	r2,r9,29
   2b574:	00c80034 	movhi	r3,8192
   2b578:	18ffffc4 	addi	r3,r3,-1
   2b57c:	30cc703a 	and	r6,r6,r3
   2b580:	4814d0fa 	srli	r10,r9,3
   2b584:	1184b03a 	or	r2,r2,r6
   2b588:	003f2606 	br	2b224 <__adddf3+0x374>
   2b58c:	5394b03a 	or	r10,r10,r14
   2b590:	5022c03a 	cmpne	r17,r10,zero
   2b594:	003f5106 	br	2b2dc <__adddf3+0x42c>
   2b598:	1c7ff804 	addi	r17,r3,-32
   2b59c:	19400820 	cmpeqi	r5,r3,32
   2b5a0:	5448d83a 	srl	r4,r10,r17
   2b5a4:	2800041e 	bne	r5,zero,2b5b8 <__adddf3+0x708>
   2b5a8:	01401004 	movi	r5,64
   2b5ac:	28c7c83a 	sub	r3,r5,r3
   2b5b0:	50d4983a 	sll	r10,r10,r3
   2b5b4:	729cb03a 	or	r14,r14,r10
   2b5b8:	7022c03a 	cmpne	r17,r14,zero
   2b5bc:	8922b03a 	or	r17,r17,r4
   2b5c0:	003f9906 	br	2b428 <__adddf3+0x578>
   2b5c4:	103fea26 	beq	r2,zero,2b570 <__adddf3+0x6c0>
   2b5c8:	4b50b03a 	or	r8,r9,r13
   2b5cc:	500a977a 	slli	r5,r10,29
   2b5d0:	5014d0fa 	srli	r10,r10,3
   2b5d4:	40005626 	beq	r8,zero,2b730 <__adddf3+0x880>
   2b5d8:	00c80034 	movhi	r3,8192
   2b5dc:	18ffffc4 	addi	r3,r3,-1
   2b5e0:	20c4703a 	and	r2,r4,r3
   2b5e4:	5100022c 	andhi	r4,r10,8
   2b5e8:	1144b03a 	or	r2,r2,r5
   2b5ec:	203f0d26 	beq	r4,zero,2b224 <__adddf3+0x374>
   2b5f0:	4808d0fa 	srli	r4,r9,3
   2b5f4:	2140022c 	andhi	r5,r4,8
   2b5f8:	283f0a1e 	bne	r5,zero,2b224 <__adddf3+0x374>
   2b5fc:	4804977a 	slli	r2,r9,29
   2b600:	30cc703a 	and	r6,r6,r3
   2b604:	3821883a 	mov	r16,r7
   2b608:	3084b03a 	or	r2,r6,r2
   2b60c:	2015883a 	mov	r10,r4
   2b610:	003f0406 	br	2b224 <__adddf3+0x374>
   2b614:	6ba3c83a 	sub	r17,r13,r14
   2b618:	4a95c83a 	sub	r10,r9,r10
   2b61c:	6c51803a 	cmpltu	r8,r13,r17
   2b620:	5211c83a 	sub	r8,r10,r8
   2b624:	3821883a 	mov	r16,r7
   2b628:	04800044 	movi	r18,1
   2b62c:	003e5106 	br	2af74 <__adddf3+0xc4>
   2b630:	103f6226 	beq	r2,zero,2b3bc <__adddf3+0x50c>
   2b634:	4808977a 	slli	r4,r9,29
   2b638:	00880034 	movhi	r2,8192
   2b63c:	10bfffc4 	addi	r2,r2,-1
   2b640:	3084703a 	and	r2,r6,r2
   2b644:	4814d0fa 	srli	r10,r9,3
   2b648:	1104b03a 	or	r2,r2,r4
   2b64c:	3821883a 	mov	r16,r7
   2b650:	003edb06 	br	2b1c0 <__adddf3+0x310>
   2b654:	7363c83a 	sub	r17,r14,r13
   2b658:	7445803a 	cmpltu	r2,r14,r17
   2b65c:	5251c83a 	sub	r8,r10,r9
   2b660:	4091c83a 	sub	r8,r8,r2
   2b664:	4080202c 	andhi	r2,r8,128
   2b668:	10004626 	beq	r2,zero,2b784 <__adddf3+0x8d4>
   2b66c:	6ba3c83a 	sub	r17,r13,r14
   2b670:	4a95c83a 	sub	r10,r9,r10
   2b674:	6c51803a 	cmpltu	r8,r13,r17
   2b678:	5211c83a 	sub	r8,r10,r8
   2b67c:	3821883a 	mov	r16,r7
   2b680:	003e5a06 	br	2afec <__adddf3+0x13c>
   2b684:	4804977a 	slli	r2,r9,29
   2b688:	01080034 	movhi	r4,8192
   2b68c:	213fffc4 	addi	r4,r4,-1
   2b690:	310c703a 	and	r6,r6,r4
   2b694:	4814d0fa 	srli	r10,r9,3
   2b698:	1184b03a 	or	r2,r2,r6
   2b69c:	003ec606 	br	2b1b8 <__adddf3+0x308>
   2b6a0:	500a977a 	slli	r5,r10,29
   2b6a4:	5014d0fa 	srli	r10,r10,3
   2b6a8:	10002126 	beq	r2,zero,2b730 <__adddf3+0x880>
   2b6ac:	00c80034 	movhi	r3,8192
   2b6b0:	18ffffc4 	addi	r3,r3,-1
   2b6b4:	20c4703a 	and	r2,r4,r3
   2b6b8:	5100022c 	andhi	r4,r10,8
   2b6bc:	1144b03a 	or	r2,r2,r5
   2b6c0:	203ed826 	beq	r4,zero,2b224 <__adddf3+0x374>
   2b6c4:	4808d0fa 	srli	r4,r9,3
   2b6c8:	2140022c 	andhi	r5,r4,8
   2b6cc:	283ed51e 	bne	r5,zero,2b224 <__adddf3+0x374>
   2b6d0:	4812977a 	slli	r9,r9,29
   2b6d4:	30c4703a 	and	r2,r6,r3
   2b6d8:	3821883a 	mov	r16,r7
   2b6dc:	1244b03a 	or	r2,r2,r9
   2b6e0:	2015883a 	mov	r10,r4
   2b6e4:	003ecf06 	br	2b224 <__adddf3+0x374>
   2b6e8:	4804977a 	slli	r2,r9,29
   2b6ec:	01080034 	movhi	r4,8192
   2b6f0:	213fffc4 	addi	r4,r4,-1
   2b6f4:	310c703a 	and	r6,r6,r4
   2b6f8:	4814d0fa 	srli	r10,r9,3
   2b6fc:	1184b03a 	or	r2,r2,r6
   2b700:	003eaf06 	br	2b1c0 <__adddf3+0x310>
   2b704:	7363883a 	add	r17,r14,r13
   2b708:	5255883a 	add	r10,r10,r9
   2b70c:	8b91803a 	cmpltu	r8,r17,r14
   2b710:	5211883a 	add	r8,r10,r8
   2b714:	4080202c 	andhi	r2,r8,128
   2b718:	103ea026 	beq	r2,zero,2b19c <__adddf3+0x2ec>
   2b71c:	00bfe034 	movhi	r2,65408
   2b720:	10bfffc4 	addi	r2,r2,-1
   2b724:	4090703a 	and	r8,r8,r2
   2b728:	04800044 	movi	r18,1
   2b72c:	003e9b06 	br	2b19c <__adddf3+0x2ec>
   2b730:	00880034 	movhi	r2,8192
   2b734:	10bfffc4 	addi	r2,r2,-1
   2b738:	2084703a 	and	r2,r4,r2
   2b73c:	1144b03a 	or	r2,r2,r5
   2b740:	003eb806 	br	2b224 <__adddf3+0x374>
   2b744:	193ff804 	addi	r4,r3,-32
   2b748:	19400820 	cmpeqi	r5,r3,32
   2b74c:	5108d83a 	srl	r4,r10,r4
   2b750:	2800041e 	bne	r5,zero,2b764 <__adddf3+0x8b4>
   2b754:	01401004 	movi	r5,64
   2b758:	28c7c83a 	sub	r3,r5,r3
   2b75c:	50d4983a 	sll	r10,r10,r3
   2b760:	729cb03a 	or	r14,r14,r10
   2b764:	7022c03a 	cmpne	r17,r14,zero
   2b768:	8922b03a 	or	r17,r17,r4
   2b76c:	003edb06 	br	2b2dc <__adddf3+0x42c>
   2b770:	7363883a 	add	r17,r14,r13
   2b774:	5255883a 	add	r10,r10,r9
   2b778:	8b51803a 	cmpltu	r8,r17,r13
   2b77c:	5211883a 	add	r8,r10,r8
   2b780:	003f6206 	br	2b50c <__adddf3+0x65c>
   2b784:	8a04b03a 	or	r2,r17,r8
   2b788:	103f0c26 	beq	r2,zero,2b3bc <__adddf3+0x50c>
   2b78c:	003e8306 	br	2b19c <__adddf3+0x2ec>
   2b790:	0005883a 	mov	r2,zero
   2b794:	00c1ffc4 	movi	r3,2047
   2b798:	0011883a 	mov	r8,zero
   2b79c:	003e2a06 	br	2b048 <__adddf3+0x198>

0002b7a0 <__divdf3>:
   2b7a0:	2804d53a 	srli	r2,r5,20
   2b7a4:	defff304 	addi	sp,sp,-52
   2b7a8:	dc000315 	stw	r16,12(sp)
   2b7ac:	04000434 	movhi	r16,16
   2b7b0:	ddc00a15 	stw	r23,40(sp)
   2b7b4:	dd800915 	stw	r22,36(sp)
   2b7b8:	dc800515 	stw	r18,20(sp)
   2b7bc:	843fffc4 	addi	r16,r16,-1
   2b7c0:	dfc00c15 	stw	ra,48(sp)
   2b7c4:	df000b15 	stw	fp,44(sp)
   2b7c8:	dd400815 	stw	r21,32(sp)
   2b7cc:	dd000715 	stw	r20,28(sp)
   2b7d0:	dcc00615 	stw	r19,24(sp)
   2b7d4:	dc400415 	stw	r17,16(sp)
   2b7d8:	1081ffcc 	andi	r2,r2,2047
   2b7dc:	282cd7fa 	srli	r22,r5,31
   2b7e0:	302f883a 	mov	r23,r6
   2b7e4:	2025883a 	mov	r18,r4
   2b7e8:	2c20703a 	and	r16,r5,r16
   2b7ec:	10010d26 	beq	r2,zero,2bc24 <__divdf3+0x484>
   2b7f0:	10c1ffe0 	cmpeqi	r3,r2,2047
   2b7f4:	1801201e 	bne	r3,zero,2bc78 <__divdf3+0x4d8>
   2b7f8:	2028d77a 	srli	r20,r4,29
   2b7fc:	800a90fa 	slli	r5,r16,3
   2b800:	202490fa 	slli	r18,r4,3
   2b804:	14ff0044 	addi	r19,r2,-1023
   2b808:	a14ab03a 	or	r5,r20,r5
   2b80c:	2d002034 	orhi	r20,r5,128
   2b810:	0021883a 	mov	r16,zero
   2b814:	0039883a 	mov	fp,zero
   2b818:	3804d53a 	srli	r2,r7,20
   2b81c:	00c00434 	movhi	r3,16
   2b820:	18ffffc4 	addi	r3,r3,-1
   2b824:	1081ffcc 	andi	r2,r2,2047
   2b828:	3810d7fa 	srli	r8,r7,31
   2b82c:	38e2703a 	and	r17,r7,r3
   2b830:	1000e926 	beq	r2,zero,2bbd8 <__divdf3+0x438>
   2b834:	10c1ffe0 	cmpeqi	r3,r2,2047
   2b838:	1801161e 	bne	r3,zero,2bc94 <__divdf3+0x4f4>
   2b83c:	880690fa 	slli	r3,r17,3
   2b840:	b822d77a 	srli	r17,r23,29
   2b844:	b81290fa 	slli	r9,r23,3
   2b848:	10bf0044 	addi	r2,r2,-1023
   2b84c:	88c6b03a 	or	r3,r17,r3
   2b850:	1c402034 	orhi	r17,r3,128
   2b854:	98a7c83a 	sub	r19,r19,r2
   2b858:	0007883a 	mov	r3,zero
   2b85c:	80800428 	cmpgeui	r2,r16,16
   2b860:	b22af03a 	xor	r21,r22,r8
   2b864:	1000391e 	bne	r2,zero,2b94c <__divdf3+0x1ac>
   2b868:	800490ba 	slli	r2,r16,2
   2b86c:	018000f4 	movhi	r6,3
   2b870:	118d883a 	add	r6,r2,r6
   2b874:	30ae1f17 	ldw	r2,-18308(r6)
   2b878:	1000683a 	jmp	r2
   2b87c:	0002b94c 	andi	zero,zero,2789
   2b880:	0002b928 	cmpgeui	zero,zero,2788
   2b884:	0002b8d8 	cmpnei	zero,zero,2787
   2b888:	0002b938 	rdprs	zero,zero,2788
   2b88c:	0002b8d8 	cmpnei	zero,zero,2787
   2b890:	0002bcf8 	rdprs	zero,zero,2803
   2b894:	0002b8d8 	cmpnei	zero,zero,2787
   2b898:	0002b938 	rdprs	zero,zero,2788
   2b89c:	0002b928 	cmpgeui	zero,zero,2788
   2b8a0:	0002b928 	cmpgeui	zero,zero,2788
   2b8a4:	0002bcf8 	rdprs	zero,zero,2803
   2b8a8:	0002b938 	rdprs	zero,zero,2788
   2b8ac:	0002b8bc 	xorhi	zero,zero,2786
   2b8b0:	0002b8bc 	xorhi	zero,zero,2786
   2b8b4:	0002b8bc 	xorhi	zero,zero,2786
   2b8b8:	0002bd88 	cmpgei	zero,zero,2806
   2b8bc:	b02b883a 	mov	r21,r22
   2b8c0:	e08000a0 	cmpeqi	r2,fp,2
   2b8c4:	1000181e 	bne	r2,zero,2b928 <__divdf3+0x188>
   2b8c8:	e08000e0 	cmpeqi	r2,fp,3
   2b8cc:	1001bf1e 	bne	r2,zero,2bfcc <__divdf3+0x82c>
   2b8d0:	e0800060 	cmpeqi	r2,fp,1
   2b8d4:	1000ad26 	beq	r2,zero,2bb8c <__divdf3+0x3ec>
   2b8d8:	0007883a 	mov	r3,zero
   2b8dc:	000b883a 	mov	r5,zero
   2b8e0:	0025883a 	mov	r18,zero
   2b8e4:	1806953a 	slli	r3,r3,20
   2b8e8:	a82a97fa 	slli	r21,r21,31
   2b8ec:	9005883a 	mov	r2,r18
   2b8f0:	1946b03a 	or	r3,r3,r5
   2b8f4:	1d46b03a 	or	r3,r3,r21
   2b8f8:	dfc00c17 	ldw	ra,48(sp)
   2b8fc:	df000b17 	ldw	fp,44(sp)
   2b900:	ddc00a17 	ldw	r23,40(sp)
   2b904:	dd800917 	ldw	r22,36(sp)
   2b908:	dd400817 	ldw	r21,32(sp)
   2b90c:	dd000717 	ldw	r20,28(sp)
   2b910:	dcc00617 	ldw	r19,24(sp)
   2b914:	dc800517 	ldw	r18,20(sp)
   2b918:	dc400417 	ldw	r17,16(sp)
   2b91c:	dc000317 	ldw	r16,12(sp)
   2b920:	dec00d04 	addi	sp,sp,52
   2b924:	f800283a 	ret
   2b928:	00c1ffc4 	movi	r3,2047
   2b92c:	000b883a 	mov	r5,zero
   2b930:	0025883a 	mov	r18,zero
   2b934:	003feb06 	br	2b8e4 <__divdf3+0x144>
   2b938:	402b883a 	mov	r21,r8
   2b93c:	8829883a 	mov	r20,r17
   2b940:	4825883a 	mov	r18,r9
   2b944:	1839883a 	mov	fp,r3
   2b948:	003fdd06 	br	2b8c0 <__divdf3+0x120>
   2b94c:	8d012836 	bltu	r17,r20,2bdf0 <__divdf3+0x650>
   2b950:	8d012626 	beq	r17,r20,2bdec <__divdf3+0x64c>
   2b954:	9cffffc4 	addi	r19,r19,-1
   2b958:	0021883a 	mov	r16,zero
   2b95c:	8806923a 	slli	r3,r17,8
   2b960:	480cd63a 	srli	r6,r9,24
   2b964:	4804923a 	slli	r2,r9,8
   2b968:	1838d43a 	srli	fp,r3,16
   2b96c:	a009883a 	mov	r4,r20
   2b970:	30ecb03a 	or	r22,r6,r3
   2b974:	e00b883a 	mov	r5,fp
   2b978:	d8800015 	stw	r2,0(sp)
   2b97c:	00206f80 	call	206f8 <__udivsi3>
   2b980:	a009883a 	mov	r4,r20
   2b984:	e00b883a 	mov	r5,fp
   2b988:	d8800115 	stw	r2,4(sp)
   2b98c:	002075c0 	call	2075c <__umodsi3>
   2b990:	d8c00117 	ldw	r3,4(sp)
   2b994:	1004943a 	slli	r2,r2,16
   2b998:	9008d43a 	srli	r4,r18,16
   2b99c:	b47fffcc 	andi	r17,r22,65535
   2b9a0:	88ef383a 	mul	r23,r17,r3
   2b9a4:	2088b03a 	or	r4,r4,r2
   2b9a8:	25c0042e 	bgeu	r4,r23,2b9bc <__divdf3+0x21c>
   2b9ac:	2589883a 	add	r4,r4,r22
   2b9b0:	18bfffc4 	addi	r2,r3,-1
   2b9b4:	2581412e 	bgeu	r4,r22,2bebc <__divdf3+0x71c>
   2b9b8:	1007883a 	mov	r3,r2
   2b9bc:	25efc83a 	sub	r23,r4,r23
   2b9c0:	e00b883a 	mov	r5,fp
   2b9c4:	b809883a 	mov	r4,r23
   2b9c8:	d8c00115 	stw	r3,4(sp)
   2b9cc:	00206f80 	call	206f8 <__udivsi3>
   2b9d0:	b809883a 	mov	r4,r23
   2b9d4:	e00b883a 	mov	r5,fp
   2b9d8:	1029883a 	mov	r20,r2
   2b9dc:	002075c0 	call	2075c <__umodsi3>
   2b9e0:	1008943a 	slli	r4,r2,16
   2b9e4:	8d13383a 	mul	r9,r17,r20
   2b9e8:	94bfffcc 	andi	r18,r18,65535
   2b9ec:	9108b03a 	or	r4,r18,r4
   2b9f0:	d8c00117 	ldw	r3,4(sp)
   2b9f4:	2240042e 	bgeu	r4,r9,2ba08 <__divdf3+0x268>
   2b9f8:	2589883a 	add	r4,r4,r22
   2b9fc:	a0bfffc4 	addi	r2,r20,-1
   2ba00:	25812a2e 	bgeu	r4,r22,2beac <__divdf3+0x70c>
   2ba04:	1029883a 	mov	r20,r2
   2ba08:	180a943a 	slli	r5,r3,16
   2ba0c:	d8800017 	ldw	r2,0(sp)
   2ba10:	2249c83a 	sub	r4,r4,r9
   2ba14:	2d28b03a 	or	r20,r5,r20
   2ba18:	100ed43a 	srli	r7,r2,16
   2ba1c:	123fffcc 	andi	r8,r2,65535
   2ba20:	a00ad43a 	srli	r5,r20,16
   2ba24:	a0bfffcc 	andi	r2,r20,65535
   2ba28:	122f383a 	mul	r23,r2,r8
   2ba2c:	2a15383a 	mul	r10,r5,r8
   2ba30:	3887383a 	mul	r3,r7,r2
   2ba34:	b804d43a 	srli	r2,r23,16
   2ba38:	29cb383a 	mul	r5,r5,r7
   2ba3c:	1a87883a 	add	r3,r3,r10
   2ba40:	10c5883a 	add	r2,r2,r3
   2ba44:	1280022e 	bgeu	r2,r10,2ba50 <__divdf3+0x2b0>
   2ba48:	00c00074 	movhi	r3,1
   2ba4c:	28cb883a 	add	r5,r5,r3
   2ba50:	1006d43a 	srli	r3,r2,16
   2ba54:	1004943a 	slli	r2,r2,16
   2ba58:	bdffffcc 	andi	r23,r23,65535
   2ba5c:	1947883a 	add	r3,r3,r5
   2ba60:	15ef883a 	add	r23,r2,r23
   2ba64:	20c00236 	bltu	r4,r3,2ba70 <__divdf3+0x2d0>
   2ba68:	20c00b1e 	bne	r4,r3,2ba98 <__divdf3+0x2f8>
   2ba6c:	85c00a2e 	bgeu	r16,r23,2ba98 <__divdf3+0x2f8>
   2ba70:	d8800017 	ldw	r2,0(sp)
   2ba74:	80a1883a 	add	r16,r16,r2
   2ba78:	8085803a 	cmpltu	r2,r16,r2
   2ba7c:	1585883a 	add	r2,r2,r22
   2ba80:	2089883a 	add	r4,r4,r2
   2ba84:	a0bfffc4 	addi	r2,r20,-1
   2ba88:	b101042e 	bgeu	r22,r4,2be9c <__divdf3+0x6fc>
   2ba8c:	20c13836 	bltu	r4,r3,2bf70 <__divdf3+0x7d0>
   2ba90:	19013626 	beq	r3,r4,2bf6c <__divdf3+0x7cc>
   2ba94:	1029883a 	mov	r20,r2
   2ba98:	85efc83a 	sub	r23,r16,r23
   2ba9c:	20c9c83a 	sub	r4,r4,r3
   2baa0:	85e1803a 	cmpltu	r16,r16,r23
   2baa4:	2421c83a 	sub	r16,r4,r16
   2baa8:	b4011e26 	beq	r22,r16,2bf24 <__divdf3+0x784>
   2baac:	8009883a 	mov	r4,r16
   2bab0:	e00b883a 	mov	r5,fp
   2bab4:	da000215 	stw	r8,8(sp)
   2bab8:	d9c00115 	stw	r7,4(sp)
   2babc:	00206f80 	call	206f8 <__udivsi3>
   2bac0:	8009883a 	mov	r4,r16
   2bac4:	e00b883a 	mov	r5,fp
   2bac8:	1025883a 	mov	r18,r2
   2bacc:	002075c0 	call	2075c <__umodsi3>
   2bad0:	1004943a 	slli	r2,r2,16
   2bad4:	b808d43a 	srli	r4,r23,16
   2bad8:	8ca1383a 	mul	r16,r17,r18
   2badc:	d9c00117 	ldw	r7,4(sp)
   2bae0:	2088b03a 	or	r4,r4,r2
   2bae4:	da000217 	ldw	r8,8(sp)
   2bae8:	2400e536 	bltu	r4,r16,2be80 <__divdf3+0x6e0>
   2baec:	2421c83a 	sub	r16,r4,r16
   2baf0:	8009883a 	mov	r4,r16
   2baf4:	e00b883a 	mov	r5,fp
   2baf8:	da000215 	stw	r8,8(sp)
   2bafc:	d9c00115 	stw	r7,4(sp)
   2bb00:	00206f80 	call	206f8 <__udivsi3>
   2bb04:	8009883a 	mov	r4,r16
   2bb08:	e00b883a 	mov	r5,fp
   2bb0c:	1021883a 	mov	r16,r2
   2bb10:	002075c0 	call	2075c <__umodsi3>
   2bb14:	1004943a 	slli	r2,r2,16
   2bb18:	8c23383a 	mul	r17,r17,r16
   2bb1c:	bdffffcc 	andi	r23,r23,65535
   2bb20:	b8aeb03a 	or	r23,r23,r2
   2bb24:	d9c00117 	ldw	r7,4(sp)
   2bb28:	da000217 	ldw	r8,8(sp)
   2bb2c:	bc40cd36 	bltu	r23,r17,2be64 <__divdf3+0x6c4>
   2bb30:	9008943a 	slli	r4,r18,16
   2bb34:	bc63c83a 	sub	r17,r23,r17
   2bb38:	2424b03a 	or	r18,r4,r16
   2bb3c:	900ad43a 	srli	r5,r18,16
   2bb40:	90bfffcc 	andi	r2,r18,65535
   2bb44:	4089383a 	mul	r4,r8,r2
   2bb48:	3885383a 	mul	r2,r7,r2
   2bb4c:	2a11383a 	mul	r8,r5,r8
   2bb50:	2006d43a 	srli	r3,r4,16
   2bb54:	394f383a 	mul	r7,r7,r5
   2bb58:	1205883a 	add	r2,r2,r8
   2bb5c:	1887883a 	add	r3,r3,r2
   2bb60:	1a00022e 	bgeu	r3,r8,2bb6c <__divdf3+0x3cc>
   2bb64:	00800074 	movhi	r2,1
   2bb68:	388f883a 	add	r7,r7,r2
   2bb6c:	1804d43a 	srli	r2,r3,16
   2bb70:	1806943a 	slli	r3,r3,16
   2bb74:	213fffcc 	andi	r4,r4,65535
   2bb78:	11cf883a 	add	r7,r2,r7
   2bb7c:	1907883a 	add	r3,r3,r4
   2bb80:	89c09336 	bltu	r17,r7,2bdd0 <__divdf3+0x630>
   2bb84:	89c09126 	beq	r17,r7,2bdcc <__divdf3+0x62c>
   2bb88:	94800054 	ori	r18,r18,1
   2bb8c:	9980ffc4 	addi	r6,r19,1023
   2bb90:	0180600e 	bge	zero,r6,2bd14 <__divdf3+0x574>
   2bb94:	908001cc 	andi	r2,r18,7
   2bb98:	1000e81e 	bne	r2,zero,2bf3c <__divdf3+0x79c>
   2bb9c:	900ed0fa 	srli	r7,r18,3
   2bba0:	a080402c 	andhi	r2,r20,256
   2bba4:	10000426 	beq	r2,zero,2bbb8 <__divdf3+0x418>
   2bba8:	00bfc034 	movhi	r2,65280
   2bbac:	10bfffc4 	addi	r2,r2,-1
   2bbb0:	a0a8703a 	and	r20,r20,r2
   2bbb4:	99810004 	addi	r6,r19,1024
   2bbb8:	3081ffc8 	cmpgei	r2,r6,2047
   2bbbc:	103f5a1e 	bne	r2,zero,2b928 <__divdf3+0x188>
   2bbc0:	a008977a 	slli	r4,r20,29
   2bbc4:	a00a927a 	slli	r5,r20,9
   2bbc8:	30c1ffcc 	andi	r3,r6,2047
   2bbcc:	21e4b03a 	or	r18,r4,r7
   2bbd0:	280ad33a 	srli	r5,r5,12
   2bbd4:	003f4306 	br	2b8e4 <__divdf3+0x144>
   2bbd8:	8dd2b03a 	or	r9,r17,r23
   2bbdc:	48004226 	beq	r9,zero,2bce8 <__divdf3+0x548>
   2bbe0:	da000015 	stw	r8,0(sp)
   2bbe4:	88009326 	beq	r17,zero,2be34 <__divdf3+0x694>
   2bbe8:	8809883a 	mov	r4,r17
   2bbec:	002d3dc0 	call	2d3dc <__clzsi2>
   2bbf0:	da000017 	ldw	r8,0(sp)
   2bbf4:	117ffd44 	addi	r5,r2,-11
   2bbf8:	01000744 	movi	r4,29
   2bbfc:	127ffe04 	addi	r9,r2,-8
   2bc00:	2149c83a 	sub	r4,r4,r5
   2bc04:	8a46983a 	sll	r3,r17,r9
   2bc08:	b908d83a 	srl	r4,r23,r4
   2bc0c:	ba52983a 	sll	r9,r23,r9
   2bc10:	20e2b03a 	or	r17,r4,r3
   2bc14:	14c5883a 	add	r2,r2,r19
   2bc18:	14c0fcc4 	addi	r19,r2,1011
   2bc1c:	0007883a 	mov	r3,zero
   2bc20:	003f0e06 	br	2b85c <__divdf3+0xbc>
   2bc24:	8128b03a 	or	r20,r16,r4
   2bc28:	2023883a 	mov	r17,r4
   2bc2c:	a0002926 	beq	r20,zero,2bcd4 <__divdf3+0x534>
   2bc30:	d9c00015 	stw	r7,0(sp)
   2bc34:	80007426 	beq	r16,zero,2be08 <__divdf3+0x668>
   2bc38:	8009883a 	mov	r4,r16
   2bc3c:	002d3dc0 	call	2d3dc <__clzsi2>
   2bc40:	d9c00017 	ldw	r7,0(sp)
   2bc44:	10fffd44 	addi	r3,r2,-11
   2bc48:	05000744 	movi	r20,29
   2bc4c:	113ffe04 	addi	r4,r2,-8
   2bc50:	a0e9c83a 	sub	r20,r20,r3
   2bc54:	810a983a 	sll	r5,r16,r4
   2bc58:	8d28d83a 	srl	r20,r17,r20
   2bc5c:	8924983a 	sll	r18,r17,r4
   2bc60:	a168b03a 	or	r20,r20,r5
   2bc64:	04ff0344 	movi	r19,-1011
   2bc68:	98a7c83a 	sub	r19,r19,r2
   2bc6c:	0021883a 	mov	r16,zero
   2bc70:	0039883a 	mov	fp,zero
   2bc74:	003ee806 	br	2b818 <__divdf3+0x78>
   2bc78:	8128b03a 	or	r20,r16,r4
   2bc7c:	a000101e 	bne	r20,zero,2bcc0 <__divdf3+0x520>
   2bc80:	0025883a 	mov	r18,zero
   2bc84:	04000204 	movi	r16,8
   2bc88:	04c1ffc4 	movi	r19,2047
   2bc8c:	07000084 	movi	fp,2
   2bc90:	003ee106 	br	2b818 <__divdf3+0x78>
   2bc94:	8dd2b03a 	or	r9,r17,r23
   2bc98:	9cfe0044 	addi	r19,r19,-2047
   2bc9c:	4800041e 	bne	r9,zero,2bcb0 <__divdf3+0x510>
   2bca0:	84000094 	ori	r16,r16,2
   2bca4:	0023883a 	mov	r17,zero
   2bca8:	00c00084 	movi	r3,2
   2bcac:	003eeb06 	br	2b85c <__divdf3+0xbc>
   2bcb0:	840000d4 	ori	r16,r16,3
   2bcb4:	b813883a 	mov	r9,r23
   2bcb8:	00c000c4 	movi	r3,3
   2bcbc:	003ee706 	br	2b85c <__divdf3+0xbc>
   2bcc0:	8029883a 	mov	r20,r16
   2bcc4:	04c1ffc4 	movi	r19,2047
   2bcc8:	04000304 	movi	r16,12
   2bccc:	070000c4 	movi	fp,3
   2bcd0:	003ed106 	br	2b818 <__divdf3+0x78>
   2bcd4:	0025883a 	mov	r18,zero
   2bcd8:	04000104 	movi	r16,4
   2bcdc:	0027883a 	mov	r19,zero
   2bce0:	07000044 	movi	fp,1
   2bce4:	003ecc06 	br	2b818 <__divdf3+0x78>
   2bce8:	84000054 	ori	r16,r16,1
   2bcec:	0023883a 	mov	r17,zero
   2bcf0:	00c00044 	movi	r3,1
   2bcf4:	003ed906 	br	2b85c <__divdf3+0xbc>
   2bcf8:	01400434 	movhi	r5,16
   2bcfc:	002b883a 	mov	r21,zero
   2bd00:	297fffc4 	addi	r5,r5,-1
   2bd04:	04bfffc4 	movi	r18,-1
   2bd08:	00c1ffc4 	movi	r3,2047
   2bd0c:	003ef506 	br	2b8e4 <__divdf3+0x144>
   2bd10:	04bfffc4 	movi	r18,-1
   2bd14:	01400044 	movi	r5,1
   2bd18:	298bc83a 	sub	r5,r5,r6
   2bd1c:	28800e48 	cmpgei	r2,r5,57
   2bd20:	103eed1e 	bne	r2,zero,2b8d8 <__divdf3+0x138>
   2bd24:	28800808 	cmpgei	r2,r5,32
   2bd28:	1000681e 	bne	r2,zero,2becc <__divdf3+0x72c>
   2bd2c:	98810784 	addi	r2,r19,1054
   2bd30:	a086983a 	sll	r3,r20,r2
   2bd34:	9148d83a 	srl	r4,r18,r5
   2bd38:	9084983a 	sll	r2,r18,r2
   2bd3c:	a14ad83a 	srl	r5,r20,r5
   2bd40:	1924b03a 	or	r18,r3,r4
   2bd44:	1004c03a 	cmpne	r2,r2,zero
   2bd48:	90a4b03a 	or	r18,r18,r2
   2bd4c:	908001cc 	andi	r2,r18,7
   2bd50:	10000726 	beq	r2,zero,2bd70 <__divdf3+0x5d0>
   2bd54:	908003cc 	andi	r2,r18,15
   2bd58:	10800120 	cmpeqi	r2,r2,4
   2bd5c:	1000041e 	bne	r2,zero,2bd70 <__divdf3+0x5d0>
   2bd60:	90800104 	addi	r2,r18,4
   2bd64:	14a5803a 	cmpltu	r18,r2,r18
   2bd68:	2c8b883a 	add	r5,r5,r18
   2bd6c:	1025883a 	mov	r18,r2
   2bd70:	2880202c 	andhi	r2,r5,128
   2bd74:	10009126 	beq	r2,zero,2bfbc <__divdf3+0x81c>
   2bd78:	00c00044 	movi	r3,1
   2bd7c:	000b883a 	mov	r5,zero
   2bd80:	0025883a 	mov	r18,zero
   2bd84:	003ed706 	br	2b8e4 <__divdf3+0x144>
   2bd88:	a080022c 	andhi	r2,r20,8
   2bd8c:	10000926 	beq	r2,zero,2bdb4 <__divdf3+0x614>
   2bd90:	8880022c 	andhi	r2,r17,8
   2bd94:	1000071e 	bne	r2,zero,2bdb4 <__divdf3+0x614>
   2bd98:	00800434 	movhi	r2,16
   2bd9c:	89400234 	orhi	r5,r17,8
   2bda0:	10bfffc4 	addi	r2,r2,-1
   2bda4:	288a703a 	and	r5,r5,r2
   2bda8:	402b883a 	mov	r21,r8
   2bdac:	4825883a 	mov	r18,r9
   2bdb0:	003fd506 	br	2bd08 <__divdf3+0x568>
   2bdb4:	00800434 	movhi	r2,16
   2bdb8:	a1400234 	orhi	r5,r20,8
   2bdbc:	10bfffc4 	addi	r2,r2,-1
   2bdc0:	288a703a 	and	r5,r5,r2
   2bdc4:	b02b883a 	mov	r21,r22
   2bdc8:	003fcf06 	br	2bd08 <__divdf3+0x568>
   2bdcc:	183f6f26 	beq	r3,zero,2bb8c <__divdf3+0x3ec>
   2bdd0:	b463883a 	add	r17,r22,r17
   2bdd4:	90bfffc4 	addi	r2,r18,-1
   2bdd8:	8d804d36 	bltu	r17,r22,2bf10 <__divdf3+0x770>
   2bddc:	89c06b36 	bltu	r17,r7,2bf8c <__divdf3+0x7ec>
   2bde0:	89c07f26 	beq	r17,r7,2bfe0 <__divdf3+0x840>
   2bde4:	1025883a 	mov	r18,r2
   2bde8:	003f6706 	br	2bb88 <__divdf3+0x3e8>
   2bdec:	927ed936 	bltu	r18,r9,2b954 <__divdf3+0x1b4>
   2bdf0:	a00897fa 	slli	r4,r20,31
   2bdf4:	9004d07a 	srli	r2,r18,1
   2bdf8:	902097fa 	slli	r16,r18,31
   2bdfc:	a028d07a 	srli	r20,r20,1
   2be00:	20a4b03a 	or	r18,r4,r2
   2be04:	003ed506 	br	2b95c <__divdf3+0x1bc>
   2be08:	002d3dc0 	call	2d3dc <__clzsi2>
   2be0c:	10c00544 	addi	r3,r2,21
   2be10:	19000748 	cmpgei	r4,r3,29
   2be14:	100b883a 	mov	r5,r2
   2be18:	d9c00017 	ldw	r7,0(sp)
   2be1c:	10800804 	addi	r2,r2,32
   2be20:	203f8926 	beq	r4,zero,2bc48 <__divdf3+0x4a8>
   2be24:	297ffe04 	addi	r5,r5,-8
   2be28:	9168983a 	sll	r20,r18,r5
   2be2c:	0025883a 	mov	r18,zero
   2be30:	003f8c06 	br	2bc64 <__divdf3+0x4c4>
   2be34:	b809883a 	mov	r4,r23
   2be38:	002d3dc0 	call	2d3dc <__clzsi2>
   2be3c:	11400544 	addi	r5,r2,21
   2be40:	29000748 	cmpgei	r4,r5,29
   2be44:	1007883a 	mov	r3,r2
   2be48:	da000017 	ldw	r8,0(sp)
   2be4c:	10800804 	addi	r2,r2,32
   2be50:	203f6926 	beq	r4,zero,2bbf8 <__divdf3+0x458>
   2be54:	18fffe04 	addi	r3,r3,-8
   2be58:	b8e2983a 	sll	r17,r23,r3
   2be5c:	0013883a 	mov	r9,zero
   2be60:	003f6c06 	br	2bc14 <__divdf3+0x474>
   2be64:	bdaf883a 	add	r23,r23,r22
   2be68:	80bfffc4 	addi	r2,r16,-1
   2be6c:	bd803b36 	bltu	r23,r22,2bf5c <__divdf3+0x7bc>
   2be70:	bc403a2e 	bgeu	r23,r17,2bf5c <__divdf3+0x7bc>
   2be74:	843fff84 	addi	r16,r16,-2
   2be78:	bdaf883a 	add	r23,r23,r22
   2be7c:	003f2c06 	br	2bb30 <__divdf3+0x390>
   2be80:	2589883a 	add	r4,r4,r22
   2be84:	90bfffc4 	addi	r2,r18,-1
   2be88:	25803636 	bltu	r4,r22,2bf64 <__divdf3+0x7c4>
   2be8c:	2400352e 	bgeu	r4,r16,2bf64 <__divdf3+0x7c4>
   2be90:	94bfff84 	addi	r18,r18,-2
   2be94:	2589883a 	add	r4,r4,r22
   2be98:	003f1406 	br	2baec <__divdf3+0x34c>
   2be9c:	b13efd1e 	bne	r22,r4,2ba94 <__divdf3+0x2f4>
   2bea0:	d9400017 	ldw	r5,0(sp)
   2bea4:	817efb36 	bltu	r16,r5,2ba94 <__divdf3+0x2f4>
   2bea8:	003ef806 	br	2ba8c <__divdf3+0x2ec>
   2beac:	227ed52e 	bgeu	r4,r9,2ba04 <__divdf3+0x264>
   2beb0:	a53fff84 	addi	r20,r20,-2
   2beb4:	2589883a 	add	r4,r4,r22
   2beb8:	003ed306 	br	2ba08 <__divdf3+0x268>
   2bebc:	25febe2e 	bgeu	r4,r23,2b9b8 <__divdf3+0x218>
   2bec0:	18ffff84 	addi	r3,r3,-2
   2bec4:	2589883a 	add	r4,r4,r22
   2bec8:	003ebc06 	br	2b9bc <__divdf3+0x21c>
   2becc:	00fff844 	movi	r3,-31
   2bed0:	1987c83a 	sub	r3,r3,r6
   2bed4:	29400820 	cmpeqi	r5,r5,32
   2bed8:	a0c6d83a 	srl	r3,r20,r3
   2bedc:	2800031e 	bne	r5,zero,2beec <__divdf3+0x74c>
   2bee0:	99410f84 	addi	r5,r19,1086
   2bee4:	a14a983a 	sll	r5,r20,r5
   2bee8:	9164b03a 	or	r18,r18,r5
   2beec:	9024c03a 	cmpne	r18,r18,zero
   2bef0:	90e4b03a 	or	r18,r18,r3
   2bef4:	910001cc 	andi	r4,r18,7
   2bef8:	20002c1e 	bne	r4,zero,2bfac <__divdf3+0x80c>
   2befc:	000b883a 	mov	r5,zero
   2bf00:	9024d0fa 	srli	r18,r18,3
   2bf04:	0007883a 	mov	r3,zero
   2bf08:	9124b03a 	or	r18,r18,r4
   2bf0c:	003e7506 	br	2b8e4 <__divdf3+0x144>
   2bf10:	1025883a 	mov	r18,r2
   2bf14:	89ff1c1e 	bne	r17,r7,2bb88 <__divdf3+0x3e8>
   2bf18:	d8800017 	ldw	r2,0(sp)
   2bf1c:	18bf1a1e 	bne	r3,r2,2bb88 <__divdf3+0x3e8>
   2bf20:	003f1a06 	br	2bb8c <__divdf3+0x3ec>
   2bf24:	9980ffc4 	addi	r6,r19,1023
   2bf28:	01bf790e 	bge	zero,r6,2bd10 <__divdf3+0x570>
   2bf2c:	000f883a 	mov	r7,zero
   2bf30:	01000044 	movi	r4,1
   2bf34:	a129883a 	add	r20,r20,r4
   2bf38:	003f1906 	br	2bba0 <__divdf3+0x400>
   2bf3c:	908003cc 	andi	r2,r18,15
   2bf40:	10800118 	cmpnei	r2,r2,4
   2bf44:	103f1526 	beq	r2,zero,2bb9c <__divdf3+0x3fc>
   2bf48:	91c00104 	addi	r7,r18,4
   2bf4c:	013ffec4 	movi	r4,-5
   2bf50:	380ed0fa 	srli	r7,r7,3
   2bf54:	2489803a 	cmpltu	r4,r4,r18
   2bf58:	003ff606 	br	2bf34 <__divdf3+0x794>
   2bf5c:	1021883a 	mov	r16,r2
   2bf60:	003ef306 	br	2bb30 <__divdf3+0x390>
   2bf64:	1025883a 	mov	r18,r2
   2bf68:	003ee006 	br	2baec <__divdf3+0x34c>
   2bf6c:	85fec92e 	bgeu	r16,r23,2ba94 <__divdf3+0x2f4>
   2bf70:	d8800017 	ldw	r2,0(sp)
   2bf74:	a53fff84 	addi	r20,r20,-2
   2bf78:	80a1883a 	add	r16,r16,r2
   2bf7c:	8085803a 	cmpltu	r2,r16,r2
   2bf80:	1585883a 	add	r2,r2,r22
   2bf84:	2089883a 	add	r4,r4,r2
   2bf88:	003ec306 	br	2ba98 <__divdf3+0x2f8>
   2bf8c:	d9000017 	ldw	r4,0(sp)
   2bf90:	94bfff84 	addi	r18,r18,-2
   2bf94:	2105883a 	add	r2,r4,r4
   2bf98:	1109803a 	cmpltu	r4,r2,r4
   2bf9c:	258d883a 	add	r6,r4,r22
   2bfa0:	89a3883a 	add	r17,r17,r6
   2bfa4:	d8800015 	stw	r2,0(sp)
   2bfa8:	003fda06 	br	2bf14 <__divdf3+0x774>
   2bfac:	908003cc 	andi	r2,r18,15
   2bfb0:	10800118 	cmpnei	r2,r2,4
   2bfb4:	000b883a 	mov	r5,zero
   2bfb8:	103f691e 	bne	r2,zero,2bd60 <__divdf3+0x5c0>
   2bfbc:	2804927a 	slli	r2,r5,9
   2bfc0:	2808977a 	slli	r4,r5,29
   2bfc4:	100ad33a 	srli	r5,r2,12
   2bfc8:	003fcd06 	br	2bf00 <__divdf3+0x760>
   2bfcc:	00800434 	movhi	r2,16
   2bfd0:	a1400234 	orhi	r5,r20,8
   2bfd4:	10bfffc4 	addi	r2,r2,-1
   2bfd8:	288a703a 	and	r5,r5,r2
   2bfdc:	003f4a06 	br	2bd08 <__divdf3+0x568>
   2bfe0:	d9000017 	ldw	r4,0(sp)
   2bfe4:	20ffe936 	bltu	r4,r3,2bf8c <__divdf3+0x7ec>
   2bfe8:	1025883a 	mov	r18,r2
   2bfec:	003fca06 	br	2bf18 <__divdf3+0x778>

0002bff0 <__eqdf2>:
   2bff0:	2810d53a 	srli	r8,r5,20
   2bff4:	3806d53a 	srli	r3,r7,20
   2bff8:	00800434 	movhi	r2,16
   2bffc:	4201ffcc 	andi	r8,r8,2047
   2c000:	10bfffc4 	addi	r2,r2,-1
   2c004:	4241ffd8 	cmpnei	r9,r8,2047
   2c008:	2814d7fa 	srli	r10,r5,31
   2c00c:	3816d7fa 	srli	r11,r7,31
   2c010:	288a703a 	and	r5,r5,r2
   2c014:	388e703a 	and	r7,r7,r2
   2c018:	1881ffcc 	andi	r2,r3,2047
   2c01c:	48000626 	beq	r9,zero,2c038 <__eqdf2+0x48>
   2c020:	10c1ffe0 	cmpeqi	r3,r2,2047
   2c024:	1800021e 	bne	r3,zero,2c030 <__eqdf2+0x40>
   2c028:	4080011e 	bne	r8,r2,2c030 <__eqdf2+0x40>
   2c02c:	29c00826 	beq	r5,r7,2c050 <__eqdf2+0x60>
   2c030:	00800044 	movi	r2,1
   2c034:	f800283a 	ret
   2c038:	2906b03a 	or	r3,r5,r4
   2c03c:	183ffc1e 	bne	r3,zero,2c030 <__eqdf2+0x40>
   2c040:	1081ffd8 	cmpnei	r2,r2,2047
   2c044:	103ffa1e 	bne	r2,zero,2c030 <__eqdf2+0x40>
   2c048:	398eb03a 	or	r7,r7,r6
   2c04c:	383ff81e 	bne	r7,zero,2c030 <__eqdf2+0x40>
   2c050:	21bff71e 	bne	r4,r6,2c030 <__eqdf2+0x40>
   2c054:	52c00426 	beq	r10,r11,2c068 <__eqdf2+0x78>
   2c058:	403ff51e 	bne	r8,zero,2c030 <__eqdf2+0x40>
   2c05c:	290ab03a 	or	r5,r5,r4
   2c060:	2804c03a 	cmpne	r2,r5,zero
   2c064:	f800283a 	ret
   2c068:	0005883a 	mov	r2,zero
   2c06c:	f800283a 	ret

0002c070 <__gedf2>:
   2c070:	2810d53a 	srli	r8,r5,20
   2c074:	3812d53a 	srli	r9,r7,20
   2c078:	00c00434 	movhi	r3,16
   2c07c:	4201ffcc 	andi	r8,r8,2047
   2c080:	18ffffc4 	addi	r3,r3,-1
   2c084:	4281ffd8 	cmpnei	r10,r8,2047
   2c088:	2816d7fa 	srli	r11,r5,31
   2c08c:	3804d7fa 	srli	r2,r7,31
   2c090:	28ca703a 	and	r5,r5,r3
   2c094:	38ce703a 	and	r7,r7,r3
   2c098:	48c1ffcc 	andi	r3,r9,2047
   2c09c:	50000a26 	beq	r10,zero,2c0c8 <__gedf2+0x58>
   2c0a0:	1a41ffd8 	cmpnei	r9,r3,2047
   2c0a4:	48000c26 	beq	r9,zero,2c0d8 <__gedf2+0x68>
   2c0a8:	4000171e 	bne	r8,zero,2c108 <__gedf2+0x98>
   2c0ac:	2912b03a 	or	r9,r5,r4
   2c0b0:	1800121e 	bne	r3,zero,2c0fc <__gedf2+0x8c>
   2c0b4:	3994b03a 	or	r10,r7,r6
   2c0b8:	5000101e 	bne	r10,zero,2c0fc <__gedf2+0x8c>
   2c0bc:	48000a1e 	bne	r9,zero,2c0e8 <__gedf2+0x78>
   2c0c0:	0005883a 	mov	r2,zero
   2c0c4:	f800283a 	ret
   2c0c8:	2912b03a 	or	r9,r5,r4
   2c0cc:	48001d1e 	bne	r9,zero,2c144 <__gedf2+0xd4>
   2c0d0:	1a41ffe0 	cmpeqi	r9,r3,2047
   2c0d4:	48000c26 	beq	r9,zero,2c108 <__gedf2+0x98>
   2c0d8:	3992b03a 	or	r9,r7,r6
   2c0dc:	4800191e 	bne	r9,zero,2c144 <__gedf2+0xd4>
   2c0e0:	40000526 	beq	r8,zero,2c0f8 <__gedf2+0x88>
   2c0e4:	58800c26 	beq	r11,r2,2c118 <__gedf2+0xa8>
   2c0e8:	00800044 	movi	r2,1
   2c0ec:	58000526 	beq	r11,zero,2c104 <__gedf2+0x94>
   2c0f0:	00bfffc4 	movi	r2,-1
   2c0f4:	f800283a 	ret
   2c0f8:	2912b03a 	or	r9,r5,r4
   2c0fc:	483ff91e 	bne	r9,zero,2c0e4 <__gedf2+0x74>
   2c100:	103ffb26 	beq	r2,zero,2c0f0 <__gedf2+0x80>
   2c104:	f800283a 	ret
   2c108:	183ff61e 	bne	r3,zero,2c0e4 <__gedf2+0x74>
   2c10c:	3992b03a 	or	r9,r7,r6
   2c110:	483ff41e 	bne	r9,zero,2c0e4 <__gedf2+0x74>
   2c114:	003ff406 	br	2c0e8 <__gedf2+0x78>
   2c118:	1a000716 	blt	r3,r8,2c138 <__gedf2+0xc8>
   2c11c:	40fff816 	blt	r8,r3,2c100 <__gedf2+0x90>
   2c120:	397ff136 	bltu	r7,r5,2c0e8 <__gedf2+0x78>
   2c124:	29c00926 	beq	r5,r7,2c14c <__gedf2+0xdc>
   2c128:	29ffe52e 	bgeu	r5,r7,2c0c0 <__gedf2+0x50>
   2c12c:	583ff026 	beq	r11,zero,2c0f0 <__gedf2+0x80>
   2c130:	5805883a 	mov	r2,r11
   2c134:	f800283a 	ret
   2c138:	103fed1e 	bne	r2,zero,2c0f0 <__gedf2+0x80>
   2c13c:	00800044 	movi	r2,1
   2c140:	f800283a 	ret
   2c144:	00bfff84 	movi	r2,-2
   2c148:	f800283a 	ret
   2c14c:	313fe636 	bltu	r6,r4,2c0e8 <__gedf2+0x78>
   2c150:	21bfdb2e 	bgeu	r4,r6,2c0c0 <__gedf2+0x50>
   2c154:	003ff506 	br	2c12c <__gedf2+0xbc>

0002c158 <__ledf2>:
   2c158:	2810d53a 	srli	r8,r5,20
   2c15c:	3812d53a 	srli	r9,r7,20
   2c160:	00c00434 	movhi	r3,16
   2c164:	4201ffcc 	andi	r8,r8,2047
   2c168:	18ffffc4 	addi	r3,r3,-1
   2c16c:	4281ffd8 	cmpnei	r10,r8,2047
   2c170:	2816d7fa 	srli	r11,r5,31
   2c174:	3804d7fa 	srli	r2,r7,31
   2c178:	28ca703a 	and	r5,r5,r3
   2c17c:	38ce703a 	and	r7,r7,r3
   2c180:	48c1ffcc 	andi	r3,r9,2047
   2c184:	50000a26 	beq	r10,zero,2c1b0 <__ledf2+0x58>
   2c188:	1a41ffd8 	cmpnei	r9,r3,2047
   2c18c:	48000c26 	beq	r9,zero,2c1c0 <__ledf2+0x68>
   2c190:	4000191e 	bne	r8,zero,2c1f8 <__ledf2+0xa0>
   2c194:	2912b03a 	or	r9,r5,r4
   2c198:	18000d1e 	bne	r3,zero,2c1d0 <__ledf2+0x78>
   2c19c:	3994b03a 	or	r10,r7,r6
   2c1a0:	50000b1e 	bne	r10,zero,2c1d0 <__ledf2+0x78>
   2c1a4:	48000c1e 	bne	r9,zero,2c1d8 <__ledf2+0x80>
   2c1a8:	0005883a 	mov	r2,zero
   2c1ac:	f800283a 	ret
   2c1b0:	2912b03a 	or	r9,r5,r4
   2c1b4:	48000c1e 	bne	r9,zero,2c1e8 <__ledf2+0x90>
   2c1b8:	1a41ffe0 	cmpeqi	r9,r3,2047
   2c1bc:	48000e26 	beq	r9,zero,2c1f8 <__ledf2+0xa0>
   2c1c0:	3992b03a 	or	r9,r7,r6
   2c1c4:	4800081e 	bne	r9,zero,2c1e8 <__ledf2+0x90>
   2c1c8:	4000021e 	bne	r8,zero,2c1d4 <__ledf2+0x7c>
   2c1cc:	2912b03a 	or	r9,r5,r4
   2c1d0:	48000726 	beq	r9,zero,2c1f0 <__ledf2+0x98>
   2c1d4:	58800c26 	beq	r11,r2,2c208 <__ledf2+0xb0>
   2c1d8:	00800044 	movi	r2,1
   2c1dc:	58000526 	beq	r11,zero,2c1f4 <__ledf2+0x9c>
   2c1e0:	00bfffc4 	movi	r2,-1
   2c1e4:	f800283a 	ret
   2c1e8:	00800084 	movi	r2,2
   2c1ec:	f800283a 	ret
   2c1f0:	103ffb26 	beq	r2,zero,2c1e0 <__ledf2+0x88>
   2c1f4:	f800283a 	ret
   2c1f8:	183ff61e 	bne	r3,zero,2c1d4 <__ledf2+0x7c>
   2c1fc:	3992b03a 	or	r9,r7,r6
   2c200:	483ff41e 	bne	r9,zero,2c1d4 <__ledf2+0x7c>
   2c204:	003ff406 	br	2c1d8 <__ledf2+0x80>
   2c208:	1a00030e 	bge	r3,r8,2c218 <__ledf2+0xc0>
   2c20c:	103ff41e 	bne	r2,zero,2c1e0 <__ledf2+0x88>
   2c210:	00800044 	movi	r2,1
   2c214:	f800283a 	ret
   2c218:	40fff516 	blt	r8,r3,2c1f0 <__ledf2+0x98>
   2c21c:	397fee36 	bltu	r7,r5,2c1d8 <__ledf2+0x80>
   2c220:	29c00426 	beq	r5,r7,2c234 <__ledf2+0xdc>
   2c224:	29ffe02e 	bgeu	r5,r7,2c1a8 <__ledf2+0x50>
   2c228:	583fed26 	beq	r11,zero,2c1e0 <__ledf2+0x88>
   2c22c:	5805883a 	mov	r2,r11
   2c230:	f800283a 	ret
   2c234:	313fe836 	bltu	r6,r4,2c1d8 <__ledf2+0x80>
   2c238:	21bfdb2e 	bgeu	r4,r6,2c1a8 <__ledf2+0x50>
   2c23c:	003ffa06 	br	2c228 <__ledf2+0xd0>

0002c240 <__muldf3>:
   2c240:	2804d53a 	srli	r2,r5,20
   2c244:	defff504 	addi	sp,sp,-44
   2c248:	02000434 	movhi	r8,16
   2c24c:	df000915 	stw	fp,36(sp)
   2c250:	dd000515 	stw	r20,20(sp)
   2c254:	dcc00415 	stw	r19,16(sp)
   2c258:	dc000115 	stw	r16,4(sp)
   2c25c:	423fffc4 	addi	r8,r8,-1
   2c260:	dfc00a15 	stw	ra,40(sp)
   2c264:	ddc00815 	stw	r23,32(sp)
   2c268:	dd800715 	stw	r22,28(sp)
   2c26c:	dd400615 	stw	r21,24(sp)
   2c270:	dc800315 	stw	r18,12(sp)
   2c274:	dc400215 	stw	r17,8(sp)
   2c278:	1081ffcc 	andi	r2,r2,2047
   2c27c:	2828d7fa 	srli	r20,r5,31
   2c280:	2027883a 	mov	r19,r4
   2c284:	3039883a 	mov	fp,r6
   2c288:	2a20703a 	and	r16,r5,r8
   2c28c:	1000e726 	beq	r2,zero,2c62c <__muldf3+0x3ec>
   2c290:	10c1ffe0 	cmpeqi	r3,r2,2047
   2c294:	1800f91e 	bne	r3,zero,2c67c <__muldf3+0x43c>
   2c298:	800a90fa 	slli	r5,r16,3
   2c29c:	2020d77a 	srli	r16,r4,29
   2c2a0:	202490fa 	slli	r18,r4,3
   2c2a4:	14ff0044 	addi	r19,r2,-1023
   2c2a8:	8160b03a 	or	r16,r16,r5
   2c2ac:	84002034 	orhi	r16,r16,128
   2c2b0:	002b883a 	mov	r21,zero
   2c2b4:	002d883a 	mov	r22,zero
   2c2b8:	3804d53a 	srli	r2,r7,20
   2c2bc:	00c00434 	movhi	r3,16
   2c2c0:	18ffffc4 	addi	r3,r3,-1
   2c2c4:	1081ffcc 	andi	r2,r2,2047
   2c2c8:	382ed7fa 	srli	r23,r7,31
   2c2cc:	38e2703a 	and	r17,r7,r3
   2c2d0:	1000c526 	beq	r2,zero,2c5e8 <__muldf3+0x3a8>
   2c2d4:	10c1ffe0 	cmpeqi	r3,r2,2047
   2c2d8:	1800ef1e 	bne	r3,zero,2c698 <__muldf3+0x458>
   2c2dc:	880690fa 	slli	r3,r17,3
   2c2e0:	e022d77a 	srli	r17,fp,29
   2c2e4:	e00a90fa 	slli	r5,fp,3
   2c2e8:	10bf0044 	addi	r2,r2,-1023
   2c2ec:	88e2b03a 	or	r17,r17,r3
   2c2f0:	8c402034 	orhi	r17,r17,128
   2c2f4:	98a7883a 	add	r19,r19,r2
   2c2f8:	0007883a 	mov	r3,zero
   2c2fc:	a8800428 	cmpgeui	r2,r21,16
   2c300:	a5ccf03a 	xor	r6,r20,r23
   2c304:	9a000044 	addi	r8,r19,1
   2c308:	1000371e 	bne	r2,zero,2c3e8 <__muldf3+0x1a8>
   2c30c:	a80490ba 	slli	r2,r21,2
   2c310:	010000f4 	movhi	r4,3
   2c314:	1109883a 	add	r4,r2,r4
   2c318:	20b0c817 	ldw	r2,-15584(r4)
   2c31c:	1000683a 	jmp	r2
   2c320:	0002c3e8 	cmpgeui	zero,zero,2831
   2c324:	0002c364 	muli	zero,zero,2829
   2c328:	0002c364 	muli	zero,zero,2829
   2c32c:	0002c360 	cmpeqi	zero,zero,2829
   2c330:	0002c370 	cmpltui	zero,zero,2829
   2c334:	0002c370 	cmpltui	zero,zero,2829
   2c338:	0002c70c 	andi	zero,zero,2844
   2c33c:	0002c360 	cmpeqi	zero,zero,2829
   2c340:	0002c370 	cmpltui	zero,zero,2829
   2c344:	0002c70c 	andi	zero,zero,2844
   2c348:	0002c370 	cmpltui	zero,zero,2829
   2c34c:	0002c360 	cmpeqi	zero,zero,2829
   2c350:	0002c6b4 	movhi	zero,2842
   2c354:	0002c6b4 	movhi	zero,2842
   2c358:	0002c6b4 	movhi	zero,2842
   2c35c:	0002c798 	cmpnei	zero,zero,2846
   2c360:	b80d883a 	mov	r6,r23
   2c364:	8821883a 	mov	r16,r17
   2c368:	2825883a 	mov	r18,r5
   2c36c:	182d883a 	mov	r22,r3
   2c370:	b08000a0 	cmpeqi	r2,r22,2
   2c374:	1000181e 	bne	r2,zero,2c3d8 <__muldf3+0x198>
   2c378:	b08000e0 	cmpeqi	r2,r22,3
   2c37c:	1001481e 	bne	r2,zero,2c8a0 <__muldf3+0x660>
   2c380:	b0800060 	cmpeqi	r2,r22,1
   2c384:	10007e26 	beq	r2,zero,2c580 <__muldf3+0x340>
   2c388:	0007883a 	mov	r3,zero
   2c38c:	0021883a 	mov	r16,zero
   2c390:	0025883a 	mov	r18,zero
   2c394:	1806953a 	slli	r3,r3,20
   2c398:	300c97fa 	slli	r6,r6,31
   2c39c:	9005883a 	mov	r2,r18
   2c3a0:	1c06b03a 	or	r3,r3,r16
   2c3a4:	1986b03a 	or	r3,r3,r6
   2c3a8:	dfc00a17 	ldw	ra,40(sp)
   2c3ac:	df000917 	ldw	fp,36(sp)
   2c3b0:	ddc00817 	ldw	r23,32(sp)
   2c3b4:	dd800717 	ldw	r22,28(sp)
   2c3b8:	dd400617 	ldw	r21,24(sp)
   2c3bc:	dd000517 	ldw	r20,20(sp)
   2c3c0:	dcc00417 	ldw	r19,16(sp)
   2c3c4:	dc800317 	ldw	r18,12(sp)
   2c3c8:	dc400217 	ldw	r17,8(sp)
   2c3cc:	dc000117 	ldw	r16,4(sp)
   2c3d0:	dec00b04 	addi	sp,sp,44
   2c3d4:	f800283a 	ret
   2c3d8:	00c1ffc4 	movi	r3,2047
   2c3dc:	0021883a 	mov	r16,zero
   2c3e0:	0025883a 	mov	r18,zero
   2c3e4:	003feb06 	br	2c394 <__muldf3+0x154>
   2c3e8:	9004d43a 	srli	r2,r18,16
   2c3ec:	281ed43a 	srli	r15,r5,16
   2c3f0:	94bfffcc 	andi	r18,r18,65535
   2c3f4:	297fffcc 	andi	r5,r5,65535
   2c3f8:	2c89383a 	mul	r4,r5,r18
   2c3fc:	114f383a 	mul	r7,r2,r5
   2c400:	7c87383a 	mul	r3,r15,r18
   2c404:	2012d43a 	srli	r9,r4,16
   2c408:	13dd383a 	mul	r14,r2,r15
   2c40c:	19c7883a 	add	r3,r3,r7
   2c410:	48d3883a 	add	r9,r9,r3
   2c414:	49c0022e 	bgeu	r9,r7,2c420 <__muldf3+0x1e0>
   2c418:	00c00074 	movhi	r3,1
   2c41c:	70dd883a 	add	r14,r14,r3
   2c420:	881ad43a 	srli	r13,r17,16
   2c424:	8c7fffcc 	andi	r17,r17,65535
   2c428:	8c87383a 	mul	r3,r17,r18
   2c42c:	144f383a 	mul	r7,r2,r17
   2c430:	6ca5383a 	mul	r18,r13,r18
   2c434:	1816d43a 	srli	r11,r3,16
   2c438:	4814943a 	slli	r10,r9,16
   2c43c:	91e5883a 	add	r18,r18,r7
   2c440:	213fffcc 	andi	r4,r4,65535
   2c444:	5c97883a 	add	r11,r11,r18
   2c448:	4818d43a 	srli	r12,r9,16
   2c44c:	1345383a 	mul	r2,r2,r13
   2c450:	5115883a 	add	r10,r10,r4
   2c454:	59c0022e 	bgeu	r11,r7,2c460 <__muldf3+0x220>
   2c458:	01000074 	movhi	r4,1
   2c45c:	1105883a 	add	r2,r2,r4
   2c460:	8028d43a 	srli	r20,r16,16
   2c464:	827fffcc 	andi	r9,r16,65535
   2c468:	2a6b383a 	mul	r21,r5,r9
   2c46c:	7a49383a 	mul	r4,r15,r9
   2c470:	a14b383a 	mul	r5,r20,r5
   2c474:	580e943a 	slli	r7,r11,16
   2c478:	a82cd43a 	srli	r22,r21,16
   2c47c:	5824d43a 	srli	r18,r11,16
   2c480:	18ffffcc 	andi	r3,r3,65535
   2c484:	2149883a 	add	r4,r4,r5
   2c488:	38cf883a 	add	r7,r7,r3
   2c48c:	b109883a 	add	r4,r22,r4
   2c490:	7d1f383a 	mul	r15,r15,r20
   2c494:	9097883a 	add	r11,r18,r2
   2c498:	61c7883a 	add	r3,r12,r7
   2c49c:	2140022e 	bgeu	r4,r5,2c4a8 <__muldf3+0x268>
   2c4a0:	00800074 	movhi	r2,1
   2c4a4:	789f883a 	add	r15,r15,r2
   2c4a8:	8a65383a 	mul	r18,r17,r9
   2c4ac:	6a53383a 	mul	r9,r13,r9
   2c4b0:	a463383a 	mul	r17,r20,r17
   2c4b4:	9020d43a 	srli	r16,r18,16
   2c4b8:	200ad43a 	srli	r5,r4,16
   2c4bc:	2008943a 	slli	r4,r4,16
   2c4c0:	4c53883a 	add	r9,r9,r17
   2c4c4:	ab3fffcc 	andi	r12,r21,65535
   2c4c8:	8253883a 	add	r9,r16,r9
   2c4cc:	6d1b383a 	mul	r13,r13,r20
   2c4d0:	2bdf883a 	add	r15,r5,r15
   2c4d4:	2309883a 	add	r4,r4,r12
   2c4d8:	4c40022e 	bgeu	r9,r17,2c4e4 <__muldf3+0x2a4>
   2c4dc:	00800074 	movhi	r2,1
   2c4e0:	689b883a 	add	r13,r13,r2
   2c4e4:	4804943a 	slli	r2,r9,16
   2c4e8:	917fffcc 	andi	r5,r18,65535
   2c4ec:	1b87883a 	add	r3,r3,r14
   2c4f0:	1145883a 	add	r2,r2,r5
   2c4f4:	19cf803a 	cmpltu	r7,r3,r7
   2c4f8:	12c5883a 	add	r2,r2,r11
   2c4fc:	1907883a 	add	r3,r3,r4
   2c500:	11dd883a 	add	r14,r2,r7
   2c504:	1909803a 	cmpltu	r4,r3,r4
   2c508:	73cb883a 	add	r5,r14,r15
   2c50c:	4812d43a 	srli	r9,r9,16
   2c510:	2919883a 	add	r12,r5,r4
   2c514:	12c5803a 	cmpltu	r2,r2,r11
   2c518:	71e1803a 	cmpltu	r16,r14,r7
   2c51c:	1420b03a 	or	r16,r2,r16
   2c520:	2bcb803a 	cmpltu	r5,r5,r15
   2c524:	6109803a 	cmpltu	r4,r12,r4
   2c528:	2908b03a 	or	r4,r5,r4
   2c52c:	8261883a 	add	r16,r16,r9
   2c530:	1824927a 	slli	r18,r3,9
   2c534:	8121883a 	add	r16,r16,r4
   2c538:	8361883a 	add	r16,r16,r13
   2c53c:	8020927a 	slli	r16,r16,9
   2c540:	1806d5fa 	srli	r3,r3,23
   2c544:	600ad5fa 	srli	r5,r12,23
   2c548:	6004927a 	slli	r2,r12,9
   2c54c:	92a4b03a 	or	r18,r18,r10
   2c550:	9024c03a 	cmpne	r18,r18,zero
   2c554:	90e4b03a 	or	r18,r18,r3
   2c558:	80c0402c 	andhi	r3,r16,256
   2c55c:	90a4b03a 	or	r18,r18,r2
   2c560:	8160b03a 	or	r16,r16,r5
   2c564:	1800b326 	beq	r3,zero,2c834 <__muldf3+0x5f4>
   2c568:	9006d07a 	srli	r3,r18,1
   2c56c:	800497fa 	slli	r2,r16,31
   2c570:	9480004c 	andi	r18,r18,1
   2c574:	8020d07a 	srli	r16,r16,1
   2c578:	1c86b03a 	or	r3,r3,r18
   2c57c:	18a4b03a 	or	r18,r3,r2
   2c580:	4100ffc4 	addi	r4,r8,1023
   2c584:	0100670e 	bge	zero,r4,2c724 <__muldf3+0x4e4>
   2c588:	908001cc 	andi	r2,r18,7
   2c58c:	10000726 	beq	r2,zero,2c5ac <__muldf3+0x36c>
   2c590:	908003cc 	andi	r2,r18,15
   2c594:	10800120 	cmpeqi	r2,r2,4
   2c598:	1000041e 	bne	r2,zero,2c5ac <__muldf3+0x36c>
   2c59c:	90800104 	addi	r2,r18,4
   2c5a0:	14a5803a 	cmpltu	r18,r2,r18
   2c5a4:	84a1883a 	add	r16,r16,r18
   2c5a8:	1025883a 	mov	r18,r2
   2c5ac:	8080402c 	andhi	r2,r16,256
   2c5b0:	10000426 	beq	r2,zero,2c5c4 <__muldf3+0x384>
   2c5b4:	00bfc034 	movhi	r2,65280
   2c5b8:	10bfffc4 	addi	r2,r2,-1
   2c5bc:	80a0703a 	and	r16,r16,r2
   2c5c0:	41010004 	addi	r4,r8,1024
   2c5c4:	2081ffc8 	cmpgei	r2,r4,2047
   2c5c8:	103f831e 	bne	r2,zero,2c3d8 <__muldf3+0x198>
   2c5cc:	8004977a 	slli	r2,r16,29
   2c5d0:	9024d0fa 	srli	r18,r18,3
   2c5d4:	8020927a 	slli	r16,r16,9
   2c5d8:	20c1ffcc 	andi	r3,r4,2047
   2c5dc:	14a4b03a 	or	r18,r2,r18
   2c5e0:	8020d33a 	srli	r16,r16,12
   2c5e4:	003f6b06 	br	2c394 <__muldf3+0x154>
   2c5e8:	8f0ab03a 	or	r5,r17,fp
   2c5ec:	28004326 	beq	r5,zero,2c6fc <__muldf3+0x4bc>
   2c5f0:	88008526 	beq	r17,zero,2c808 <__muldf3+0x5c8>
   2c5f4:	8809883a 	mov	r4,r17
   2c5f8:	002d3dc0 	call	2d3dc <__clzsi2>
   2c5fc:	11bffd44 	addi	r6,r2,-11
   2c600:	01000744 	movi	r4,29
   2c604:	117ffe04 	addi	r5,r2,-8
   2c608:	2189c83a 	sub	r4,r4,r6
   2c60c:	8962983a 	sll	r17,r17,r5
   2c610:	e108d83a 	srl	r4,fp,r4
   2c614:	e14a983a 	sll	r5,fp,r5
   2c618:	2462b03a 	or	r17,r4,r17
   2c61c:	9885c83a 	sub	r2,r19,r2
   2c620:	14ff0344 	addi	r19,r2,-1011
   2c624:	0007883a 	mov	r3,zero
   2c628:	003f3406 	br	2c2fc <__muldf3+0xbc>
   2c62c:	8124b03a 	or	r18,r16,r4
   2c630:	90002d26 	beq	r18,zero,2c6e8 <__muldf3+0x4a8>
   2c634:	d9c00015 	stw	r7,0(sp)
   2c638:	80006826 	beq	r16,zero,2c7dc <__muldf3+0x59c>
   2c63c:	8009883a 	mov	r4,r16
   2c640:	002d3dc0 	call	2d3dc <__clzsi2>
   2c644:	d9c00017 	ldw	r7,0(sp)
   2c648:	113ffd44 	addi	r4,r2,-11
   2c64c:	00c00744 	movi	r3,29
   2c650:	14bffe04 	addi	r18,r2,-8
   2c654:	1907c83a 	sub	r3,r3,r4
   2c658:	84a0983a 	sll	r16,r16,r18
   2c65c:	98c6d83a 	srl	r3,r19,r3
   2c660:	9ca4983a 	sll	r18,r19,r18
   2c664:	1c20b03a 	or	r16,r3,r16
   2c668:	04ff0344 	movi	r19,-1011
   2c66c:	98a7c83a 	sub	r19,r19,r2
   2c670:	002b883a 	mov	r21,zero
   2c674:	002d883a 	mov	r22,zero
   2c678:	003f0f06 	br	2c2b8 <__muldf3+0x78>
   2c67c:	8124b03a 	or	r18,r16,r4
   2c680:	9000141e 	bne	r18,zero,2c6d4 <__muldf3+0x494>
   2c684:	0021883a 	mov	r16,zero
   2c688:	05400204 	movi	r21,8
   2c68c:	04c1ffc4 	movi	r19,2047
   2c690:	05800084 	movi	r22,2
   2c694:	003f0806 	br	2c2b8 <__muldf3+0x78>
   2c698:	8f0ab03a 	or	r5,r17,fp
   2c69c:	9cc1ffc4 	addi	r19,r19,2047
   2c6a0:	2800081e 	bne	r5,zero,2c6c4 <__muldf3+0x484>
   2c6a4:	ad400094 	ori	r21,r21,2
   2c6a8:	0023883a 	mov	r17,zero
   2c6ac:	00c00084 	movi	r3,2
   2c6b0:	003f1206 	br	2c2fc <__muldf3+0xbc>
   2c6b4:	b08000a0 	cmpeqi	r2,r22,2
   2c6b8:	a00d883a 	mov	r6,r20
   2c6bc:	103f2e26 	beq	r2,zero,2c378 <__muldf3+0x138>
   2c6c0:	003f4506 	br	2c3d8 <__muldf3+0x198>
   2c6c4:	ad4000d4 	ori	r21,r21,3
   2c6c8:	e00b883a 	mov	r5,fp
   2c6cc:	00c000c4 	movi	r3,3
   2c6d0:	003f0a06 	br	2c2fc <__muldf3+0xbc>
   2c6d4:	2025883a 	mov	r18,r4
   2c6d8:	05400304 	movi	r21,12
   2c6dc:	04c1ffc4 	movi	r19,2047
   2c6e0:	058000c4 	movi	r22,3
   2c6e4:	003ef406 	br	2c2b8 <__muldf3+0x78>
   2c6e8:	0021883a 	mov	r16,zero
   2c6ec:	05400104 	movi	r21,4
   2c6f0:	0027883a 	mov	r19,zero
   2c6f4:	05800044 	movi	r22,1
   2c6f8:	003eef06 	br	2c2b8 <__muldf3+0x78>
   2c6fc:	ad400054 	ori	r21,r21,1
   2c700:	0023883a 	mov	r17,zero
   2c704:	00c00044 	movi	r3,1
   2c708:	003efc06 	br	2c2fc <__muldf3+0xbc>
   2c70c:	04000434 	movhi	r16,16
   2c710:	000d883a 	mov	r6,zero
   2c714:	843fffc4 	addi	r16,r16,-1
   2c718:	04bfffc4 	movi	r18,-1
   2c71c:	00c1ffc4 	movi	r3,2047
   2c720:	003f1c06 	br	2c394 <__muldf3+0x154>
   2c724:	00800044 	movi	r2,1
   2c728:	1105c83a 	sub	r2,r2,r4
   2c72c:	10c00e48 	cmpgei	r3,r2,57
   2c730:	183f151e 	bne	r3,zero,2c388 <__muldf3+0x148>
   2c734:	10c00808 	cmpgei	r3,r2,32
   2c738:	1800401e 	bne	r3,zero,2c83c <__muldf3+0x5fc>
   2c73c:	42010784 	addi	r8,r8,1054
   2c740:	8206983a 	sll	r3,r16,r8
   2c744:	9088d83a 	srl	r4,r18,r2
   2c748:	9210983a 	sll	r8,r18,r8
   2c74c:	80a0d83a 	srl	r16,r16,r2
   2c750:	1904b03a 	or	r2,r3,r4
   2c754:	4024c03a 	cmpne	r18,r8,zero
   2c758:	1484b03a 	or	r2,r2,r18
   2c75c:	10c001cc 	andi	r3,r2,7
   2c760:	18000726 	beq	r3,zero,2c780 <__muldf3+0x540>
   2c764:	10c003cc 	andi	r3,r2,15
   2c768:	18c00120 	cmpeqi	r3,r3,4
   2c76c:	1800041e 	bne	r3,zero,2c780 <__muldf3+0x540>
   2c770:	10c00104 	addi	r3,r2,4
   2c774:	1885803a 	cmpltu	r2,r3,r2
   2c778:	80a1883a 	add	r16,r16,r2
   2c77c:	1805883a 	mov	r2,r3
   2c780:	80c0202c 	andhi	r3,r16,128
   2c784:	18004226 	beq	r3,zero,2c890 <__muldf3+0x650>
   2c788:	00c00044 	movi	r3,1
   2c78c:	0021883a 	mov	r16,zero
   2c790:	0025883a 	mov	r18,zero
   2c794:	003eff06 	br	2c394 <__muldf3+0x154>
   2c798:	8080022c 	andhi	r2,r16,8
   2c79c:	10000926 	beq	r2,zero,2c7c4 <__muldf3+0x584>
   2c7a0:	8880022c 	andhi	r2,r17,8
   2c7a4:	1000071e 	bne	r2,zero,2c7c4 <__muldf3+0x584>
   2c7a8:	00800434 	movhi	r2,16
   2c7ac:	8c000234 	orhi	r16,r17,8
   2c7b0:	10bfffc4 	addi	r2,r2,-1
   2c7b4:	80a0703a 	and	r16,r16,r2
   2c7b8:	b80d883a 	mov	r6,r23
   2c7bc:	2825883a 	mov	r18,r5
   2c7c0:	003fd606 	br	2c71c <__muldf3+0x4dc>
   2c7c4:	00800434 	movhi	r2,16
   2c7c8:	84000234 	orhi	r16,r16,8
   2c7cc:	10bfffc4 	addi	r2,r2,-1
   2c7d0:	80a0703a 	and	r16,r16,r2
   2c7d4:	a00d883a 	mov	r6,r20
   2c7d8:	003fd006 	br	2c71c <__muldf3+0x4dc>
   2c7dc:	002d3dc0 	call	2d3dc <__clzsi2>
   2c7e0:	11000544 	addi	r4,r2,21
   2c7e4:	21400748 	cmpgei	r5,r4,29
   2c7e8:	1007883a 	mov	r3,r2
   2c7ec:	d9c00017 	ldw	r7,0(sp)
   2c7f0:	10800804 	addi	r2,r2,32
   2c7f4:	283f9526 	beq	r5,zero,2c64c <__muldf3+0x40c>
   2c7f8:	18fffe04 	addi	r3,r3,-8
   2c7fc:	98e0983a 	sll	r16,r19,r3
   2c800:	0025883a 	mov	r18,zero
   2c804:	003f9806 	br	2c668 <__muldf3+0x428>
   2c808:	e009883a 	mov	r4,fp
   2c80c:	002d3dc0 	call	2d3dc <__clzsi2>
   2c810:	11800544 	addi	r6,r2,21
   2c814:	31000748 	cmpgei	r4,r6,29
   2c818:	1007883a 	mov	r3,r2
   2c81c:	10800804 	addi	r2,r2,32
   2c820:	203f7726 	beq	r4,zero,2c600 <__muldf3+0x3c0>
   2c824:	1c7ffe04 	addi	r17,r3,-8
   2c828:	e462983a 	sll	r17,fp,r17
   2c82c:	000b883a 	mov	r5,zero
   2c830:	003f7a06 	br	2c61c <__muldf3+0x3dc>
   2c834:	9811883a 	mov	r8,r19
   2c838:	003f5106 	br	2c580 <__muldf3+0x340>
   2c83c:	00fff844 	movi	r3,-31
   2c840:	1907c83a 	sub	r3,r3,r4
   2c844:	10800820 	cmpeqi	r2,r2,32
   2c848:	80c6d83a 	srl	r3,r16,r3
   2c84c:	1000031e 	bne	r2,zero,2c85c <__muldf3+0x61c>
   2c850:	42010f84 	addi	r8,r8,1086
   2c854:	8220983a 	sll	r16,r16,r8
   2c858:	9424b03a 	or	r18,r18,r16
   2c85c:	9024c03a 	cmpne	r18,r18,zero
   2c860:	90c4b03a 	or	r2,r18,r3
   2c864:	148001cc 	andi	r18,r2,7
   2c868:	9000051e 	bne	r18,zero,2c880 <__muldf3+0x640>
   2c86c:	0021883a 	mov	r16,zero
   2c870:	1004d0fa 	srli	r2,r2,3
   2c874:	0007883a 	mov	r3,zero
   2c878:	14a4b03a 	or	r18,r2,r18
   2c87c:	003ec506 	br	2c394 <__muldf3+0x154>
   2c880:	10c003cc 	andi	r3,r2,15
   2c884:	18c00118 	cmpnei	r3,r3,4
   2c888:	0021883a 	mov	r16,zero
   2c88c:	183fb81e 	bne	r3,zero,2c770 <__muldf3+0x530>
   2c890:	8006927a 	slli	r3,r16,9
   2c894:	8024977a 	slli	r18,r16,29
   2c898:	1820d33a 	srli	r16,r3,12
   2c89c:	003ff406 	br	2c870 <__muldf3+0x630>
   2c8a0:	00800434 	movhi	r2,16
   2c8a4:	84000234 	orhi	r16,r16,8
   2c8a8:	10bfffc4 	addi	r2,r2,-1
   2c8ac:	80a0703a 	and	r16,r16,r2
   2c8b0:	003f9a06 	br	2c71c <__muldf3+0x4dc>

0002c8b4 <__subdf3>:
   2c8b4:	00800434 	movhi	r2,16
   2c8b8:	defffb04 	addi	sp,sp,-20
   2c8bc:	3812d53a 	srli	r9,r7,20
   2c8c0:	10bfffc4 	addi	r2,r2,-1
   2c8c4:	2886703a 	and	r3,r5,r2
   2c8c8:	dc000015 	stw	r16,0(sp)
   2c8cc:	3884703a 	and	r2,r7,r2
   2c8d0:	2820d53a 	srli	r16,r5,20
   2c8d4:	3014d77a 	srli	r10,r6,29
   2c8d8:	280ad7fa 	srli	r5,r5,31
   2c8dc:	180690fa 	slli	r3,r3,3
   2c8e0:	2016d77a 	srli	r11,r4,29
   2c8e4:	100490fa 	slli	r2,r2,3
   2c8e8:	4a41ffcc 	andi	r9,r9,2047
   2c8ec:	dc800215 	stw	r18,8(sp)
   2c8f0:	8401ffcc 	andi	r16,r16,2047
   2c8f4:	dfc00415 	stw	ra,16(sp)
   2c8f8:	dcc00315 	stw	r19,12(sp)
   2c8fc:	dc400115 	stw	r17,4(sp)
   2c900:	4b01ffd8 	cmpnei	r12,r9,2047
   2c904:	3810d7fa 	srli	r8,r7,31
   2c908:	2825883a 	mov	r18,r5
   2c90c:	5084b03a 	or	r2,r10,r2
   2c910:	201c90fa 	slli	r14,r4,3
   2c914:	301a90fa 	slli	r13,r6,3
   2c918:	29403fcc 	andi	r5,r5,255
   2c91c:	58ceb03a 	or	r7,r11,r3
   2c920:	8255c83a 	sub	r10,r16,r9
   2c924:	60006826 	beq	r12,zero,2cac8 <__subdf3+0x214>
   2c928:	42c0005c 	xori	r11,r8,1
   2c92c:	2ac07326 	beq	r5,r11,2cafc <__subdf3+0x248>
   2c930:	0280590e 	bge	zero,r10,2ca98 <__subdf3+0x1e4>
   2c934:	4800691e 	bne	r9,zero,2cadc <__subdf3+0x228>
   2c938:	1346b03a 	or	r3,r2,r13
   2c93c:	1800e826 	beq	r3,zero,2cce0 <__subdf3+0x42c>
   2c940:	50ffffc4 	addi	r3,r10,-1
   2c944:	18018126 	beq	r3,zero,2cf4c <__subdf3+0x698>
   2c948:	5281ffd8 	cmpnei	r10,r10,2047
   2c94c:	5000eb26 	beq	r10,zero,2ccfc <__subdf3+0x448>
   2c950:	1815883a 	mov	r10,r3
   2c954:	50c00e48 	cmpgei	r3,r10,57
   2c958:	1800651e 	bne	r3,zero,2caf0 <__subdf3+0x23c>
   2c95c:	50c00808 	cmpgei	r3,r10,32
   2c960:	18012a1e 	bne	r3,zero,2ce0c <__subdf3+0x558>
   2c964:	00c00804 	movi	r3,32
   2c968:	1a87c83a 	sub	r3,r3,r10
   2c96c:	10e2983a 	sll	r17,r2,r3
   2c970:	6a88d83a 	srl	r4,r13,r10
   2c974:	68da983a 	sll	r13,r13,r3
   2c978:	1284d83a 	srl	r2,r2,r10
   2c97c:	8922b03a 	or	r17,r17,r4
   2c980:	681ac03a 	cmpne	r13,r13,zero
   2c984:	8b62b03a 	or	r17,r17,r13
   2c988:	388fc83a 	sub	r7,r7,r2
   2c98c:	7463c83a 	sub	r17,r14,r17
   2c990:	7445803a 	cmpltu	r2,r14,r17
   2c994:	3889c83a 	sub	r4,r7,r2
   2c998:	2080202c 	andhi	r2,r4,128
   2c99c:	10008e26 	beq	r2,zero,2cbd8 <__subdf3+0x324>
   2c9a0:	04c02034 	movhi	r19,128
   2c9a4:	9cffffc4 	addi	r19,r19,-1
   2c9a8:	24e6703a 	and	r19,r4,r19
   2c9ac:	9800a626 	beq	r19,zero,2cc48 <__subdf3+0x394>
   2c9b0:	9809883a 	mov	r4,r19
   2c9b4:	002d3dc0 	call	2d3dc <__clzsi2>
   2c9b8:	117ffe04 	addi	r5,r2,-8
   2c9bc:	01000804 	movi	r4,32
   2c9c0:	2149c83a 	sub	r4,r4,r5
   2c9c4:	8908d83a 	srl	r4,r17,r4
   2c9c8:	9944983a 	sll	r2,r19,r5
   2c9cc:	8962983a 	sll	r17,r17,r5
   2c9d0:	2084b03a 	or	r2,r4,r2
   2c9d4:	2c00a516 	blt	r5,r16,2cc6c <__subdf3+0x3b8>
   2c9d8:	2c0bc83a 	sub	r5,r5,r16
   2c9dc:	29000044 	addi	r4,r5,1
   2c9e0:	20c00808 	cmpgei	r3,r4,32
   2c9e4:	1800701e 	bne	r3,zero,2cba8 <__subdf3+0x2f4>
   2c9e8:	00c00804 	movi	r3,32
   2c9ec:	1907c83a 	sub	r3,r3,r4
   2c9f0:	890ad83a 	srl	r5,r17,r4
   2c9f4:	88e2983a 	sll	r17,r17,r3
   2c9f8:	10c6983a 	sll	r3,r2,r3
   2c9fc:	1108d83a 	srl	r4,r2,r4
   2ca00:	8822c03a 	cmpne	r17,r17,zero
   2ca04:	1946b03a 	or	r3,r3,r5
   2ca08:	1c62b03a 	or	r17,r3,r17
   2ca0c:	0021883a 	mov	r16,zero
   2ca10:	888001cc 	andi	r2,r17,7
   2ca14:	10000726 	beq	r2,zero,2ca34 <__subdf3+0x180>
   2ca18:	888003cc 	andi	r2,r17,15
   2ca1c:	10800120 	cmpeqi	r2,r2,4
   2ca20:	1000041e 	bne	r2,zero,2ca34 <__subdf3+0x180>
   2ca24:	88800104 	addi	r2,r17,4
   2ca28:	1463803a 	cmpltu	r17,r2,r17
   2ca2c:	2449883a 	add	r4,r4,r17
   2ca30:	1023883a 	mov	r17,r2
   2ca34:	2080202c 	andhi	r2,r4,128
   2ca38:	10006926 	beq	r2,zero,2cbe0 <__subdf3+0x32c>
   2ca3c:	84000044 	addi	r16,r16,1
   2ca40:	8081ffe0 	cmpeqi	r2,r16,2047
   2ca44:	8401ffcc 	andi	r16,r16,2047
   2ca48:	10007b1e 	bne	r2,zero,2cc38 <__subdf3+0x384>
   2ca4c:	00bfe034 	movhi	r2,65408
   2ca50:	10bfffc4 	addi	r2,r2,-1
   2ca54:	2084703a 	and	r2,r4,r2
   2ca58:	1006927a 	slli	r3,r2,9
   2ca5c:	8822d0fa 	srli	r17,r17,3
   2ca60:	1008977a 	slli	r4,r2,29
   2ca64:	1806d33a 	srli	r3,r3,12
   2ca68:	2444b03a 	or	r2,r4,r17
   2ca6c:	8020953a 	slli	r16,r16,20
   2ca70:	902497fa 	slli	r18,r18,31
   2ca74:	80c6b03a 	or	r3,r16,r3
   2ca78:	1c86b03a 	or	r3,r3,r18
   2ca7c:	dfc00417 	ldw	ra,16(sp)
   2ca80:	dcc00317 	ldw	r19,12(sp)
   2ca84:	dc800217 	ldw	r18,8(sp)
   2ca88:	dc400117 	ldw	r17,4(sp)
   2ca8c:	dc000017 	ldw	r16,0(sp)
   2ca90:	dec00504 	addi	sp,sp,20
   2ca94:	f800283a 	ret
   2ca98:	50002c26 	beq	r10,zero,2cb4c <__subdf3+0x298>
   2ca9c:	4c15c83a 	sub	r10,r9,r16
   2caa0:	5825883a 	mov	r18,r11
   2caa4:	8000b21e 	bne	r16,zero,2cd70 <__subdf3+0x4bc>
   2caa8:	3b86b03a 	or	r3,r7,r14
   2caac:	18010826 	beq	r3,zero,2ced0 <__subdf3+0x61c>
   2cab0:	50ffffc4 	addi	r3,r10,-1
   2cab4:	18015a26 	beq	r3,zero,2d020 <__subdf3+0x76c>
   2cab8:	5401ffd8 	cmpnei	r16,r10,2047
   2cabc:	80012926 	beq	r16,zero,2cf64 <__subdf3+0x6b0>
   2cac0:	1815883a 	mov	r10,r3
   2cac4:	0000ac06 	br	2cd78 <__subdf3+0x4c4>
   2cac8:	1346b03a 	or	r3,r2,r13
   2cacc:	183f9626 	beq	r3,zero,2c928 <__subdf3+0x74>
   2cad0:	42c03fcc 	andi	r11,r8,255
   2cad4:	2a006a26 	beq	r5,r8,2cc80 <__subdf3+0x3cc>
   2cad8:	02bfef0e 	bge	zero,r10,2ca98 <__subdf3+0x1e4>
   2cadc:	80c1ffd8 	cmpnei	r3,r16,2047
   2cae0:	18008626 	beq	r3,zero,2ccfc <__subdf3+0x448>
   2cae4:	50c00e48 	cmpgei	r3,r10,57
   2cae8:	10802034 	orhi	r2,r2,128
   2caec:	183f9b26 	beq	r3,zero,2c95c <__subdf3+0xa8>
   2caf0:	1344b03a 	or	r2,r2,r13
   2caf4:	1022c03a 	cmpne	r17,r2,zero
   2caf8:	003fa406 	br	2c98c <__subdf3+0xd8>
   2cafc:	0280600e 	bge	zero,r10,2cc80 <__subdf3+0x3cc>
   2cb00:	48002126 	beq	r9,zero,2cb88 <__subdf3+0x2d4>
   2cb04:	80c1ffd8 	cmpnei	r3,r16,2047
   2cb08:	18011d26 	beq	r3,zero,2cf80 <__subdf3+0x6cc>
   2cb0c:	10802034 	orhi	r2,r2,128
   2cb10:	50c00e48 	cmpgei	r3,r10,57
   2cb14:	18003e1e 	bne	r3,zero,2cc10 <__subdf3+0x35c>
   2cb18:	50c00808 	cmpgei	r3,r10,32
   2cb1c:	1800d526 	beq	r3,zero,2ce74 <__subdf3+0x5c0>
   2cb20:	547ff804 	addi	r17,r10,-32
   2cb24:	51000820 	cmpeqi	r4,r10,32
   2cb28:	1446d83a 	srl	r3,r2,r17
   2cb2c:	2000041e 	bne	r4,zero,2cb40 <__subdf3+0x28c>
   2cb30:	01001004 	movi	r4,64
   2cb34:	2295c83a 	sub	r10,r4,r10
   2cb38:	1284983a 	sll	r2,r2,r10
   2cb3c:	689ab03a 	or	r13,r13,r2
   2cb40:	6822c03a 	cmpne	r17,r13,zero
   2cb44:	88e2b03a 	or	r17,r17,r3
   2cb48:	00003306 	br	2cc18 <__subdf3+0x364>
   2cb4c:	80c00044 	addi	r3,r16,1
   2cb50:	18c1ff8c 	andi	r3,r3,2046
   2cb54:	1800971e 	bne	r3,zero,2cdb4 <__subdf3+0x500>
   2cb58:	1350b03a 	or	r8,r2,r13
   2cb5c:	3b86b03a 	or	r3,r7,r14
   2cb60:	8000e21e 	bne	r16,zero,2ceec <__subdf3+0x638>
   2cb64:	18012526 	beq	r3,zero,2cffc <__subdf3+0x748>
   2cb68:	4001411e 	bne	r8,zero,2d070 <__subdf3+0x7bc>
   2cb6c:	3806977a 	slli	r3,r7,29
   2cb70:	00880034 	movhi	r2,8192
   2cb74:	10bfffc4 	addi	r2,r2,-1
   2cb78:	208a703a 	and	r5,r4,r2
   2cb7c:	3810d0fa 	srli	r8,r7,3
   2cb80:	28c4b03a 	or	r2,r5,r3
   2cb84:	00001d06 	br	2cbfc <__subdf3+0x348>
   2cb88:	1346b03a 	or	r3,r2,r13
   2cb8c:	18005426 	beq	r3,zero,2cce0 <__subdf3+0x42c>
   2cb90:	50ffffc4 	addi	r3,r10,-1
   2cb94:	1800e526 	beq	r3,zero,2cf2c <__subdf3+0x678>
   2cb98:	5281ffd8 	cmpnei	r10,r10,2047
   2cb9c:	50012d26 	beq	r10,zero,2d054 <__subdf3+0x7a0>
   2cba0:	1815883a 	mov	r10,r3
   2cba4:	003fda06 	br	2cb10 <__subdf3+0x25c>
   2cba8:	297ff844 	addi	r5,r5,-31
   2cbac:	20c00820 	cmpeqi	r3,r4,32
   2cbb0:	114ad83a 	srl	r5,r2,r5
   2cbb4:	1800041e 	bne	r3,zero,2cbc8 <__subdf3+0x314>
   2cbb8:	00c01004 	movi	r3,64
   2cbbc:	1909c83a 	sub	r4,r3,r4
   2cbc0:	1104983a 	sll	r2,r2,r4
   2cbc4:	88a2b03a 	or	r17,r17,r2
   2cbc8:	8822c03a 	cmpne	r17,r17,zero
   2cbcc:	8962b03a 	or	r17,r17,r5
   2cbd0:	0009883a 	mov	r4,zero
   2cbd4:	0021883a 	mov	r16,zero
   2cbd8:	888001cc 	andi	r2,r17,7
   2cbdc:	103f8e1e 	bne	r2,zero,2ca18 <__subdf3+0x164>
   2cbe0:	8822d0fa 	srli	r17,r17,3
   2cbe4:	2004977a 	slli	r2,r4,29
   2cbe8:	2010d0fa 	srli	r8,r4,3
   2cbec:	8015883a 	mov	r10,r16
   2cbf0:	8884b03a 	or	r2,r17,r2
   2cbf4:	50c1ffe0 	cmpeqi	r3,r10,2047
   2cbf8:	18016f1e 	bne	r3,zero,2d1b8 <__subdf3+0x904>
   2cbfc:	00c00434 	movhi	r3,16
   2cc00:	18ffffc4 	addi	r3,r3,-1
   2cc04:	40c6703a 	and	r3,r8,r3
   2cc08:	5401ffcc 	andi	r16,r10,2047
   2cc0c:	003f9706 	br	2ca6c <__subdf3+0x1b8>
   2cc10:	1344b03a 	or	r2,r2,r13
   2cc14:	1022c03a 	cmpne	r17,r2,zero
   2cc18:	8ba3883a 	add	r17,r17,r14
   2cc1c:	8b85803a 	cmpltu	r2,r17,r14
   2cc20:	11c9883a 	add	r4,r2,r7
   2cc24:	2080202c 	andhi	r2,r4,128
   2cc28:	103feb26 	beq	r2,zero,2cbd8 <__subdf3+0x324>
   2cc2c:	84000044 	addi	r16,r16,1
   2cc30:	8081ffe0 	cmpeqi	r2,r16,2047
   2cc34:	10006b26 	beq	r2,zero,2cde4 <__subdf3+0x530>
   2cc38:	0401ffc4 	movi	r16,2047
   2cc3c:	0007883a 	mov	r3,zero
   2cc40:	0005883a 	mov	r2,zero
   2cc44:	003f8906 	br	2ca6c <__subdf3+0x1b8>
   2cc48:	8809883a 	mov	r4,r17
   2cc4c:	002d3dc0 	call	2d3dc <__clzsi2>
   2cc50:	11400604 	addi	r5,r2,24
   2cc54:	28c00808 	cmpgei	r3,r5,32
   2cc58:	183f5826 	beq	r3,zero,2c9bc <__subdf3+0x108>
   2cc5c:	10bffe04 	addi	r2,r2,-8
   2cc60:	8884983a 	sll	r2,r17,r2
   2cc64:	0023883a 	mov	r17,zero
   2cc68:	2c3f5b0e 	bge	r5,r16,2c9d8 <__subdf3+0x124>
   2cc6c:	013fe034 	movhi	r4,65408
   2cc70:	213fffc4 	addi	r4,r4,-1
   2cc74:	8161c83a 	sub	r16,r16,r5
   2cc78:	1108703a 	and	r4,r2,r4
   2cc7c:	003f6406 	br	2ca10 <__subdf3+0x15c>
   2cc80:	50002c26 	beq	r10,zero,2cd34 <__subdf3+0x480>
   2cc84:	4c15c83a 	sub	r10,r9,r16
   2cc88:	80007226 	beq	r16,zero,2ce54 <__subdf3+0x5a0>
   2cc8c:	6000ea26 	beq	r12,zero,2d038 <__subdf3+0x784>
   2cc90:	39c02034 	orhi	r7,r7,128
   2cc94:	50c00e48 	cmpgei	r3,r10,57
   2cc98:	1800c01e 	bne	r3,zero,2cf9c <__subdf3+0x6e8>
   2cc9c:	50c00808 	cmpgei	r3,r10,32
   2cca0:	1801261e 	bne	r3,zero,2d13c <__subdf3+0x888>
   2cca4:	00c00804 	movi	r3,32
   2cca8:	1a87c83a 	sub	r3,r3,r10
   2ccac:	38e2983a 	sll	r17,r7,r3
   2ccb0:	7288d83a 	srl	r4,r14,r10
   2ccb4:	70c6983a 	sll	r3,r14,r3
   2ccb8:	3a8ed83a 	srl	r7,r7,r10
   2ccbc:	8922b03a 	or	r17,r17,r4
   2ccc0:	1806c03a 	cmpne	r3,r3,zero
   2ccc4:	88e2b03a 	or	r17,r17,r3
   2ccc8:	11c5883a 	add	r2,r2,r7
   2cccc:	8b63883a 	add	r17,r17,r13
   2ccd0:	8b49803a 	cmpltu	r4,r17,r13
   2ccd4:	2089883a 	add	r4,r4,r2
   2ccd8:	4821883a 	mov	r16,r9
   2ccdc:	003fd106 	br	2cc24 <__subdf3+0x370>
   2cce0:	380c977a 	slli	r6,r7,29
   2cce4:	00880034 	movhi	r2,8192
   2cce8:	10bfffc4 	addi	r2,r2,-1
   2ccec:	2088703a 	and	r4,r4,r2
   2ccf0:	3810d0fa 	srli	r8,r7,3
   2ccf4:	2184b03a 	or	r2,r4,r6
   2ccf8:	003fbe06 	br	2cbf4 <__subdf3+0x340>
   2ccfc:	380c977a 	slli	r6,r7,29
   2cd00:	00880034 	movhi	r2,8192
   2cd04:	10bfffc4 	addi	r2,r2,-1
   2cd08:	380ed0fa 	srli	r7,r7,3
   2cd0c:	2084703a 	and	r2,r4,r2
   2cd10:	1184b03a 	or	r2,r2,r6
   2cd14:	3886b03a 	or	r3,r7,r2
   2cd18:	18012326 	beq	r3,zero,2d1a8 <__subdf3+0x8f4>
   2cd1c:	01000434 	movhi	r4,16
   2cd20:	38c00234 	orhi	r3,r7,8
   2cd24:	213fffc4 	addi	r4,r4,-1
   2cd28:	1906703a 	and	r3,r3,r4
   2cd2c:	0401ffc4 	movi	r16,2047
   2cd30:	003f4e06 	br	2ca6c <__subdf3+0x1b8>
   2cd34:	80c00044 	addi	r3,r16,1
   2cd38:	1941ff8c 	andi	r5,r3,2046
   2cd3c:	2800581e 	bne	r5,zero,2cea0 <__subdf3+0x5ec>
   2cd40:	3b86b03a 	or	r3,r7,r14
   2cd44:	8000a31e 	bne	r16,zero,2cfd4 <__subdf3+0x720>
   2cd48:	1800ea26 	beq	r3,zero,2d0f4 <__subdf3+0x840>
   2cd4c:	1346b03a 	or	r3,r2,r13
   2cd50:	1800ef1e 	bne	r3,zero,2d110 <__subdf3+0x85c>
   2cd54:	380a977a 	slli	r5,r7,29
   2cd58:	00880034 	movhi	r2,8192
   2cd5c:	10bfffc4 	addi	r2,r2,-1
   2cd60:	2084703a 	and	r2,r4,r2
   2cd64:	3810d0fa 	srli	r8,r7,3
   2cd68:	2884b03a 	or	r2,r5,r2
   2cd6c:	003fa306 	br	2cbfc <__subdf3+0x348>
   2cd70:	60007c26 	beq	r12,zero,2cf64 <__subdf3+0x6b0>
   2cd74:	39c02034 	orhi	r7,r7,128
   2cd78:	50c00e48 	cmpgei	r3,r10,57
   2cd7c:	18002e1e 	bne	r3,zero,2ce38 <__subdf3+0x584>
   2cd80:	50c00808 	cmpgei	r3,r10,32
   2cd84:	1800881e 	bne	r3,zero,2cfa8 <__subdf3+0x6f4>
   2cd88:	00c00804 	movi	r3,32
   2cd8c:	1a87c83a 	sub	r3,r3,r10
   2cd90:	7288d83a 	srl	r4,r14,r10
   2cd94:	38e2983a 	sll	r17,r7,r3
   2cd98:	70dc983a 	sll	r14,r14,r3
   2cd9c:	3aa0d83a 	srl	r16,r7,r10
   2cda0:	8922b03a 	or	r17,r17,r4
   2cda4:	701cc03a 	cmpne	r14,r14,zero
   2cda8:	8ba2b03a 	or	r17,r17,r14
   2cdac:	1405c83a 	sub	r2,r2,r16
   2cdb0:	00002306 	br	2ce40 <__subdf3+0x58c>
   2cdb4:	7363c83a 	sub	r17,r14,r13
   2cdb8:	3889c83a 	sub	r4,r7,r2
   2cdbc:	7467803a 	cmpltu	r19,r14,r17
   2cdc0:	24e7c83a 	sub	r19,r4,r19
   2cdc4:	98c0202c 	andhi	r3,r19,128
   2cdc8:	1800521e 	bne	r3,zero,2cf14 <__subdf3+0x660>
   2cdcc:	8cc4b03a 	or	r2,r17,r19
   2cdd0:	103ef61e 	bne	r2,zero,2c9ac <__subdf3+0xf8>
   2cdd4:	0011883a 	mov	r8,zero
   2cdd8:	0025883a 	mov	r18,zero
   2cddc:	003f8706 	br	2cbfc <__subdf3+0x348>
   2cde0:	04000084 	movi	r16,2
   2cde4:	00bfe034 	movhi	r2,65408
   2cde8:	10bfffc4 	addi	r2,r2,-1
   2cdec:	8806d07a 	srli	r3,r17,1
   2cdf0:	2084703a 	and	r2,r4,r2
   2cdf4:	100a97fa 	slli	r5,r2,31
   2cdf8:	8c40004c 	andi	r17,r17,1
   2cdfc:	1c62b03a 	or	r17,r3,r17
   2ce00:	1008d07a 	srli	r4,r2,1
   2ce04:	2c62b03a 	or	r17,r5,r17
   2ce08:	003f0106 	br	2ca10 <__subdf3+0x15c>
   2ce0c:	547ff804 	addi	r17,r10,-32
   2ce10:	51000820 	cmpeqi	r4,r10,32
   2ce14:	1446d83a 	srl	r3,r2,r17
   2ce18:	2000041e 	bne	r4,zero,2ce2c <__subdf3+0x578>
   2ce1c:	01001004 	movi	r4,64
   2ce20:	2295c83a 	sub	r10,r4,r10
   2ce24:	1284983a 	sll	r2,r2,r10
   2ce28:	689ab03a 	or	r13,r13,r2
   2ce2c:	6822c03a 	cmpne	r17,r13,zero
   2ce30:	88e2b03a 	or	r17,r17,r3
   2ce34:	003ed506 	br	2c98c <__subdf3+0xd8>
   2ce38:	3ba2b03a 	or	r17,r7,r14
   2ce3c:	8822c03a 	cmpne	r17,r17,zero
   2ce40:	6c63c83a 	sub	r17,r13,r17
   2ce44:	6c49803a 	cmpltu	r4,r13,r17
   2ce48:	1109c83a 	sub	r4,r2,r4
   2ce4c:	4821883a 	mov	r16,r9
   2ce50:	003ed106 	br	2c998 <__subdf3+0xe4>
   2ce54:	3b86b03a 	or	r3,r7,r14
   2ce58:	18001d26 	beq	r3,zero,2ced0 <__subdf3+0x61c>
   2ce5c:	50ffffc4 	addi	r3,r10,-1
   2ce60:	1800c126 	beq	r3,zero,2d168 <__subdf3+0x8b4>
   2ce64:	5281ffd8 	cmpnei	r10,r10,2047
   2ce68:	50003e26 	beq	r10,zero,2cf64 <__subdf3+0x6b0>
   2ce6c:	1815883a 	mov	r10,r3
   2ce70:	003f8806 	br	2cc94 <__subdf3+0x3e0>
   2ce74:	00c00804 	movi	r3,32
   2ce78:	1a87c83a 	sub	r3,r3,r10
   2ce7c:	10e2983a 	sll	r17,r2,r3
   2ce80:	6a88d83a 	srl	r4,r13,r10
   2ce84:	68da983a 	sll	r13,r13,r3
   2ce88:	1284d83a 	srl	r2,r2,r10
   2ce8c:	8922b03a 	or	r17,r17,r4
   2ce90:	681ac03a 	cmpne	r13,r13,zero
   2ce94:	8b62b03a 	or	r17,r17,r13
   2ce98:	388f883a 	add	r7,r7,r2
   2ce9c:	003f5e06 	br	2cc18 <__subdf3+0x364>
   2cea0:	1901ffe0 	cmpeqi	r4,r3,2047
   2cea4:	203f641e 	bne	r4,zero,2cc38 <__subdf3+0x384>
   2cea8:	735b883a 	add	r13,r14,r13
   2ceac:	6b89803a 	cmpltu	r4,r13,r14
   2ceb0:	3885883a 	add	r2,r7,r2
   2ceb4:	1105883a 	add	r2,r2,r4
   2ceb8:	102297fa 	slli	r17,r2,31
   2cebc:	681ad07a 	srli	r13,r13,1
   2cec0:	1008d07a 	srli	r4,r2,1
   2cec4:	1821883a 	mov	r16,r3
   2cec8:	8b62b03a 	or	r17,r17,r13
   2cecc:	003f4206 	br	2cbd8 <__subdf3+0x324>
   2ced0:	1008977a 	slli	r4,r2,29
   2ced4:	00c80034 	movhi	r3,8192
   2ced8:	18ffffc4 	addi	r3,r3,-1
   2cedc:	30cc703a 	and	r6,r6,r3
   2cee0:	1010d0fa 	srli	r8,r2,3
   2cee4:	3104b03a 	or	r2,r6,r4
   2cee8:	003f4206 	br	2cbf4 <__subdf3+0x340>
   2ceec:	18006c1e 	bne	r3,zero,2d0a0 <__subdf3+0x7ec>
   2cef0:	4000a826 	beq	r8,zero,2d194 <__subdf3+0x8e0>
   2cef4:	1008977a 	slli	r4,r2,29
   2cef8:	00c80034 	movhi	r3,8192
   2cefc:	18ffffc4 	addi	r3,r3,-1
   2cf00:	30c6703a 	and	r3,r6,r3
   2cf04:	100ed0fa 	srli	r7,r2,3
   2cf08:	5825883a 	mov	r18,r11
   2cf0c:	1904b03a 	or	r2,r3,r4
   2cf10:	003f8006 	br	2cd14 <__subdf3+0x460>
   2cf14:	6ba3c83a 	sub	r17,r13,r14
   2cf18:	11c5c83a 	sub	r2,r2,r7
   2cf1c:	6c49803a 	cmpltu	r4,r13,r17
   2cf20:	1127c83a 	sub	r19,r2,r4
   2cf24:	5825883a 	mov	r18,r11
   2cf28:	003ea006 	br	2c9ac <__subdf3+0xf8>
   2cf2c:	7363883a 	add	r17,r14,r13
   2cf30:	3885883a 	add	r2,r7,r2
   2cf34:	8b9d803a 	cmpltu	r14,r17,r14
   2cf38:	1389883a 	add	r4,r2,r14
   2cf3c:	2080202c 	andhi	r2,r4,128
   2cf40:	103fa71e 	bne	r2,zero,2cde0 <__subdf3+0x52c>
   2cf44:	04000044 	movi	r16,1
   2cf48:	003f2306 	br	2cbd8 <__subdf3+0x324>
   2cf4c:	7363c83a 	sub	r17,r14,r13
   2cf50:	3885c83a 	sub	r2,r7,r2
   2cf54:	745d803a 	cmpltu	r14,r14,r17
   2cf58:	1389c83a 	sub	r4,r2,r14
   2cf5c:	04000044 	movi	r16,1
   2cf60:	003e8d06 	br	2c998 <__subdf3+0xe4>
   2cf64:	1008977a 	slli	r4,r2,29
   2cf68:	00c80034 	movhi	r3,8192
   2cf6c:	18ffffc4 	addi	r3,r3,-1
   2cf70:	30c6703a 	and	r3,r6,r3
   2cf74:	100ed0fa 	srli	r7,r2,3
   2cf78:	1904b03a 	or	r2,r3,r4
   2cf7c:	003f6506 	br	2cd14 <__subdf3+0x460>
   2cf80:	380c977a 	slli	r6,r7,29
   2cf84:	00880034 	movhi	r2,8192
   2cf88:	10bfffc4 	addi	r2,r2,-1
   2cf8c:	2088703a 	and	r4,r4,r2
   2cf90:	380ed0fa 	srli	r7,r7,3
   2cf94:	2184b03a 	or	r2,r4,r6
   2cf98:	003f5e06 	br	2cd14 <__subdf3+0x460>
   2cf9c:	3ba2b03a 	or	r17,r7,r14
   2cfa0:	8822c03a 	cmpne	r17,r17,zero
   2cfa4:	003f4906 	br	2cccc <__subdf3+0x418>
   2cfa8:	547ff804 	addi	r17,r10,-32
   2cfac:	51000820 	cmpeqi	r4,r10,32
   2cfb0:	3c46d83a 	srl	r3,r7,r17
   2cfb4:	2000041e 	bne	r4,zero,2cfc8 <__subdf3+0x714>
   2cfb8:	01001004 	movi	r4,64
   2cfbc:	2295c83a 	sub	r10,r4,r10
   2cfc0:	3a8e983a 	sll	r7,r7,r10
   2cfc4:	71dcb03a 	or	r14,r14,r7
   2cfc8:	7022c03a 	cmpne	r17,r14,zero
   2cfcc:	88e2b03a 	or	r17,r17,r3
   2cfd0:	003f9b06 	br	2ce40 <__subdf3+0x58c>
   2cfd4:	18001826 	beq	r3,zero,2d038 <__subdf3+0x784>
   2cfd8:	135ab03a 	or	r13,r2,r13
   2cfdc:	380a977a 	slli	r5,r7,29
   2cfe0:	380ed0fa 	srli	r7,r7,3
   2cfe4:	6800311e 	bne	r13,zero,2d0ac <__subdf3+0x7f8>
   2cfe8:	00880034 	movhi	r2,8192
   2cfec:	10bfffc4 	addi	r2,r2,-1
   2cff0:	2084703a 	and	r2,r4,r2
   2cff4:	1144b03a 	or	r2,r2,r5
   2cff8:	003f4606 	br	2cd14 <__subdf3+0x460>
   2cffc:	40005f26 	beq	r8,zero,2d17c <__subdf3+0x8c8>
   2d000:	1008977a 	slli	r4,r2,29
   2d004:	00c80034 	movhi	r3,8192
   2d008:	18ffffc4 	addi	r3,r3,-1
   2d00c:	30cc703a 	and	r6,r6,r3
   2d010:	1010d0fa 	srli	r8,r2,3
   2d014:	5825883a 	mov	r18,r11
   2d018:	3104b03a 	or	r2,r6,r4
   2d01c:	003ef706 	br	2cbfc <__subdf3+0x348>
   2d020:	6ba3c83a 	sub	r17,r13,r14
   2d024:	11c5c83a 	sub	r2,r2,r7
   2d028:	6c5b803a 	cmpltu	r13,r13,r17
   2d02c:	1349c83a 	sub	r4,r2,r13
   2d030:	04000044 	movi	r16,1
   2d034:	003e5806 	br	2c998 <__subdf3+0xe4>
   2d038:	1006977a 	slli	r3,r2,29
   2d03c:	01080034 	movhi	r4,8192
   2d040:	213fffc4 	addi	r4,r4,-1
   2d044:	3108703a 	and	r4,r6,r4
   2d048:	100ed0fa 	srli	r7,r2,3
   2d04c:	1904b03a 	or	r2,r3,r4
   2d050:	003f3006 	br	2cd14 <__subdf3+0x460>
   2d054:	3806977a 	slli	r3,r7,29
   2d058:	00880034 	movhi	r2,8192
   2d05c:	10bfffc4 	addi	r2,r2,-1
   2d060:	2084703a 	and	r2,r4,r2
   2d064:	380ed0fa 	srli	r7,r7,3
   2d068:	10c4b03a 	or	r2,r2,r3
   2d06c:	003f2906 	br	2cd14 <__subdf3+0x460>
   2d070:	7363c83a 	sub	r17,r14,r13
   2d074:	7447803a 	cmpltu	r3,r14,r17
   2d078:	3889c83a 	sub	r4,r7,r2
   2d07c:	20c9c83a 	sub	r4,r4,r3
   2d080:	20c0202c 	andhi	r3,r4,128
   2d084:	18004026 	beq	r3,zero,2d188 <__subdf3+0x8d4>
   2d088:	6ba3c83a 	sub	r17,r13,r14
   2d08c:	11c5c83a 	sub	r2,r2,r7
   2d090:	6c5b803a 	cmpltu	r13,r13,r17
   2d094:	1349c83a 	sub	r4,r2,r13
   2d098:	5825883a 	mov	r18,r11
   2d09c:	003e5c06 	br	2ca10 <__subdf3+0x15c>
   2d0a0:	380a977a 	slli	r5,r7,29
   2d0a4:	380ed0fa 	srli	r7,r7,3
   2d0a8:	403fcf26 	beq	r8,zero,2cfe8 <__subdf3+0x734>
   2d0ac:	00c80034 	movhi	r3,8192
   2d0b0:	18ffffc4 	addi	r3,r3,-1
   2d0b4:	20c8703a 	and	r4,r4,r3
   2d0b8:	3a00022c 	andhi	r8,r7,8
   2d0bc:	2148b03a 	or	r4,r4,r5
   2d0c0:	40000826 	beq	r8,zero,2d0e4 <__subdf3+0x830>
   2d0c4:	100ad0fa 	srli	r5,r2,3
   2d0c8:	2a00022c 	andhi	r8,r5,8
   2d0cc:	4000051e 	bne	r8,zero,2d0e4 <__subdf3+0x830>
   2d0d0:	1004977a 	slli	r2,r2,29
   2d0d4:	30c6703a 	and	r3,r6,r3
   2d0d8:	5825883a 	mov	r18,r11
   2d0dc:	1888b03a 	or	r4,r3,r2
   2d0e0:	280f883a 	mov	r7,r5
   2d0e4:	380e90fa 	slli	r7,r7,3
   2d0e8:	2005883a 	mov	r2,r4
   2d0ec:	380ed0fa 	srli	r7,r7,3
   2d0f0:	003f0806 	br	2cd14 <__subdf3+0x460>
   2d0f4:	100a977a 	slli	r5,r2,29
   2d0f8:	00c80034 	movhi	r3,8192
   2d0fc:	18ffffc4 	addi	r3,r3,-1
   2d100:	30c6703a 	and	r3,r6,r3
   2d104:	1010d0fa 	srli	r8,r2,3
   2d108:	28c4b03a 	or	r2,r5,r3
   2d10c:	003ebb06 	br	2cbfc <__subdf3+0x348>
   2d110:	7363883a 	add	r17,r14,r13
   2d114:	3885883a 	add	r2,r7,r2
   2d118:	8b9d803a 	cmpltu	r14,r17,r14
   2d11c:	1389883a 	add	r4,r2,r14
   2d120:	2080202c 	andhi	r2,r4,128
   2d124:	103eac26 	beq	r2,zero,2cbd8 <__subdf3+0x324>
   2d128:	00bfe034 	movhi	r2,65408
   2d12c:	10bfffc4 	addi	r2,r2,-1
   2d130:	2088703a 	and	r4,r4,r2
   2d134:	04000044 	movi	r16,1
   2d138:	003ea706 	br	2cbd8 <__subdf3+0x324>
   2d13c:	50fff804 	addi	r3,r10,-32
   2d140:	51000820 	cmpeqi	r4,r10,32
   2d144:	38c6d83a 	srl	r3,r7,r3
   2d148:	2000041e 	bne	r4,zero,2d15c <__subdf3+0x8a8>
   2d14c:	01001004 	movi	r4,64
   2d150:	2295c83a 	sub	r10,r4,r10
   2d154:	3a8e983a 	sll	r7,r7,r10
   2d158:	71dcb03a 	or	r14,r14,r7
   2d15c:	7022c03a 	cmpne	r17,r14,zero
   2d160:	88e2b03a 	or	r17,r17,r3
   2d164:	003ed906 	br	2cccc <__subdf3+0x418>
   2d168:	7363883a 	add	r17,r14,r13
   2d16c:	3885883a 	add	r2,r7,r2
   2d170:	8b5b803a 	cmpltu	r13,r17,r13
   2d174:	1349883a 	add	r4,r2,r13
   2d178:	003f7006 	br	2cf3c <__subdf3+0x688>
   2d17c:	0005883a 	mov	r2,zero
   2d180:	0025883a 	mov	r18,zero
   2d184:	003e9d06 	br	2cbfc <__subdf3+0x348>
   2d188:	8904b03a 	or	r2,r17,r4
   2d18c:	103f1126 	beq	r2,zero,2cdd4 <__subdf3+0x520>
   2d190:	003e9106 	br	2cbd8 <__subdf3+0x324>
   2d194:	01c00434 	movhi	r7,16
   2d198:	00bfffc4 	movi	r2,-1
   2d19c:	39ffffc4 	addi	r7,r7,-1
   2d1a0:	0025883a 	mov	r18,zero
   2d1a4:	003edd06 	br	2cd1c <__subdf3+0x468>
   2d1a8:	0005883a 	mov	r2,zero
   2d1ac:	0401ffc4 	movi	r16,2047
   2d1b0:	0007883a 	mov	r3,zero
   2d1b4:	003e2d06 	br	2ca6c <__subdf3+0x1b8>
   2d1b8:	400f883a 	mov	r7,r8
   2d1bc:	003ed506 	br	2cd14 <__subdf3+0x460>

0002d1c0 <__unorddf2>:
   2d1c0:	2806d53a 	srli	r3,r5,20
   2d1c4:	3810d53a 	srli	r8,r7,20
   2d1c8:	02400434 	movhi	r9,16
   2d1cc:	18c1ffcc 	andi	r3,r3,2047
   2d1d0:	4a7fffc4 	addi	r9,r9,-1
   2d1d4:	18c1ffd8 	cmpnei	r3,r3,2047
   2d1d8:	2a4a703a 	and	r5,r5,r9
   2d1dc:	3a4e703a 	and	r7,r7,r9
   2d1e0:	4201ffcc 	andi	r8,r8,2047
   2d1e4:	18000426 	beq	r3,zero,2d1f8 <__unorddf2+0x38>
   2d1e8:	4201ffd8 	cmpnei	r8,r8,2047
   2d1ec:	40000626 	beq	r8,zero,2d208 <__unorddf2+0x48>
   2d1f0:	0005883a 	mov	r2,zero
   2d1f4:	f800283a 	ret
   2d1f8:	290ab03a 	or	r5,r5,r4
   2d1fc:	283ffa26 	beq	r5,zero,2d1e8 <__unorddf2+0x28>
   2d200:	00800044 	movi	r2,1
   2d204:	f800283a 	ret
   2d208:	398eb03a 	or	r7,r7,r6
   2d20c:	3804c03a 	cmpne	r2,r7,zero
   2d210:	f800283a 	ret

0002d214 <__fixdfsi>:
   2d214:	2806d53a 	srli	r3,r5,20
   2d218:	01800434 	movhi	r6,16
   2d21c:	31bfffc4 	addi	r6,r6,-1
   2d220:	18c1ffcc 	andi	r3,r3,2047
   2d224:	19c0ffd0 	cmplti	r7,r3,1023
   2d228:	2810d7fa 	srli	r8,r5,31
   2d22c:	298a703a 	and	r5,r5,r6
   2d230:	3800061e 	bne	r7,zero,2d24c <__fixdfsi+0x38>
   2d234:	18810790 	cmplti	r2,r3,1054
   2d238:	1000061e 	bne	r2,zero,2d254 <__fixdfsi+0x40>
   2d23c:	00a00034 	movhi	r2,32768
   2d240:	10bfffc4 	addi	r2,r2,-1
   2d244:	4085883a 	add	r2,r8,r2
   2d248:	f800283a 	ret
   2d24c:	0005883a 	mov	r2,zero
   2d250:	f800283a 	ret
   2d254:	01810cc4 	movi	r6,1075
   2d258:	30cdc83a 	sub	r6,r6,r3
   2d25c:	30800808 	cmpgei	r2,r6,32
   2d260:	29400434 	orhi	r5,r5,16
   2d264:	1000071e 	bne	r2,zero,2d284 <__fixdfsi+0x70>
   2d268:	18befb44 	addi	r2,r3,-1043
   2d26c:	2884983a 	sll	r2,r5,r2
   2d270:	2188d83a 	srl	r4,r4,r6
   2d274:	1104b03a 	or	r2,r2,r4
   2d278:	403ff526 	beq	r8,zero,2d250 <__fixdfsi+0x3c>
   2d27c:	0085c83a 	sub	r2,zero,r2
   2d280:	f800283a 	ret
   2d284:	008104c4 	movi	r2,1043
   2d288:	10c5c83a 	sub	r2,r2,r3
   2d28c:	2884d83a 	srl	r2,r5,r2
   2d290:	003ff906 	br	2d278 <__fixdfsi+0x64>

0002d294 <__floatsidf>:
   2d294:	defffd04 	addi	sp,sp,-12
   2d298:	dfc00215 	stw	ra,8(sp)
   2d29c:	dc400115 	stw	r17,4(sp)
   2d2a0:	dc000015 	stw	r16,0(sp)
   2d2a4:	20001326 	beq	r4,zero,2d2f4 <__floatsidf+0x60>
   2d2a8:	2022d7fa 	srli	r17,r4,31
   2d2ac:	2021883a 	mov	r16,r4
   2d2b0:	20002416 	blt	r4,zero,2d344 <__floatsidf+0xb0>
   2d2b4:	8009883a 	mov	r4,r16
   2d2b8:	002d3dc0 	call	2d3dc <__clzsi2>
   2d2bc:	01010784 	movi	r4,1054
   2d2c0:	2089c83a 	sub	r4,r4,r2
   2d2c4:	114002c8 	cmpgei	r5,r2,11
   2d2c8:	20c1ffcc 	andi	r3,r4,2047
   2d2cc:	2800161e 	bne	r5,zero,2d328 <__floatsidf+0x94>
   2d2d0:	010002c4 	movi	r4,11
   2d2d4:	2089c83a 	sub	r4,r4,r2
   2d2d8:	810ad83a 	srl	r5,r16,r4
   2d2dc:	01000434 	movhi	r4,16
   2d2e0:	10800544 	addi	r2,r2,21
   2d2e4:	213fffc4 	addi	r4,r4,-1
   2d2e8:	8084983a 	sll	r2,r16,r2
   2d2ec:	290a703a 	and	r5,r5,r4
   2d2f0:	00000406 	br	2d304 <__floatsidf+0x70>
   2d2f4:	0023883a 	mov	r17,zero
   2d2f8:	0007883a 	mov	r3,zero
   2d2fc:	000b883a 	mov	r5,zero
   2d300:	0005883a 	mov	r2,zero
   2d304:	1808953a 	slli	r4,r3,20
   2d308:	880697fa 	slli	r3,r17,31
   2d30c:	2148b03a 	or	r4,r4,r5
   2d310:	20c6b03a 	or	r3,r4,r3
   2d314:	dfc00217 	ldw	ra,8(sp)
   2d318:	dc400117 	ldw	r17,4(sp)
   2d31c:	dc000017 	ldw	r16,0(sp)
   2d320:	dec00304 	addi	sp,sp,12
   2d324:	f800283a 	ret
   2d328:	10bffd44 	addi	r2,r2,-11
   2d32c:	808a983a 	sll	r5,r16,r2
   2d330:	00800434 	movhi	r2,16
   2d334:	10bfffc4 	addi	r2,r2,-1
   2d338:	288a703a 	and	r5,r5,r2
   2d33c:	0005883a 	mov	r2,zero
   2d340:	003ff006 	br	2d304 <__floatsidf+0x70>
   2d344:	0121c83a 	sub	r16,zero,r4
   2d348:	003fda06 	br	2d2b4 <__floatsidf+0x20>

0002d34c <__floatunsidf>:
   2d34c:	defffe04 	addi	sp,sp,-8
   2d350:	dc000015 	stw	r16,0(sp)
   2d354:	dfc00115 	stw	ra,4(sp)
   2d358:	2021883a 	mov	r16,r4
   2d35c:	20000f26 	beq	r4,zero,2d39c <__floatunsidf+0x50>
   2d360:	002d3dc0 	call	2d3dc <__clzsi2>
   2d364:	00c10784 	movi	r3,1054
   2d368:	1887c83a 	sub	r3,r3,r2
   2d36c:	110002c8 	cmpgei	r4,r2,11
   2d370:	18c1ffcc 	andi	r3,r3,2047
   2d374:	2000121e 	bne	r4,zero,2d3c0 <__floatunsidf+0x74>
   2d378:	014002c4 	movi	r5,11
   2d37c:	288bc83a 	sub	r5,r5,r2
   2d380:	814ad83a 	srl	r5,r16,r5
   2d384:	01000434 	movhi	r4,16
   2d388:	10800544 	addi	r2,r2,21
   2d38c:	213fffc4 	addi	r4,r4,-1
   2d390:	80a0983a 	sll	r16,r16,r2
   2d394:	290a703a 	and	r5,r5,r4
   2d398:	00000206 	br	2d3a4 <__floatunsidf+0x58>
   2d39c:	0007883a 	mov	r3,zero
   2d3a0:	000b883a 	mov	r5,zero
   2d3a4:	1806953a 	slli	r3,r3,20
   2d3a8:	8005883a 	mov	r2,r16
   2d3ac:	1946b03a 	or	r3,r3,r5
   2d3b0:	dfc00117 	ldw	ra,4(sp)
   2d3b4:	dc000017 	ldw	r16,0(sp)
   2d3b8:	dec00204 	addi	sp,sp,8
   2d3bc:	f800283a 	ret
   2d3c0:	117ffd44 	addi	r5,r2,-11
   2d3c4:	814a983a 	sll	r5,r16,r5
   2d3c8:	00800434 	movhi	r2,16
   2d3cc:	10bfffc4 	addi	r2,r2,-1
   2d3d0:	288a703a 	and	r5,r5,r2
   2d3d4:	0021883a 	mov	r16,zero
   2d3d8:	003ff206 	br	2d3a4 <__floatunsidf+0x58>

0002d3dc <__clzsi2>:
   2d3dc:	00bfffd4 	movui	r2,65535
   2d3e0:	11000436 	bltu	r2,r4,2d3f4 <__clzsi2+0x18>
   2d3e4:	20804030 	cmpltui	r2,r4,256
   2d3e8:	10000e26 	beq	r2,zero,2d424 <__clzsi2+0x48>
   2d3ec:	01400804 	movi	r5,32
   2d3f0:	00000406 	br	2d404 <__clzsi2+0x28>
   2d3f4:	00804034 	movhi	r2,256
   2d3f8:	20800736 	bltu	r4,r2,2d418 <__clzsi2+0x3c>
   2d3fc:	2008d63a 	srli	r4,r4,24
   2d400:	01400204 	movi	r5,8
   2d404:	00c000f4 	movhi	r3,3
   2d408:	20c7883a 	add	r3,r4,r3
   2d40c:	18811603 	ldbu	r2,1112(r3)
   2d410:	2885c83a 	sub	r2,r5,r2
   2d414:	f800283a 	ret
   2d418:	2008d43a 	srli	r4,r4,16
   2d41c:	01400404 	movi	r5,16
   2d420:	003ff806 	br	2d404 <__clzsi2+0x28>
   2d424:	2008d23a 	srli	r4,r4,8
   2d428:	01400604 	movi	r5,24
   2d42c:	003ff506 	br	2d404 <__clzsi2+0x28>

0002d430 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   2d430:	defffe04 	addi	sp,sp,-8
   2d434:	dfc00115 	stw	ra,4(sp)
   2d438:	df000015 	stw	fp,0(sp)
   2d43c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2d440:	d0a00917 	ldw	r2,-32732(gp)
   2d444:	10000326 	beq	r2,zero,2d454 <alt_get_errno+0x24>
   2d448:	d0a00917 	ldw	r2,-32732(gp)
   2d44c:	103ee83a 	callr	r2
   2d450:	00000106 	br	2d458 <alt_get_errno+0x28>
   2d454:	d0a70904 	addi	r2,gp,-25564
}
   2d458:	e037883a 	mov	sp,fp
   2d45c:	dfc00117 	ldw	ra,4(sp)
   2d460:	df000017 	ldw	fp,0(sp)
   2d464:	dec00204 	addi	sp,sp,8
   2d468:	f800283a 	ret

0002d46c <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
   2d46c:	defffb04 	addi	sp,sp,-20
   2d470:	dfc00415 	stw	ra,16(sp)
   2d474:	df000315 	stw	fp,12(sp)
   2d478:	df000304 	addi	fp,sp,12
   2d47c:	e13ffd15 	stw	r4,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
   2d480:	e0bffd17 	ldw	r2,-12(fp)
   2d484:	10000616 	blt	r2,zero,2d4a0 <close+0x34>
   2d488:	e0bffd17 	ldw	r2,-12(fp)
   2d48c:	10c00324 	muli	r3,r2,12
   2d490:	008000f4 	movhi	r2,3
   2d494:	1083d104 	addi	r2,r2,3908
   2d498:	1885883a 	add	r2,r3,r2
   2d49c:	00000106 	br	2d4a4 <close+0x38>
   2d4a0:	0005883a 	mov	r2,zero
   2d4a4:	e0bfff15 	stw	r2,-4(fp)

  if (fd)
   2d4a8:	e0bfff17 	ldw	r2,-4(fp)
   2d4ac:	10001926 	beq	r2,zero,2d514 <close+0xa8>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
   2d4b0:	e0bfff17 	ldw	r2,-4(fp)
   2d4b4:	10800017 	ldw	r2,0(r2)
   2d4b8:	10800417 	ldw	r2,16(r2)
   2d4bc:	10000626 	beq	r2,zero,2d4d8 <close+0x6c>
   2d4c0:	e0bfff17 	ldw	r2,-4(fp)
   2d4c4:	10800017 	ldw	r2,0(r2)
   2d4c8:	10800417 	ldw	r2,16(r2)
   2d4cc:	e13fff17 	ldw	r4,-4(fp)
   2d4d0:	103ee83a 	callr	r2
   2d4d4:	00000106 	br	2d4dc <close+0x70>
   2d4d8:	0005883a 	mov	r2,zero
   2d4dc:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
   2d4e0:	e13ffd17 	ldw	r4,-12(fp)
   2d4e4:	002dcec0 	call	2dcec <alt_release_fd>
    if (rval < 0)
   2d4e8:	e0bffe17 	ldw	r2,-8(fp)
   2d4ec:	1000070e 	bge	r2,zero,2d50c <close+0xa0>
    {
      ALT_ERRNO = -rval;
   2d4f0:	002d4300 	call	2d430 <alt_get_errno>
   2d4f4:	1007883a 	mov	r3,r2
   2d4f8:	e0bffe17 	ldw	r2,-8(fp)
   2d4fc:	0085c83a 	sub	r2,zero,r2
   2d500:	18800015 	stw	r2,0(r3)
      return -1;
   2d504:	00bfffc4 	movi	r2,-1
   2d508:	00000706 	br	2d528 <close+0xbc>
    }
    return 0;
   2d50c:	0005883a 	mov	r2,zero
   2d510:	00000506 	br	2d528 <close+0xbc>
  }
  else
  {
    ALT_ERRNO = EBADFD;
   2d514:	002d4300 	call	2d430 <alt_get_errno>
   2d518:	1007883a 	mov	r3,r2
   2d51c:	00801444 	movi	r2,81
   2d520:	18800015 	stw	r2,0(r3)
    return -1;
   2d524:	00bfffc4 	movi	r2,-1
  }
}
   2d528:	e037883a 	mov	sp,fp
   2d52c:	dfc00117 	ldw	ra,4(sp)
   2d530:	df000017 	ldw	fp,0(sp)
   2d534:	dec00204 	addi	sp,sp,8
   2d538:	f800283a 	ret

0002d53c <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
   2d53c:	defffc04 	addi	sp,sp,-16
   2d540:	df000315 	stw	fp,12(sp)
   2d544:	df000304 	addi	fp,sp,12
   2d548:	e13fff15 	stw	r4,-4(fp)
   2d54c:	e17ffe15 	stw	r5,-8(fp)
   2d550:	e1bffd15 	stw	r6,-12(fp)
  return len;
   2d554:	e0bffd17 	ldw	r2,-12(fp)
}
   2d558:	e037883a 	mov	sp,fp
   2d55c:	df000017 	ldw	fp,0(sp)
   2d560:	dec00104 	addi	sp,sp,4
   2d564:	f800283a 	ret

0002d568 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
   2d568:	defffd04 	addi	sp,sp,-12
   2d56c:	df000215 	stw	fp,8(sp)
   2d570:	df000204 	addi	fp,sp,8
   2d574:	e13ffe15 	stw	r4,-8(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
   2d578:	0001883a 	nop
   2d57c:	e0bffe17 	ldw	r2,-8(fp)
   2d580:	e0bfff15 	stw	r2,-4(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
   2d584:	e0bfff17 	ldw	r2,-4(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
   2d588:	10000226 	beq	r2,zero,2d594 <_exit+0x2c>
    ALT_SIM_FAIL();
   2d58c:	002af070 	cmpltui	zero,zero,43969
  } else {
    ALT_SIM_PASS();
  }
#endif /* DEBUG_STUB */
}
   2d590:	00000106 	br	2d598 <_exit+0x30>
    ALT_SIM_PASS();
   2d594:	002af0b0 	cmpltui	zero,zero,43970
}
   2d598:	0001883a 	nop
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
   2d59c:	003fff06 	br	2d59c <_exit+0x34>

0002d5a0 <alt_get_errno>:
{
   2d5a0:	defffe04 	addi	sp,sp,-8
   2d5a4:	dfc00115 	stw	ra,4(sp)
   2d5a8:	df000015 	stw	fp,0(sp)
   2d5ac:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2d5b0:	d0a00917 	ldw	r2,-32732(gp)
   2d5b4:	10000326 	beq	r2,zero,2d5c4 <alt_get_errno+0x24>
   2d5b8:	d0a00917 	ldw	r2,-32732(gp)
   2d5bc:	103ee83a 	callr	r2
   2d5c0:	00000106 	br	2d5c8 <alt_get_errno+0x28>
   2d5c4:	d0a70904 	addi	r2,gp,-25564
}
   2d5c8:	e037883a 	mov	sp,fp
   2d5cc:	dfc00117 	ldw	ra,4(sp)
   2d5d0:	df000017 	ldw	fp,0(sp)
   2d5d4:	dec00204 	addi	sp,sp,8
   2d5d8:	f800283a 	ret

0002d5dc <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
   2d5dc:	defffb04 	addi	sp,sp,-20
   2d5e0:	dfc00415 	stw	ra,16(sp)
   2d5e4:	df000315 	stw	fp,12(sp)
   2d5e8:	df000304 	addi	fp,sp,12
   2d5ec:	e13ffe15 	stw	r4,-8(fp)
   2d5f0:	e17ffd15 	stw	r5,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   2d5f4:	e0bffe17 	ldw	r2,-8(fp)
   2d5f8:	10000616 	blt	r2,zero,2d614 <fstat+0x38>
   2d5fc:	e0bffe17 	ldw	r2,-8(fp)
   2d600:	10c00324 	muli	r3,r2,12
   2d604:	008000f4 	movhi	r2,3
   2d608:	1083d104 	addi	r2,r2,3908
   2d60c:	1885883a 	add	r2,r3,r2
   2d610:	00000106 	br	2d618 <fstat+0x3c>
   2d614:	0005883a 	mov	r2,zero
   2d618:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
   2d61c:	e0bfff17 	ldw	r2,-4(fp)
   2d620:	10001026 	beq	r2,zero,2d664 <fstat+0x88>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
   2d624:	e0bfff17 	ldw	r2,-4(fp)
   2d628:	10800017 	ldw	r2,0(r2)
   2d62c:	10800817 	ldw	r2,32(r2)
   2d630:	10000726 	beq	r2,zero,2d650 <fstat+0x74>
    {
      return fd->dev->fstat(fd, st);
   2d634:	e0bfff17 	ldw	r2,-4(fp)
   2d638:	10800017 	ldw	r2,0(r2)
   2d63c:	10800817 	ldw	r2,32(r2)
   2d640:	e17ffd17 	ldw	r5,-12(fp)
   2d644:	e13fff17 	ldw	r4,-4(fp)
   2d648:	103ee83a 	callr	r2
   2d64c:	00000a06 	br	2d678 <fstat+0x9c>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
   2d650:	e0bffd17 	ldw	r2,-12(fp)
   2d654:	00c80004 	movi	r3,8192
   2d658:	10c00115 	stw	r3,4(r2)
      return 0;
   2d65c:	0005883a 	mov	r2,zero
   2d660:	00000506 	br	2d678 <fstat+0x9c>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
   2d664:	002d5a00 	call	2d5a0 <alt_get_errno>
   2d668:	1007883a 	mov	r3,r2
   2d66c:	00801444 	movi	r2,81
   2d670:	18800015 	stw	r2,0(r3)
    return -1;
   2d674:	00bfffc4 	movi	r2,-1
  }
}
   2d678:	e037883a 	mov	sp,fp
   2d67c:	dfc00117 	ldw	ra,4(sp)
   2d680:	df000017 	ldw	fp,0(sp)
   2d684:	dec00204 	addi	sp,sp,8
   2d688:	f800283a 	ret

0002d68c <getpid>:
 *
 * ALT_GETPID is mapped onto the getpid() system call in alt_syscall.h
 */
 
int ALT_GETPID (void)
{
   2d68c:	deffff04 	addi	sp,sp,-4
   2d690:	df000015 	stw	fp,0(sp)
   2d694:	d839883a 	mov	fp,sp
  return 0;
   2d698:	0005883a 	mov	r2,zero
}
   2d69c:	e037883a 	mov	sp,fp
   2d6a0:	df000017 	ldw	fp,0(sp)
   2d6a4:	dec00104 	addi	sp,sp,4
   2d6a8:	f800283a 	ret

0002d6ac <alt_get_errno>:
{
   2d6ac:	defffe04 	addi	sp,sp,-8
   2d6b0:	dfc00115 	stw	ra,4(sp)
   2d6b4:	df000015 	stw	fp,0(sp)
   2d6b8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2d6bc:	d0a00917 	ldw	r2,-32732(gp)
   2d6c0:	10000326 	beq	r2,zero,2d6d0 <alt_get_errno+0x24>
   2d6c4:	d0a00917 	ldw	r2,-32732(gp)
   2d6c8:	103ee83a 	callr	r2
   2d6cc:	00000106 	br	2d6d4 <alt_get_errno+0x28>
   2d6d0:	d0a70904 	addi	r2,gp,-25564
}
   2d6d4:	e037883a 	mov	sp,fp
   2d6d8:	dfc00117 	ldw	ra,4(sp)
   2d6dc:	df000017 	ldw	fp,0(sp)
   2d6e0:	dec00204 	addi	sp,sp,8
   2d6e4:	f800283a 	ret

0002d6e8 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
   2d6e8:	deffea04 	addi	sp,sp,-88
   2d6ec:	dfc01515 	stw	ra,84(sp)
   2d6f0:	df001415 	stw	fp,80(sp)
   2d6f4:	df001404 	addi	fp,sp,80
   2d6f8:	e13fec15 	stw	r4,-80(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   2d6fc:	e0bfec17 	ldw	r2,-80(fp)
   2d700:	10000616 	blt	r2,zero,2d71c <isatty+0x34>
   2d704:	e0bfec17 	ldw	r2,-80(fp)
   2d708:	10c00324 	muli	r3,r2,12
   2d70c:	008000f4 	movhi	r2,3
   2d710:	1083d104 	addi	r2,r2,3908
   2d714:	1885883a 	add	r2,r3,r2
   2d718:	00000106 	br	2d720 <isatty+0x38>
   2d71c:	0005883a 	mov	r2,zero
   2d720:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
   2d724:	e0bfff17 	ldw	r2,-4(fp)
   2d728:	10000e26 	beq	r2,zero,2d764 <isatty+0x7c>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
   2d72c:	e0bfff17 	ldw	r2,-4(fp)
   2d730:	10800017 	ldw	r2,0(r2)
   2d734:	10800817 	ldw	r2,32(r2)
   2d738:	1000021e 	bne	r2,zero,2d744 <isatty+0x5c>
    {
      return 1;
   2d73c:	00800044 	movi	r2,1
   2d740:	00000d06 	br	2d778 <isatty+0x90>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
   2d744:	e0bfed04 	addi	r2,fp,-76
   2d748:	100b883a 	mov	r5,r2
   2d74c:	e13fec17 	ldw	r4,-80(fp)
   2d750:	002d5dc0 	call	2d5dc <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
   2d754:	e0bfee17 	ldw	r2,-72(fp)
   2d758:	10880020 	cmpeqi	r2,r2,8192
   2d75c:	10803fcc 	andi	r2,r2,255
   2d760:	00000506 	br	2d778 <isatty+0x90>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
   2d764:	002d6ac0 	call	2d6ac <alt_get_errno>
   2d768:	1007883a 	mov	r3,r2
   2d76c:	00801444 	movi	r2,81
   2d770:	18800015 	stw	r2,0(r3)
    return 0;
   2d774:	0005883a 	mov	r2,zero
  }
}
   2d778:	e037883a 	mov	sp,fp
   2d77c:	dfc00117 	ldw	ra,4(sp)
   2d780:	df000017 	ldw	fp,0(sp)
   2d784:	dec00204 	addi	sp,sp,8
   2d788:	f800283a 	ret

0002d78c <alt_get_errno>:
{
   2d78c:	defffe04 	addi	sp,sp,-8
   2d790:	dfc00115 	stw	ra,4(sp)
   2d794:	df000015 	stw	fp,0(sp)
   2d798:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2d79c:	d0a00917 	ldw	r2,-32732(gp)
   2d7a0:	10000326 	beq	r2,zero,2d7b0 <alt_get_errno+0x24>
   2d7a4:	d0a00917 	ldw	r2,-32732(gp)
   2d7a8:	103ee83a 	callr	r2
   2d7ac:	00000106 	br	2d7b4 <alt_get_errno+0x28>
   2d7b0:	d0a70904 	addi	r2,gp,-25564
}
   2d7b4:	e037883a 	mov	sp,fp
   2d7b8:	dfc00117 	ldw	ra,4(sp)
   2d7bc:	df000017 	ldw	fp,0(sp)
   2d7c0:	dec00204 	addi	sp,sp,8
   2d7c4:	f800283a 	ret

0002d7c8 <kill>:
 *
 * ALT_KILL is mapped onto the kill() system call in alt_syscall.h
 */

int ALT_KILL (int pid, int sig)
{
   2d7c8:	defffb04 	addi	sp,sp,-20
   2d7cc:	dfc00415 	stw	ra,16(sp)
   2d7d0:	df000315 	stw	fp,12(sp)
   2d7d4:	df000304 	addi	fp,sp,12
   2d7d8:	e13ffe15 	stw	r4,-8(fp)
   2d7dc:	e17ffd15 	stw	r5,-12(fp)
  int status = 0;
   2d7e0:	e03fff15 	stw	zero,-4(fp)

  if (pid <= 0)
   2d7e4:	e0bffe17 	ldw	r2,-8(fp)
   2d7e8:	00802e16 	blt	zero,r2,2d8a4 <kill+0xdc>
  {
    switch (sig)
   2d7ec:	e0bffd17 	ldw	r2,-12(fp)
   2d7f0:	10800828 	cmpgeui	r2,r2,32
   2d7f4:	1000281e 	bne	r2,zero,2d898 <kill+0xd0>
   2d7f8:	e0bffd17 	ldw	r2,-12(fp)
   2d7fc:	100690ba 	slli	r3,r2,2
   2d800:	008000f4 	movhi	r2,3
   2d804:	1885883a 	add	r2,r3,r2
   2d808:	10b60417 	ldw	r2,-10224(r2)
   2d80c:	1000683a 	jmp	r2
   2d810:	0002d8b8 	rdprs	zero,zero,2914
   2d814:	0002d898 	cmpnei	zero,zero,2914
   2d818:	0002d898 	cmpnei	zero,zero,2914
   2d81c:	0002d890 	cmplti	zero,zero,2914
   2d820:	0002d890 	cmplti	zero,zero,2914
   2d824:	0002d890 	cmplti	zero,zero,2914
   2d828:	0002d890 	cmplti	zero,zero,2914
   2d82c:	0002d898 	cmpnei	zero,zero,2914
   2d830:	0002d890 	cmplti	zero,zero,2914
   2d834:	0002d890 	cmplti	zero,zero,2914
   2d838:	0002d890 	cmplti	zero,zero,2914
   2d83c:	0002d890 	cmplti	zero,zero,2914
   2d840:	0002d890 	cmplti	zero,zero,2914
   2d844:	0002d890 	cmplti	zero,zero,2914
   2d848:	0002d890 	cmplti	zero,zero,2914
   2d84c:	0002d890 	cmplti	zero,zero,2914
   2d850:	0002d8b8 	rdprs	zero,zero,2914
   2d854:	0002d898 	cmpnei	zero,zero,2914
   2d858:	0002d898 	cmpnei	zero,zero,2914
   2d85c:	0002d898 	cmpnei	zero,zero,2914
   2d860:	0002d8b8 	rdprs	zero,zero,2914
   2d864:	0002d898 	cmpnei	zero,zero,2914
   2d868:	0002d898 	cmpnei	zero,zero,2914
   2d86c:	0002d890 	cmplti	zero,zero,2914
   2d870:	0002d890 	cmplti	zero,zero,2914
   2d874:	0002d890 	cmplti	zero,zero,2914
   2d878:	0002d890 	cmplti	zero,zero,2914
   2d87c:	0002d890 	cmplti	zero,zero,2914
   2d880:	0002d898 	cmpnei	zero,zero,2914
   2d884:	0002d898 	cmpnei	zero,zero,2914
   2d888:	0002d890 	cmplti	zero,zero,2914
   2d88c:	0002d890 	cmplti	zero,zero,2914
       * The Posix standard defines the default behaviour for all these signals 
       * as being eqivalent to a call to _exit(). No mechanism is provided to 
       * change this behaviour.
       */

      _exit(0);
   2d890:	0009883a 	mov	r4,zero
   2d894:	002d5680 	call	2d568 <_exit>
      break;
    default:

      /* Tried to send an unsupported signal */

      status = EINVAL;
   2d898:	00800584 	movi	r2,22
   2d89c:	e0bfff15 	stw	r2,-4(fp)
   2d8a0:	00000606 	br	2d8bc <kill+0xf4>
    }
  }

  else if (pid > 0)
   2d8a4:	e0bffe17 	ldw	r2,-8(fp)
   2d8a8:	0080040e 	bge	zero,r2,2d8bc <kill+0xf4>
  {
    /* Attempted to signal a non-existant process */

    status = ESRCH;
   2d8ac:	008000c4 	movi	r2,3
   2d8b0:	e0bfff15 	stw	r2,-4(fp)
   2d8b4:	00000106 	br	2d8bc <kill+0xf4>
      break;
   2d8b8:	0001883a 	nop
  }

  if (status)
   2d8bc:	e0bfff17 	ldw	r2,-4(fp)
   2d8c0:	10000626 	beq	r2,zero,2d8dc <kill+0x114>
  {
    ALT_ERRNO = status;
   2d8c4:	002d78c0 	call	2d78c <alt_get_errno>
   2d8c8:	1007883a 	mov	r3,r2
   2d8cc:	e0bfff17 	ldw	r2,-4(fp)
   2d8d0:	18800015 	stw	r2,0(r3)
    return -1;
   2d8d4:	00bfffc4 	movi	r2,-1
   2d8d8:	00000106 	br	2d8e0 <kill+0x118>
  }

  return 0;
   2d8dc:	0005883a 	mov	r2,zero
}
   2d8e0:	e037883a 	mov	sp,fp
   2d8e4:	dfc00117 	ldw	ra,4(sp)
   2d8e8:	df000017 	ldw	fp,0(sp)
   2d8ec:	dec00204 	addi	sp,sp,8
   2d8f0:	f800283a 	ret

0002d8f4 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
   2d8f4:	defffc04 	addi	sp,sp,-16
   2d8f8:	df000315 	stw	fp,12(sp)
   2d8fc:	df000304 	addi	fp,sp,12
   2d900:	e13fff15 	stw	r4,-4(fp)
   2d904:	e17ffe15 	stw	r5,-8(fp)
   2d908:	e1bffd15 	stw	r6,-12(fp)
  if (to != from)
   2d90c:	e0fffe17 	ldw	r3,-8(fp)
   2d910:	e0bfff17 	ldw	r2,-4(fp)
   2d914:	18800c26 	beq	r3,r2,2d948 <alt_load_section+0x54>
  {
    while( to != end )
   2d918:	00000806 	br	2d93c <alt_load_section+0x48>
    {
      *to++ = *from++;
   2d91c:	e0ffff17 	ldw	r3,-4(fp)
   2d920:	18800104 	addi	r2,r3,4
   2d924:	e0bfff15 	stw	r2,-4(fp)
   2d928:	e0bffe17 	ldw	r2,-8(fp)
   2d92c:	11000104 	addi	r4,r2,4
   2d930:	e13ffe15 	stw	r4,-8(fp)
   2d934:	18c00017 	ldw	r3,0(r3)
   2d938:	10c00015 	stw	r3,0(r2)
    while( to != end )
   2d93c:	e0fffe17 	ldw	r3,-8(fp)
   2d940:	e0bffd17 	ldw	r2,-12(fp)
   2d944:	18bff51e 	bne	r3,r2,2d91c <alt_load_section+0x28>
    }
  }
}
   2d948:	0001883a 	nop
   2d94c:	e037883a 	mov	sp,fp
   2d950:	df000017 	ldw	fp,0(sp)
   2d954:	dec00104 	addi	sp,sp,4
   2d958:	f800283a 	ret

0002d95c <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
   2d95c:	defffe04 	addi	sp,sp,-8
   2d960:	dfc00115 	stw	ra,4(sp)
   2d964:	df000015 	stw	fp,0(sp)
   2d968:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
   2d96c:	018000f4 	movhi	r6,3
   2d970:	31885704 	addi	r6,r6,8540
   2d974:	014000f4 	movhi	r5,3
   2d978:	29416104 	addi	r5,r5,1412
   2d97c:	010000f4 	movhi	r4,3
   2d980:	21085704 	addi	r4,r4,8540
   2d984:	002d8f40 	call	2d8f4 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
   2d988:	018000b4 	movhi	r6,2
   2d98c:	31808e04 	addi	r6,r6,568
   2d990:	014000b4 	movhi	r5,2
   2d994:	29400804 	addi	r5,r5,32
   2d998:	010000b4 	movhi	r4,2
   2d99c:	21000804 	addi	r4,r4,32
   2d9a0:	002d8f40 	call	2d8f4 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
   2d9a4:	018000f4 	movhi	r6,3
   2d9a8:	31816104 	addi	r6,r6,1412
   2d9ac:	014000f4 	movhi	r5,3
   2d9b0:	297f9704 	addi	r5,r5,-420
   2d9b4:	010000f4 	movhi	r4,3
   2d9b8:	213f9704 	addi	r4,r4,-420
   2d9bc:	002d8f40 	call	2d8f4 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
   2d9c0:	002ee600 	call	2ee60 <alt_dcache_flush_all>
  alt_icache_flush_all();
   2d9c4:	002f0580 	call	2f058 <alt_icache_flush_all>
}
   2d9c8:	0001883a 	nop
   2d9cc:	e037883a 	mov	sp,fp
   2d9d0:	dfc00117 	ldw	ra,4(sp)
   2d9d4:	df000017 	ldw	fp,0(sp)
   2d9d8:	dec00204 	addi	sp,sp,8
   2d9dc:	f800283a 	ret

0002d9e0 <alt_get_errno>:
{
   2d9e0:	defffe04 	addi	sp,sp,-8
   2d9e4:	dfc00115 	stw	ra,4(sp)
   2d9e8:	df000015 	stw	fp,0(sp)
   2d9ec:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2d9f0:	d0a00917 	ldw	r2,-32732(gp)
   2d9f4:	10000326 	beq	r2,zero,2da04 <alt_get_errno+0x24>
   2d9f8:	d0a00917 	ldw	r2,-32732(gp)
   2d9fc:	103ee83a 	callr	r2
   2da00:	00000106 	br	2da08 <alt_get_errno+0x28>
   2da04:	d0a70904 	addi	r2,gp,-25564
}
   2da08:	e037883a 	mov	sp,fp
   2da0c:	dfc00117 	ldw	ra,4(sp)
   2da10:	df000017 	ldw	fp,0(sp)
   2da14:	dec00204 	addi	sp,sp,8
   2da18:	f800283a 	ret

0002da1c <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
   2da1c:	defff904 	addi	sp,sp,-28
   2da20:	dfc00615 	stw	ra,24(sp)
   2da24:	df000515 	stw	fp,20(sp)
   2da28:	df000504 	addi	fp,sp,20
   2da2c:	e13ffd15 	stw	r4,-12(fp)
   2da30:	e17ffc15 	stw	r5,-16(fp)
   2da34:	e1bffb15 	stw	r6,-20(fp)
  alt_fd* fd;
  off_t   rc = 0; 
   2da38:	e03fff15 	stw	zero,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   2da3c:	e0bffd17 	ldw	r2,-12(fp)
   2da40:	10000616 	blt	r2,zero,2da5c <lseek+0x40>
   2da44:	e0bffd17 	ldw	r2,-12(fp)
   2da48:	10c00324 	muli	r3,r2,12
   2da4c:	008000f4 	movhi	r2,3
   2da50:	1083d104 	addi	r2,r2,3908
   2da54:	1885883a 	add	r2,r3,r2
   2da58:	00000106 	br	2da60 <lseek+0x44>
   2da5c:	0005883a 	mov	r2,zero
   2da60:	e0bffe15 	stw	r2,-8(fp)
  
  if (fd) 
   2da64:	e0bffe17 	ldw	r2,-8(fp)
   2da68:	10001026 	beq	r2,zero,2daac <lseek+0x90>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
   2da6c:	e0bffe17 	ldw	r2,-8(fp)
   2da70:	10800017 	ldw	r2,0(r2)
   2da74:	10800717 	ldw	r2,28(r2)
   2da78:	10000926 	beq	r2,zero,2daa0 <lseek+0x84>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
   2da7c:	e0bffe17 	ldw	r2,-8(fp)
   2da80:	10800017 	ldw	r2,0(r2)
   2da84:	10800717 	ldw	r2,28(r2)
   2da88:	e1bffb17 	ldw	r6,-20(fp)
   2da8c:	e17ffc17 	ldw	r5,-16(fp)
   2da90:	e13ffe17 	ldw	r4,-8(fp)
   2da94:	103ee83a 	callr	r2
   2da98:	e0bfff15 	stw	r2,-4(fp)
   2da9c:	00000506 	br	2dab4 <lseek+0x98>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
   2daa0:	00bfde84 	movi	r2,-134
   2daa4:	e0bfff15 	stw	r2,-4(fp)
   2daa8:	00000206 	br	2dab4 <lseek+0x98>
    }
  }
  else  
  {
    rc = -EBADFD;
   2daac:	00bfebc4 	movi	r2,-81
   2dab0:	e0bfff15 	stw	r2,-4(fp)
  }

  if (rc < 0)
   2dab4:	e0bfff17 	ldw	r2,-4(fp)
   2dab8:	1000070e 	bge	r2,zero,2dad8 <lseek+0xbc>
  {
    ALT_ERRNO = -rc;
   2dabc:	002d9e00 	call	2d9e0 <alt_get_errno>
   2dac0:	1007883a 	mov	r3,r2
   2dac4:	e0bfff17 	ldw	r2,-4(fp)
   2dac8:	0085c83a 	sub	r2,zero,r2
   2dacc:	18800015 	stw	r2,0(r3)
    rc = -1;
   2dad0:	00bfffc4 	movi	r2,-1
   2dad4:	e0bfff15 	stw	r2,-4(fp)
  }

  return rc;
   2dad8:	e0bfff17 	ldw	r2,-4(fp)
}
   2dadc:	e037883a 	mov	sp,fp
   2dae0:	dfc00117 	ldw	ra,4(sp)
   2dae4:	df000017 	ldw	fp,0(sp)
   2dae8:	dec00204 	addi	sp,sp,8
   2daec:	f800283a 	ret

0002daf0 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
   2daf0:	defffd04 	addi	sp,sp,-12
   2daf4:	dfc00215 	stw	ra,8(sp)
   2daf8:	df000115 	stw	fp,4(sp)
   2dafc:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
   2db00:	0009883a 	mov	r4,zero
   2db04:	002df940 	call	2df94 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
   2db08:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
   2db0c:	002dfd00 	call	2dfd0 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
   2db10:	018000f4 	movhi	r6,3
   2db14:	31815904 	addi	r6,r6,1380
   2db18:	014000f4 	movhi	r5,3
   2db1c:	29415904 	addi	r5,r5,1380
   2db20:	010000f4 	movhi	r4,3
   2db24:	21015904 	addi	r4,r4,1380
   2db28:	002f3d40 	call	2f3d4 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
   2db2c:	002ef900 	call	2ef90 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
   2db30:	010000f4 	movhi	r4,3
   2db34:	213bfd04 	addi	r4,r4,-4108
   2db38:	002fbec0 	call	2fbec <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
   2db3c:	d0a70b17 	ldw	r2,-25556(gp)
   2db40:	d0e70c17 	ldw	r3,-25552(gp)
   2db44:	d1270d17 	ldw	r4,-25548(gp)
   2db48:	200d883a 	mov	r6,r4
   2db4c:	180b883a 	mov	r5,r3
   2db50:	1009883a 	mov	r4,r2
   2db54:	00205040 	call	20504 <main>
   2db58:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
   2db5c:	01000044 	movi	r4,1
   2db60:	002d46c0 	call	2d46c <close>
  exit (result);
   2db64:	e13fff17 	ldw	r4,-4(fp)
   2db68:	002fc000 	call	2fc00 <exit>

0002db6c <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
   2db6c:	defffe04 	addi	sp,sp,-8
   2db70:	df000115 	stw	fp,4(sp)
   2db74:	df000104 	addi	fp,sp,4
   2db78:	e13fff15 	stw	r4,-4(fp)
}
   2db7c:	0001883a 	nop
   2db80:	e037883a 	mov	sp,fp
   2db84:	df000017 	ldw	fp,0(sp)
   2db88:	dec00104 	addi	sp,sp,4
   2db8c:	f800283a 	ret

0002db90 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
   2db90:	defffe04 	addi	sp,sp,-8
   2db94:	df000115 	stw	fp,4(sp)
   2db98:	df000104 	addi	fp,sp,4
   2db9c:	e13fff15 	stw	r4,-4(fp)
}
   2dba0:	0001883a 	nop
   2dba4:	e037883a 	mov	sp,fp
   2dba8:	df000017 	ldw	fp,0(sp)
   2dbac:	dec00104 	addi	sp,sp,4
   2dbb0:	f800283a 	ret

0002dbb4 <alt_get_errno>:
{
   2dbb4:	defffe04 	addi	sp,sp,-8
   2dbb8:	dfc00115 	stw	ra,4(sp)
   2dbbc:	df000015 	stw	fp,0(sp)
   2dbc0:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2dbc4:	d0a00917 	ldw	r2,-32732(gp)
   2dbc8:	10000326 	beq	r2,zero,2dbd8 <alt_get_errno+0x24>
   2dbcc:	d0a00917 	ldw	r2,-32732(gp)
   2dbd0:	103ee83a 	callr	r2
   2dbd4:	00000106 	br	2dbdc <alt_get_errno+0x28>
   2dbd8:	d0a70904 	addi	r2,gp,-25564
}
   2dbdc:	e037883a 	mov	sp,fp
   2dbe0:	dfc00117 	ldw	ra,4(sp)
   2dbe4:	df000017 	ldw	fp,0(sp)
   2dbe8:	dec00204 	addi	sp,sp,8
   2dbec:	f800283a 	ret

0002dbf0 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
   2dbf0:	defff904 	addi	sp,sp,-28
   2dbf4:	dfc00615 	stw	ra,24(sp)
   2dbf8:	df000515 	stw	fp,20(sp)
   2dbfc:	df000504 	addi	fp,sp,20
   2dc00:	e13ffd15 	stw	r4,-12(fp)
   2dc04:	e17ffc15 	stw	r5,-16(fp)
   2dc08:	e1bffb15 	stw	r6,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   2dc0c:	e0bffd17 	ldw	r2,-12(fp)
   2dc10:	10000616 	blt	r2,zero,2dc2c <read+0x3c>
   2dc14:	e0bffd17 	ldw	r2,-12(fp)
   2dc18:	10c00324 	muli	r3,r2,12
   2dc1c:	008000f4 	movhi	r2,3
   2dc20:	1083d104 	addi	r2,r2,3908
   2dc24:	1885883a 	add	r2,r3,r2
   2dc28:	00000106 	br	2dc30 <read+0x40>
   2dc2c:	0005883a 	mov	r2,zero
   2dc30:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
   2dc34:	e0bfff17 	ldw	r2,-4(fp)
   2dc38:	10002226 	beq	r2,zero,2dcc4 <read+0xd4>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
   2dc3c:	e0bfff17 	ldw	r2,-4(fp)
   2dc40:	10800217 	ldw	r2,8(r2)
   2dc44:	108000cc 	andi	r2,r2,3
   2dc48:	10800060 	cmpeqi	r2,r2,1
   2dc4c:	1000181e 	bne	r2,zero,2dcb0 <read+0xc0>
        (fd->dev->read))
   2dc50:	e0bfff17 	ldw	r2,-4(fp)
   2dc54:	10800017 	ldw	r2,0(r2)
   2dc58:	10800517 	ldw	r2,20(r2)
    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
   2dc5c:	10001426 	beq	r2,zero,2dcb0 <read+0xc0>
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
   2dc60:	e0bfff17 	ldw	r2,-4(fp)
   2dc64:	10800017 	ldw	r2,0(r2)
   2dc68:	10800517 	ldw	r2,20(r2)
   2dc6c:	e0fffb17 	ldw	r3,-20(fp)
   2dc70:	180d883a 	mov	r6,r3
   2dc74:	e17ffc17 	ldw	r5,-16(fp)
   2dc78:	e13fff17 	ldw	r4,-4(fp)
   2dc7c:	103ee83a 	callr	r2
   2dc80:	e0bffe15 	stw	r2,-8(fp)
   2dc84:	e0bffe17 	ldw	r2,-8(fp)
   2dc88:	1000070e 	bge	r2,zero,2dca8 <read+0xb8>
        {
          ALT_ERRNO = -rval;
   2dc8c:	002dbb40 	call	2dbb4 <alt_get_errno>
   2dc90:	1007883a 	mov	r3,r2
   2dc94:	e0bffe17 	ldw	r2,-8(fp)
   2dc98:	0085c83a 	sub	r2,zero,r2
   2dc9c:	18800015 	stw	r2,0(r3)
          return -1;
   2dca0:	00bfffc4 	movi	r2,-1
   2dca4:	00000c06 	br	2dcd8 <read+0xe8>
        }
        return rval;
   2dca8:	e0bffe17 	ldw	r2,-8(fp)
   2dcac:	00000a06 	br	2dcd8 <read+0xe8>
      }
      else
      {
        ALT_ERRNO = EACCES;
   2dcb0:	002dbb40 	call	2dbb4 <alt_get_errno>
   2dcb4:	1007883a 	mov	r3,r2
   2dcb8:	00800344 	movi	r2,13
   2dcbc:	18800015 	stw	r2,0(r3)
   2dcc0:	00000406 	br	2dcd4 <read+0xe4>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
   2dcc4:	002dbb40 	call	2dbb4 <alt_get_errno>
   2dcc8:	1007883a 	mov	r3,r2
   2dccc:	00801444 	movi	r2,81
   2dcd0:	18800015 	stw	r2,0(r3)
  }
  return -1;
   2dcd4:	00bfffc4 	movi	r2,-1
}
   2dcd8:	e037883a 	mov	sp,fp
   2dcdc:	dfc00117 	ldw	ra,4(sp)
   2dce0:	df000017 	ldw	fp,0(sp)
   2dce4:	dec00204 	addi	sp,sp,8
   2dce8:	f800283a 	ret

0002dcec <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
   2dcec:	defffe04 	addi	sp,sp,-8
   2dcf0:	df000115 	stw	fp,4(sp)
   2dcf4:	df000104 	addi	fp,sp,4
   2dcf8:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
   2dcfc:	e0bfff17 	ldw	r2,-4(fp)
   2dd00:	108000d0 	cmplti	r2,r2,3
   2dd04:	10000a1e 	bne	r2,zero,2dd30 <alt_release_fd+0x44>
  {
    alt_fd_list[fd].fd_flags = 0;
   2dd08:	e0bfff17 	ldw	r2,-4(fp)
   2dd0c:	10c00324 	muli	r3,r2,12
   2dd10:	008000f4 	movhi	r2,3
   2dd14:	1885883a 	add	r2,r3,r2
   2dd18:	1003d315 	stw	zero,3916(r2)
    alt_fd_list[fd].dev      = 0;
   2dd1c:	e0bfff17 	ldw	r2,-4(fp)
   2dd20:	10c00324 	muli	r3,r2,12
   2dd24:	008000f4 	movhi	r2,3
   2dd28:	1885883a 	add	r2,r3,r2
   2dd2c:	1003d115 	stw	zero,3908(r2)
  }
}
   2dd30:	0001883a 	nop
   2dd34:	e037883a 	mov	sp,fp
   2dd38:	df000017 	ldw	fp,0(sp)
   2dd3c:	dec00104 	addi	sp,sp,4
   2dd40:	f800283a 	ret

0002dd44 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
   2dd44:	defff904 	addi	sp,sp,-28
   2dd48:	df000615 	stw	fp,24(sp)
   2dd4c:	df000604 	addi	fp,sp,24
   2dd50:	e13ffa15 	stw	r4,-24(fp)
  NIOS2_READ_STATUS (context);
   2dd54:	0005303a 	rdctl	r2,status
   2dd58:	e0bffd15 	stw	r2,-12(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2dd5c:	e0fffd17 	ldw	r3,-12(fp)
   2dd60:	00bfff84 	movi	r2,-2
   2dd64:	1884703a 	and	r2,r3,r2
   2dd68:	1001703a 	wrctl	status,r2
  return context;
   2dd6c:	e0bffd17 	ldw	r2,-12(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
   2dd70:	e0bfff15 	stw	r2,-4(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
   2dd74:	d0a00a17 	ldw	r2,-32728(gp)
   2dd78:	10c000c4 	addi	r3,r2,3
   2dd7c:	00bfff04 	movi	r2,-4
   2dd80:	1884703a 	and	r2,r3,r2
   2dd84:	d0a00a15 	stw	r2,-32728(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
   2dd88:	d0e00a17 	ldw	r3,-32728(gp)
   2dd8c:	e0bffa17 	ldw	r2,-24(fp)
   2dd90:	1887883a 	add	r3,r3,r2
   2dd94:	00800134 	movhi	r2,4
   2dd98:	10a1a804 	addi	r2,r2,-31072
   2dd9c:	10c0072e 	bgeu	r2,r3,2ddbc <sbrk+0x78>
   2dda0:	e0bfff17 	ldw	r2,-4(fp)
   2dda4:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context);
   2dda8:	e0bffc17 	ldw	r2,-16(fp)
   2ddac:	1001703a 	wrctl	status,r2
}
   2ddb0:	0001883a 	nop
    alt_irq_enable_all(context);
    return (caddr_t)-1;
   2ddb4:	00bfffc4 	movi	r2,-1
   2ddb8:	00000c06 	br	2ddec <sbrk+0xa8>
  }
#endif

  prev_heap_end = heap_end; 
   2ddbc:	d0a00a17 	ldw	r2,-32728(gp)
   2ddc0:	e0bffe15 	stw	r2,-8(fp)
  heap_end += incr; 
   2ddc4:	d0e00a17 	ldw	r3,-32728(gp)
   2ddc8:	e0bffa17 	ldw	r2,-24(fp)
   2ddcc:	1885883a 	add	r2,r3,r2
   2ddd0:	d0a00a15 	stw	r2,-32728(gp)
   2ddd4:	e0bfff17 	ldw	r2,-4(fp)
   2ddd8:	e0bffb15 	stw	r2,-20(fp)
  NIOS2_WRITE_STATUS (context);
   2dddc:	e0bffb17 	ldw	r2,-20(fp)
   2dde0:	1001703a 	wrctl	status,r2
}
   2dde4:	0001883a 	nop

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
   2dde8:	e0bffe17 	ldw	r2,-8(fp)
} 
   2ddec:	e037883a 	mov	sp,fp
   2ddf0:	df000017 	ldw	fp,0(sp)
   2ddf4:	dec00104 	addi	sp,sp,4
   2ddf8:	f800283a 	ret

0002ddfc <usleep>:
#if defined (__GNUC__) && __GNUC__ >= 4
int ALT_USLEEP (useconds_t us)
#else
unsigned int ALT_USLEEP (unsigned int us)
#endif
{
   2ddfc:	defffd04 	addi	sp,sp,-12
   2de00:	dfc00215 	stw	ra,8(sp)
   2de04:	df000115 	stw	fp,4(sp)
   2de08:	df000104 	addi	fp,sp,4
   2de0c:	e13fff15 	stw	r4,-4(fp)
  return alt_busy_sleep(us);
   2de10:	e13fff17 	ldw	r4,-4(fp)
   2de14:	002ed080 	call	2ed08 <alt_busy_sleep>
}
   2de18:	e037883a 	mov	sp,fp
   2de1c:	dfc00117 	ldw	ra,4(sp)
   2de20:	df000017 	ldw	fp,0(sp)
   2de24:	dec00204 	addi	sp,sp,8
   2de28:	f800283a 	ret

0002de2c <alt_get_errno>:
{
   2de2c:	defffe04 	addi	sp,sp,-8
   2de30:	dfc00115 	stw	ra,4(sp)
   2de34:	df000015 	stw	fp,0(sp)
   2de38:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2de3c:	d0a00917 	ldw	r2,-32732(gp)
   2de40:	10000326 	beq	r2,zero,2de50 <alt_get_errno+0x24>
   2de44:	d0a00917 	ldw	r2,-32732(gp)
   2de48:	103ee83a 	callr	r2
   2de4c:	00000106 	br	2de54 <alt_get_errno+0x28>
   2de50:	d0a70904 	addi	r2,gp,-25564
}
   2de54:	e037883a 	mov	sp,fp
   2de58:	dfc00117 	ldw	ra,4(sp)
   2de5c:	df000017 	ldw	fp,0(sp)
   2de60:	dec00204 	addi	sp,sp,8
   2de64:	f800283a 	ret

0002de68 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
   2de68:	defff904 	addi	sp,sp,-28
   2de6c:	dfc00615 	stw	ra,24(sp)
   2de70:	df000515 	stw	fp,20(sp)
   2de74:	df000504 	addi	fp,sp,20
   2de78:	e13ffd15 	stw	r4,-12(fp)
   2de7c:	e17ffc15 	stw	r5,-16(fp)
   2de80:	e1bffb15 	stw	r6,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   2de84:	e0bffd17 	ldw	r2,-12(fp)
   2de88:	10000616 	blt	r2,zero,2dea4 <write+0x3c>
   2de8c:	e0bffd17 	ldw	r2,-12(fp)
   2de90:	10c00324 	muli	r3,r2,12
   2de94:	008000f4 	movhi	r2,3
   2de98:	1083d104 	addi	r2,r2,3908
   2de9c:	1885883a 	add	r2,r3,r2
   2dea0:	00000106 	br	2dea8 <write+0x40>
   2dea4:	0005883a 	mov	r2,zero
   2dea8:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
   2deac:	e0bfff17 	ldw	r2,-4(fp)
   2deb0:	10002126 	beq	r2,zero,2df38 <write+0xd0>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
   2deb4:	e0bfff17 	ldw	r2,-4(fp)
   2deb8:	10800217 	ldw	r2,8(r2)
   2debc:	108000cc 	andi	r2,r2,3
   2dec0:	10001826 	beq	r2,zero,2df24 <write+0xbc>
   2dec4:	e0bfff17 	ldw	r2,-4(fp)
   2dec8:	10800017 	ldw	r2,0(r2)
   2decc:	10800617 	ldw	r2,24(r2)
   2ded0:	10001426 	beq	r2,zero,2df24 <write+0xbc>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
   2ded4:	e0bfff17 	ldw	r2,-4(fp)
   2ded8:	10800017 	ldw	r2,0(r2)
   2dedc:	10800617 	ldw	r2,24(r2)
   2dee0:	e0fffb17 	ldw	r3,-20(fp)
   2dee4:	180d883a 	mov	r6,r3
   2dee8:	e17ffc17 	ldw	r5,-16(fp)
   2deec:	e13fff17 	ldw	r4,-4(fp)
   2def0:	103ee83a 	callr	r2
   2def4:	e0bffe15 	stw	r2,-8(fp)
   2def8:	e0bffe17 	ldw	r2,-8(fp)
   2defc:	1000070e 	bge	r2,zero,2df1c <write+0xb4>
      {
        ALT_ERRNO = -rval;
   2df00:	002de2c0 	call	2de2c <alt_get_errno>
   2df04:	1007883a 	mov	r3,r2
   2df08:	e0bffe17 	ldw	r2,-8(fp)
   2df0c:	0085c83a 	sub	r2,zero,r2
   2df10:	18800015 	stw	r2,0(r3)
        return -1;
   2df14:	00bfffc4 	movi	r2,-1
   2df18:	00000c06 	br	2df4c <write+0xe4>
      }
      return rval;
   2df1c:	e0bffe17 	ldw	r2,-8(fp)
   2df20:	00000a06 	br	2df4c <write+0xe4>
    }
    else
    {
      ALT_ERRNO = EACCES;
   2df24:	002de2c0 	call	2de2c <alt_get_errno>
   2df28:	1007883a 	mov	r3,r2
   2df2c:	00800344 	movi	r2,13
   2df30:	18800015 	stw	r2,0(r3)
   2df34:	00000406 	br	2df48 <write+0xe0>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
   2df38:	002de2c0 	call	2de2c <alt_get_errno>
   2df3c:	1007883a 	mov	r3,r2
   2df40:	00801444 	movi	r2,81
   2df44:	18800015 	stw	r2,0(r3)
  }
  return -1;
   2df48:	00bfffc4 	movi	r2,-1
}
   2df4c:	e037883a 	mov	sp,fp
   2df50:	dfc00117 	ldw	ra,4(sp)
   2df54:	df000017 	ldw	fp,0(sp)
   2df58:	dec00204 	addi	sp,sp,8
   2df5c:	f800283a 	ret

0002df60 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
   2df60:	defffd04 	addi	sp,sp,-12
   2df64:	dfc00215 	stw	ra,8(sp)
   2df68:	df000115 	stw	fp,4(sp)
   2df6c:	df000104 	addi	fp,sp,4
   2df70:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
   2df74:	d1600604 	addi	r5,gp,-32744
   2df78:	e13fff17 	ldw	r4,-4(fp)
   2df7c:	002eee80 	call	2eee8 <alt_dev_llist_insert>
}
   2df80:	e037883a 	mov	sp,fp
   2df84:	dfc00117 	ldw	ra,4(sp)
   2df88:	df000017 	ldw	fp,0(sp)
   2df8c:	dec00204 	addi	sp,sp,8
   2df90:	f800283a 	ret

0002df94 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
   2df94:	defffd04 	addi	sp,sp,-12
   2df98:	dfc00215 	stw	ra,8(sp)
   2df9c:	df000115 	stw	fp,4(sp)
   2dfa0:	df000104 	addi	fp,sp,4
   2dfa4:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( NIOS2_GEN2, nios2_gen2);
   2dfa8:	002f8680 	call	2f868 <altera_nios2_gen2_irq_init>
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
   2dfac:	00800044 	movi	r2,1
   2dfb0:	1001703a 	wrctl	status,r2
}
   2dfb4:	0001883a 	nop
    alt_irq_cpu_enable_interrupts();
}
   2dfb8:	0001883a 	nop
   2dfbc:	e037883a 	mov	sp,fp
   2dfc0:	dfc00117 	ldw	ra,4(sp)
   2dfc4:	df000017 	ldw	fp,0(sp)
   2dfc8:	dec00204 	addi	sp,sp,8
   2dfcc:	f800283a 	ret

0002dfd0 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
   2dfd0:	defffe04 	addi	sp,sp,-8
   2dfd4:	dfc00115 	stw	ra,4(sp)
   2dfd8:	df000015 	stw	fp,0(sp)
   2dfdc:	d839883a 	mov	fp,sp
    ALTERA_AVALON_TIMER_INIT ( TIMER, timer);
   2dfe0:	01c0fa04 	movi	r7,1000
   2dfe4:	018000c4 	movi	r6,3
   2dfe8:	000b883a 	mov	r5,zero
   2dfec:	01000134 	movhi	r4,4
   2dff0:	21041004 	addi	r4,r4,4160
   2dff4:	002eb240 	call	2eb24 <alt_avalon_timer_sc_init>
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART, jtag_uart);
   2dff8:	01800084 	movi	r6,2
   2dffc:	000b883a 	mov	r5,zero
   2e000:	010000f4 	movhi	r4,3
   2e004:	21043b04 	addi	r4,r4,4332
   2e008:	002e1980 	call	2e198 <altera_avalon_jtag_uart_init>
   2e00c:	010000f4 	movhi	r4,3
   2e010:	21043104 	addi	r4,r4,4292
   2e014:	002df600 	call	2df60 <alt_dev_reg>
    ALTERA_AVALON_SYSID_QSYS_INIT ( SYSID_QSYS, sysid_qsys);
   2e018:	0001883a 	nop
}
   2e01c:	0001883a 	nop
   2e020:	e037883a 	mov	sp,fp
   2e024:	dfc00117 	ldw	ra,4(sp)
   2e028:	df000017 	ldw	fp,0(sp)
   2e02c:	dec00204 	addi	sp,sp,8
   2e030:	f800283a 	ret

0002e034 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
   2e034:	defffa04 	addi	sp,sp,-24
   2e038:	dfc00515 	stw	ra,20(sp)
   2e03c:	df000415 	stw	fp,16(sp)
   2e040:	df000404 	addi	fp,sp,16
   2e044:	e13ffe15 	stw	r4,-8(fp)
   2e048:	e17ffd15 	stw	r5,-12(fp)
   2e04c:	e1bffc15 	stw	r6,-16(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   2e050:	e0bffe17 	ldw	r2,-8(fp)
   2e054:	10800017 	ldw	r2,0(r2)
   2e058:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
   2e05c:	e0bfff17 	ldw	r2,-4(fp)
   2e060:	10c00a04 	addi	r3,r2,40
   2e064:	e0bffe17 	ldw	r2,-8(fp)
   2e068:	10800217 	ldw	r2,8(r2)
   2e06c:	100f883a 	mov	r7,r2
   2e070:	e1bffc17 	ldw	r6,-16(fp)
   2e074:	e17ffd17 	ldw	r5,-12(fp)
   2e078:	1809883a 	mov	r4,r3
   2e07c:	002e6600 	call	2e660 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
   2e080:	e037883a 	mov	sp,fp
   2e084:	dfc00117 	ldw	ra,4(sp)
   2e088:	df000017 	ldw	fp,0(sp)
   2e08c:	dec00204 	addi	sp,sp,8
   2e090:	f800283a 	ret

0002e094 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
   2e094:	defffa04 	addi	sp,sp,-24
   2e098:	dfc00515 	stw	ra,20(sp)
   2e09c:	df000415 	stw	fp,16(sp)
   2e0a0:	df000404 	addi	fp,sp,16
   2e0a4:	e13ffe15 	stw	r4,-8(fp)
   2e0a8:	e17ffd15 	stw	r5,-12(fp)
   2e0ac:	e1bffc15 	stw	r6,-16(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   2e0b0:	e0bffe17 	ldw	r2,-8(fp)
   2e0b4:	10800017 	ldw	r2,0(r2)
   2e0b8:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
   2e0bc:	e0bfff17 	ldw	r2,-4(fp)
   2e0c0:	10c00a04 	addi	r3,r2,40
   2e0c4:	e0bffe17 	ldw	r2,-8(fp)
   2e0c8:	10800217 	ldw	r2,8(r2)
   2e0cc:	100f883a 	mov	r7,r2
   2e0d0:	e1bffc17 	ldw	r6,-16(fp)
   2e0d4:	e17ffd17 	ldw	r5,-12(fp)
   2e0d8:	1809883a 	mov	r4,r3
   2e0dc:	002e8800 	call	2e880 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
   2e0e0:	e037883a 	mov	sp,fp
   2e0e4:	dfc00117 	ldw	ra,4(sp)
   2e0e8:	df000017 	ldw	fp,0(sp)
   2e0ec:	dec00204 	addi	sp,sp,8
   2e0f0:	f800283a 	ret

0002e0f4 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
   2e0f4:	defffc04 	addi	sp,sp,-16
   2e0f8:	dfc00315 	stw	ra,12(sp)
   2e0fc:	df000215 	stw	fp,8(sp)
   2e100:	df000204 	addi	fp,sp,8
   2e104:	e13ffe15 	stw	r4,-8(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   2e108:	e0bffe17 	ldw	r2,-8(fp)
   2e10c:	10800017 	ldw	r2,0(r2)
   2e110:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
   2e114:	e0bfff17 	ldw	r2,-4(fp)
   2e118:	10c00a04 	addi	r3,r2,40
   2e11c:	e0bffe17 	ldw	r2,-8(fp)
   2e120:	10800217 	ldw	r2,8(r2)
   2e124:	100b883a 	mov	r5,r2
   2e128:	1809883a 	mov	r4,r3
   2e12c:	002e5040 	call	2e504 <altera_avalon_jtag_uart_close>
}
   2e130:	e037883a 	mov	sp,fp
   2e134:	dfc00117 	ldw	ra,4(sp)
   2e138:	df000017 	ldw	fp,0(sp)
   2e13c:	dec00204 	addi	sp,sp,8
   2e140:	f800283a 	ret

0002e144 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
   2e144:	defffa04 	addi	sp,sp,-24
   2e148:	dfc00515 	stw	ra,20(sp)
   2e14c:	df000415 	stw	fp,16(sp)
   2e150:	df000404 	addi	fp,sp,16
   2e154:	e13ffe15 	stw	r4,-8(fp)
   2e158:	e17ffd15 	stw	r5,-12(fp)
   2e15c:	e1bffc15 	stw	r6,-16(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
   2e160:	e0bffe17 	ldw	r2,-8(fp)
   2e164:	10800017 	ldw	r2,0(r2)
   2e168:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
   2e16c:	e0bfff17 	ldw	r2,-4(fp)
   2e170:	10800a04 	addi	r2,r2,40
   2e174:	e1bffc17 	ldw	r6,-16(fp)
   2e178:	e17ffd17 	ldw	r5,-12(fp)
   2e17c:	1009883a 	mov	r4,r2
   2e180:	002e56c0 	call	2e56c <altera_avalon_jtag_uart_ioctl>
}
   2e184:	e037883a 	mov	sp,fp
   2e188:	dfc00117 	ldw	ra,4(sp)
   2e18c:	df000017 	ldw	fp,0(sp)
   2e190:	dec00204 	addi	sp,sp,8
   2e194:	f800283a 	ret

0002e198 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
   2e198:	defffa04 	addi	sp,sp,-24
   2e19c:	dfc00515 	stw	ra,20(sp)
   2e1a0:	df000415 	stw	fp,16(sp)
   2e1a4:	df000404 	addi	fp,sp,16
   2e1a8:	e13fff15 	stw	r4,-4(fp)
   2e1ac:	e17ffe15 	stw	r5,-8(fp)
   2e1b0:	e1bffd15 	stw	r6,-12(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   2e1b4:	e0bfff17 	ldw	r2,-4(fp)
   2e1b8:	00c00044 	movi	r3,1
   2e1bc:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
   2e1c0:	e0bfff17 	ldw	r2,-4(fp)
   2e1c4:	10800017 	ldw	r2,0(r2)
   2e1c8:	10800104 	addi	r2,r2,4
   2e1cc:	1007883a 	mov	r3,r2
   2e1d0:	e0bfff17 	ldw	r2,-4(fp)
   2e1d4:	10800817 	ldw	r2,32(r2)
   2e1d8:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
   2e1dc:	e0bffe17 	ldw	r2,-8(fp)
   2e1e0:	e0fffd17 	ldw	r3,-12(fp)
   2e1e4:	d8000015 	stw	zero,0(sp)
   2e1e8:	e1ffff17 	ldw	r7,-4(fp)
   2e1ec:	018000f4 	movhi	r6,3
   2e1f0:	31b89604 	addi	r6,r6,-7592
   2e1f4:	180b883a 	mov	r5,r3
   2e1f8:	1009883a 	mov	r4,r2
   2e1fc:	002f08c0 	call	2f08c <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
   2e200:	e0bfff17 	ldw	r2,-4(fp)
   2e204:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
   2e208:	e0bfff17 	ldw	r2,-4(fp)
   2e20c:	10800204 	addi	r2,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
   2e210:	d0e70f17 	ldw	r3,-25540(gp)
   2e214:	e1ffff17 	ldw	r7,-4(fp)
   2e218:	018000f4 	movhi	r6,3
   2e21c:	31b91904 	addi	r6,r6,-7068
   2e220:	180b883a 	mov	r5,r3
   2e224:	1009883a 	mov	r4,r2
   2e228:	002eba80 	call	2eba8 <alt_alarm_start>
   2e22c:	1000040e 	bge	r2,zero,2e240 <altera_avalon_jtag_uart_init+0xa8>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
   2e230:	e0ffff17 	ldw	r3,-4(fp)
   2e234:	00a00034 	movhi	r2,32768
   2e238:	10bfffc4 	addi	r2,r2,-1
   2e23c:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
   2e240:	0001883a 	nop
   2e244:	e037883a 	mov	sp,fp
   2e248:	dfc00117 	ldw	ra,4(sp)
   2e24c:	df000017 	ldw	fp,0(sp)
   2e250:	dec00204 	addi	sp,sp,8
   2e254:	f800283a 	ret

0002e258 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
   2e258:	defff804 	addi	sp,sp,-32
   2e25c:	df000715 	stw	fp,28(sp)
   2e260:	df000704 	addi	fp,sp,28
   2e264:	e13ff915 	stw	r4,-28(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
   2e268:	e0bff917 	ldw	r2,-28(fp)
   2e26c:	e0bffd15 	stw	r2,-12(fp)
  unsigned int base = sp->base;
   2e270:	e0bffd17 	ldw	r2,-12(fp)
   2e274:	10800017 	ldw	r2,0(r2)
   2e278:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   2e27c:	e0bffc17 	ldw	r2,-16(fp)
   2e280:	10800104 	addi	r2,r2,4
   2e284:	10800037 	ldwio	r2,0(r2)
   2e288:	e0bffb15 	stw	r2,-20(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
   2e28c:	e0bffb17 	ldw	r2,-20(fp)
   2e290:	1080c00c 	andi	r2,r2,768
   2e294:	10006d26 	beq	r2,zero,2e44c <altera_avalon_jtag_uart_irq+0x1f4>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
   2e298:	e0bffb17 	ldw	r2,-20(fp)
   2e29c:	1080400c 	andi	r2,r2,256
   2e2a0:	10003526 	beq	r2,zero,2e378 <altera_avalon_jtag_uart_irq+0x120>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
   2e2a4:	00800074 	movhi	r2,1
   2e2a8:	e0bfff15 	stw	r2,-4(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   2e2ac:	e0bffd17 	ldw	r2,-12(fp)
   2e2b0:	10800a17 	ldw	r2,40(r2)
   2e2b4:	10800044 	addi	r2,r2,1
   2e2b8:	1081ffcc 	andi	r2,r2,2047
   2e2bc:	e0bffa15 	stw	r2,-24(fp)
        if (next == sp->rx_out)
   2e2c0:	e0bffd17 	ldw	r2,-12(fp)
   2e2c4:	10800b17 	ldw	r2,44(r2)
   2e2c8:	e0fffa17 	ldw	r3,-24(fp)
   2e2cc:	18801526 	beq	r3,r2,2e324 <altera_avalon_jtag_uart_irq+0xcc>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
   2e2d0:	e0bffc17 	ldw	r2,-16(fp)
   2e2d4:	10800037 	ldwio	r2,0(r2)
   2e2d8:	e0bfff15 	stw	r2,-4(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
   2e2dc:	e0bfff17 	ldw	r2,-4(fp)
   2e2e0:	10a0000c 	andi	r2,r2,32768
   2e2e4:	10001126 	beq	r2,zero,2e32c <altera_avalon_jtag_uart_irq+0xd4>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
   2e2e8:	e0bffd17 	ldw	r2,-12(fp)
   2e2ec:	10800a17 	ldw	r2,40(r2)
   2e2f0:	e0ffff17 	ldw	r3,-4(fp)
   2e2f4:	1809883a 	mov	r4,r3
   2e2f8:	e0fffd17 	ldw	r3,-12(fp)
   2e2fc:	1885883a 	add	r2,r3,r2
   2e300:	11000e05 	stb	r4,56(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   2e304:	e0bffd17 	ldw	r2,-12(fp)
   2e308:	10800a17 	ldw	r2,40(r2)
   2e30c:	10800044 	addi	r2,r2,1
   2e310:	10c1ffcc 	andi	r3,r2,2047
   2e314:	e0bffd17 	ldw	r2,-12(fp)
   2e318:	10c00a15 	stw	r3,40(r2)
 * HAL.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_no_error (void)
{
  return 0;
   2e31c:	0001883a 	nop
      {
   2e320:	003fe206 	br	2e2ac <altera_avalon_jtag_uart_irq+0x54>
          break;
   2e324:	0001883a 	nop
   2e328:	00000106 	br	2e330 <altera_avalon_jtag_uart_irq+0xd8>
          break;
   2e32c:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
   2e330:	e0bfff17 	ldw	r2,-4(fp)
   2e334:	10bfffec 	andhi	r2,r2,65535
   2e338:	10000f26 	beq	r2,zero,2e378 <altera_avalon_jtag_uart_irq+0x120>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   2e33c:	e0bffd17 	ldw	r2,-12(fp)
   2e340:	10c00817 	ldw	r3,32(r2)
   2e344:	00bfff84 	movi	r2,-2
   2e348:	1886703a 	and	r3,r3,r2
   2e34c:	e0bffd17 	ldw	r2,-12(fp)
   2e350:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
   2e354:	e0bffc17 	ldw	r2,-16(fp)
   2e358:	10800104 	addi	r2,r2,4
   2e35c:	1007883a 	mov	r3,r2
   2e360:	e0bffd17 	ldw	r2,-12(fp)
   2e364:	10800817 	ldw	r2,32(r2)
   2e368:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   2e36c:	e0bffc17 	ldw	r2,-16(fp)
   2e370:	10800104 	addi	r2,r2,4
   2e374:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
   2e378:	e0bffb17 	ldw	r2,-20(fp)
   2e37c:	1080800c 	andi	r2,r2,512
   2e380:	103fbe26 	beq	r2,zero,2e27c <altera_avalon_jtag_uart_irq+0x24>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
   2e384:	e0bffb17 	ldw	r2,-20(fp)
   2e388:	1004d43a 	srli	r2,r2,16
   2e38c:	e0bffe15 	stw	r2,-8(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
   2e390:	00001406 	br	2e3e4 <altera_avalon_jtag_uart_irq+0x18c>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
   2e394:	e0bffc17 	ldw	r2,-16(fp)
   2e398:	e0fffd17 	ldw	r3,-12(fp)
   2e39c:	18c00d17 	ldw	r3,52(r3)
   2e3a0:	e13ffd17 	ldw	r4,-12(fp)
   2e3a4:	20c7883a 	add	r3,r4,r3
   2e3a8:	18c20e03 	ldbu	r3,2104(r3)
   2e3ac:	18c03fcc 	andi	r3,r3,255
   2e3b0:	18c0201c 	xori	r3,r3,128
   2e3b4:	18ffe004 	addi	r3,r3,-128
   2e3b8:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   2e3bc:	e0bffd17 	ldw	r2,-12(fp)
   2e3c0:	10800d17 	ldw	r2,52(r2)
   2e3c4:	10800044 	addi	r2,r2,1
   2e3c8:	10c1ffcc 	andi	r3,r2,2047
   2e3cc:	e0bffd17 	ldw	r2,-12(fp)
   2e3d0:	10c00d15 	stw	r3,52(r2)
   2e3d4:	0001883a 	nop

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
   2e3d8:	e0bffe17 	ldw	r2,-8(fp)
   2e3dc:	10bfffc4 	addi	r2,r2,-1
   2e3e0:	e0bffe15 	stw	r2,-8(fp)
      while (space > 0 && sp->tx_out != sp->tx_in)
   2e3e4:	e0bffe17 	ldw	r2,-8(fp)
   2e3e8:	10000526 	beq	r2,zero,2e400 <altera_avalon_jtag_uart_irq+0x1a8>
   2e3ec:	e0bffd17 	ldw	r2,-12(fp)
   2e3f0:	10c00d17 	ldw	r3,52(r2)
   2e3f4:	e0bffd17 	ldw	r2,-12(fp)
   2e3f8:	10800c17 	ldw	r2,48(r2)
   2e3fc:	18bfe51e 	bne	r3,r2,2e394 <altera_avalon_jtag_uart_irq+0x13c>
      }

      if (space > 0)
   2e400:	e0bffe17 	ldw	r2,-8(fp)
   2e404:	103f9d26 	beq	r2,zero,2e27c <altera_avalon_jtag_uart_irq+0x24>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   2e408:	e0bffd17 	ldw	r2,-12(fp)
   2e40c:	10c00817 	ldw	r3,32(r2)
   2e410:	00bfff44 	movi	r2,-3
   2e414:	1886703a 	and	r3,r3,r2
   2e418:	e0bffd17 	ldw	r2,-12(fp)
   2e41c:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   2e420:	e0bffd17 	ldw	r2,-12(fp)
   2e424:	10800017 	ldw	r2,0(r2)
   2e428:	10800104 	addi	r2,r2,4
   2e42c:	1007883a 	mov	r3,r2
   2e430:	e0bffd17 	ldw	r2,-12(fp)
   2e434:	10800817 	ldw	r2,32(r2)
   2e438:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   2e43c:	e0bffc17 	ldw	r2,-16(fp)
   2e440:	10800104 	addi	r2,r2,4
   2e444:	10800037 	ldwio	r2,0(r2)
  {
   2e448:	003f8c06 	br	2e27c <altera_avalon_jtag_uart_irq+0x24>
      break;
   2e44c:	0001883a 	nop
      }
    }
  }
}
   2e450:	0001883a 	nop
   2e454:	e037883a 	mov	sp,fp
   2e458:	df000017 	ldw	fp,0(sp)
   2e45c:	dec00104 	addi	sp,sp,4
   2e460:	f800283a 	ret

0002e464 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
   2e464:	defffc04 	addi	sp,sp,-16
   2e468:	df000315 	stw	fp,12(sp)
   2e46c:	df000304 	addi	fp,sp,12
   2e470:	e13ffd15 	stw	r4,-12(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
   2e474:	e0bffd17 	ldw	r2,-12(fp)
   2e478:	e0bfff15 	stw	r2,-4(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
   2e47c:	e0bfff17 	ldw	r2,-4(fp)
   2e480:	10800017 	ldw	r2,0(r2)
   2e484:	10800104 	addi	r2,r2,4
   2e488:	10800037 	ldwio	r2,0(r2)
   2e48c:	e0bffe15 	stw	r2,-8(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
   2e490:	e0bffe17 	ldw	r2,-8(fp)
   2e494:	1081000c 	andi	r2,r2,1024
   2e498:	10000b26 	beq	r2,zero,2e4c8 <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
   2e49c:	e0bfff17 	ldw	r2,-4(fp)
   2e4a0:	10800017 	ldw	r2,0(r2)
   2e4a4:	10800104 	addi	r2,r2,4
   2e4a8:	1007883a 	mov	r3,r2
   2e4ac:	e0bfff17 	ldw	r2,-4(fp)
   2e4b0:	10800817 	ldw	r2,32(r2)
   2e4b4:	10810014 	ori	r2,r2,1024
   2e4b8:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
   2e4bc:	e0bfff17 	ldw	r2,-4(fp)
   2e4c0:	10000915 	stw	zero,36(r2)
   2e4c4:	00000a06 	br	2e4f0 <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
   2e4c8:	e0bfff17 	ldw	r2,-4(fp)
   2e4cc:	10c00917 	ldw	r3,36(r2)
   2e4d0:	00a00034 	movhi	r2,32768
   2e4d4:	10bfff04 	addi	r2,r2,-4
   2e4d8:	10c00536 	bltu	r2,r3,2e4f0 <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
   2e4dc:	e0bfff17 	ldw	r2,-4(fp)
   2e4e0:	10800917 	ldw	r2,36(r2)
   2e4e4:	10c00044 	addi	r3,r2,1
   2e4e8:	e0bfff17 	ldw	r2,-4(fp)
   2e4ec:	10c00915 	stw	r3,36(r2)
   2e4f0:	d0a70f17 	ldw	r2,-25540(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
   2e4f4:	e037883a 	mov	sp,fp
   2e4f8:	df000017 	ldw	fp,0(sp)
   2e4fc:	dec00104 	addi	sp,sp,4
   2e500:	f800283a 	ret

0002e504 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
   2e504:	defffd04 	addi	sp,sp,-12
   2e508:	df000215 	stw	fp,8(sp)
   2e50c:	df000204 	addi	fp,sp,8
   2e510:	e13fff15 	stw	r4,-4(fp)
   2e514:	e17ffe15 	stw	r5,-8(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   2e518:	00000506 	br	2e530 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
   2e51c:	e0bffe17 	ldw	r2,-8(fp)
   2e520:	1090000c 	andi	r2,r2,16384
   2e524:	10000226 	beq	r2,zero,2e530 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
   2e528:	00bffd44 	movi	r2,-11
   2e52c:	00000b06 	br	2e55c <altera_avalon_jtag_uart_close+0x58>
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   2e530:	e0bfff17 	ldw	r2,-4(fp)
   2e534:	10c00d17 	ldw	r3,52(r2)
   2e538:	e0bfff17 	ldw	r2,-4(fp)
   2e53c:	10800c17 	ldw	r2,48(r2)
   2e540:	18800526 	beq	r3,r2,2e558 <altera_avalon_jtag_uart_close+0x54>
   2e544:	e0bfff17 	ldw	r2,-4(fp)
   2e548:	10c00917 	ldw	r3,36(r2)
   2e54c:	e0bfff17 	ldw	r2,-4(fp)
   2e550:	10800117 	ldw	r2,4(r2)
   2e554:	18bff136 	bltu	r3,r2,2e51c <altera_avalon_jtag_uart_close+0x18>
    }
  }

  return 0;
   2e558:	0005883a 	mov	r2,zero
}
   2e55c:	e037883a 	mov	sp,fp
   2e560:	df000017 	ldw	fp,0(sp)
   2e564:	dec00104 	addi	sp,sp,4
   2e568:	f800283a 	ret

0002e56c <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
   2e56c:	defffa04 	addi	sp,sp,-24
   2e570:	df000515 	stw	fp,20(sp)
   2e574:	df000504 	addi	fp,sp,20
   2e578:	e13ffd15 	stw	r4,-12(fp)
   2e57c:	e17ffc15 	stw	r5,-16(fp)
   2e580:	e1bffb15 	stw	r6,-20(fp)
  int rc = -ENOTTY;
   2e584:	00bff9c4 	movi	r2,-25
   2e588:	e0bfff15 	stw	r2,-4(fp)

  switch (req)
   2e58c:	e0bffc17 	ldw	r2,-16(fp)
   2e590:	109a8060 	cmpeqi	r2,r2,27137
   2e594:	1000041e 	bne	r2,zero,2e5a8 <altera_avalon_jtag_uart_ioctl+0x3c>
   2e598:	e0bffc17 	ldw	r2,-16(fp)
   2e59c:	109a80a0 	cmpeqi	r2,r2,27138
   2e5a0:	1000181e 	bne	r2,zero,2e604 <altera_avalon_jtag_uart_ioctl+0x98>
      rc = 0;
    }
    break;

  default:
    break;
   2e5a4:	00002906 	br	2e64c <altera_avalon_jtag_uart_ioctl+0xe0>
    if (sp->timeout != INT_MAX)
   2e5a8:	e0bffd17 	ldw	r2,-12(fp)
   2e5ac:	10c00117 	ldw	r3,4(r2)
   2e5b0:	00a00034 	movhi	r2,32768
   2e5b4:	10bfffc4 	addi	r2,r2,-1
   2e5b8:	18802126 	beq	r3,r2,2e640 <altera_avalon_jtag_uart_ioctl+0xd4>
      int timeout = *((int *)arg);
   2e5bc:	e0bffb17 	ldw	r2,-20(fp)
   2e5c0:	10800017 	ldw	r2,0(r2)
   2e5c4:	e0bffe15 	stw	r2,-8(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
   2e5c8:	e0bffe17 	ldw	r2,-8(fp)
   2e5cc:	10800090 	cmplti	r2,r2,2
   2e5d0:	1000061e 	bne	r2,zero,2e5ec <altera_avalon_jtag_uart_ioctl+0x80>
   2e5d4:	e0fffe17 	ldw	r3,-8(fp)
   2e5d8:	00a00034 	movhi	r2,32768
   2e5dc:	10bfffc4 	addi	r2,r2,-1
   2e5e0:	18800226 	beq	r3,r2,2e5ec <altera_avalon_jtag_uart_ioctl+0x80>
   2e5e4:	e0bffe17 	ldw	r2,-8(fp)
   2e5e8:	00000206 	br	2e5f4 <altera_avalon_jtag_uart_ioctl+0x88>
   2e5ec:	00a00034 	movhi	r2,32768
   2e5f0:	10bfff84 	addi	r2,r2,-2
   2e5f4:	e0fffd17 	ldw	r3,-12(fp)
   2e5f8:	18800115 	stw	r2,4(r3)
      rc = 0;
   2e5fc:	e03fff15 	stw	zero,-4(fp)
    break;
   2e600:	00000f06 	br	2e640 <altera_avalon_jtag_uart_ioctl+0xd4>
    if (sp->timeout != INT_MAX)
   2e604:	e0bffd17 	ldw	r2,-12(fp)
   2e608:	10c00117 	ldw	r3,4(r2)
   2e60c:	00a00034 	movhi	r2,32768
   2e610:	10bfffc4 	addi	r2,r2,-1
   2e614:	18800c26 	beq	r3,r2,2e648 <altera_avalon_jtag_uart_ioctl+0xdc>
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
   2e618:	e0bffd17 	ldw	r2,-12(fp)
   2e61c:	10c00917 	ldw	r3,36(r2)
   2e620:	e0bffd17 	ldw	r2,-12(fp)
   2e624:	10800117 	ldw	r2,4(r2)
   2e628:	1885803a 	cmpltu	r2,r3,r2
   2e62c:	10c03fcc 	andi	r3,r2,255
   2e630:	e0bffb17 	ldw	r2,-20(fp)
   2e634:	10c00015 	stw	r3,0(r2)
      rc = 0;
   2e638:	e03fff15 	stw	zero,-4(fp)
    break;
   2e63c:	00000206 	br	2e648 <altera_avalon_jtag_uart_ioctl+0xdc>
    break;
   2e640:	0001883a 	nop
   2e644:	00000106 	br	2e64c <altera_avalon_jtag_uart_ioctl+0xe0>
    break;
   2e648:	0001883a 	nop
  }

  return rc;
   2e64c:	e0bfff17 	ldw	r2,-4(fp)
}
   2e650:	e037883a 	mov	sp,fp
   2e654:	df000017 	ldw	fp,0(sp)
   2e658:	dec00104 	addi	sp,sp,4
   2e65c:	f800283a 	ret

0002e660 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
   2e660:	defff304 	addi	sp,sp,-52
   2e664:	dfc00c15 	stw	ra,48(sp)
   2e668:	df000b15 	stw	fp,44(sp)
   2e66c:	df000b04 	addi	fp,sp,44
   2e670:	e13ff815 	stw	r4,-32(fp)
   2e674:	e17ff715 	stw	r5,-36(fp)
   2e678:	e1bff615 	stw	r6,-40(fp)
   2e67c:	e1fff515 	stw	r7,-44(fp)
  char * ptr = buffer;
   2e680:	e0bff717 	ldw	r2,-36(fp)
   2e684:	e0bfff15 	stw	r2,-4(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
   2e688:	00004706 	br	2e7a8 <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
   2e68c:	e0bff817 	ldw	r2,-32(fp)
   2e690:	10800a17 	ldw	r2,40(r2)
   2e694:	e0bffd15 	stw	r2,-12(fp)
      out = sp->rx_out;
   2e698:	e0bff817 	ldw	r2,-32(fp)
   2e69c:	10800b17 	ldw	r2,44(r2)
   2e6a0:	e0bffc15 	stw	r2,-16(fp)

      if (in >= out)
   2e6a4:	e0fffd17 	ldw	r3,-12(fp)
   2e6a8:	e0bffc17 	ldw	r2,-16(fp)
   2e6ac:	18800536 	bltu	r3,r2,2e6c4 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
   2e6b0:	e0fffd17 	ldw	r3,-12(fp)
   2e6b4:	e0bffc17 	ldw	r2,-16(fp)
   2e6b8:	1885c83a 	sub	r2,r3,r2
   2e6bc:	e0bffe15 	stw	r2,-8(fp)
   2e6c0:	00000406 	br	2e6d4 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
   2e6c4:	00c20004 	movi	r3,2048
   2e6c8:	e0bffc17 	ldw	r2,-16(fp)
   2e6cc:	1885c83a 	sub	r2,r3,r2
   2e6d0:	e0bffe15 	stw	r2,-8(fp)

      if (n == 0)
   2e6d4:	e0bffe17 	ldw	r2,-8(fp)
   2e6d8:	10001e26 	beq	r2,zero,2e754 <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
   2e6dc:	e0fff617 	ldw	r3,-40(fp)
   2e6e0:	e0bffe17 	ldw	r2,-8(fp)
   2e6e4:	1880022e 	bgeu	r3,r2,2e6f0 <altera_avalon_jtag_uart_read+0x90>
        n = space;
   2e6e8:	e0bff617 	ldw	r2,-40(fp)
   2e6ec:	e0bffe15 	stw	r2,-8(fp)

      memcpy(ptr, sp->rx_buf + out, n);
   2e6f0:	e0bff817 	ldw	r2,-32(fp)
   2e6f4:	10c00e04 	addi	r3,r2,56
   2e6f8:	e0bffc17 	ldw	r2,-16(fp)
   2e6fc:	1885883a 	add	r2,r3,r2
   2e700:	e1bffe17 	ldw	r6,-8(fp)
   2e704:	100b883a 	mov	r5,r2
   2e708:	e13fff17 	ldw	r4,-4(fp)
   2e70c:	00260dc0 	call	260dc <memcpy>
      ptr   += n;
   2e710:	e0ffff17 	ldw	r3,-4(fp)
   2e714:	e0bffe17 	ldw	r2,-8(fp)
   2e718:	1885883a 	add	r2,r3,r2
   2e71c:	e0bfff15 	stw	r2,-4(fp)
      space -= n;
   2e720:	e0fff617 	ldw	r3,-40(fp)
   2e724:	e0bffe17 	ldw	r2,-8(fp)
   2e728:	1885c83a 	sub	r2,r3,r2
   2e72c:	e0bff615 	stw	r2,-40(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   2e730:	e0fffc17 	ldw	r3,-16(fp)
   2e734:	e0bffe17 	ldw	r2,-8(fp)
   2e738:	1885883a 	add	r2,r3,r2
   2e73c:	10c1ffcc 	andi	r3,r2,2047
   2e740:	e0bff817 	ldw	r2,-32(fp)
   2e744:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
   2e748:	e0bff617 	ldw	r2,-40(fp)
   2e74c:	00bfcf16 	blt	zero,r2,2e68c <altera_avalon_jtag_uart_read+0x2c>
   2e750:	00000106 	br	2e758 <altera_avalon_jtag_uart_read+0xf8>
        break; /* No more data available */
   2e754:	0001883a 	nop

    /* If we read any data then return it */
    if (ptr != buffer)
   2e758:	e0ffff17 	ldw	r3,-4(fp)
   2e75c:	e0bff717 	ldw	r2,-36(fp)
   2e760:	1880141e 	bne	r3,r2,2e7b4 <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
   2e764:	e0bff517 	ldw	r2,-44(fp)
   2e768:	1090000c 	andi	r2,r2,16384
   2e76c:	1000131e 	bne	r2,zero,2e7bc <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
   2e770:	0001883a 	nop
   2e774:	e0bff817 	ldw	r2,-32(fp)
   2e778:	10800a17 	ldw	r2,40(r2)
   2e77c:	e0fffd17 	ldw	r3,-12(fp)
   2e780:	1880051e 	bne	r3,r2,2e798 <altera_avalon_jtag_uart_read+0x138>
   2e784:	e0bff817 	ldw	r2,-32(fp)
   2e788:	10c00917 	ldw	r3,36(r2)
   2e78c:	e0bff817 	ldw	r2,-32(fp)
   2e790:	10800117 	ldw	r2,4(r2)
   2e794:	18bff736 	bltu	r3,r2,2e774 <altera_avalon_jtag_uart_read+0x114>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
   2e798:	e0bff817 	ldw	r2,-32(fp)
   2e79c:	10800a17 	ldw	r2,40(r2)
   2e7a0:	e0fffd17 	ldw	r3,-12(fp)
   2e7a4:	18800726 	beq	r3,r2,2e7c4 <altera_avalon_jtag_uart_read+0x164>
  while (space > 0)
   2e7a8:	e0bff617 	ldw	r2,-40(fp)
   2e7ac:	00bfb716 	blt	zero,r2,2e68c <altera_avalon_jtag_uart_read+0x2c>
   2e7b0:	00000506 	br	2e7c8 <altera_avalon_jtag_uart_read+0x168>
      break;
   2e7b4:	0001883a 	nop
   2e7b8:	00000306 	br	2e7c8 <altera_avalon_jtag_uart_read+0x168>
      break;
   2e7bc:	0001883a 	nop
   2e7c0:	00000106 	br	2e7c8 <altera_avalon_jtag_uart_read+0x168>
      break;
   2e7c4:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
   2e7c8:	e0ffff17 	ldw	r3,-4(fp)
   2e7cc:	e0bff717 	ldw	r2,-36(fp)
   2e7d0:	18801926 	beq	r3,r2,2e838 <altera_avalon_jtag_uart_read+0x1d8>
  NIOS2_READ_STATUS (context);
   2e7d4:	0005303a 	rdctl	r2,status
   2e7d8:	e0bff915 	stw	r2,-28(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2e7dc:	e0fff917 	ldw	r3,-28(fp)
   2e7e0:	00bfff84 	movi	r2,-2
   2e7e4:	1884703a 	and	r2,r3,r2
   2e7e8:	1001703a 	wrctl	status,r2
  return context;
   2e7ec:	e0bff917 	ldw	r2,-28(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
   2e7f0:	e0bffb15 	stw	r2,-20(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   2e7f4:	e0bff817 	ldw	r2,-32(fp)
   2e7f8:	10800817 	ldw	r2,32(r2)
   2e7fc:	10c00054 	ori	r3,r2,1
   2e800:	e0bff817 	ldw	r2,-32(fp)
   2e804:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   2e808:	e0bff817 	ldw	r2,-32(fp)
   2e80c:	10800017 	ldw	r2,0(r2)
   2e810:	10800104 	addi	r2,r2,4
   2e814:	1007883a 	mov	r3,r2
   2e818:	e0bff817 	ldw	r2,-32(fp)
   2e81c:	10800817 	ldw	r2,32(r2)
   2e820:	18800035 	stwio	r2,0(r3)
   2e824:	e0bffb17 	ldw	r2,-20(fp)
   2e828:	e0bffa15 	stw	r2,-24(fp)
  NIOS2_WRITE_STATUS (context);
   2e82c:	e0bffa17 	ldw	r2,-24(fp)
   2e830:	1001703a 	wrctl	status,r2
}
   2e834:	0001883a 	nop
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
   2e838:	e0ffff17 	ldw	r3,-4(fp)
   2e83c:	e0bff717 	ldw	r2,-36(fp)
   2e840:	18800426 	beq	r3,r2,2e854 <altera_avalon_jtag_uart_read+0x1f4>
    return ptr - buffer;
   2e844:	e0ffff17 	ldw	r3,-4(fp)
   2e848:	e0bff717 	ldw	r2,-36(fp)
   2e84c:	1885c83a 	sub	r2,r3,r2
   2e850:	00000606 	br	2e86c <altera_avalon_jtag_uart_read+0x20c>
  else if (flags & O_NONBLOCK)
   2e854:	e0bff517 	ldw	r2,-44(fp)
   2e858:	1090000c 	andi	r2,r2,16384
   2e85c:	10000226 	beq	r2,zero,2e868 <altera_avalon_jtag_uart_read+0x208>
    return -EWOULDBLOCK;
   2e860:	00bffd44 	movi	r2,-11
   2e864:	00000106 	br	2e86c <altera_avalon_jtag_uart_read+0x20c>
  else
    return -EIO;
   2e868:	00bffec4 	movi	r2,-5
}
   2e86c:	e037883a 	mov	sp,fp
   2e870:	dfc00117 	ldw	ra,4(sp)
   2e874:	df000017 	ldw	fp,0(sp)
   2e878:	dec00204 	addi	sp,sp,8
   2e87c:	f800283a 	ret

0002e880 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
   2e880:	defff304 	addi	sp,sp,-52
   2e884:	dfc00c15 	stw	ra,48(sp)
   2e888:	df000b15 	stw	fp,44(sp)
   2e88c:	df000b04 	addi	fp,sp,44
   2e890:	e13ff815 	stw	r4,-32(fp)
   2e894:	e17ff715 	stw	r5,-36(fp)
   2e898:	e1bff615 	stw	r6,-40(fp)
   2e89c:	e1fff515 	stw	r7,-44(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
   2e8a0:	e03fff15 	stw	zero,-4(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
   2e8a4:	e0bff717 	ldw	r2,-36(fp)
   2e8a8:	e0bffd15 	stw	r2,-12(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
   2e8ac:	00003706 	br	2e98c <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
   2e8b0:	e0bff817 	ldw	r2,-32(fp)
   2e8b4:	10800c17 	ldw	r2,48(r2)
   2e8b8:	e0bffc15 	stw	r2,-16(fp)
      out = sp->tx_out;
   2e8bc:	e0bff817 	ldw	r2,-32(fp)
   2e8c0:	10800d17 	ldw	r2,52(r2)
   2e8c4:	e0bfff15 	stw	r2,-4(fp)

      if (in < out)
   2e8c8:	e0fffc17 	ldw	r3,-16(fp)
   2e8cc:	e0bfff17 	ldw	r2,-4(fp)
   2e8d0:	1880062e 	bgeu	r3,r2,2e8ec <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
   2e8d4:	e0ffff17 	ldw	r3,-4(fp)
   2e8d8:	e0bffc17 	ldw	r2,-16(fp)
   2e8dc:	1885c83a 	sub	r2,r3,r2
   2e8e0:	10bfffc4 	addi	r2,r2,-1
   2e8e4:	e0bffe15 	stw	r2,-8(fp)
   2e8e8:	00000b06 	br	2e918 <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
   2e8ec:	e0bfff17 	ldw	r2,-4(fp)
   2e8f0:	10000526 	beq	r2,zero,2e908 <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
   2e8f4:	00c20004 	movi	r3,2048
   2e8f8:	e0bffc17 	ldw	r2,-16(fp)
   2e8fc:	1885c83a 	sub	r2,r3,r2
   2e900:	e0bffe15 	stw	r2,-8(fp)
   2e904:	00000406 	br	2e918 <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
   2e908:	00c1ffc4 	movi	r3,2047
   2e90c:	e0bffc17 	ldw	r2,-16(fp)
   2e910:	1885c83a 	sub	r2,r3,r2
   2e914:	e0bffe15 	stw	r2,-8(fp)

      if (n == 0)
   2e918:	e0bffe17 	ldw	r2,-8(fp)
   2e91c:	10001e26 	beq	r2,zero,2e998 <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
   2e920:	e0fff617 	ldw	r3,-40(fp)
   2e924:	e0bffe17 	ldw	r2,-8(fp)
   2e928:	1880022e 	bgeu	r3,r2,2e934 <altera_avalon_jtag_uart_write+0xb4>
        n = count;
   2e92c:	e0bff617 	ldw	r2,-40(fp)
   2e930:	e0bffe15 	stw	r2,-8(fp)

      memcpy(sp->tx_buf + in, ptr, n);
   2e934:	e0bff817 	ldw	r2,-32(fp)
   2e938:	10c20e04 	addi	r3,r2,2104
   2e93c:	e0bffc17 	ldw	r2,-16(fp)
   2e940:	1885883a 	add	r2,r3,r2
   2e944:	e1bffe17 	ldw	r6,-8(fp)
   2e948:	e17ff717 	ldw	r5,-36(fp)
   2e94c:	1009883a 	mov	r4,r2
   2e950:	00260dc0 	call	260dc <memcpy>
      ptr   += n;
   2e954:	e0fff717 	ldw	r3,-36(fp)
   2e958:	e0bffe17 	ldw	r2,-8(fp)
   2e95c:	1885883a 	add	r2,r3,r2
   2e960:	e0bff715 	stw	r2,-36(fp)
      count -= n;
   2e964:	e0fff617 	ldw	r3,-40(fp)
   2e968:	e0bffe17 	ldw	r2,-8(fp)
   2e96c:	1885c83a 	sub	r2,r3,r2
   2e970:	e0bff615 	stw	r2,-40(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   2e974:	e0fffc17 	ldw	r3,-16(fp)
   2e978:	e0bffe17 	ldw	r2,-8(fp)
   2e97c:	1885883a 	add	r2,r3,r2
   2e980:	10c1ffcc 	andi	r3,r2,2047
   2e984:	e0bff817 	ldw	r2,-32(fp)
   2e988:	10c00c15 	stw	r3,48(r2)
    while (count > 0)
   2e98c:	e0bff617 	ldw	r2,-40(fp)
   2e990:	00bfc716 	blt	zero,r2,2e8b0 <altera_avalon_jtag_uart_write+0x30>
   2e994:	00000106 	br	2e99c <altera_avalon_jtag_uart_write+0x11c>
        break;
   2e998:	0001883a 	nop
  NIOS2_READ_STATUS (context);
   2e99c:	0005303a 	rdctl	r2,status
   2e9a0:	e0bff915 	stw	r2,-28(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2e9a4:	e0fff917 	ldw	r3,-28(fp)
   2e9a8:	00bfff84 	movi	r2,-2
   2e9ac:	1884703a 	and	r2,r3,r2
   2e9b0:	1001703a 	wrctl	status,r2
  return context;
   2e9b4:	e0bff917 	ldw	r2,-28(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
   2e9b8:	e0bffb15 	stw	r2,-20(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   2e9bc:	e0bff817 	ldw	r2,-32(fp)
   2e9c0:	10800817 	ldw	r2,32(r2)
   2e9c4:	10c00094 	ori	r3,r2,2
   2e9c8:	e0bff817 	ldw	r2,-32(fp)
   2e9cc:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   2e9d0:	e0bff817 	ldw	r2,-32(fp)
   2e9d4:	10800017 	ldw	r2,0(r2)
   2e9d8:	10800104 	addi	r2,r2,4
   2e9dc:	1007883a 	mov	r3,r2
   2e9e0:	e0bff817 	ldw	r2,-32(fp)
   2e9e4:	10800817 	ldw	r2,32(r2)
   2e9e8:	18800035 	stwio	r2,0(r3)
   2e9ec:	e0bffb17 	ldw	r2,-20(fp)
   2e9f0:	e0bffa15 	stw	r2,-24(fp)
  NIOS2_WRITE_STATUS (context);
   2e9f4:	e0bffa17 	ldw	r2,-24(fp)
   2e9f8:	1001703a 	wrctl	status,r2
}
   2e9fc:	0001883a 	nop
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
   2ea00:	e0bff617 	ldw	r2,-40(fp)
   2ea04:	0080100e 	bge	zero,r2,2ea48 <altera_avalon_jtag_uart_write+0x1c8>
    {
      if (flags & O_NONBLOCK)
   2ea08:	e0bff517 	ldw	r2,-44(fp)
   2ea0c:	1090000c 	andi	r2,r2,16384
   2ea10:	1000101e 	bne	r2,zero,2ea54 <altera_avalon_jtag_uart_write+0x1d4>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
   2ea14:	0001883a 	nop
   2ea18:	e0bff817 	ldw	r2,-32(fp)
   2ea1c:	10800d17 	ldw	r2,52(r2)
   2ea20:	e0ffff17 	ldw	r3,-4(fp)
   2ea24:	1880051e 	bne	r3,r2,2ea3c <altera_avalon_jtag_uart_write+0x1bc>
   2ea28:	e0bff817 	ldw	r2,-32(fp)
   2ea2c:	10c00917 	ldw	r3,36(r2)
   2ea30:	e0bff817 	ldw	r2,-32(fp)
   2ea34:	10800117 	ldw	r2,4(r2)
   2ea38:	18bff736 	bltu	r3,r2,2ea18 <altera_avalon_jtag_uart_write+0x198>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
   2ea3c:	e0bff817 	ldw	r2,-32(fp)
   2ea40:	10800917 	ldw	r2,36(r2)
   2ea44:	1000051e 	bne	r2,zero,2ea5c <altera_avalon_jtag_uart_write+0x1dc>
         break;
    }
  }
  while (count > 0);
   2ea48:	e0bff617 	ldw	r2,-40(fp)
   2ea4c:	00bfcf16 	blt	zero,r2,2e98c <altera_avalon_jtag_uart_write+0x10c>
   2ea50:	00000306 	br	2ea60 <altera_avalon_jtag_uart_write+0x1e0>
        break;
   2ea54:	0001883a 	nop
   2ea58:	00000106 	br	2ea60 <altera_avalon_jtag_uart_write+0x1e0>
         break;
   2ea5c:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
   2ea60:	e0fff717 	ldw	r3,-36(fp)
   2ea64:	e0bffd17 	ldw	r2,-12(fp)
   2ea68:	18800426 	beq	r3,r2,2ea7c <altera_avalon_jtag_uart_write+0x1fc>
    return ptr - start;
   2ea6c:	e0fff717 	ldw	r3,-36(fp)
   2ea70:	e0bffd17 	ldw	r2,-12(fp)
   2ea74:	1885c83a 	sub	r2,r3,r2
   2ea78:	00000606 	br	2ea94 <altera_avalon_jtag_uart_write+0x214>
  else if (flags & O_NONBLOCK)
   2ea7c:	e0bff517 	ldw	r2,-44(fp)
   2ea80:	1090000c 	andi	r2,r2,16384
   2ea84:	10000226 	beq	r2,zero,2ea90 <altera_avalon_jtag_uart_write+0x210>
    return -EWOULDBLOCK;
   2ea88:	00bffd44 	movi	r2,-11
   2ea8c:	00000106 	br	2ea94 <altera_avalon_jtag_uart_write+0x214>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
   2ea90:	00bffec4 	movi	r2,-5
}
   2ea94:	e037883a 	mov	sp,fp
   2ea98:	dfc00117 	ldw	ra,4(sp)
   2ea9c:	df000017 	ldw	fp,0(sp)
   2eaa0:	dec00204 	addi	sp,sp,8
   2eaa4:	f800283a 	ret

0002eaa8 <alt_avalon_timer_sc_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void alt_avalon_timer_sc_irq (void* base)
#else
static void alt_avalon_timer_sc_irq (void* base, alt_u32 id)
#endif
{
   2eaa8:	defffa04 	addi	sp,sp,-24
   2eaac:	dfc00515 	stw	ra,20(sp)
   2eab0:	df000415 	stw	fp,16(sp)
   2eab4:	df000404 	addi	fp,sp,16
   2eab8:	e13ffc15 	stw	r4,-16(fp)
  alt_irq_context cpu_sr;
  
  /* clear the interrupt */
  IOWR_ALTERA_AVALON_TIMER_STATUS (base, 0);
   2eabc:	0007883a 	mov	r3,zero
   2eac0:	e0bffc17 	ldw	r2,-16(fp)
   2eac4:	10c00035 	stwio	r3,0(r2)
  /* 
   * Dummy read to ensure IRQ is negated before the ISR returns.
   * The control register is read because reading the status
   * register has side-effects per the register map documentation.
   */
  IORD_ALTERA_AVALON_TIMER_CONTROL (base);
   2eac8:	e0bffc17 	ldw	r2,-16(fp)
   2eacc:	10800104 	addi	r2,r2,4
   2ead0:	10800037 	ldwio	r2,0(r2)
  NIOS2_READ_STATUS (context);
   2ead4:	0005303a 	rdctl	r2,status
   2ead8:	e0bffd15 	stw	r2,-12(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2eadc:	e0fffd17 	ldw	r3,-12(fp)
   2eae0:	00bfff84 	movi	r2,-2
   2eae4:	1884703a 	and	r2,r3,r2
   2eae8:	1001703a 	wrctl	status,r2
  return context;
   2eaec:	e0bffd17 	ldw	r2,-12(fp)

  /* 
   * Notify the system of a clock tick. disable interrupts 
   * during this time to safely support ISR preemption
   */
  cpu_sr = alt_irq_disable_all();
   2eaf0:	e0bfff15 	stw	r2,-4(fp)
  alt_tick ();
   2eaf4:	002f73c0 	call	2f73c <alt_tick>
   2eaf8:	e0bfff17 	ldw	r2,-4(fp)
   2eafc:	e0bffe15 	stw	r2,-8(fp)
  NIOS2_WRITE_STATUS (context);
   2eb00:	e0bffe17 	ldw	r2,-8(fp)
   2eb04:	1001703a 	wrctl	status,r2
}
   2eb08:	0001883a 	nop
  alt_irq_enable_all(cpu_sr);
}
   2eb0c:	0001883a 	nop
   2eb10:	e037883a 	mov	sp,fp
   2eb14:	dfc00117 	ldw	ra,4(sp)
   2eb18:	df000017 	ldw	fp,0(sp)
   2eb1c:	dec00204 	addi	sp,sp,8
   2eb20:	f800283a 	ret

0002eb24 <alt_avalon_timer_sc_init>:
 * auto-generated alt_sys_init() function.
 */

void alt_avalon_timer_sc_init (void* base, alt_u32 irq_controller_id, 
                                alt_u32 irq, alt_u32 freq)
{
   2eb24:	defff804 	addi	sp,sp,-32
   2eb28:	dfc00715 	stw	ra,28(sp)
   2eb2c:	df000615 	stw	fp,24(sp)
   2eb30:	df000604 	addi	fp,sp,24
   2eb34:	e13ffe15 	stw	r4,-8(fp)
   2eb38:	e17ffd15 	stw	r5,-12(fp)
   2eb3c:	e1bffc15 	stw	r6,-16(fp)
   2eb40:	e1fffb15 	stw	r7,-20(fp)
   2eb44:	e0bffb17 	ldw	r2,-20(fp)
   2eb48:	e0bfff15 	stw	r2,-4(fp)
 * in order to initialise the value of the clock frequency.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_sysclk_init (alt_u32 nticks)
{
  if (! _alt_tick_rate)
   2eb4c:	d0a70f17 	ldw	r2,-25540(gp)
   2eb50:	1000031e 	bne	r2,zero,2eb60 <alt_avalon_timer_sc_init+0x3c>
  {
    _alt_tick_rate = nticks;
   2eb54:	e0bfff17 	ldw	r2,-4(fp)
   2eb58:	d0a70f15 	stw	r2,-25540(gp)
    return 0;
   2eb5c:	00000106 	br	2eb64 <alt_avalon_timer_sc_init+0x40>
  }
  else
  {
    return -1;
   2eb60:	0001883a 	nop
  
  alt_sysclk_init (freq);
  
  /* set to free running mode */
  
  IOWR_ALTERA_AVALON_TIMER_CONTROL (base, 
   2eb64:	e0bffe17 	ldw	r2,-8(fp)
   2eb68:	10800104 	addi	r2,r2,4
   2eb6c:	00c001c4 	movi	r3,7
   2eb70:	10c00035 	stwio	r3,0(r2)
            ALTERA_AVALON_TIMER_CONTROL_CONT_MSK |
            ALTERA_AVALON_TIMER_CONTROL_START_MSK);

  /* register the interrupt handler, and enable the interrupt */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, alt_avalon_timer_sc_irq, 
   2eb74:	d8000015 	stw	zero,0(sp)
   2eb78:	e1fffe17 	ldw	r7,-8(fp)
   2eb7c:	018000f4 	movhi	r6,3
   2eb80:	31baaa04 	addi	r6,r6,-5464
   2eb84:	e17ffc17 	ldw	r5,-16(fp)
   2eb88:	e13ffd17 	ldw	r4,-12(fp)
   2eb8c:	002f08c0 	call	2f08c <alt_ic_isr_register>
                      base, NULL);
#else
  alt_irq_register (irq, base, alt_avalon_timer_sc_irq);
#endif  
}
   2eb90:	0001883a 	nop
   2eb94:	e037883a 	mov	sp,fp
   2eb98:	dfc00117 	ldw	ra,4(sp)
   2eb9c:	df000017 	ldw	fp,0(sp)
   2eba0:	dec00204 	addi	sp,sp,8
   2eba4:	f800283a 	ret

0002eba8 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
   2eba8:	defff404 	addi	sp,sp,-48
   2ebac:	df000b15 	stw	fp,44(sp)
   2ebb0:	df000b04 	addi	fp,sp,44
   2ebb4:	e13ff815 	stw	r4,-32(fp)
   2ebb8:	e17ff715 	stw	r5,-36(fp)
   2ebbc:	e1bff615 	stw	r6,-40(fp)
   2ebc0:	e1fff515 	stw	r7,-44(fp)
  alt_irq_context irq_context;
  alt_u64 current_nticks = 0;
   2ebc4:	e03ffe15 	stw	zero,-8(fp)
   2ebc8:	e03fff15 	stw	zero,-4(fp)
  return _alt_tick_rate;
   2ebcc:	d0a70f17 	ldw	r2,-25540(gp)
  
  if (alt_ticks_per_second ())
   2ebd0:	10004826 	beq	r2,zero,2ecf4 <alt_alarm_start+0x14c>
  {
    if (alarm)
   2ebd4:	e0bff817 	ldw	r2,-32(fp)
   2ebd8:	10004426 	beq	r2,zero,2ecec <alt_alarm_start+0x144>
    {
      alarm->callback = callback;
   2ebdc:	e0bff817 	ldw	r2,-32(fp)
   2ebe0:	e0fff617 	ldw	r3,-40(fp)
   2ebe4:	10c00415 	stw	r3,16(r2)
      alarm->context  = context;
   2ebe8:	e0bff817 	ldw	r2,-32(fp)
   2ebec:	e0fff517 	ldw	r3,-44(fp)
   2ebf0:	10c00515 	stw	r3,20(r2)
  NIOS2_READ_STATUS (context);
   2ebf4:	0005303a 	rdctl	r2,status
   2ebf8:	e0bff915 	stw	r2,-28(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2ebfc:	e0fff917 	ldw	r3,-28(fp)
   2ec00:	00bfff84 	movi	r2,-2
   2ec04:	1884703a 	and	r2,r3,r2
   2ec08:	1001703a 	wrctl	status,r2
  return context;
   2ec0c:	e0bff917 	ldw	r2,-28(fp)
 
      irq_context = alt_irq_disable_all ();
   2ec10:	e0bffd15 	stw	r2,-12(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u64 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
   2ec14:	d0a71017 	ldw	r2,-25536(gp)
   2ec18:	d0e71117 	ldw	r3,-25532(gp)
      
      current_nticks = alt_nticks();
   2ec1c:	e0bffe15 	stw	r2,-8(fp)
   2ec20:	e0ffff15 	stw	r3,-4(fp)
      
      alarm->time = (alt_u64)nticks + current_nticks + 1; 
   2ec24:	e0bff717 	ldw	r2,-36(fp)
   2ec28:	1011883a 	mov	r8,r2
   2ec2c:	0013883a 	mov	r9,zero
   2ec30:	e13ffe17 	ldw	r4,-8(fp)
   2ec34:	e17fff17 	ldw	r5,-4(fp)
   2ec38:	4105883a 	add	r2,r8,r4
   2ec3c:	120d803a 	cmpltu	r6,r2,r8
   2ec40:	4947883a 	add	r3,r9,r5
   2ec44:	30c9883a 	add	r4,r6,r3
   2ec48:	2007883a 	mov	r3,r4
   2ec4c:	1009883a 	mov	r4,r2
   2ec50:	180b883a 	mov	r5,r3
   2ec54:	01800044 	movi	r6,1
   2ec58:	000f883a 	mov	r7,zero
   2ec5c:	2185883a 	add	r2,r4,r6
   2ec60:	1111803a 	cmpltu	r8,r2,r4
   2ec64:	29c7883a 	add	r3,r5,r7
   2ec68:	40c9883a 	add	r4,r8,r3
   2ec6c:	2007883a 	mov	r3,r4
   2ec70:	1009883a 	mov	r4,r2
   2ec74:	180b883a 	mov	r5,r3
   2ec78:	e0bff817 	ldw	r2,-32(fp)
   2ec7c:	11000215 	stw	r4,8(r2)
   2ec80:	11400315 	stw	r5,12(r2)
          
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
   2ec84:	e0bff817 	ldw	r2,-32(fp)
   2ec88:	d0e00c04 	addi	r3,gp,-32720
   2ec8c:	e0fffb15 	stw	r3,-20(fp)
   2ec90:	e0bffa15 	stw	r2,-24(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
   2ec94:	e0bffa17 	ldw	r2,-24(fp)
   2ec98:	e0fffb17 	ldw	r3,-20(fp)
   2ec9c:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
   2eca0:	e0bffb17 	ldw	r2,-20(fp)
   2eca4:	10c00017 	ldw	r3,0(r2)
   2eca8:	e0bffa17 	ldw	r2,-24(fp)
   2ecac:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
   2ecb0:	e0bffb17 	ldw	r2,-20(fp)
   2ecb4:	10800017 	ldw	r2,0(r2)
   2ecb8:	e0fffa17 	ldw	r3,-24(fp)
   2ecbc:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
   2ecc0:	e0bffb17 	ldw	r2,-20(fp)
   2ecc4:	e0fffa17 	ldw	r3,-24(fp)
   2ecc8:	10c00015 	stw	r3,0(r2)
}
   2eccc:	0001883a 	nop
   2ecd0:	e0bffd17 	ldw	r2,-12(fp)
   2ecd4:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context);
   2ecd8:	e0bffc17 	ldw	r2,-16(fp)
   2ecdc:	1001703a 	wrctl	status,r2
}
   2ece0:	0001883a 	nop
      alt_irq_enable_all (irq_context);

      return 0;
   2ece4:	0005883a 	mov	r2,zero
   2ece8:	00000306 	br	2ecf8 <alt_alarm_start+0x150>
    }
    else
    {
      return -EINVAL;
   2ecec:	00bffa84 	movi	r2,-22
   2ecf0:	00000106 	br	2ecf8 <alt_alarm_start+0x150>
    }
  }
  else
  {
    return -ENOTSUP;
   2ecf4:	00bfde84 	movi	r2,-134
  }
}
   2ecf8:	e037883a 	mov	sp,fp
   2ecfc:	df000017 	ldw	fp,0(sp)
   2ed00:	dec00104 	addi	sp,sp,4
   2ed04:	f800283a 	ret

0002ed08 <alt_busy_sleep>:
#include "alt_types.h"

#include "priv/alt_busy_sleep.h"

unsigned int alt_busy_sleep (unsigned int us)
{
   2ed08:	defffa04 	addi	sp,sp,-24
   2ed0c:	dfc00515 	stw	ra,20(sp)
   2ed10:	df000415 	stw	fp,16(sp)
   2ed14:	df000404 	addi	fp,sp,16
   2ed18:	e13ffc15 	stw	r4,-16(fp)
  {
    cycles_per_loop = 9;
  }
  else  
  {
    cycles_per_loop = 3;
   2ed1c:	008000c4 	movi	r2,3
   2ed20:	e0bffe15 	stw	r2,-8(fp)
  }
  

  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));
   2ed24:	e0fffe17 	ldw	r3,-8(fp)
   2ed28:	008003f4 	movhi	r2,15
   2ed2c:	10909004 	addi	r2,r2,16960
   2ed30:	1885383a 	mul	r2,r3,r2
   2ed34:	100b883a 	mov	r5,r2
   2ed38:	0100bef4 	movhi	r4,763
   2ed3c:	213c2004 	addi	r4,r4,-3968
   2ed40:	00206f80 	call	206f8 <__udivsi3>
  big_loops = us / (INT_MAX/
   2ed44:	100b883a 	mov	r5,r2
   2ed48:	01200034 	movhi	r4,32768
   2ed4c:	213fffc4 	addi	r4,r4,-1
   2ed50:	00206f80 	call	206f8 <__udivsi3>
   2ed54:	100b883a 	mov	r5,r2
   2ed58:	e13ffc17 	ldw	r4,-16(fp)
   2ed5c:	00206f80 	call	206f8 <__udivsi3>
   2ed60:	e0bffd15 	stw	r2,-12(fp)

  if (big_loops)
   2ed64:	e0bffd17 	ldw	r2,-12(fp)
   2ed68:	10002a26 	beq	r2,zero,2ee14 <alt_busy_sleep+0x10c>
  {
    for(i=0;i<big_loops;i++)
   2ed6c:	e03fff15 	stw	zero,-4(fp)
   2ed70:	00001706 	br	2edd0 <alt_busy_sleep+0xc8>
      /*
      * Do NOT Try to single step the asm statement below 
      * (single step will never return)
      * Step out of this function or set a breakpoint after the asm statements
      */
      __asm__ volatile (
   2ed74:	00a00034 	movhi	r2,32768
   2ed78:	10bfffc4 	addi	r2,r2,-1
   2ed7c:	10bfffc4 	addi	r2,r2,-1
   2ed80:	103ffe1e 	bne	r2,zero,2ed7c <alt_busy_sleep+0x74>
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
      (cycles_per_loop * 1000000)));
   2ed84:	e0fffe17 	ldw	r3,-8(fp)
   2ed88:	008003f4 	movhi	r2,15
   2ed8c:	10909004 	addi	r2,r2,16960
   2ed90:	1885383a 	mul	r2,r3,r2
      us -= (INT_MAX/(ALT_CPU_FREQ/
   2ed94:	100b883a 	mov	r5,r2
   2ed98:	0100bef4 	movhi	r4,763
   2ed9c:	213c2004 	addi	r4,r4,-3968
   2eda0:	00206f80 	call	206f8 <__udivsi3>
   2eda4:	100b883a 	mov	r5,r2
   2eda8:	01200034 	movhi	r4,32768
   2edac:	213fffc4 	addi	r4,r4,-1
   2edb0:	00206f80 	call	206f8 <__udivsi3>
   2edb4:	1007883a 	mov	r3,r2
   2edb8:	e0bffc17 	ldw	r2,-16(fp)
   2edbc:	10c5c83a 	sub	r2,r2,r3
   2edc0:	e0bffc15 	stw	r2,-16(fp)
    for(i=0;i<big_loops;i++)
   2edc4:	e0bfff17 	ldw	r2,-4(fp)
   2edc8:	10800044 	addi	r2,r2,1
   2edcc:	e0bfff15 	stw	r2,-4(fp)
   2edd0:	e0ffff17 	ldw	r3,-4(fp)
   2edd4:	e0bffd17 	ldw	r2,-12(fp)
   2edd8:	18bfe616 	blt	r3,r2,2ed74 <alt_busy_sleep+0x6c>
      "\n\tbne %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
   2eddc:	e0fffe17 	ldw	r3,-8(fp)
   2ede0:	008003f4 	movhi	r2,15
   2ede4:	10909004 	addi	r2,r2,16960
   2ede8:	1885383a 	mul	r2,r3,r2
   2edec:	100b883a 	mov	r5,r2
   2edf0:	0100bef4 	movhi	r4,763
   2edf4:	213c2004 	addi	r4,r4,-3968
   2edf8:	00206f80 	call	206f8 <__udivsi3>
   2edfc:	1007883a 	mov	r3,r2
   2ee00:	e0bffc17 	ldw	r2,-16(fp)
   2ee04:	1885383a 	mul	r2,r3,r2
    __asm__ volatile (
   2ee08:	10bfffc4 	addi	r2,r2,-1
   2ee0c:	103ffe1e 	bne	r2,zero,2ee08 <alt_busy_sleep+0x100>
   2ee10:	00000d06 	br	2ee48 <alt_busy_sleep+0x140>
      "\n\tbgt %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
   2ee14:	e0fffe17 	ldw	r3,-8(fp)
   2ee18:	008003f4 	movhi	r2,15
   2ee1c:	10909004 	addi	r2,r2,16960
   2ee20:	1885383a 	mul	r2,r3,r2
   2ee24:	100b883a 	mov	r5,r2
   2ee28:	0100bef4 	movhi	r4,763
   2ee2c:	213c2004 	addi	r4,r4,-3968
   2ee30:	00206f80 	call	206f8 <__udivsi3>
   2ee34:	1007883a 	mov	r3,r2
   2ee38:	e0bffc17 	ldw	r2,-16(fp)
   2ee3c:	1885383a 	mul	r2,r3,r2
    __asm__ volatile (
   2ee40:	10bfffc4 	addi	r2,r2,-1
   2ee44:	00bffe16 	blt	zero,r2,2ee40 <alt_busy_sleep+0x138>
  }
#endif /* #ifndef ALT_SIM_OPTIMIZE */
  return 0;
   2ee48:	0005883a 	mov	r2,zero
}
   2ee4c:	e037883a 	mov	sp,fp
   2ee50:	dfc00117 	ldw	ra,4(sp)
   2ee54:	df000017 	ldw	fp,0(sp)
   2ee58:	dec00204 	addi	sp,sp,8
   2ee5c:	f800283a 	ret

0002ee60 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
   2ee60:	defffe04 	addi	sp,sp,-8
   2ee64:	df000115 	stw	fp,4(sp)
   2ee68:	df000104 	addi	fp,sp,4
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
   2ee6c:	e03fff15 	stw	zero,-4(fp)
   2ee70:	00000506 	br	2ee88 <alt_dcache_flush_all+0x28>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
   2ee74:	e0bfff17 	ldw	r2,-4(fp)
   2ee78:	1000003b 	flushd	0(r2)
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
   2ee7c:	e0bfff17 	ldw	r2,-4(fp)
   2ee80:	10800804 	addi	r2,r2,32
   2ee84:	e0bfff15 	stw	r2,-4(fp)
   2ee88:	e0bfff17 	ldw	r2,-4(fp)
   2ee8c:	10820030 	cmpltui	r2,r2,2048
   2ee90:	103ff81e 	bne	r2,zero,2ee74 <alt_dcache_flush_all+0x14>
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
   2ee94:	0001883a 	nop
   2ee98:	0001883a 	nop
   2ee9c:	e037883a 	mov	sp,fp
   2eea0:	df000017 	ldw	fp,0(sp)
   2eea4:	dec00104 	addi	sp,sp,4
   2eea8:	f800283a 	ret

0002eeac <alt_get_errno>:
{
   2eeac:	defffe04 	addi	sp,sp,-8
   2eeb0:	dfc00115 	stw	ra,4(sp)
   2eeb4:	df000015 	stw	fp,0(sp)
   2eeb8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2eebc:	d0a00917 	ldw	r2,-32732(gp)
   2eec0:	10000326 	beq	r2,zero,2eed0 <alt_get_errno+0x24>
   2eec4:	d0a00917 	ldw	r2,-32732(gp)
   2eec8:	103ee83a 	callr	r2
   2eecc:	00000106 	br	2eed4 <alt_get_errno+0x28>
   2eed0:	d0a70904 	addi	r2,gp,-25564
}
   2eed4:	e037883a 	mov	sp,fp
   2eed8:	dfc00117 	ldw	ra,4(sp)
   2eedc:	df000017 	ldw	fp,0(sp)
   2eee0:	dec00204 	addi	sp,sp,8
   2eee4:	f800283a 	ret

0002eee8 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
   2eee8:	defffa04 	addi	sp,sp,-24
   2eeec:	dfc00515 	stw	ra,20(sp)
   2eef0:	df000415 	stw	fp,16(sp)
   2eef4:	df000404 	addi	fp,sp,16
   2eef8:	e13ffd15 	stw	r4,-12(fp)
   2eefc:	e17ffc15 	stw	r5,-16(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
   2ef00:	e0bffd17 	ldw	r2,-12(fp)
   2ef04:	10000326 	beq	r2,zero,2ef14 <alt_dev_llist_insert+0x2c>
   2ef08:	e0bffd17 	ldw	r2,-12(fp)
   2ef0c:	10800217 	ldw	r2,8(r2)
   2ef10:	1000061e 	bne	r2,zero,2ef2c <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
   2ef14:	002eeac0 	call	2eeac <alt_get_errno>
   2ef18:	1007883a 	mov	r3,r2
   2ef1c:	00800584 	movi	r2,22
   2ef20:	18800015 	stw	r2,0(r3)
    return -EINVAL;
   2ef24:	00bffa84 	movi	r2,-22
   2ef28:	00001406 	br	2ef7c <alt_dev_llist_insert+0x94>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
   2ef2c:	e0bffd17 	ldw	r2,-12(fp)
   2ef30:	e0fffc17 	ldw	r3,-16(fp)
   2ef34:	e0ffff15 	stw	r3,-4(fp)
   2ef38:	e0bffe15 	stw	r2,-8(fp)
  entry->previous = list;
   2ef3c:	e0bffe17 	ldw	r2,-8(fp)
   2ef40:	e0ffff17 	ldw	r3,-4(fp)
   2ef44:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
   2ef48:	e0bfff17 	ldw	r2,-4(fp)
   2ef4c:	10c00017 	ldw	r3,0(r2)
   2ef50:	e0bffe17 	ldw	r2,-8(fp)
   2ef54:	10c00015 	stw	r3,0(r2)
  list->next->previous = entry;
   2ef58:	e0bfff17 	ldw	r2,-4(fp)
   2ef5c:	10800017 	ldw	r2,0(r2)
   2ef60:	e0fffe17 	ldw	r3,-8(fp)
   2ef64:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
   2ef68:	e0bfff17 	ldw	r2,-4(fp)
   2ef6c:	e0fffe17 	ldw	r3,-8(fp)
   2ef70:	10c00015 	stw	r3,0(r2)
}
   2ef74:	0001883a 	nop

  return 0;  
   2ef78:	0005883a 	mov	r2,zero
}
   2ef7c:	e037883a 	mov	sp,fp
   2ef80:	dfc00117 	ldw	ra,4(sp)
   2ef84:	df000017 	ldw	fp,0(sp)
   2ef88:	dec00204 	addi	sp,sp,8
   2ef8c:	f800283a 	ret

0002ef90 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
   2ef90:	defffd04 	addi	sp,sp,-12
   2ef94:	dfc00215 	stw	ra,8(sp)
   2ef98:	df000115 	stw	fp,4(sp)
   2ef9c:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   2efa0:	008000f4 	movhi	r2,3
   2efa4:	10bf9604 	addi	r2,r2,-424
   2efa8:	e0bfff15 	stw	r2,-4(fp)
   2efac:	00000606 	br	2efc8 <_do_ctors+0x38>
        (*ctor) (); 
   2efb0:	e0bfff17 	ldw	r2,-4(fp)
   2efb4:	10800017 	ldw	r2,0(r2)
   2efb8:	103ee83a 	callr	r2
  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   2efbc:	e0bfff17 	ldw	r2,-4(fp)
   2efc0:	10bfff04 	addi	r2,r2,-4
   2efc4:	e0bfff15 	stw	r2,-4(fp)
   2efc8:	e0ffff17 	ldw	r3,-4(fp)
   2efcc:	008000f4 	movhi	r2,3
   2efd0:	10bf9704 	addi	r2,r2,-420
   2efd4:	18bff62e 	bgeu	r3,r2,2efb0 <_do_ctors+0x20>
}
   2efd8:	0001883a 	nop
   2efdc:	0001883a 	nop
   2efe0:	e037883a 	mov	sp,fp
   2efe4:	dfc00117 	ldw	ra,4(sp)
   2efe8:	df000017 	ldw	fp,0(sp)
   2efec:	dec00204 	addi	sp,sp,8
   2eff0:	f800283a 	ret

0002eff4 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
   2eff4:	defffd04 	addi	sp,sp,-12
   2eff8:	dfc00215 	stw	ra,8(sp)
   2effc:	df000115 	stw	fp,4(sp)
   2f000:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   2f004:	008000f4 	movhi	r2,3
   2f008:	10bf9604 	addi	r2,r2,-424
   2f00c:	e0bfff15 	stw	r2,-4(fp)
   2f010:	00000606 	br	2f02c <_do_dtors+0x38>
        (*dtor) (); 
   2f014:	e0bfff17 	ldw	r2,-4(fp)
   2f018:	10800017 	ldw	r2,0(r2)
   2f01c:	103ee83a 	callr	r2
  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   2f020:	e0bfff17 	ldw	r2,-4(fp)
   2f024:	10bfff04 	addi	r2,r2,-4
   2f028:	e0bfff15 	stw	r2,-4(fp)
   2f02c:	e0ffff17 	ldw	r3,-4(fp)
   2f030:	008000f4 	movhi	r2,3
   2f034:	10bf9704 	addi	r2,r2,-420
   2f038:	18bff62e 	bgeu	r3,r2,2f014 <_do_dtors+0x20>
}
   2f03c:	0001883a 	nop
   2f040:	0001883a 	nop
   2f044:	e037883a 	mov	sp,fp
   2f048:	dfc00117 	ldw	ra,4(sp)
   2f04c:	df000017 	ldw	fp,0(sp)
   2f050:	dec00204 	addi	sp,sp,8
   2f054:	f800283a 	ret

0002f058 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
   2f058:	defffe04 	addi	sp,sp,-8
   2f05c:	dfc00115 	stw	ra,4(sp)
   2f060:	df000015 	stw	fp,0(sp)
   2f064:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
   2f068:	01440004 	movi	r5,4096
   2f06c:	0009883a 	mov	r4,zero
   2f070:	002fac40 	call	2fac4 <alt_icache_flush>
#endif
}
   2f074:	0001883a 	nop
   2f078:	e037883a 	mov	sp,fp
   2f07c:	dfc00117 	ldw	ra,4(sp)
   2f080:	df000017 	ldw	fp,0(sp)
   2f084:	dec00204 	addi	sp,sp,8
   2f088:	f800283a 	ret

0002f08c <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
   2f08c:	defff904 	addi	sp,sp,-28
   2f090:	dfc00615 	stw	ra,24(sp)
   2f094:	df000515 	stw	fp,20(sp)
   2f098:	df000504 	addi	fp,sp,20
   2f09c:	e13fff15 	stw	r4,-4(fp)
   2f0a0:	e17ffe15 	stw	r5,-8(fp)
   2f0a4:	e1bffd15 	stw	r6,-12(fp)
   2f0a8:	e1fffc15 	stw	r7,-16(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
   2f0ac:	e0800217 	ldw	r2,8(fp)
   2f0b0:	d8800015 	stw	r2,0(sp)
   2f0b4:	e1fffc17 	ldw	r7,-16(fp)
   2f0b8:	e1bffd17 	ldw	r6,-12(fp)
   2f0bc:	e17ffe17 	ldw	r5,-8(fp)
   2f0c0:	e13fff17 	ldw	r4,-4(fp)
   2f0c4:	002f23c0 	call	2f23c <alt_iic_isr_register>
}  
   2f0c8:	e037883a 	mov	sp,fp
   2f0cc:	dfc00117 	ldw	ra,4(sp)
   2f0d0:	df000017 	ldw	fp,0(sp)
   2f0d4:	dec00204 	addi	sp,sp,8
   2f0d8:	f800283a 	ret

0002f0dc <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
   2f0dc:	defff904 	addi	sp,sp,-28
   2f0e0:	df000615 	stw	fp,24(sp)
   2f0e4:	df000604 	addi	fp,sp,24
   2f0e8:	e13ffb15 	stw	r4,-20(fp)
   2f0ec:	e17ffa15 	stw	r5,-24(fp)
   2f0f0:	e0bffa17 	ldw	r2,-24(fp)
   2f0f4:	e0bfff15 	stw	r2,-4(fp)
  NIOS2_READ_STATUS (context);
   2f0f8:	0005303a 	rdctl	r2,status
   2f0fc:	e0bffe15 	stw	r2,-8(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2f100:	e0fffe17 	ldw	r3,-8(fp)
   2f104:	00bfff84 	movi	r2,-2
   2f108:	1884703a 	and	r2,r3,r2
   2f10c:	1001703a 	wrctl	status,r2
  return context;
   2f110:	e0bffe17 	ldw	r2,-8(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
   2f114:	e0bffd15 	stw	r2,-12(fp)

  alt_irq_active |= (1 << id);
   2f118:	00c00044 	movi	r3,1
   2f11c:	e0bfff17 	ldw	r2,-4(fp)
   2f120:	1884983a 	sll	r2,r3,r2
   2f124:	1007883a 	mov	r3,r2
   2f128:	d0a70e17 	ldw	r2,-25544(gp)
   2f12c:	1884b03a 	or	r2,r3,r2
   2f130:	d0a70e15 	stw	r2,-25544(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   2f134:	d0a70e17 	ldw	r2,-25544(gp)
   2f138:	100170fa 	wrctl	ienable,r2
   2f13c:	e0bffd17 	ldw	r2,-12(fp)
   2f140:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context);
   2f144:	e0bffc17 	ldw	r2,-16(fp)
   2f148:	1001703a 	wrctl	status,r2
}
   2f14c:	0001883a 	nop

  alt_irq_enable_all(status);

  return 0;
   2f150:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
}
   2f154:	e037883a 	mov	sp,fp
   2f158:	df000017 	ldw	fp,0(sp)
   2f15c:	dec00104 	addi	sp,sp,4
   2f160:	f800283a 	ret

0002f164 <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
   2f164:	defff904 	addi	sp,sp,-28
   2f168:	df000615 	stw	fp,24(sp)
   2f16c:	df000604 	addi	fp,sp,24
   2f170:	e13ffb15 	stw	r4,-20(fp)
   2f174:	e17ffa15 	stw	r5,-24(fp)
   2f178:	e0bffa17 	ldw	r2,-24(fp)
   2f17c:	e0bfff15 	stw	r2,-4(fp)
  NIOS2_READ_STATUS (context);
   2f180:	0005303a 	rdctl	r2,status
   2f184:	e0bffe15 	stw	r2,-8(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2f188:	e0fffe17 	ldw	r3,-8(fp)
   2f18c:	00bfff84 	movi	r2,-2
   2f190:	1884703a 	and	r2,r3,r2
   2f194:	1001703a 	wrctl	status,r2
  return context;
   2f198:	e0bffe17 	ldw	r2,-8(fp)
  status = alt_irq_disable_all ();
   2f19c:	e0bffd15 	stw	r2,-12(fp)
  alt_irq_active &= ~(1 << id);
   2f1a0:	00c00044 	movi	r3,1
   2f1a4:	e0bfff17 	ldw	r2,-4(fp)
   2f1a8:	1884983a 	sll	r2,r3,r2
   2f1ac:	0084303a 	nor	r2,zero,r2
   2f1b0:	1007883a 	mov	r3,r2
   2f1b4:	d0a70e17 	ldw	r2,-25544(gp)
   2f1b8:	1884703a 	and	r2,r3,r2
   2f1bc:	d0a70e15 	stw	r2,-25544(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   2f1c0:	d0a70e17 	ldw	r2,-25544(gp)
   2f1c4:	100170fa 	wrctl	ienable,r2
   2f1c8:	e0bffd17 	ldw	r2,-12(fp)
   2f1cc:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context);
   2f1d0:	e0bffc17 	ldw	r2,-16(fp)
   2f1d4:	1001703a 	wrctl	status,r2
}
   2f1d8:	0001883a 	nop
  return 0;
   2f1dc:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
}
   2f1e0:	e037883a 	mov	sp,fp
   2f1e4:	df000017 	ldw	fp,0(sp)
   2f1e8:	dec00104 	addi	sp,sp,4
   2f1ec:	f800283a 	ret

0002f1f0 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
   2f1f0:	defffc04 	addi	sp,sp,-16
   2f1f4:	df000315 	stw	fp,12(sp)
   2f1f8:	df000304 	addi	fp,sp,12
   2f1fc:	e13ffe15 	stw	r4,-8(fp)
   2f200:	e17ffd15 	stw	r5,-12(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
   2f204:	000530fa 	rdctl	r2,ienable
   2f208:	e0bfff15 	stw	r2,-4(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
   2f20c:	00c00044 	movi	r3,1
   2f210:	e0bffd17 	ldw	r2,-12(fp)
   2f214:	1884983a 	sll	r2,r3,r2
   2f218:	1007883a 	mov	r3,r2
   2f21c:	e0bfff17 	ldw	r2,-4(fp)
   2f220:	1884703a 	and	r2,r3,r2
   2f224:	1004c03a 	cmpne	r2,r2,zero
   2f228:	10803fcc 	andi	r2,r2,255
}
   2f22c:	e037883a 	mov	sp,fp
   2f230:	df000017 	ldw	fp,0(sp)
   2f234:	dec00104 	addi	sp,sp,4
   2f238:	f800283a 	ret

0002f23c <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
   2f23c:	defff504 	addi	sp,sp,-44
   2f240:	dfc00a15 	stw	ra,40(sp)
   2f244:	df000915 	stw	fp,36(sp)
   2f248:	df000904 	addi	fp,sp,36
   2f24c:	e13ffa15 	stw	r4,-24(fp)
   2f250:	e17ff915 	stw	r5,-28(fp)
   2f254:	e1bff815 	stw	r6,-32(fp)
   2f258:	e1fff715 	stw	r7,-36(fp)
  int rc = -EINVAL;  
   2f25c:	00bffa84 	movi	r2,-22
   2f260:	e0bfff15 	stw	r2,-4(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
   2f264:	e0bff917 	ldw	r2,-28(fp)
   2f268:	e0bffe15 	stw	r2,-8(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
   2f26c:	e0bffe17 	ldw	r2,-8(fp)
   2f270:	10800808 	cmpgei	r2,r2,32
   2f274:	1000251e 	bne	r2,zero,2f30c <alt_iic_isr_register+0xd0>
  NIOS2_READ_STATUS (context);
   2f278:	0005303a 	rdctl	r2,status
   2f27c:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2f280:	e0fffc17 	ldw	r3,-16(fp)
   2f284:	00bfff84 	movi	r2,-2
   2f288:	1884703a 	and	r2,r3,r2
   2f28c:	1001703a 	wrctl	status,r2
  return context;
   2f290:	e0bffc17 	ldw	r2,-16(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
   2f294:	e0bffd15 	stw	r2,-12(fp)

    alt_irq[id].handler = isr;
   2f298:	e0bffe17 	ldw	r2,-8(fp)
   2f29c:	100890fa 	slli	r4,r2,3
   2f2a0:	e0fff817 	ldw	r3,-32(fp)
   2f2a4:	008000f4 	movhi	r2,3
   2f2a8:	2085883a 	add	r2,r4,r2
   2f2ac:	10cf6615 	stw	r3,15768(r2)
    alt_irq[id].context = isr_context;
   2f2b0:	e0bffe17 	ldw	r2,-8(fp)
   2f2b4:	100890fa 	slli	r4,r2,3
   2f2b8:	e0fff717 	ldw	r3,-36(fp)
   2f2bc:	008000f4 	movhi	r2,3
   2f2c0:	2085883a 	add	r2,r4,r2
   2f2c4:	10cf6715 	stw	r3,15772(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
   2f2c8:	e0bff817 	ldw	r2,-32(fp)
   2f2cc:	10000526 	beq	r2,zero,2f2e4 <alt_iic_isr_register+0xa8>
   2f2d0:	e0bffe17 	ldw	r2,-8(fp)
   2f2d4:	100b883a 	mov	r5,r2
   2f2d8:	e13ffa17 	ldw	r4,-24(fp)
   2f2dc:	002f0dc0 	call	2f0dc <alt_ic_irq_enable>
   2f2e0:	00000406 	br	2f2f4 <alt_iic_isr_register+0xb8>
   2f2e4:	e0bffe17 	ldw	r2,-8(fp)
   2f2e8:	100b883a 	mov	r5,r2
   2f2ec:	e13ffa17 	ldw	r4,-24(fp)
   2f2f0:	002f1640 	call	2f164 <alt_ic_irq_disable>
   2f2f4:	e0bfff15 	stw	r2,-4(fp)
   2f2f8:	e0bffd17 	ldw	r2,-12(fp)
   2f2fc:	e0bffb15 	stw	r2,-20(fp)
  NIOS2_WRITE_STATUS (context);
   2f300:	e0bffb17 	ldw	r2,-20(fp)
   2f304:	1001703a 	wrctl	status,r2
}
   2f308:	0001883a 	nop

    alt_irq_enable_all(status);
  }

  return rc; 
   2f30c:	e0bfff17 	ldw	r2,-4(fp)
}
   2f310:	e037883a 	mov	sp,fp
   2f314:	dfc00117 	ldw	ra,4(sp)
   2f318:	df000017 	ldw	fp,0(sp)
   2f31c:	dec00204 	addi	sp,sp,8
   2f320:	f800283a 	ret

0002f324 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
   2f324:	defff904 	addi	sp,sp,-28
   2f328:	dfc00615 	stw	ra,24(sp)
   2f32c:	df000515 	stw	fp,20(sp)
   2f330:	df000504 	addi	fp,sp,20
   2f334:	e13ffe15 	stw	r4,-8(fp)
   2f338:	e17ffd15 	stw	r5,-12(fp)
   2f33c:	e1bffc15 	stw	r6,-16(fp)
   2f340:	e1fffb15 	stw	r7,-20(fp)
  int old;

  old = open (name, flags, mode);
   2f344:	e1bffb17 	ldw	r6,-20(fp)
   2f348:	e17ffc17 	ldw	r5,-16(fp)
   2f34c:	e13ffd17 	ldw	r4,-12(fp)
   2f350:	002f5440 	call	2f544 <open>
   2f354:	e0bfff15 	stw	r2,-4(fp)

  if (old >= 0)
   2f358:	e0bfff17 	ldw	r2,-4(fp)
   2f35c:	10001716 	blt	r2,zero,2f3bc <alt_open_fd+0x98>
  {
    fd->dev      = alt_fd_list[old].dev;
   2f360:	e0bfff17 	ldw	r2,-4(fp)
   2f364:	10c00324 	muli	r3,r2,12
   2f368:	008000f4 	movhi	r2,3
   2f36c:	1885883a 	add	r2,r3,r2
   2f370:	10c3d117 	ldw	r3,3908(r2)
   2f374:	e0bffe17 	ldw	r2,-8(fp)
   2f378:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
   2f37c:	e0bfff17 	ldw	r2,-4(fp)
   2f380:	10c00324 	muli	r3,r2,12
   2f384:	008000f4 	movhi	r2,3
   2f388:	1885883a 	add	r2,r3,r2
   2f38c:	10c3d217 	ldw	r3,3912(r2)
   2f390:	e0bffe17 	ldw	r2,-8(fp)
   2f394:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
   2f398:	e0bfff17 	ldw	r2,-4(fp)
   2f39c:	10c00324 	muli	r3,r2,12
   2f3a0:	008000f4 	movhi	r2,3
   2f3a4:	1885883a 	add	r2,r3,r2
   2f3a8:	10c3d317 	ldw	r3,3916(r2)
   2f3ac:	e0bffe17 	ldw	r2,-8(fp)
   2f3b0:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
   2f3b4:	e13fff17 	ldw	r4,-4(fp)
   2f3b8:	002dcec0 	call	2dcec <alt_release_fd>
  }
} 
   2f3bc:	0001883a 	nop
   2f3c0:	e037883a 	mov	sp,fp
   2f3c4:	dfc00117 	ldw	ra,4(sp)
   2f3c8:	df000017 	ldw	fp,0(sp)
   2f3cc:	dec00204 	addi	sp,sp,8
   2f3d0:	f800283a 	ret

0002f3d4 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
   2f3d4:	defffb04 	addi	sp,sp,-20
   2f3d8:	dfc00415 	stw	ra,16(sp)
   2f3dc:	df000315 	stw	fp,12(sp)
   2f3e0:	df000304 	addi	fp,sp,12
   2f3e4:	e13fff15 	stw	r4,-4(fp)
   2f3e8:	e17ffe15 	stw	r5,-8(fp)
   2f3ec:	e1bffd15 	stw	r6,-12(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
   2f3f0:	01c07fc4 	movi	r7,511
   2f3f4:	01800044 	movi	r6,1
   2f3f8:	e17fff17 	ldw	r5,-4(fp)
   2f3fc:	010000f4 	movhi	r4,3
   2f400:	2103d404 	addi	r4,r4,3920
   2f404:	002f3240 	call	2f324 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
   2f408:	01c07fc4 	movi	r7,511
   2f40c:	000d883a 	mov	r6,zero
   2f410:	e17ffe17 	ldw	r5,-8(fp)
   2f414:	010000f4 	movhi	r4,3
   2f418:	2103d104 	addi	r4,r4,3908
   2f41c:	002f3240 	call	2f324 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
   2f420:	01c07fc4 	movi	r7,511
   2f424:	01800044 	movi	r6,1
   2f428:	e17ffd17 	ldw	r5,-12(fp)
   2f42c:	010000f4 	movhi	r4,3
   2f430:	2103d704 	addi	r4,r4,3932
   2f434:	002f3240 	call	2f324 <alt_open_fd>
}  
   2f438:	0001883a 	nop
   2f43c:	e037883a 	mov	sp,fp
   2f440:	dfc00117 	ldw	ra,4(sp)
   2f444:	df000017 	ldw	fp,0(sp)
   2f448:	dec00204 	addi	sp,sp,8
   2f44c:	f800283a 	ret

0002f450 <alt_get_errno>:
{
   2f450:	defffe04 	addi	sp,sp,-8
   2f454:	dfc00115 	stw	ra,4(sp)
   2f458:	df000015 	stw	fp,0(sp)
   2f45c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2f460:	d0a00917 	ldw	r2,-32732(gp)
   2f464:	10000326 	beq	r2,zero,2f474 <alt_get_errno+0x24>
   2f468:	d0a00917 	ldw	r2,-32732(gp)
   2f46c:	103ee83a 	callr	r2
   2f470:	00000106 	br	2f478 <alt_get_errno+0x28>
   2f474:	d0a70904 	addi	r2,gp,-25564
}
   2f478:	e037883a 	mov	sp,fp
   2f47c:	dfc00117 	ldw	ra,4(sp)
   2f480:	df000017 	ldw	fp,0(sp)
   2f484:	dec00204 	addi	sp,sp,8
   2f488:	f800283a 	ret

0002f48c <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
   2f48c:	defffd04 	addi	sp,sp,-12
   2f490:	df000215 	stw	fp,8(sp)
   2f494:	df000204 	addi	fp,sp,8
   2f498:	e13ffe15 	stw	r4,-8(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
   2f49c:	e0bffe17 	ldw	r2,-8(fp)
   2f4a0:	10800217 	ldw	r2,8(r2)
   2f4a4:	10d00034 	orhi	r3,r2,16384
   2f4a8:	e0bffe17 	ldw	r2,-8(fp)
   2f4ac:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
   2f4b0:	e03fff15 	stw	zero,-4(fp)
   2f4b4:	00001a06 	br	2f520 <alt_file_locked+0x94>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
   2f4b8:	e0bfff17 	ldw	r2,-4(fp)
   2f4bc:	10c00324 	muli	r3,r2,12
   2f4c0:	008000f4 	movhi	r2,3
   2f4c4:	1885883a 	add	r2,r3,r2
   2f4c8:	10c3d117 	ldw	r3,3908(r2)
   2f4cc:	e0bffe17 	ldw	r2,-8(fp)
   2f4d0:	10800017 	ldw	r2,0(r2)
   2f4d4:	18800f1e 	bne	r3,r2,2f514 <alt_file_locked+0x88>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
   2f4d8:	e0bfff17 	ldw	r2,-4(fp)
   2f4dc:	10c00324 	muli	r3,r2,12
   2f4e0:	008000f4 	movhi	r2,3
   2f4e4:	1885883a 	add	r2,r3,r2
   2f4e8:	1083d317 	ldw	r2,3916(r2)
    if ((alt_fd_list[i].dev == fd->dev) &&
   2f4ec:	1000090e 	bge	r2,zero,2f514 <alt_file_locked+0x88>
        (&alt_fd_list[i] != fd))
   2f4f0:	e0bfff17 	ldw	r2,-4(fp)
   2f4f4:	10c00324 	muli	r3,r2,12
   2f4f8:	008000f4 	movhi	r2,3
   2f4fc:	1083d104 	addi	r2,r2,3908
   2f500:	1885883a 	add	r2,r3,r2
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
   2f504:	e0fffe17 	ldw	r3,-8(fp)
   2f508:	18800226 	beq	r3,r2,2f514 <alt_file_locked+0x88>
    {
      return -EACCES;
   2f50c:	00bffcc4 	movi	r2,-13
   2f510:	00000806 	br	2f534 <alt_file_locked+0xa8>
  for (i = 0; i <= alt_max_fd; i++)
   2f514:	e0bfff17 	ldw	r2,-4(fp)
   2f518:	10800044 	addi	r2,r2,1
   2f51c:	e0bfff15 	stw	r2,-4(fp)
   2f520:	d0a00817 	ldw	r2,-32736(gp)
   2f524:	1007883a 	mov	r3,r2
   2f528:	e0bfff17 	ldw	r2,-4(fp)
   2f52c:	18bfe22e 	bgeu	r3,r2,2f4b8 <alt_file_locked+0x2c>
    }
  }
  
  /* The device is not locked */
 
  return 0;
   2f530:	0005883a 	mov	r2,zero
}
   2f534:	e037883a 	mov	sp,fp
   2f538:	df000017 	ldw	fp,0(sp)
   2f53c:	dec00104 	addi	sp,sp,4
   2f540:	f800283a 	ret

0002f544 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
   2f544:	defff604 	addi	sp,sp,-40
   2f548:	dfc00915 	stw	ra,36(sp)
   2f54c:	df000815 	stw	fp,32(sp)
   2f550:	df000804 	addi	fp,sp,32
   2f554:	e13ffa15 	stw	r4,-24(fp)
   2f558:	e17ff915 	stw	r5,-28(fp)
   2f55c:	e1bff815 	stw	r6,-32(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
   2f560:	00bfffc4 	movi	r2,-1
   2f564:	e0bffe15 	stw	r2,-8(fp)
  int status = -ENODEV;
   2f568:	00bffb44 	movi	r2,-19
   2f56c:	e0bffd15 	stw	r2,-12(fp)
  int isafs = 0;
   2f570:	e03ffc15 	stw	zero,-16(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
   2f574:	d1600604 	addi	r5,gp,-32744
   2f578:	e13ffa17 	ldw	r4,-24(fp)
   2f57c:	002f88c0 	call	2f88c <alt_find_dev>
   2f580:	e0bfff15 	stw	r2,-4(fp)
   2f584:	e0bfff17 	ldw	r2,-4(fp)
   2f588:	1000051e 	bne	r2,zero,2f5a0 <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
   2f58c:	e13ffa17 	ldw	r4,-24(fp)
   2f590:	002f91c0 	call	2f91c <alt_find_file>
   2f594:	e0bfff15 	stw	r2,-4(fp)
    isafs = 1;
   2f598:	00800044 	movi	r2,1
   2f59c:	e0bffc15 	stw	r2,-16(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
   2f5a0:	e0bfff17 	ldw	r2,-4(fp)
   2f5a4:	10002926 	beq	r2,zero,2f64c <open+0x108>
  {
    if ((index = alt_get_fd (dev)) < 0)
   2f5a8:	e13fff17 	ldw	r4,-4(fp)
   2f5ac:	002fa240 	call	2fa24 <alt_get_fd>
   2f5b0:	e0bffe15 	stw	r2,-8(fp)
   2f5b4:	e0bffe17 	ldw	r2,-8(fp)
   2f5b8:	1000030e 	bge	r2,zero,2f5c8 <open+0x84>
    {
      status = index;
   2f5bc:	e0bffe17 	ldw	r2,-8(fp)
   2f5c0:	e0bffd15 	stw	r2,-12(fp)
   2f5c4:	00002306 	br	2f654 <open+0x110>
    }
    else
    {
      fd = &alt_fd_list[index];
   2f5c8:	e0bffe17 	ldw	r2,-8(fp)
   2f5cc:	10c00324 	muli	r3,r2,12
   2f5d0:	008000f4 	movhi	r2,3
   2f5d4:	1083d104 	addi	r2,r2,3908
   2f5d8:	1885883a 	add	r2,r3,r2
   2f5dc:	e0bffb15 	stw	r2,-20(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
   2f5e0:	e0fff917 	ldw	r3,-28(fp)
   2f5e4:	00900034 	movhi	r2,16384
   2f5e8:	10bfffc4 	addi	r2,r2,-1
   2f5ec:	1886703a 	and	r3,r3,r2
   2f5f0:	e0bffb17 	ldw	r2,-20(fp)
   2f5f4:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
   2f5f8:	e0bffc17 	ldw	r2,-16(fp)
   2f5fc:	1000051e 	bne	r2,zero,2f614 <open+0xd0>
   2f600:	e13ffb17 	ldw	r4,-20(fp)
   2f604:	002f48c0 	call	2f48c <alt_file_locked>
   2f608:	e0bffd15 	stw	r2,-12(fp)
   2f60c:	e0bffd17 	ldw	r2,-12(fp)
   2f610:	10001016 	blt	r2,zero,2f654 <open+0x110>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
   2f614:	e0bfff17 	ldw	r2,-4(fp)
   2f618:	10800317 	ldw	r2,12(r2)
   2f61c:	10000826 	beq	r2,zero,2f640 <open+0xfc>
   2f620:	e0bfff17 	ldw	r2,-4(fp)
   2f624:	10800317 	ldw	r2,12(r2)
   2f628:	e1fff817 	ldw	r7,-32(fp)
   2f62c:	e1bff917 	ldw	r6,-28(fp)
   2f630:	e17ffa17 	ldw	r5,-24(fp)
   2f634:	e13ffb17 	ldw	r4,-20(fp)
   2f638:	103ee83a 	callr	r2
   2f63c:	00000106 	br	2f644 <open+0x100>
   2f640:	0005883a 	mov	r2,zero
   2f644:	e0bffd15 	stw	r2,-12(fp)
   2f648:	00000206 	br	2f654 <open+0x110>
      }
    }
  }
  else
  {
    status = -ENODEV;
   2f64c:	00bffb44 	movi	r2,-19
   2f650:	e0bffd15 	stw	r2,-12(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
   2f654:	e0bffd17 	ldw	r2,-12(fp)
   2f658:	1000090e 	bge	r2,zero,2f680 <open+0x13c>
  {
    alt_release_fd (index);  
   2f65c:	e13ffe17 	ldw	r4,-8(fp)
   2f660:	002dcec0 	call	2dcec <alt_release_fd>
    ALT_ERRNO = -status;
   2f664:	002f4500 	call	2f450 <alt_get_errno>
   2f668:	1007883a 	mov	r3,r2
   2f66c:	e0bffd17 	ldw	r2,-12(fp)
   2f670:	0085c83a 	sub	r2,zero,r2
   2f674:	18800015 	stw	r2,0(r3)
    return -1;
   2f678:	00bfffc4 	movi	r2,-1
   2f67c:	00000106 	br	2f684 <open+0x140>
  }
  
  /* return the reference upon success */

  return index;
   2f680:	e0bffe17 	ldw	r2,-8(fp)
}
   2f684:	e037883a 	mov	sp,fp
   2f688:	dfc00117 	ldw	ra,4(sp)
   2f68c:	df000017 	ldw	fp,0(sp)
   2f690:	dec00204 	addi	sp,sp,8
   2f694:	f800283a 	ret

0002f698 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
   2f698:	defffa04 	addi	sp,sp,-24
   2f69c:	df000515 	stw	fp,20(sp)
   2f6a0:	df000504 	addi	fp,sp,20
   2f6a4:	e13ffb15 	stw	r4,-20(fp)
  NIOS2_READ_STATUS (context);
   2f6a8:	0005303a 	rdctl	r2,status
   2f6ac:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2f6b0:	e0fffc17 	ldw	r3,-16(fp)
   2f6b4:	00bfff84 	movi	r2,-2
   2f6b8:	1884703a 	and	r2,r3,r2
   2f6bc:	1001703a 	wrctl	status,r2
  return context;
   2f6c0:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
   2f6c4:	e0bfff15 	stw	r2,-4(fp)
  alt_llist_remove (&alarm->llist);
   2f6c8:	e0bffb17 	ldw	r2,-20(fp)
   2f6cc:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
   2f6d0:	e0bffd17 	ldw	r2,-12(fp)
   2f6d4:	10800017 	ldw	r2,0(r2)
   2f6d8:	e0fffd17 	ldw	r3,-12(fp)
   2f6dc:	18c00117 	ldw	r3,4(r3)
   2f6e0:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
   2f6e4:	e0bffd17 	ldw	r2,-12(fp)
   2f6e8:	10800117 	ldw	r2,4(r2)
   2f6ec:	e0fffd17 	ldw	r3,-12(fp)
   2f6f0:	18c00017 	ldw	r3,0(r3)
   2f6f4:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
   2f6f8:	e0bffd17 	ldw	r2,-12(fp)
   2f6fc:	e0fffd17 	ldw	r3,-12(fp)
   2f700:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
   2f704:	e0bffd17 	ldw	r2,-12(fp)
   2f708:	e0fffd17 	ldw	r3,-12(fp)
   2f70c:	10c00015 	stw	r3,0(r2)
} 
   2f710:	0001883a 	nop
   2f714:	e0bfff17 	ldw	r2,-4(fp)
   2f718:	e0bffe15 	stw	r2,-8(fp)
  NIOS2_WRITE_STATUS (context);
   2f71c:	e0bffe17 	ldw	r2,-8(fp)
   2f720:	1001703a 	wrctl	status,r2
}
   2f724:	0001883a 	nop
  alt_irq_enable_all (irq_context);
}
   2f728:	0001883a 	nop
   2f72c:	e037883a 	mov	sp,fp
   2f730:	df000017 	ldw	fp,0(sp)
   2f734:	dec00104 	addi	sp,sp,4
   2f738:	f800283a 	ret

0002f73c <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
   2f73c:	defff904 	addi	sp,sp,-28
   2f740:	dfc00615 	stw	ra,24(sp)
   2f744:	df000515 	stw	fp,20(sp)
   2f748:	dc400415 	stw	r17,16(sp)
   2f74c:	dc000315 	stw	r16,12(sp)
   2f750:	df000504 	addi	fp,sp,20
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
   2f754:	d0a00c17 	ldw	r2,-32720(gp)
   2f758:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
   2f75c:	d1271017 	ldw	r4,-25536(gp)
   2f760:	d1671117 	ldw	r5,-25532(gp)
   2f764:	01800044 	movi	r6,1
   2f768:	000f883a 	mov	r7,zero
   2f76c:	2185883a 	add	r2,r4,r6
   2f770:	1111803a 	cmpltu	r8,r2,r4
   2f774:	29c7883a 	add	r3,r5,r7
   2f778:	40c9883a 	add	r4,r8,r3
   2f77c:	2007883a 	mov	r3,r4
   2f780:	1009883a 	mov	r4,r2
   2f784:	180b883a 	mov	r5,r3
   2f788:	d1271015 	stw	r4,-25536(gp)
   2f78c:	d1671115 	stw	r5,-25532(gp)
 
  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
   2f790:	00002906 	br	2f838 <alt_tick+0xfc>
  {
    next = (alt_alarm*) alarm->llist.next;
   2f794:	e0bffd17 	ldw	r2,-12(fp)
   2f798:	10800017 	ldw	r2,0(r2)
   2f79c:	e0bffc15 	stw	r2,-16(fp)
    
    /* if the alarm period has expired, make the callback */    
    if (alarm->time <= _alt_nticks)
   2f7a0:	e13ffd17 	ldw	r4,-12(fp)
   2f7a4:	20800217 	ldw	r2,8(r4)
   2f7a8:	20c00317 	ldw	r3,12(r4)
   2f7ac:	d1271017 	ldw	r4,-25536(gp)
   2f7b0:	d1671117 	ldw	r5,-25532(gp)
   2f7b4:	28c01e36 	bltu	r5,r3,2f830 <alt_tick+0xf4>
   2f7b8:	1940011e 	bne	r3,r5,2f7c0 <alt_tick+0x84>
   2f7bc:	20801c36 	bltu	r4,r2,2f830 <alt_tick+0xf4>
    {
      next_callback = alarm->callback (alarm->context);
   2f7c0:	e0bffd17 	ldw	r2,-12(fp)
   2f7c4:	10800417 	ldw	r2,16(r2)
   2f7c8:	e0fffd17 	ldw	r3,-12(fp)
   2f7cc:	18c00517 	ldw	r3,20(r3)
   2f7d0:	1809883a 	mov	r4,r3
   2f7d4:	103ee83a 	callr	r2
   2f7d8:	e0bffb15 	stw	r2,-20(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
   2f7dc:	e0bffb17 	ldw	r2,-20(fp)
   2f7e0:	1000031e 	bne	r2,zero,2f7f0 <alt_tick+0xb4>
      {
        alt_alarm_stop (alarm);
   2f7e4:	e13ffd17 	ldw	r4,-12(fp)
   2f7e8:	002f6980 	call	2f698 <alt_alarm_stop>
   2f7ec:	00001006 	br	2f830 <alt_tick+0xf4>
      }
      else
      {
        alarm->time += next_callback;
   2f7f0:	e0bffd17 	ldw	r2,-12(fp)
   2f7f4:	11000217 	ldw	r4,8(r2)
   2f7f8:	11400317 	ldw	r5,12(r2)
   2f7fc:	e0bffb17 	ldw	r2,-20(fp)
   2f800:	1021883a 	mov	r16,r2
   2f804:	0023883a 	mov	r17,zero
   2f808:	2405883a 	add	r2,r4,r16
   2f80c:	110d803a 	cmpltu	r6,r2,r4
   2f810:	2c47883a 	add	r3,r5,r17
   2f814:	30c9883a 	add	r4,r6,r3
   2f818:	2007883a 	mov	r3,r4
   2f81c:	1009883a 	mov	r4,r2
   2f820:	180b883a 	mov	r5,r3
   2f824:	e0bffd17 	ldw	r2,-12(fp)
   2f828:	11000215 	stw	r4,8(r2)
   2f82c:	11400315 	stw	r5,12(r2)
      }
    }
    alarm = next;
   2f830:	e0bffc17 	ldw	r2,-16(fp)
   2f834:	e0bffd15 	stw	r2,-12(fp)
  while (alarm != (alt_alarm*) &alt_alarm_list)
   2f838:	e0fffd17 	ldw	r3,-12(fp)
   2f83c:	d0a00c04 	addi	r2,gp,-32720
   2f840:	18bfd41e 	bne	r3,r2,2f794 <alt_tick+0x58>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
   2f844:	0001883a 	nop
}
   2f848:	0001883a 	nop
   2f84c:	e6fffe04 	addi	sp,fp,-8
   2f850:	dfc00317 	ldw	ra,12(sp)
   2f854:	df000217 	ldw	fp,8(sp)
   2f858:	dc400117 	ldw	r17,4(sp)
   2f85c:	dc000017 	ldw	r16,0(sp)
   2f860:	dec00404 	addi	sp,sp,16
   2f864:	f800283a 	ret

0002f868 <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
   2f868:	deffff04 	addi	sp,sp,-4
   2f86c:	df000015 	stw	fp,0(sp)
   2f870:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
   2f874:	000170fa 	wrctl	ienable,zero
}
   2f878:	0001883a 	nop
   2f87c:	e037883a 	mov	sp,fp
   2f880:	df000017 	ldw	fp,0(sp)
   2f884:	dec00104 	addi	sp,sp,4
   2f888:	f800283a 	ret

0002f88c <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
   2f88c:	defffa04 	addi	sp,sp,-24
   2f890:	dfc00515 	stw	ra,20(sp)
   2f894:	df000415 	stw	fp,16(sp)
   2f898:	df000404 	addi	fp,sp,16
   2f89c:	e13ffd15 	stw	r4,-12(fp)
   2f8a0:	e17ffc15 	stw	r5,-16(fp)
  alt_dev* next = (alt_dev*) llist->next;
   2f8a4:	e0bffc17 	ldw	r2,-16(fp)
   2f8a8:	10800017 	ldw	r2,0(r2)
   2f8ac:	e0bfff15 	stw	r2,-4(fp)
  alt_32 len;

  len  = strlen(name) + 1;
   2f8b0:	e13ffd17 	ldw	r4,-12(fp)
   2f8b4:	002091c0 	call	2091c <strlen>
   2f8b8:	10800044 	addi	r2,r2,1
   2f8bc:	e0bffe15 	stw	r2,-8(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
   2f8c0:	00000d06 	br	2f8f8 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
   2f8c4:	e0bfff17 	ldw	r2,-4(fp)
   2f8c8:	10800217 	ldw	r2,8(r2)
   2f8cc:	e0fffe17 	ldw	r3,-8(fp)
   2f8d0:	180d883a 	mov	r6,r3
   2f8d4:	e17ffd17 	ldw	r5,-12(fp)
   2f8d8:	1009883a 	mov	r4,r2
   2f8dc:	002fc340 	call	2fc34 <memcmp>
   2f8e0:	1000021e 	bne	r2,zero,2f8ec <alt_find_dev+0x60>
    {
      /* match found */

      return next;
   2f8e4:	e0bfff17 	ldw	r2,-4(fp)
   2f8e8:	00000706 	br	2f908 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
   2f8ec:	e0bfff17 	ldw	r2,-4(fp)
   2f8f0:	10800017 	ldw	r2,0(r2)
   2f8f4:	e0bfff15 	stw	r2,-4(fp)
  while (next != (alt_dev*) llist)
   2f8f8:	e0ffff17 	ldw	r3,-4(fp)
   2f8fc:	e0bffc17 	ldw	r2,-16(fp)
   2f900:	18bff01e 	bne	r3,r2,2f8c4 <alt_find_dev+0x38>
  }
  
  /* No match found */
  
  return NULL;
   2f904:	0005883a 	mov	r2,zero
}
   2f908:	e037883a 	mov	sp,fp
   2f90c:	dfc00117 	ldw	ra,4(sp)
   2f910:	df000017 	ldw	fp,0(sp)
   2f914:	dec00204 	addi	sp,sp,8
   2f918:	f800283a 	ret

0002f91c <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
   2f91c:	defffb04 	addi	sp,sp,-20
   2f920:	dfc00415 	stw	ra,16(sp)
   2f924:	df000315 	stw	fp,12(sp)
   2f928:	df000304 	addi	fp,sp,12
   2f92c:	e13ffd15 	stw	r4,-12(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
   2f930:	d0a00417 	ldw	r2,-32752(gp)
   2f934:	e0bfff15 	stw	r2,-4(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
   2f938:	00003106 	br	2fa00 <alt_find_file+0xe4>
  {
    len = strlen(next->name);
   2f93c:	e0bfff17 	ldw	r2,-4(fp)
   2f940:	10800217 	ldw	r2,8(r2)
   2f944:	1009883a 	mov	r4,r2
   2f948:	002091c0 	call	2091c <strlen>
   2f94c:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
   2f950:	e0bfff17 	ldw	r2,-4(fp)
   2f954:	10c00217 	ldw	r3,8(r2)
   2f958:	e0bffe17 	ldw	r2,-8(fp)
   2f95c:	10bfffc4 	addi	r2,r2,-1
   2f960:	1885883a 	add	r2,r3,r2
   2f964:	10800003 	ldbu	r2,0(r2)
   2f968:	10803fcc 	andi	r2,r2,255
   2f96c:	1080201c 	xori	r2,r2,128
   2f970:	10bfe004 	addi	r2,r2,-128
   2f974:	10800bd8 	cmpnei	r2,r2,47
   2f978:	1000031e 	bne	r2,zero,2f988 <alt_find_file+0x6c>
    {
      len -= 1;
   2f97c:	e0bffe17 	ldw	r2,-8(fp)
   2f980:	10bfffc4 	addi	r2,r2,-1
   2f984:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
   2f988:	e0bffe17 	ldw	r2,-8(fp)
   2f98c:	e0fffd17 	ldw	r3,-12(fp)
   2f990:	1885883a 	add	r2,r3,r2
   2f994:	10800003 	ldbu	r2,0(r2)
   2f998:	10803fcc 	andi	r2,r2,255
   2f99c:	1080201c 	xori	r2,r2,128
   2f9a0:	10bfe004 	addi	r2,r2,-128
   2f9a4:	10800be0 	cmpeqi	r2,r2,47
   2f9a8:	1000081e 	bne	r2,zero,2f9cc <alt_find_file+0xb0>
   2f9ac:	e0bffe17 	ldw	r2,-8(fp)
   2f9b0:	e0fffd17 	ldw	r3,-12(fp)
   2f9b4:	1885883a 	add	r2,r3,r2
   2f9b8:	10800003 	ldbu	r2,0(r2)
   2f9bc:	10803fcc 	andi	r2,r2,255
   2f9c0:	1080201c 	xori	r2,r2,128
   2f9c4:	10bfe004 	addi	r2,r2,-128
   2f9c8:	10000a1e 	bne	r2,zero,2f9f4 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
   2f9cc:	e0bfff17 	ldw	r2,-4(fp)
   2f9d0:	10800217 	ldw	r2,8(r2)
   2f9d4:	e0fffe17 	ldw	r3,-8(fp)
   2f9d8:	180d883a 	mov	r6,r3
   2f9dc:	e17ffd17 	ldw	r5,-12(fp)
   2f9e0:	1009883a 	mov	r4,r2
   2f9e4:	002fc340 	call	2fc34 <memcmp>
    if (((name[len] == '/') || (name[len] == '\0')) && 
   2f9e8:	1000021e 	bne	r2,zero,2f9f4 <alt_find_file+0xd8>
    {
      /* match found */

      return next;
   2f9ec:	e0bfff17 	ldw	r2,-4(fp)
   2f9f0:	00000706 	br	2fa10 <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
   2f9f4:	e0bfff17 	ldw	r2,-4(fp)
   2f9f8:	10800017 	ldw	r2,0(r2)
   2f9fc:	e0bfff15 	stw	r2,-4(fp)
  while (next != (alt_dev*) &alt_fs_list)
   2fa00:	e0ffff17 	ldw	r3,-4(fp)
   2fa04:	d0a00404 	addi	r2,gp,-32752
   2fa08:	18bfcc1e 	bne	r3,r2,2f93c <alt_find_file+0x20>
  }
  
  /* No match found */
  
  return NULL;     
   2fa0c:	0005883a 	mov	r2,zero
}
   2fa10:	e037883a 	mov	sp,fp
   2fa14:	dfc00117 	ldw	ra,4(sp)
   2fa18:	df000017 	ldw	fp,0(sp)
   2fa1c:	dec00204 	addi	sp,sp,8
   2fa20:	f800283a 	ret

0002fa24 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
   2fa24:	defffc04 	addi	sp,sp,-16
   2fa28:	df000315 	stw	fp,12(sp)
   2fa2c:	df000304 	addi	fp,sp,12
   2fa30:	e13ffd15 	stw	r4,-12(fp)
  alt_32 i;
  int rc = -EMFILE;
   2fa34:	00bffa04 	movi	r2,-24
   2fa38:	e0bffe15 	stw	r2,-8(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
   2fa3c:	e03fff15 	stw	zero,-4(fp)
   2fa40:	00001706 	br	2faa0 <alt_get_fd+0x7c>
  {
    if (!alt_fd_list[i].dev)
   2fa44:	e0bfff17 	ldw	r2,-4(fp)
   2fa48:	10c00324 	muli	r3,r2,12
   2fa4c:	008000f4 	movhi	r2,3
   2fa50:	1885883a 	add	r2,r3,r2
   2fa54:	1083d117 	ldw	r2,3908(r2)
   2fa58:	10000e1e 	bne	r2,zero,2fa94 <alt_get_fd+0x70>
    {
      alt_fd_list[i].dev = dev;
   2fa5c:	e0bfff17 	ldw	r2,-4(fp)
   2fa60:	11000324 	muli	r4,r2,12
   2fa64:	e0fffd17 	ldw	r3,-12(fp)
   2fa68:	008000f4 	movhi	r2,3
   2fa6c:	2085883a 	add	r2,r4,r2
   2fa70:	10c3d115 	stw	r3,3908(r2)
      if (i > alt_max_fd)
   2fa74:	d0e00817 	ldw	r3,-32736(gp)
   2fa78:	e0bfff17 	ldw	r2,-4(fp)
   2fa7c:	1880020e 	bge	r3,r2,2fa88 <alt_get_fd+0x64>
      {
        alt_max_fd = i;
   2fa80:	e0bfff17 	ldw	r2,-4(fp)
   2fa84:	d0a00815 	stw	r2,-32736(gp)
      }
      rc = i;
   2fa88:	e0bfff17 	ldw	r2,-4(fp)
   2fa8c:	e0bffe15 	stw	r2,-8(fp)
      goto alt_get_fd_exit;
   2fa90:	00000706 	br	2fab0 <alt_get_fd+0x8c>
  for (i = 0; i < ALT_MAX_FD; i++)
   2fa94:	e0bfff17 	ldw	r2,-4(fp)
   2fa98:	10800044 	addi	r2,r2,1
   2fa9c:	e0bfff15 	stw	r2,-4(fp)
   2faa0:	e0bfff17 	ldw	r2,-4(fp)
   2faa4:	10800810 	cmplti	r2,r2,32
   2faa8:	103fe61e 	bne	r2,zero,2fa44 <alt_get_fd+0x20>
    }
  }

 alt_get_fd_exit:
   2faac:	0001883a 	nop
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
   2fab0:	e0bffe17 	ldw	r2,-8(fp)
}
   2fab4:	e037883a 	mov	sp,fp
   2fab8:	df000017 	ldw	fp,0(sp)
   2fabc:	dec00104 	addi	sp,sp,4
   2fac0:	f800283a 	ret

0002fac4 <alt_icache_flush>:
 * alt_icache_flush() is called to flush the instruction cache for a memory
 * region of length "len" bytes, starting at address "start".
 */

void alt_icache_flush (void* start, alt_u32 len)
{
   2fac4:	defffb04 	addi	sp,sp,-20
   2fac8:	df000415 	stw	fp,16(sp)
   2facc:	df000404 	addi	fp,sp,16
   2fad0:	e13ffd15 	stw	r4,-12(fp)
   2fad4:	e17ffc15 	stw	r5,-16(fp)

  /*
   * This is the most we would ever need to flush.
   */
 
  if (len > NIOS2_ICACHE_SIZE)
   2fad8:	e0bffc17 	ldw	r2,-16(fp)
   2fadc:	10840070 	cmpltui	r2,r2,4097
   2fae0:	1000021e 	bne	r2,zero,2faec <alt_icache_flush+0x28>
  {
    len = NIOS2_ICACHE_SIZE;
   2fae4:	00840004 	movi	r2,4096
   2fae8:	e0bffc15 	stw	r2,-16(fp)
  }

  end = ((char*) start) + len;
   2faec:	e0fffd17 	ldw	r3,-12(fp)
   2faf0:	e0bffc17 	ldw	r2,-16(fp)
   2faf4:	1885883a 	add	r2,r3,r2
   2faf8:	e0bffe15 	stw	r2,-8(fp)

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
   2fafc:	e0bffd17 	ldw	r2,-12(fp)
   2fb00:	e0bfff15 	stw	r2,-4(fp)
   2fb04:	00000506 	br	2fb1c <alt_icache_flush+0x58>
  { 
    __asm__ volatile ("flushi %0" :: "r" (i)); 
   2fb08:	e0bfff17 	ldw	r2,-4(fp)
   2fb0c:	1000603a 	flushi	r2
  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
   2fb10:	e0bfff17 	ldw	r2,-4(fp)
   2fb14:	10800804 	addi	r2,r2,32
   2fb18:	e0bfff15 	stw	r2,-4(fp)
   2fb1c:	e0ffff17 	ldw	r3,-4(fp)
   2fb20:	e0bffe17 	ldw	r2,-8(fp)
   2fb24:	18bff836 	bltu	r3,r2,2fb08 <alt_icache_flush+0x44>
   * For an unaligned flush request, we've got one more line left.
   * Note that this is dependent on NIOS2_ICACHE_LINE_SIZE to be a 
   * multiple of 2 (which it always is).
   */

  if (((alt_u32) start) & (NIOS2_ICACHE_LINE_SIZE - 1))
   2fb28:	e0bffd17 	ldw	r2,-12(fp)
   2fb2c:	108007cc 	andi	r2,r2,31
   2fb30:	10000226 	beq	r2,zero,2fb3c <alt_icache_flush+0x78>
  {
    __asm__ volatile ("flushi %0" :: "r" (i));
   2fb34:	e0bfff17 	ldw	r2,-4(fp)
   2fb38:	1000603a 	flushi	r2
  /* 
   * Having flushed the cache, flush any stale instructions in the 
   * pipeline 
   */

  __asm__ volatile ("flushp");
   2fb3c:	0000203a 	flushp

#endif /* NIOS2_ICACHE_SIZE > 0 */
}
   2fb40:	0001883a 	nop
   2fb44:	e037883a 	mov	sp,fp
   2fb48:	df000017 	ldw	fp,0(sp)
   2fb4c:	dec00104 	addi	sp,sp,4
   2fb50:	f800283a 	ret

0002fb54 <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
   2fb54:	defffe04 	addi	sp,sp,-8
   2fb58:	df000115 	stw	fp,4(sp)
   2fb5c:	df000104 	addi	fp,sp,4
   2fb60:	e13fff15 	stw	r4,-4(fp)
  switch (cause) {
   2fb64:	e0bfff17 	ldw	r2,-4(fp)
   2fb68:	10bffe84 	addi	r2,r2,-6
   2fb6c:	10c00428 	cmpgeui	r3,r2,16
   2fb70:	1800191e 	bne	r3,zero,2fbd8 <alt_exception_cause_generated_bad_addr+0x84>
   2fb74:	100690ba 	slli	r3,r2,2
   2fb78:	008000f4 	movhi	r2,3
   2fb7c:	1885883a 	add	r2,r3,r2
   2fb80:	10bee217 	ldw	r2,-1144(r2)
   2fb84:	1000683a 	jmp	r2
   2fb88:	0002fbc8 	cmpgei	zero,zero,3055
   2fb8c:	0002fbc8 	cmpgei	zero,zero,3055
   2fb90:	0002fbd8 	cmpnei	zero,zero,3055
   2fb94:	0002fbd8 	cmpnei	zero,zero,3055
   2fb98:	0002fbd8 	cmpnei	zero,zero,3055
   2fb9c:	0002fbc8 	cmpgei	zero,zero,3055
   2fba0:	0002fbd0 	cmplti	zero,zero,3055
   2fba4:	0002fbd8 	cmpnei	zero,zero,3055
   2fba8:	0002fbc8 	cmpgei	zero,zero,3055
   2fbac:	0002fbc8 	cmpgei	zero,zero,3055
   2fbb0:	0002fbd8 	cmpnei	zero,zero,3055
   2fbb4:	0002fbc8 	cmpgei	zero,zero,3055
   2fbb8:	0002fbd0 	cmplti	zero,zero,3055
   2fbbc:	0002fbd8 	cmpnei	zero,zero,3055
   2fbc0:	0002fbd8 	cmpnei	zero,zero,3055
   2fbc4:	0002fbc8 	cmpgei	zero,zero,3055
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
   2fbc8:	00800044 	movi	r2,1
   2fbcc:	00000306 	br	2fbdc <alt_exception_cause_generated_bad_addr+0x88>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
   2fbd0:	0005883a 	mov	r2,zero
   2fbd4:	00000106 	br	2fbdc <alt_exception_cause_generated_bad_addr+0x88>

  default:
    return 0;
   2fbd8:	0005883a 	mov	r2,zero
  }
}
   2fbdc:	e037883a 	mov	sp,fp
   2fbe0:	df000017 	ldw	fp,0(sp)
   2fbe4:	dec00104 	addi	sp,sp,4
   2fbe8:	f800283a 	ret

0002fbec <atexit>:
   2fbec:	200b883a 	mov	r5,r4
   2fbf0:	000f883a 	mov	r7,zero
   2fbf4:	000d883a 	mov	r6,zero
   2fbf8:	0009883a 	mov	r4,zero
   2fbfc:	002fcac1 	jmpi	2fcac <__register_exitproc>

0002fc00 <exit>:
   2fc00:	defffe04 	addi	sp,sp,-8
   2fc04:	000b883a 	mov	r5,zero
   2fc08:	dc000015 	stw	r16,0(sp)
   2fc0c:	dfc00115 	stw	ra,4(sp)
   2fc10:	2021883a 	mov	r16,r4
   2fc14:	002fd3c0 	call	2fd3c <__call_exitprocs>
   2fc18:	008000f4 	movhi	r2,3
   2fc1c:	11084917 	ldw	r4,8484(r2)
   2fc20:	20800f17 	ldw	r2,60(r4)
   2fc24:	10000126 	beq	r2,zero,2fc2c <exit+0x2c>
   2fc28:	103ee83a 	callr	r2
   2fc2c:	8009883a 	mov	r4,r16
   2fc30:	002d5680 	call	2d568 <_exit>

0002fc34 <memcmp>:
   2fc34:	30800130 	cmpltui	r2,r6,4
   2fc38:	10000b1e 	bne	r2,zero,2fc68 <memcmp+0x34>
   2fc3c:	2144b03a 	or	r2,r4,r5
   2fc40:	108000cc 	andi	r2,r2,3
   2fc44:	1000171e 	bne	r2,zero,2fca4 <memcmp+0x70>
   2fc48:	20c00017 	ldw	r3,0(r4)
   2fc4c:	28800017 	ldw	r2,0(r5)
   2fc50:	1880141e 	bne	r3,r2,2fca4 <memcmp+0x70>
   2fc54:	31bfff04 	addi	r6,r6,-4
   2fc58:	30800128 	cmpgeui	r2,r6,4
   2fc5c:	21000104 	addi	r4,r4,4
   2fc60:	29400104 	addi	r5,r5,4
   2fc64:	103ff81e 	bne	r2,zero,2fc48 <memcmp+0x14>
   2fc68:	30bfffc4 	addi	r2,r6,-1
   2fc6c:	30000b26 	beq	r6,zero,2fc9c <memcmp+0x68>
   2fc70:	11800044 	addi	r6,r2,1
   2fc74:	218d883a 	add	r6,r4,r6
   2fc78:	00000106 	br	2fc80 <memcmp+0x4c>
   2fc7c:	21800726 	beq	r4,r6,2fc9c <memcmp+0x68>
   2fc80:	20800003 	ldbu	r2,0(r4)
   2fc84:	28c00003 	ldbu	r3,0(r5)
   2fc88:	21000044 	addi	r4,r4,1
   2fc8c:	29400044 	addi	r5,r5,1
   2fc90:	10fffa26 	beq	r2,r3,2fc7c <memcmp+0x48>
   2fc94:	10c5c83a 	sub	r2,r2,r3
   2fc98:	f800283a 	ret
   2fc9c:	0005883a 	mov	r2,zero
   2fca0:	f800283a 	ret
   2fca4:	30bfffc4 	addi	r2,r6,-1
   2fca8:	003ff106 	br	2fc70 <memcmp+0x3c>

0002fcac <__register_exitproc>:
   2fcac:	008000f4 	movhi	r2,3
   2fcb0:	10c84917 	ldw	r3,8484(r2)
   2fcb4:	18805217 	ldw	r2,328(r3)
   2fcb8:	10001726 	beq	r2,zero,2fd18 <__register_exitproc+0x6c>
   2fcbc:	10c00117 	ldw	r3,4(r2)
   2fcc0:	1a000808 	cmpgei	r8,r3,32
   2fcc4:	40001b1e 	bne	r8,zero,2fd34 <__register_exitproc+0x88>
   2fcc8:	20000b26 	beq	r4,zero,2fcf8 <__register_exitproc+0x4c>
   2fccc:	181090ba 	slli	r8,r3,2
   2fcd0:	02400044 	movi	r9,1
   2fcd4:	48d2983a 	sll	r9,r9,r3
   2fcd8:	1211883a 	add	r8,r2,r8
   2fcdc:	41802215 	stw	r6,136(r8)
   2fce0:	11806217 	ldw	r6,392(r2)
   2fce4:	21000098 	cmpnei	r4,r4,2
   2fce8:	324cb03a 	or	r6,r6,r9
   2fcec:	11806215 	stw	r6,392(r2)
   2fcf0:	41c04215 	stw	r7,264(r8)
   2fcf4:	20000b26 	beq	r4,zero,2fd24 <__register_exitproc+0x78>
   2fcf8:	19000084 	addi	r4,r3,2
   2fcfc:	200890ba 	slli	r4,r4,2
   2fd00:	18c00044 	addi	r3,r3,1
   2fd04:	10c00115 	stw	r3,4(r2)
   2fd08:	1105883a 	add	r2,r2,r4
   2fd0c:	11400015 	stw	r5,0(r2)
   2fd10:	0005883a 	mov	r2,zero
   2fd14:	f800283a 	ret
   2fd18:	18805304 	addi	r2,r3,332
   2fd1c:	18805215 	stw	r2,328(r3)
   2fd20:	003fe606 	br	2fcbc <__register_exitproc+0x10>
   2fd24:	11006317 	ldw	r4,396(r2)
   2fd28:	2252b03a 	or	r9,r4,r9
   2fd2c:	12406315 	stw	r9,396(r2)
   2fd30:	003ff106 	br	2fcf8 <__register_exitproc+0x4c>
   2fd34:	00bfffc4 	movi	r2,-1
   2fd38:	f800283a 	ret

0002fd3c <__call_exitprocs>:
   2fd3c:	defff704 	addi	sp,sp,-36
   2fd40:	008000f4 	movhi	r2,3
   2fd44:	dcc00315 	stw	r19,12(sp)
   2fd48:	14c84917 	ldw	r19,8484(r2)
   2fd4c:	dc800215 	stw	r18,8(sp)
   2fd50:	dfc00815 	stw	ra,32(sp)
   2fd54:	9c805217 	ldw	r18,328(r19)
   2fd58:	ddc00715 	stw	r23,28(sp)
   2fd5c:	dd800615 	stw	r22,24(sp)
   2fd60:	dd400515 	stw	r21,20(sp)
   2fd64:	dd000415 	stw	r20,16(sp)
   2fd68:	dc400115 	stw	r17,4(sp)
   2fd6c:	dc000015 	stw	r16,0(sp)
   2fd70:	90001026 	beq	r18,zero,2fdb4 <__call_exitprocs+0x78>
   2fd74:	202b883a 	mov	r21,r4
   2fd78:	282d883a 	mov	r22,r5
   2fd7c:	05000044 	movi	r20,1
   2fd80:	94000117 	ldw	r16,4(r18)
   2fd84:	847fffc4 	addi	r17,r16,-1
   2fd88:	88000a16 	blt	r17,zero,2fdb4 <__call_exitprocs+0x78>
   2fd8c:	84000044 	addi	r16,r16,1
   2fd90:	802090ba 	slli	r16,r16,2
   2fd94:	9421883a 	add	r16,r18,r16
   2fd98:	b0001126 	beq	r22,zero,2fde0 <__call_exitprocs+0xa4>
   2fd9c:	80804017 	ldw	r2,256(r16)
   2fda0:	15800f26 	beq	r2,r22,2fde0 <__call_exitprocs+0xa4>
   2fda4:	8c7fffc4 	addi	r17,r17,-1
   2fda8:	88bfffd8 	cmpnei	r2,r17,-1
   2fdac:	843fff04 	addi	r16,r16,-4
   2fdb0:	103ff91e 	bne	r2,zero,2fd98 <__call_exitprocs+0x5c>
   2fdb4:	dfc00817 	ldw	ra,32(sp)
   2fdb8:	ddc00717 	ldw	r23,28(sp)
   2fdbc:	dd800617 	ldw	r22,24(sp)
   2fdc0:	dd400517 	ldw	r21,20(sp)
   2fdc4:	dd000417 	ldw	r20,16(sp)
   2fdc8:	dcc00317 	ldw	r19,12(sp)
   2fdcc:	dc800217 	ldw	r18,8(sp)
   2fdd0:	dc400117 	ldw	r17,4(sp)
   2fdd4:	dc000017 	ldw	r16,0(sp)
   2fdd8:	dec00904 	addi	sp,sp,36
   2fddc:	f800283a 	ret
   2fde0:	90800117 	ldw	r2,4(r18)
   2fde4:	81800017 	ldw	r6,0(r16)
   2fde8:	10bfffc4 	addi	r2,r2,-1
   2fdec:	14401726 	beq	r2,r17,2fe4c <__call_exitprocs+0x110>
   2fdf0:	80000015 	stw	zero,0(r16)
   2fdf4:	303feb26 	beq	r6,zero,2fda4 <__call_exitprocs+0x68>
   2fdf8:	a446983a 	sll	r3,r20,r17
   2fdfc:	90806217 	ldw	r2,392(r18)
   2fe00:	95c00117 	ldw	r23,4(r18)
   2fe04:	1884703a 	and	r2,r3,r2
   2fe08:	1000081e 	bne	r2,zero,2fe2c <__call_exitprocs+0xf0>
   2fe0c:	303ee83a 	callr	r6
   2fe10:	90c00117 	ldw	r3,4(r18)
   2fe14:	98805217 	ldw	r2,328(r19)
   2fe18:	1dc0011e 	bne	r3,r23,2fe20 <__call_exitprocs+0xe4>
   2fe1c:	90bfe126 	beq	r18,r2,2fda4 <__call_exitprocs+0x68>
   2fe20:	103fe426 	beq	r2,zero,2fdb4 <__call_exitprocs+0x78>
   2fe24:	1025883a 	mov	r18,r2
   2fe28:	003fd506 	br	2fd80 <__call_exitprocs+0x44>
   2fe2c:	90806317 	ldw	r2,396(r18)
   2fe30:	81002017 	ldw	r4,128(r16)
   2fe34:	1886703a 	and	r3,r3,r2
   2fe38:	1800061e 	bne	r3,zero,2fe54 <__call_exitprocs+0x118>
   2fe3c:	200b883a 	mov	r5,r4
   2fe40:	a809883a 	mov	r4,r21
   2fe44:	303ee83a 	callr	r6
   2fe48:	003ff106 	br	2fe10 <__call_exitprocs+0xd4>
   2fe4c:	94400115 	stw	r17,4(r18)
   2fe50:	003fe806 	br	2fdf4 <__call_exitprocs+0xb8>
   2fe54:	303ee83a 	callr	r6
   2fe58:	003fed06 	br	2fe10 <__call_exitprocs+0xd4>
